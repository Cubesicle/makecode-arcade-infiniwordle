// meta={"simUrl":"https://trg-arcade.userpxt.io/v1.8.30/---simulator","cdnUrl":"https://pxt.azureedge.net","version":"0.0.0","target":"arcade","targetVersion":"1.8.30"}
// total=2319644 new=36.22% cached=59.90% other=3.89%
(function (ectx) {
'use strict';
const runtime = ectx.runtime;
const oops = ectx.oops;
const doNothing = ectx.doNothing;
const pxsim = ectx.pxsim;
const globals = ectx.globals;
const maybeYield = ectx.maybeYield;
const setupDebugger = ectx.setupDebugger;
const isBreakFrame = ectx.isBreakFrame;
const breakpoint = ectx.breakpoint;
const trace = ectx.trace;
const checkStack = ectx.checkStack;
const leave = ectx.leave;
const checkResumeConsumed = ectx.checkResumeConsumed;
const setupResume = ectx.setupResume;
const setupLambda = ectx.setupLambda;
const checkSubtype = ectx.checkSubtype;
const failedCast = ectx.failedCast;
const buildResume = ectx.buildResume;
const mkVTable = ectx.mkVTable;
const bind = ectx.bind;
const leaveAccessor = ectx.leaveAccessor;
const __this = runtime;
const pxtrt = pxsim.pxtrt;
let yieldSteps = 1;
ectx.setupYield(function() { yieldSteps = 100; })
pxsim.setTitle("PESH | Boonpirom - InfiniWordle");
pxsim.setConfigData({
 "37": 160,
 "38": 120
}, {
 "DISPLAY_WIDTH": 37,
 "DISPLAY_HEIGHT": 38
});
pxtrt.mapKeyNames = [
 "",
 "__draw",
 "__drawCore",
 "__preUpdate",
 "__update",
 "__visible",
 "_action",
 "_asking",
 "_ax",
 "_ay",
 "_col",
 "_connected",
 "_controlledSprites",
 "_data",
 "_destroyCore",
 "_dt",
 "_factory",
 "_fx",
 "_fy",
 "_height",
 "_hitbox",
 "_id",
 "_image",
 "_kind",
 "_kindsOverlappedWith",
 "_lastX",
 "_lastY",
 "_layer",
 "_layers",
 "_map",
 "_millis",
 "_obstacles",
 "_offsetX",
 "_offsetY",
 "_overlappers",
 "_owner",
 "_player",
 "_pressed",
 "_pressedElasped",
 "_prune",
 "_repeatCount",
 "_row",
 "_scale",
 "_sprites",
 "_sx",
 "_sy",
 "_text",
 "_update",
 "_vx",
 "_vy",
 "_width",
 "_x",
 "_y",
 "_z",
 "action",
 "activeCard",
 "add",
 "addShape",
 "addSprite",
 "alignX",
 "alignY",
 "allSprites",
 "analog",
 "anchor",
 "applyTo",
 "areaHeight",
 "areaWidth",
 "ask",
 "asking",
 "assignLetterColors",
 "ax",
 "ay",
 "background",
 "basicCard",
 "bg",
 "bgColor",
 "border",
 "borderColor",
 "borderWidth",
 "bottom",
 "buckets",
 "button",
 "buttonEventHandlers",
 "buttons",
 "cachedTileView",
 "cachedVx",
 "cachedVy",
 "calcDimensionalHash",
 "callback",
 "camera",
 "canResolveClipping",
 "card",
 "cardSpacing",
 "cardWidth",
 "cardsPerRow",
 "cardsTop",
 "cellHeight",
 "cellWidth",
 "change",
 "charHeight",
 "charWidth",
 "checkWord",
 "clear",
 "clearInterior",
 "clearObstacles",
 "collisionHandlers",
 "color",
 "column",
 "columnCount",
 "columns",
 "condition",
 "confirmText",
 "connected",
 "constrain",
 "contains",
 "controlledSprites",
 "countdownEndHandler",
 "countdownExpired",
 "createMovingSprite",
 "createParticle",
 "createdHandlers",
 "cursor",
 "cursorCount",
 "cursorOn",
 "cursorRowHeight",
 "data",
 "defaultLifespan",
 "defaultRate",
 "del",
 "delay",
 "deltaTime",
 "deltaTimeMillis",
 "destroy",
 "destroyHandler",
 "destroyedHandlers",
 "disabled",
 "displayCursor",
 "dispose",
 "distance",
 "down",
 "draw",
 "drawBorder",
 "drawCursorRow",
 "drawDebug",
 "drawLives",
 "drawOffsetX",
 "drawOffsetY",
 "drawPartial",
 "drawParticle",
 "drawPlayer",
 "drawSay",
 "drawScore",
 "drawSprite",
 "drawText",
 "drawTextCore",
 "dx",
 "dy",
 "effect",
 "eid",
 "enabled",
 "endScreenEffect",
 "event",
 "eventContext",
 "fastFill",
 "fastRandom",
 "fc",
 "fg",
 "fgColor",
 "flags",
 "followingSprites",
 "font",
 "fontColor",
 "frame",
 "frameCallbacks",
 "frameWorker",
 "framesInSample",
 "func",
 "fx",
 "fy",
 "galois",
 "gameEnd",
 "gameForeverHandlers",
 "generator",
 "getObstacle",
 "getOrCreateHandlerForEvent",
 "getState",
 "getText",
 "getTile",
 "getTileImage",
 "getTileIndex",
 "grayLetters",
 "greenLetters",
 "guessChars",
 "guesses",
 "handler",
 "handlerState",
 "handlers",
 "hasBackgroundImage",
 "hasLife",
 "hasScore",
 "hash",
 "head",
 "headerFont",
 "headerText",
 "heartImage",
 "height",
 "highScore",
 "icon",
 "iconImage",
 "id",
 "idleCallbacks",
 "image",
 "img",
 "infoFont",
 "infoTop",
 "init",
 "innerLeft",
 "innerTop",
 "insertAABB",
 "insertAtKey",
 "isNewHighScore",
 "isObstacle",
 "isOnWall",
 "isOutOfScreen",
 "isOutsideMap",
 "isPressed",
 "isScaled",
 "isStatic",
 "isValid",
 "isWall",
 "key",
 "keyIndex",
 "keys",
 "kind",
 "layer",
 "layers",
 "left",
 "length",
 "lfsr",
 "life",
 "lifeZeroHandler",
 "lifespan",
 "map",
 "maxFontHeight",
 "maxLifespan",
 "maxNegativeVelocity",
 "maxOffset",
 "maxSingleStep",
 "maxSpeed",
 "maxStep",
 "maxSubOffset",
 "maxVelocity",
 "melody",
 "mergeAtKey",
 "millis",
 "minAngle",
 "minLifespan",
 "minSingleStep",
 "minStep",
 "mode",
 "move",
 "moveSprite",
 "multiplier",
 "multiplierImage",
 "neighbors",
 "next",
 "offset",
 "offsetX",
 "offsetY",
 "onEvent",
 "onPlayFinished",
 "onUpdate",
 "once",
 "options",
 "order",
 "outlineColor",
 "outlineWidth",
 "overlapHandlers",
 "overlapMap",
 "overlaps",
 "overlapsWith",
 "ox",
 "oy",
 "pFlags",
 "padding",
 "parent",
 "particleSources",
 "period",
 "physicsEngine",
 "pickRandom",
 "play",
 "playCore",
 "playerIndex",
 "playerStates",
 "position",
 "preferredDelay",
 "pressureLevel",
 "prevTimeMillis",
 "previousScene",
 "priority",
 "putLetter",
 "queuePlayInstructions",
 "raiseButtonDown",
 "raiseButtonRepeat",
 "raiseButtonUp",
 "raiseLifeZero",
 "randomRange",
 "recalcSize",
 "register",
 "registerFrameCallbacks",
 "registerFrameHandler",
 "registerHandler",
 "registerMelody",
 "registerObstacle",
 "remove",
 "removeSprite",
 "render",
 "renderable",
 "repeatDelay",
 "repeatInterval",
 "repeatX",
 "repeatY",
 "resetHitbox",
 "resizeBuckets",
 "right",
 "row",
 "rowCount",
 "rowLimit",
 "rows",
 "runButtonEvents",
 "runCallbacks",
 "runningCallbacks",
 "s",
 "sayEndTime",
 "sayRenderer",
 "scale",
 "scene",
 "sceneDefaultRate",
 "score",
 "scrollOffset",
 "scrollRow",
 "scrollTarget",
 "seed",
 "select",
 "selected",
 "selectedCard",
 "selection",
 "setAcceleration",
 "setAnchor",
 "setDirection",
 "setFactory",
 "setFlag",
 "setFont",
 "setHitbox",
 "setImage",
 "setKind",
 "setOffset",
 "setPressed",
 "setRate",
 "setRelativeToCamera",
 "setSelection",
 "setSpeed",
 "setState",
 "setSubtext",
 "setText",
 "setTheme",
 "shakeAmplitude",
 "shakeDuration",
 "shakeStartTime",
 "shouldBeVisible",
 "show",
 "showLife",
 "showPlayer",
 "showScore",
 "source",
 "sourceFactory",
 "sources",
 "spacing",
 "speed",
 "spread",
 "sprite",
 "spriteCollisions",
 "spriteNextId",
 "sprites",
 "spritesByKind",
 "src",
 "start",
 "startScreenEffect",
 "state",
 "stop",
 "stopAsking",
 "subtext",
 "sx",
 "sy",
 "system",
 "text",
 "textAreaHeight",
 "textAreaWidth",
 "textColor",
 "theme",
 "tileIndex",
 "tileMap",
 "tileOverlapHandlers",
 "tileSet",
 "tilemapCollisions",
 "tilemapOverlaps",
 "tileset",
 "timeInSample",
 "timeOut",
 "timer",
 "times",
 "title",
 "toString",
 "top",
 "ui",
 "unit",
 "unregister",
 "unregisterMelody",
 "up",
 "update",
 "updateCard",
 "updateFont",
 "updateKeyColors",
 "updateParticle",
 "updateScrollTarget",
 "user",
 "value",
 "vid",
 "visibility",
 "visibilityFlag",
 "vx",
 "vy",
 "wallCollisionHandlers",
 "width",
 "win",
 "word",
 "work",
 "x",
 "xOffset",
 "xRange",
 "xStep",
 "y",
 "yOffset",
 "yRange",
 "yStep",
 "yellowLetters",
 "z"
];
__this.setupPerfCounters([]);
const pxsim_Array__getAt = pxsim.Array_.getAt;
const pxsim_Array__length = pxsim.Array_.length;
const pxsim_Array__mk = pxsim.Array_.mk;
const pxsim_Array__push = pxsim.Array_.push;
const pxsim_Boolean__bang = pxsim.Boolean_.bang;
const pxsim_String__concat = pxsim.String_.concat;
const pxsim_String__stringConv = pxsim.String_.stringConv;
const pxsim_numops_toBool = pxsim.numops.toBool;
const pxsim_numops_toBoolDecr = pxsim.numops.toBoolDecr;
const pxsim_pxtcore_mkAction = pxsim.pxtcore.mkAction;
const pxsim_pxtcore_mkClassInstance = pxsim.pxtcore.mkClassInstance;
const pxsim_pxtrt_ldlocRef = pxsim.pxtrt.ldlocRef;
const pxsim_pxtrt_mapGetByString = pxsim.pxtrt.mapGetByString;
const pxsim_pxtrt_stclo = pxsim.pxtrt.stclo;
const pxsim_pxtrt_stlocRef = pxsim.pxtrt.stlocRef;
const pxsim_Boolean_ = pxsim.Boolean_;
const pxsim_pxtcore = pxsim.pxtcore;
const pxsim_String_ = pxsim.String_;
const pxsim_ImageMethods = pxsim.ImageMethods;
const pxsim_Array_ = pxsim.Array_;
const pxsim_pxtrt = pxsim.pxtrt;
const pxsim_numops = pxsim.numops;


function _main___P21938(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    globals._intervals___4147 = (undefined);
    globals._pollEventQueue___4156 = (undefined);
    globals.minPriority___375 = (1);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, listeners_inline__P4159);
    globals.listeners___4160 = (s.tmp_0);
    globals.freqs___4209 = (_hex4208);
    globals.globalVolume___4213 = (null);
    globals.playToneID___4220 = (0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C1612_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P1615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "~15 e3:3 r:1 d#:3 r:1 d:4 r:1 c#:8";
    s.callLocIdx = 0; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    globals.wawawawaa___1629 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(music_Melody__C1612_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_Melody_constructor__P1615_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = "g4:1 c5 e g:2 e:1 g:3";
    s.callLocIdx = 1; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    globals.powerUp___1632 = (s.tmp_0);
    globals.brightness___1750 = (100);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 8);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex8326);
    globals.font8___1772 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex8714);
    globals.font12___1773 = (s.tmp_0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charWidth", 6);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "charHeight", 5);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "data", _hex15852);
    globals.font5___1777 = (s.tmp_0);
    globals.__updated___4269 = (false);
    r0 = pxsim.control.runInParallel(control___screen_inline__P4272);
    r0 = pxsim_pxtcore.setPalette(_hex4283);
    r0 = pxsim.image.create(160, 120);
    globals.screen___1829 = (r0);
    s.tmp_0 = control___screen_setupUpdate__P1791_mk(s);
    s.tmp_0.arg0 = _screen_internal_inline__P4290;
    s.callLocIdx = 4; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    globals.control_EventContext_onStats___398 = (_screen_internal_inline__P4295);
    globals.RUN_KEY___4300 = ("#run");
    globals.SCOPE_KEY___4301 = ("#scope");
    s.tmp_0 = settings_initScopes__P4312_mk(s);
    s.callLocIdx = 5; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1979_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1985_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 5;
    s.tmp_1.arg2 = 4;
    s.callLocIdx = 6; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    globals.A___1907 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1979_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1985_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 6;
    s.tmp_1.arg2 = 5;
    s.callLocIdx = 7; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    globals.B___1908 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1979_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1985_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1;
    s.tmp_1.arg2 = 47;
    s.callLocIdx = 8; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    globals.left___1909 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1979_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1985_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 2;
    s.tmp_1.arg2 = 49;
    s.callLocIdx = 9; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    globals.up___1910 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1979_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1985_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = 48;
    s.callLocIdx = 10; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    globals.right___1911 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1979_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1985_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 4;
    s.tmp_1.arg2 = 50;
    s.callLocIdx = 11; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    globals.down___1912 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1979_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1985_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 7;
    s.tmp_1.arg2 = 51;
    s.callLocIdx = 12; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    globals.menu___1913 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(controller_AnyButton__C4341_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_Button_constructor__P1985_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = -1;
    s.callLocIdx = 13; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    globals.anyButton___1960 = (s.tmp_0);
    globals._userEventsEnabled___4355 = (true);
    globals.defaultRepeatDelay___4357 = (500);
    globals.defaultRepeatInterval___4359 = (30);
    s.tmp_0 = SpriteKind_create__P2266_mk(s);
    s.callLocIdx = 14; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    globals.Player___2267 = (r0);
    s.tmp_0 = SpriteKind_create__P2266_mk(s);
    s.callLocIdx = 15; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    globals.Food___2269 = (r0);
    s.tmp_0 = SpriteKind_create__P2266_mk(s);
    s.callLocIdx = 16; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    globals.Enemy___2270 = (r0);
    r0 = (0.1 * 256);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    globals.MIN_MOVE_GAP___2308 = (r0);
    globals.infoState___4421 = (undefined);
    s.tmp_0 = game_addScenePushHandler__P2707_mk(s);
    s.tmp_0.arg0 = info_inline__P4425;
    s.callLocIdx = 18; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.tmp_0 = game_addScenePopHandler__P2709_mk(s);
    s.tmp_0.arg0 = info_inline__P4440;
    s.callLocIdx = 22; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(info_PlayerInfo__C2369_VT);
    s.tmp_0 = r0;
    s.tmp_1 = info_PlayerInfo_constructor__P2381_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1;
    s.callLocIdx = 23; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
    globals.player1___2400 = (s.tmp_0);
    r0 = pxsim_Array__mk();
    globals.scene_Scene_initializers___2600 = (r0);
    globals.debug___2689 = (false);
    globals.stats___2690 = (false);
    globals.winEffect___2691 = (undefined);
    globals.loseEffect___2692 = (undefined);
    globals.loseSound___4536 = (undefined);
    globals.winSound___4538 = (undefined);
    globals.__isOver___4546 = (false);
    s.tmp_0 = scene_systemMenu_initVolume__P4805_mk(s);
    s.callLocIdx = 24; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_initScreen__P4806_mk(s);
    s.callLocIdx = 25; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    r0 = pxsim_Array__push(globals.scene_Scene_initializers___2600, scene_systemMenu_register__P2795);
    r0 = pxsim.image.ofBuffer(_hex4813);
    globals.CARD_NORMAL___2800 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4815);
    globals.CARD_SELECTED___2801 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4817);
    globals.CARD_ACTIVE___2802 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4819);
    globals.VOLUME_UP_ICON___2803 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4821);
    globals.BRIGHTNESS_DOWN_ICON___2804 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4823);
    globals.CLOSE_MENU_ICON___2805 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4825);
    globals.VOLUME_DOWN_ICON___2806 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4827);
    globals.SLEEP_ICON___2807 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4829);
    globals.CONSOLE_ICON___2808 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4831);
    globals.BRIGHTNESS_UP_ICON___2809 = (r0);
    r0 = pxsim.image.ofBuffer(_hex4833);
    globals.STATS_ICON___2810 = (r0);
    globals.consoleColor___4836 = (1);
    globals.tabSize___4839 = (8);
    globals.consoleFont___4845 = (globals.font5___1777);
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_2 = r0;
    s.tmp_5 = if_charHeight_1_mk(s);
    s.tmp_5.arg0 = globals.consoleFont___4845;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "charHeight");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["charHeight"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["charHeight"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 26; s.pc = 21; return s.tmp_5; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 / s.tmp_3);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.floor(s.tmp_1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    globals.consoleLines___4850 = (r0);
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 8);
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___4845;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 27; s.pc = 22; return s.tmp_4; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 / s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    globals.consoleColumns___4860 = (r0);
    s.tmp_0 = console_addListener__P383_mk(s);
    s.tmp_0.arg0 = game_consoleOverlay_listener__P4872;
    s.callLocIdx = 28; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = MAX_SOURCES_inline__P12494;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 30; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    globals.MAX_SOURCES___4874 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(particles_SprayFactory__C2880_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_SprayFactory_constructor__P2881_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 20;
    s.tmp_1.arg2 = 0;
    s.tmp_1.arg3 = 60;
    s.callLocIdx = 31; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    globals.defaultFactory___2860 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C2748_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P2750_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 32; s.pc = 26; return s.tmp_1;
  case 26:
    r0 = s.retval;
    globals.galois___4894 = (s.tmp_0);
    globals.angleSlice___4902 = (0.06283185307179587);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ScreenEffect__C2955_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ScreenEffect_constructor__P2956_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 10;
    s.tmp_1.arg2 = 40;
    s.tmp_1.arg3 = 4000;
    s.tmp_1.arg4 = confetti_inline__P12126;
    s.callLocIdx = 38; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    globals.confetti___2963 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C2978_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P2979_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 100;
    s.tmp_1.arg2 = dissolve_inline__P16450;
    s.callLocIdx = 44; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    globals.dissolve___2983 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(effects_ImageEffect__C2978_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_ImageEffect_constructor__P2979_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 125;
    s.tmp_1.arg2 = melt_inline__P12018;
    s.callLocIdx = 47; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    globals.melt___2984 = (s.tmp_0);
    s.tmp_0 = game_setWaitAnyButton__P2694_mk(s);
    s.tmp_0.arg0 = controller_pauseUntilAnyButtonIsPressed__P1995;
    s.callLocIdx = 48; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    s.tmp_0 = game_eventContext__P2696_mk(s);
    s.callLocIdx = 49; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
    s.tmp_0 = SpriteKind_create__P2266_mk(s);
    s.callLocIdx = 50; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    globals.Text___4036 = (r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, "aahed");
    r0 = pxsim_Array__push(s.tmp_0, "aalii");
    r0 = pxsim_Array__push(s.tmp_0, "aapas");
    r0 = pxsim_Array__push(s.tmp_0, "aargh");
    r0 = pxsim_Array__push(s.tmp_0, "aarti");
    r0 = pxsim_Array__push(s.tmp_0, "abaca");
    r0 = pxsim_Array__push(s.tmp_0, "abaci");
    r0 = pxsim_Array__push(s.tmp_0, "aback");
    r0 = pxsim_Array__push(s.tmp_0, "abacs");
    r0 = pxsim_Array__push(s.tmp_0, "abaft");
    r0 = pxsim_Array__push(s.tmp_0, "abaht");
    r0 = pxsim_Array__push(s.tmp_0, "abaka");
    r0 = pxsim_Array__push(s.tmp_0, "abamp");
    r0 = pxsim_Array__push(s.tmp_0, "aband");
    r0 = pxsim_Array__push(s.tmp_0, "abase");
    r0 = pxsim_Array__push(s.tmp_0, "abash");
    r0 = pxsim_Array__push(s.tmp_0, "abask");
    r0 = pxsim_Array__push(s.tmp_0, "abate");
    r0 = pxsim_Array__push(s.tmp_0, "abaya");
    r0 = pxsim_Array__push(s.tmp_0, "abbas");
    r0 = pxsim_Array__push(s.tmp_0, "abbed");
    r0 = pxsim_Array__push(s.tmp_0, "abbes");
    r0 = pxsim_Array__push(s.tmp_0, "abbey");
    r0 = pxsim_Array__push(s.tmp_0, "abbot");
    r0 = pxsim_Array__push(s.tmp_0, "abcee");
    r0 = pxsim_Array__push(s.tmp_0, "abeam");
    r0 = pxsim_Array__push(s.tmp_0, "abear");
    r0 = pxsim_Array__push(s.tmp_0, "abeat");
    r0 = pxsim_Array__push(s.tmp_0, "abeer");
    r0 = pxsim_Array__push(s.tmp_0, "abele");
    r0 = pxsim_Array__push(s.tmp_0, "abeng");
    r0 = pxsim_Array__push(s.tmp_0, "abers");
    r0 = pxsim_Array__push(s.tmp_0, "abets");
    r0 = pxsim_Array__push(s.tmp_0, "abeys");
    r0 = pxsim_Array__push(s.tmp_0, "abhor");
    r0 = pxsim_Array__push(s.tmp_0, "abide");
    r0 = pxsim_Array__push(s.tmp_0, "abies");
    r0 = pxsim_Array__push(s.tmp_0, "abius");
    r0 = pxsim_Array__push(s.tmp_0, "abjad");
    r0 = pxsim_Array__push(s.tmp_0, "abjud");
    r0 = pxsim_Array__push(s.tmp_0, "abled");
    r0 = pxsim_Array__push(s.tmp_0, "abler");
    r0 = pxsim_Array__push(s.tmp_0, "ables");
    r0 = pxsim_Array__push(s.tmp_0, "ablet");
    r0 = pxsim_Array__push(s.tmp_0, "ablow");
    r0 = pxsim_Array__push(s.tmp_0, "abmho");
    r0 = pxsim_Array__push(s.tmp_0, "abnet");
    r0 = pxsim_Array__push(s.tmp_0, "abode");
    r0 = pxsim_Array__push(s.tmp_0, "abohm");
    r0 = pxsim_Array__push(s.tmp_0, "aboil");
    r0 = pxsim_Array__push(s.tmp_0, "aboma");
    r0 = pxsim_Array__push(s.tmp_0, "aboon");
    r0 = pxsim_Array__push(s.tmp_0, "abord");
    r0 = pxsim_Array__push(s.tmp_0, "abore");
    r0 = pxsim_Array__push(s.tmp_0, "aborn");
    r0 = pxsim_Array__push(s.tmp_0, "abort");
    r0 = pxsim_Array__push(s.tmp_0, "about");
    r0 = pxsim_Array__push(s.tmp_0, "above");
    r0 = pxsim_Array__push(s.tmp_0, "abram");
    r0 = pxsim_Array__push(s.tmp_0, "abray");
    r0 = pxsim_Array__push(s.tmp_0, "abrim");
    r0 = pxsim_Array__push(s.tmp_0, "abrin");
    r0 = pxsim_Array__push(s.tmp_0, "abris");
    r0 = pxsim_Array__push(s.tmp_0, "absey");
    r0 = pxsim_Array__push(s.tmp_0, "absit");
    r0 = pxsim_Array__push(s.tmp_0, "abuna");
    r0 = pxsim_Array__push(s.tmp_0, "abune");
    r0 = pxsim_Array__push(s.tmp_0, "abura");
    r0 = pxsim_Array__push(s.tmp_0, "aburn");
    r0 = pxsim_Array__push(s.tmp_0, "abuse");
    r0 = pxsim_Array__push(s.tmp_0, "abuts");
    r0 = pxsim_Array__push(s.tmp_0, "abuzz");
    r0 = pxsim_Array__push(s.tmp_0, "abyes");
    r0 = pxsim_Array__push(s.tmp_0, "abysm");
    r0 = pxsim_Array__push(s.tmp_0, "abyss");
    r0 = pxsim_Array__push(s.tmp_0, "acais");
    r0 = pxsim_Array__push(s.tmp_0, "acara");
    r0 = pxsim_Array__push(s.tmp_0, "acari");
    r0 = pxsim_Array__push(s.tmp_0, "accas");
    r0 = pxsim_Array__push(s.tmp_0, "accha");
    r0 = pxsim_Array__push(s.tmp_0, "accoy");
    r0 = pxsim_Array__push(s.tmp_0, "accra");
    r0 = pxsim_Array__push(s.tmp_0, "acedy");
    r0 = pxsim_Array__push(s.tmp_0, "acene");
    r0 = pxsim_Array__push(s.tmp_0, "acerb");
    r0 = pxsim_Array__push(s.tmp_0, "acers");
    r0 = pxsim_Array__push(s.tmp_0, "aceta");
    r0 = pxsim_Array__push(s.tmp_0, "achar");
    r0 = pxsim_Array__push(s.tmp_0, "ached");
    r0 = pxsim_Array__push(s.tmp_0, "acher");
    r0 = pxsim_Array__push(s.tmp_0, "aches");
    r0 = pxsim_Array__push(s.tmp_0, "achey");
    r0 = pxsim_Array__push(s.tmp_0, "achoo");
    r0 = pxsim_Array__push(s.tmp_0, "acids");
    r0 = pxsim_Array__push(s.tmp_0, "acidy");
    r0 = pxsim_Array__push(s.tmp_0, "acies");
    r0 = pxsim_Array__push(s.tmp_0, "acing");
    r0 = pxsim_Array__push(s.tmp_0, "acini");
    r0 = pxsim_Array__push(s.tmp_0, "ackee");
    r0 = pxsim_Array__push(s.tmp_0, "acker");
    r0 = pxsim_Array__push(s.tmp_0, "acmes");
    r0 = pxsim_Array__push(s.tmp_0, "acmic");
    r0 = pxsim_Array__push(s.tmp_0, "acned");
    r0 = pxsim_Array__push(s.tmp_0, "acnes");
    r0 = pxsim_Array__push(s.tmp_0, "acock");
    r0 = pxsim_Array__push(s.tmp_0, "acoel");
    r0 = pxsim_Array__push(s.tmp_0, "acold");
    r0 = pxsim_Array__push(s.tmp_0, "acone");
    r0 = pxsim_Array__push(s.tmp_0, "acorn");
    r0 = pxsim_Array__push(s.tmp_0, "acral");
    r0 = pxsim_Array__push(s.tmp_0, "acred");
    r0 = pxsim_Array__push(s.tmp_0, "acres");
    r0 = pxsim_Array__push(s.tmp_0, "acrid");
    r0 = pxsim_Array__push(s.tmp_0, "acron");
    r0 = pxsim_Array__push(s.tmp_0, "acros");
    r0 = pxsim_Array__push(s.tmp_0, "acryl");
    r0 = pxsim_Array__push(s.tmp_0, "actas");
    r0 = pxsim_Array__push(s.tmp_0, "acted");
    r0 = pxsim_Array__push(s.tmp_0, "actin");
    r0 = pxsim_Array__push(s.tmp_0, "acton");
    r0 = pxsim_Array__push(s.tmp_0, "actor");
    r0 = pxsim_Array__push(s.tmp_0, "actus");
    r0 = pxsim_Array__push(s.tmp_0, "acute");
    r0 = pxsim_Array__push(s.tmp_0, "acyls");
    r0 = pxsim_Array__push(s.tmp_0, "adage");
    r0 = pxsim_Array__push(s.tmp_0, "adapt");
    r0 = pxsim_Array__push(s.tmp_0, "adats");
    r0 = pxsim_Array__push(s.tmp_0, "adawn");
    r0 = pxsim_Array__push(s.tmp_0, "adaws");
    r0 = pxsim_Array__push(s.tmp_0, "adays");
    r0 = pxsim_Array__push(s.tmp_0, "adbot");
    r0 = pxsim_Array__push(s.tmp_0, "addas");
    r0 = pxsim_Array__push(s.tmp_0, "addax");
    r0 = pxsim_Array__push(s.tmp_0, "added");
    r0 = pxsim_Array__push(s.tmp_0, "adder");
    r0 = pxsim_Array__push(s.tmp_0, "addin");
    r0 = pxsim_Array__push(s.tmp_0, "addio");
    r0 = pxsim_Array__push(s.tmp_0, "addle");
    r0 = pxsim_Array__push(s.tmp_0, "addra");
    r0 = pxsim_Array__push(s.tmp_0, "adead");
    r0 = pxsim_Array__push(s.tmp_0, "adeem");
    r0 = pxsim_Array__push(s.tmp_0, "adept");
    r0 = pxsim_Array__push(s.tmp_0, "adhan");
    r0 = pxsim_Array__push(s.tmp_0, "adhoc");
    r0 = pxsim_Array__push(s.tmp_0, "adieu");
    r0 = pxsim_Array__push(s.tmp_0, "adios");
    r0 = pxsim_Array__push(s.tmp_0, "adits");
    r0 = pxsim_Array__push(s.tmp_0, "adlib");
    r0 = pxsim_Array__push(s.tmp_0, "adman");
    r0 = pxsim_Array__push(s.tmp_0, "admen");
    r0 = pxsim_Array__push(s.tmp_0, "admin");
    r0 = pxsim_Array__push(s.tmp_0, "admit");
    r0 = pxsim_Array__push(s.tmp_0, "admix");
    r0 = pxsim_Array__push(s.tmp_0, "adnex");
    r0 = pxsim_Array__push(s.tmp_0, "adobe");
    r0 = pxsim_Array__push(s.tmp_0, "adobo");
    r0 = pxsim_Array__push(s.tmp_0, "adoon");
    r0 = pxsim_Array__push(s.tmp_0, "adopt");
    r0 = pxsim_Array__push(s.tmp_0, "adorb");
    r0 = pxsim_Array__push(s.tmp_0, "adore");
    r0 = pxsim_Array__push(s.tmp_0, "adorn");
    r0 = pxsim_Array__push(s.tmp_0, "adown");
    r0 = pxsim_Array__push(s.tmp_0, "adoze");
    r0 = pxsim_Array__push(s.tmp_0, "adrad");
    r0 = pxsim_Array__push(s.tmp_0, "adraw");
    r0 = pxsim_Array__push(s.tmp_0, "adred");
    r0 = pxsim_Array__push(s.tmp_0, "adret");
    r0 = pxsim_Array__push(s.tmp_0, "adrip");
    r0 = pxsim_Array__push(s.tmp_0, "adsum");
    r0 = pxsim_Array__push(s.tmp_0, "aduki");
    r0 = pxsim_Array__push(s.tmp_0, "adult");
    r0 = pxsim_Array__push(s.tmp_0, "adunc");
    r0 = pxsim_Array__push(s.tmp_0, "adust");
    r0 = pxsim_Array__push(s.tmp_0, "advew");
    r0 = pxsim_Array__push(s.tmp_0, "advts");
    r0 = pxsim_Array__push(s.tmp_0, "adyta");
    r0 = pxsim_Array__push(s.tmp_0, "adyts");
    r0 = pxsim_Array__push(s.tmp_0, "adzed");
    r0 = pxsim_Array__push(s.tmp_0, "adzes");
    r0 = pxsim_Array__push(s.tmp_0, "aecia");
    r0 = pxsim_Array__push(s.tmp_0, "aedes");
    r0 = pxsim_Array__push(s.tmp_0, "aeger");
    r0 = pxsim_Array__push(s.tmp_0, "aegis");
    r0 = pxsim_Array__push(s.tmp_0, "aeons");
    r0 = pxsim_Array__push(s.tmp_0, "aerie");
    r0 = pxsim_Array__push(s.tmp_0, "aeros");
    r0 = pxsim_Array__push(s.tmp_0, "aesir");
    r0 = pxsim_Array__push(s.tmp_0, "aevum");
    r0 = pxsim_Array__push(s.tmp_0, "afald");
    r0 = pxsim_Array__push(s.tmp_0, "afanc");
    r0 = pxsim_Array__push(s.tmp_0, "afara");
    r0 = pxsim_Array__push(s.tmp_0, "afars");
    r0 = pxsim_Array__push(s.tmp_0, "afear");
    r0 = pxsim_Array__push(s.tmp_0, "affix");
    r0 = pxsim_Array__push(s.tmp_0, "affly");
    r0 = pxsim_Array__push(s.tmp_0, "afion");
    r0 = pxsim_Array__push(s.tmp_0, "afire");
    r0 = pxsim_Array__push(s.tmp_0, "afizz");
    r0 = pxsim_Array__push(s.tmp_0, "aflaj");
    r0 = pxsim_Array__push(s.tmp_0, "aflap");
    r0 = pxsim_Array__push(s.tmp_0, "aflow");
    r0 = pxsim_Array__push(s.tmp_0, "afoam");
    r0 = pxsim_Array__push(s.tmp_0, "afoot");
    r0 = pxsim_Array__push(s.tmp_0, "afore");
    r0 = pxsim_Array__push(s.tmp_0, "afoul");
    r0 = pxsim_Array__push(s.tmp_0, "afret");
    r0 = pxsim_Array__push(s.tmp_0, "afrit");
    r0 = pxsim_Array__push(s.tmp_0, "afros");
    r0 = pxsim_Array__push(s.tmp_0, "after");
    r0 = pxsim_Array__push(s.tmp_0, "aftos");
    r0 = pxsim_Array__push(s.tmp_0, "again");
    r0 = pxsim_Array__push(s.tmp_0, "agals");
    r0 = pxsim_Array__push(s.tmp_0, "agama");
    r0 = pxsim_Array__push(s.tmp_0, "agami");
    r0 = pxsim_Array__push(s.tmp_0, "agamy");
    r0 = pxsim_Array__push(s.tmp_0, "agape");
    r0 = pxsim_Array__push(s.tmp_0, "agars");
    r0 = pxsim_Array__push(s.tmp_0, "agasp");
    r0 = pxsim_Array__push(s.tmp_0, "agast");
    r0 = pxsim_Array__push(s.tmp_0, "agate");
    r0 = pxsim_Array__push(s.tmp_0, "agaty");
    r0 = pxsim_Array__push(s.tmp_0, "agave");
    r0 = pxsim_Array__push(s.tmp_0, "agaze");
    r0 = pxsim_Array__push(s.tmp_0, "agbas");
    r0 = pxsim_Array__push(s.tmp_0, "agene");
    r0 = pxsim_Array__push(s.tmp_0, "agent");
    r0 = pxsim_Array__push(s.tmp_0, "agers");
    r0 = pxsim_Array__push(s.tmp_0, "aggag");
    r0 = pxsim_Array__push(s.tmp_0, "agger");
    r0 = pxsim_Array__push(s.tmp_0, "aggie");
    r0 = pxsim_Array__push(s.tmp_0, "aggri");
    r0 = pxsim_Array__push(s.tmp_0, "aggro");
    r0 = pxsim_Array__push(s.tmp_0, "aggry");
    r0 = pxsim_Array__push(s.tmp_0, "aghas");
    r0 = pxsim_Array__push(s.tmp_0, "agidi");
    r0 = pxsim_Array__push(s.tmp_0, "agila");
    r0 = pxsim_Array__push(s.tmp_0, "agile");
    r0 = pxsim_Array__push(s.tmp_0, "aging");
    r0 = pxsim_Array__push(s.tmp_0, "agios");
    r0 = pxsim_Array__push(s.tmp_0, "agism");
    r0 = pxsim_Array__push(s.tmp_0, "agist");
    r0 = pxsim_Array__push(s.tmp_0, "agita");
    r0 = pxsim_Array__push(s.tmp_0, "aglee");
    r0 = pxsim_Array__push(s.tmp_0, "aglet");
    r0 = pxsim_Array__push(s.tmp_0, "agley");
    r0 = pxsim_Array__push(s.tmp_0, "agloo");
    r0 = pxsim_Array__push(s.tmp_0, "aglow");
    r0 = pxsim_Array__push(s.tmp_0, "aglus");
    r0 = pxsim_Array__push(s.tmp_0, "agmas");
    r0 = pxsim_Array__push(s.tmp_0, "agoge");
    r0 = pxsim_Array__push(s.tmp_0, "agogo");
    r0 = pxsim_Array__push(s.tmp_0, "agone");
    r0 = pxsim_Array__push(s.tmp_0, "agons");
    r0 = pxsim_Array__push(s.tmp_0, "agony");
    r0 = pxsim_Array__push(s.tmp_0, "agood");
    r0 = pxsim_Array__push(s.tmp_0, "agora");
    r0 = pxsim_Array__push(s.tmp_0, "agree");
    r0 = pxsim_Array__push(s.tmp_0, "agria");
    r0 = pxsim_Array__push(s.tmp_0, "agrin");
    r0 = pxsim_Array__push(s.tmp_0, "agros");
    r0 = pxsim_Array__push(s.tmp_0, "agrum");
    r0 = pxsim_Array__push(s.tmp_0, "agued");
    r0 = pxsim_Array__push(s.tmp_0, "agues");
    r0 = pxsim_Array__push(s.tmp_0, "aguey");
    r0 = pxsim_Array__push(s.tmp_0, "aguna");
    r0 = pxsim_Array__push(s.tmp_0, "agush");
    r0 = pxsim_Array__push(s.tmp_0, "aguti");
    r0 = pxsim_Array__push(s.tmp_0, "ahead");
    r0 = pxsim_Array__push(s.tmp_0, "aheap");
    r0 = pxsim_Array__push(s.tmp_0, "ahent");
    r0 = pxsim_Array__push(s.tmp_0, "ahigh");
    r0 = pxsim_Array__push(s.tmp_0, "ahind");
    r0 = pxsim_Array__push(s.tmp_0, "ahing");
    r0 = pxsim_Array__push(s.tmp_0, "ahint");
    r0 = pxsim_Array__push(s.tmp_0, "ahold");
    r0 = pxsim_Array__push(s.tmp_0, "ahole");
    r0 = pxsim_Array__push(s.tmp_0, "ahull");
    r0 = pxsim_Array__push(s.tmp_0, "ahuru");
    r0 = pxsim_Array__push(s.tmp_0, "aidas");
    r0 = pxsim_Array__push(s.tmp_0, "aided");
    r0 = pxsim_Array__push(s.tmp_0, "aider");
    r0 = pxsim_Array__push(s.tmp_0, "aides");
    r0 = pxsim_Array__push(s.tmp_0, "aidoi");
    r0 = pxsim_Array__push(s.tmp_0, "aidos");
    r0 = pxsim_Array__push(s.tmp_0, "aiery");
    r0 = pxsim_Array__push(s.tmp_0, "aigas");
    r0 = pxsim_Array__push(s.tmp_0, "aight");
    r0 = pxsim_Array__push(s.tmp_0, "ailed");
    r0 = pxsim_Array__push(s.tmp_0, "aimag");
    r0 = pxsim_Array__push(s.tmp_0, "aimak");
    r0 = pxsim_Array__push(s.tmp_0, "aimed");
    r0 = pxsim_Array__push(s.tmp_0, "aimer");
    r0 = pxsim_Array__push(s.tmp_0, "ainee");
    r0 = pxsim_Array__push(s.tmp_0, "ainga");
    r0 = pxsim_Array__push(s.tmp_0, "aioli");
    r0 = pxsim_Array__push(s.tmp_0, "aired");
    r0 = pxsim_Array__push(s.tmp_0, "airer");
    r0 = pxsim_Array__push(s.tmp_0, "airns");
    r0 = pxsim_Array__push(s.tmp_0, "airth");
    r0 = pxsim_Array__push(s.tmp_0, "airts");
    r0 = pxsim_Array__push(s.tmp_0, "aisle");
    r0 = pxsim_Array__push(s.tmp_0, "aitch");
    r0 = pxsim_Array__push(s.tmp_0, "aitus");
    r0 = pxsim_Array__push(s.tmp_0, "aiver");
    r0 = pxsim_Array__push(s.tmp_0, "aixes");
    r0 = pxsim_Array__push(s.tmp_0, "aiyah");
    r0 = pxsim_Array__push(s.tmp_0, "aiyee");
    r0 = pxsim_Array__push(s.tmp_0, "aiyoh");
    r0 = pxsim_Array__push(s.tmp_0, "aiyoo");
    r0 = pxsim_Array__push(s.tmp_0, "aizle");
    r0 = pxsim_Array__push(s.tmp_0, "ajies");
    r0 = pxsim_Array__push(s.tmp_0, "ajiva");
    r0 = pxsim_Array__push(s.tmp_0, "ajuga");
    r0 = pxsim_Array__push(s.tmp_0, "ajupa");
    r0 = pxsim_Array__push(s.tmp_0, "ajwan");
    r0 = pxsim_Array__push(s.tmp_0, "akara");
    r0 = pxsim_Array__push(s.tmp_0, "akees");
    r0 = pxsim_Array__push(s.tmp_0, "akela");
    r0 = pxsim_Array__push(s.tmp_0, "akene");
    r0 = pxsim_Array__push(s.tmp_0, "aking");
    r0 = pxsim_Array__push(s.tmp_0, "akita");
    r0 = pxsim_Array__push(s.tmp_0, "akkas");
    r0 = pxsim_Array__push(s.tmp_0, "akker");
    r0 = pxsim_Array__push(s.tmp_0, "akoia");
    r0 = pxsim_Array__push(s.tmp_0, "akoja");
    r0 = pxsim_Array__push(s.tmp_0, "akoya");
    r0 = pxsim_Array__push(s.tmp_0, "aksed");
    r0 = pxsim_Array__push(s.tmp_0, "akses");
    r0 = pxsim_Array__push(s.tmp_0, "alaap");
    r0 = pxsim_Array__push(s.tmp_0, "alack");
    r0 = pxsim_Array__push(s.tmp_0, "alala");
    r0 = pxsim_Array__push(s.tmp_0, "alamo");
    r0 = pxsim_Array__push(s.tmp_0, "aland");
    r0 = pxsim_Array__push(s.tmp_0, "alane");
    r0 = pxsim_Array__push(s.tmp_0, "alang");
    r0 = pxsim_Array__push(s.tmp_0, "alans");
    r0 = pxsim_Array__push(s.tmp_0, "alant");
    r0 = pxsim_Array__push(s.tmp_0, "alapa");
    r0 = pxsim_Array__push(s.tmp_0, "alaps");
    r0 = pxsim_Array__push(s.tmp_0, "alarm");
    r0 = pxsim_Array__push(s.tmp_0, "alary");
    r0 = pxsim_Array__push(s.tmp_0, "alata");
    r0 = pxsim_Array__push(s.tmp_0, "alate");
    r0 = pxsim_Array__push(s.tmp_0, "alays");
    r0 = pxsim_Array__push(s.tmp_0, "albas");
    r0 = pxsim_Array__push(s.tmp_0, "albee");
    r0 = pxsim_Array__push(s.tmp_0, "albid");
    r0 = pxsim_Array__push(s.tmp_0, "album");
    r0 = pxsim_Array__push(s.tmp_0, "alcea");
    r0 = pxsim_Array__push(s.tmp_0, "alces");
    r0 = pxsim_Array__push(s.tmp_0, "alcid");
    r0 = pxsim_Array__push(s.tmp_0, "alcos");
    r0 = pxsim_Array__push(s.tmp_0, "aldea");
    r0 = pxsim_Array__push(s.tmp_0, "alder");
    r0 = pxsim_Array__push(s.tmp_0, "aldol");
    r0 = pxsim_Array__push(s.tmp_0, "aleak");
    r0 = pxsim_Array__push(s.tmp_0, "aleck");
    r0 = pxsim_Array__push(s.tmp_0, "alecs");
    r0 = pxsim_Array__push(s.tmp_0, "aleem");
    r0 = pxsim_Array__push(s.tmp_0, "alefs");
    r0 = pxsim_Array__push(s.tmp_0, "aleft");
    r0 = pxsim_Array__push(s.tmp_0, "aleph");
    r0 = pxsim_Array__push(s.tmp_0, "alert");
    r0 = pxsim_Array__push(s.tmp_0, "alews");
    r0 = pxsim_Array__push(s.tmp_0, "aleye");
    r0 = pxsim_Array__push(s.tmp_0, "alfas");
    r0 = pxsim_Array__push(s.tmp_0, "algae");
    r0 = pxsim_Array__push(s.tmp_0, "algal");
    r0 = pxsim_Array__push(s.tmp_0, "algas");
    r0 = pxsim_Array__push(s.tmp_0, "algid");
    r0 = pxsim_Array__push(s.tmp_0, "algin");
    r0 = pxsim_Array__push(s.tmp_0, "algor");
    r0 = pxsim_Array__push(s.tmp_0, "algos");
    r0 = pxsim_Array__push(s.tmp_0, "algum");
    r0 = pxsim_Array__push(s.tmp_0, "alias");
    r0 = pxsim_Array__push(s.tmp_0, "alibi");
    r0 = pxsim_Array__push(s.tmp_0, "alick");
    r0 = pxsim_Array__push(s.tmp_0, "alien");
    r0 = pxsim_Array__push(s.tmp_0, "alifs");
    r0 = pxsim_Array__push(s.tmp_0, "align");
    r0 = pxsim_Array__push(s.tmp_0, "alike");
    r0 = pxsim_Array__push(s.tmp_0, "alims");
    r0 = pxsim_Array__push(s.tmp_0, "aline");
    r0 = pxsim_Array__push(s.tmp_0, "alios");
    r0 = pxsim_Array__push(s.tmp_0, "alist");
    r0 = pxsim_Array__push(s.tmp_0, "alive");
    r0 = pxsim_Array__push(s.tmp_0, "aliya");
    r0 = pxsim_Array__push(s.tmp_0, "alkie");
    r0 = pxsim_Array__push(s.tmp_0, "alkin");
    r0 = pxsim_Array__push(s.tmp_0, "alkos");
    r0 = pxsim_Array__push(s.tmp_0, "alkyd");
    r0 = pxsim_Array__push(s.tmp_0, "alkyl");
    r0 = pxsim_Array__push(s.tmp_0, "allan");
    r0 = pxsim_Array__push(s.tmp_0, "allay");
    r0 = pxsim_Array__push(s.tmp_0, "allee");
    r0 = pxsim_Array__push(s.tmp_0, "allel");
    r0 = pxsim_Array__push(s.tmp_0, "allen");
    r0 = pxsim_Array__push(s.tmp_0, "aller");
    r0 = pxsim_Array__push(s.tmp_0, "alley");
    r0 = pxsim_Array__push(s.tmp_0, "allin");
    r0 = pxsim_Array__push(s.tmp_0, "allis");
    r0 = pxsim_Array__push(s.tmp_0, "allod");
    r0 = pxsim_Array__push(s.tmp_0, "allot");
    r0 = pxsim_Array__push(s.tmp_0, "allow");
    r0 = pxsim_Array__push(s.tmp_0, "alloy");
    r0 = pxsim_Array__push(s.tmp_0, "allus");
    r0 = pxsim_Array__push(s.tmp_0, "allyl");
    r0 = pxsim_Array__push(s.tmp_0, "almah");
    r0 = pxsim_Array__push(s.tmp_0, "almas");
    r0 = pxsim_Array__push(s.tmp_0, "almeh");
    r0 = pxsim_Array__push(s.tmp_0, "almes");
    r0 = pxsim_Array__push(s.tmp_0, "almud");
    r0 = pxsim_Array__push(s.tmp_0, "almug");
    r0 = pxsim_Array__push(s.tmp_0, "alods");
    r0 = pxsim_Array__push(s.tmp_0, "aloed");
    r0 = pxsim_Array__push(s.tmp_0, "aloes");
    r0 = pxsim_Array__push(s.tmp_0, "aloft");
    r0 = pxsim_Array__push(s.tmp_0, "aloha");
    r0 = pxsim_Array__push(s.tmp_0, "aloin");
    r0 = pxsim_Array__push(s.tmp_0, "alone");
    r0 = pxsim_Array__push(s.tmp_0, "along");
    r0 = pxsim_Array__push(s.tmp_0, "aloof");
    r0 = pxsim_Array__push(s.tmp_0, "aloos");
    r0 = pxsim_Array__push(s.tmp_0, "alose");
    r0 = pxsim_Array__push(s.tmp_0, "aloud");
    r0 = pxsim_Array__push(s.tmp_0, "alowe");
    r0 = pxsim_Array__push(s.tmp_0, "alpha");
    r0 = pxsim_Array__push(s.tmp_0, "altar");
    r0 = pxsim_Array__push(s.tmp_0, "alter");
    r0 = pxsim_Array__push(s.tmp_0, "altho");
    r0 = pxsim_Array__push(s.tmp_0, "altos");
    r0 = pxsim_Array__push(s.tmp_0, "alula");
    r0 = pxsim_Array__push(s.tmp_0, "alums");
    r0 = pxsim_Array__push(s.tmp_0, "alumy");
    r0 = pxsim_Array__push(s.tmp_0, "alure");
    r0 = pxsim_Array__push(s.tmp_0, "alurk");
    r0 = pxsim_Array__push(s.tmp_0, "alvar");
    r0 = pxsim_Array__push(s.tmp_0, "alway");
    r0 = pxsim_Array__push(s.tmp_0, "amahs");
    r0 = pxsim_Array__push(s.tmp_0, "amain");
    r0 = pxsim_Array__push(s.tmp_0, "amari");
    r0 = pxsim_Array__push(s.tmp_0, "amaro");
    r0 = pxsim_Array__push(s.tmp_0, "amass");
    r0 = pxsim_Array__push(s.tmp_0, "amate");
    r0 = pxsim_Array__push(s.tmp_0, "amaut");
    r0 = pxsim_Array__push(s.tmp_0, "amaze");
    r0 = pxsim_Array__push(s.tmp_0, "amban");
    r0 = pxsim_Array__push(s.tmp_0, "amber");
    r0 = pxsim_Array__push(s.tmp_0, "ambit");
    r0 = pxsim_Array__push(s.tmp_0, "amble");
    r0 = pxsim_Array__push(s.tmp_0, "ambos");
    r0 = pxsim_Array__push(s.tmp_0, "ambry");
    r0 = pxsim_Array__push(s.tmp_0, "ameba");
    r0 = pxsim_Array__push(s.tmp_0, "ameer");
    r0 = pxsim_Array__push(s.tmp_0, "amend");
    r0 = pxsim_Array__push(s.tmp_0, "amene");
    r0 = pxsim_Array__push(s.tmp_0, "amens");
    r0 = pxsim_Array__push(s.tmp_0, "ament");
    r0 = pxsim_Array__push(s.tmp_0, "amias");
    r0 = pxsim_Array__push(s.tmp_0, "amice");
    r0 = pxsim_Array__push(s.tmp_0, "amici");
    r0 = pxsim_Array__push(s.tmp_0, "amide");
    r0 = pxsim_Array__push(s.tmp_0, "amido");
    r0 = pxsim_Array__push(s.tmp_0, "amids");
    r0 = pxsim_Array__push(s.tmp_0, "amies");
    r0 = pxsim_Array__push(s.tmp_0, "amiga");
    r0 = pxsim_Array__push(s.tmp_0, "amigo");
    r0 = pxsim_Array__push(s.tmp_0, "amine");
    r0 = pxsim_Array__push(s.tmp_0, "amino");
    r0 = pxsim_Array__push(s.tmp_0, "amins");
    r0 = pxsim_Array__push(s.tmp_0, "amirs");
    r0 = pxsim_Array__push(s.tmp_0, "amiss");
    r0 = pxsim_Array__push(s.tmp_0, "amity");
    r0 = pxsim_Array__push(s.tmp_0, "amlas");
    r0 = pxsim_Array__push(s.tmp_0, "amman");
    r0 = pxsim_Array__push(s.tmp_0, "ammas");
    r0 = pxsim_Array__push(s.tmp_0, "ammon");
    r0 = pxsim_Array__push(s.tmp_0, "ammos");
    r0 = pxsim_Array__push(s.tmp_0, "amnia");
    r0 = pxsim_Array__push(s.tmp_0, "amnic");
    r0 = pxsim_Array__push(s.tmp_0, "amnio");
    r0 = pxsim_Array__push(s.tmp_0, "amoks");
    r0 = pxsim_Array__push(s.tmp_0, "amole");
    r0 = pxsim_Array__push(s.tmp_0, "among");
    r0 = pxsim_Array__push(s.tmp_0, "amore");
    r0 = pxsim_Array__push(s.tmp_0, "amort");
    r0 = pxsim_Array__push(s.tmp_0, "amour");
    r0 = pxsim_Array__push(s.tmp_0, "amove");
    r0 = pxsim_Array__push(s.tmp_0, "amowt");
    r0 = pxsim_Array__push(s.tmp_0, "amped");
    r0 = pxsim_Array__push(s.tmp_0, "ample");
    r0 = pxsim_Array__push(s.tmp_0, "amply");
    r0 = pxsim_Array__push(s.tmp_0, "ampul");
    r0 = pxsim_Array__push(s.tmp_0, "amrit");
    r0 = pxsim_Array__push(s.tmp_0, "amuck");
    r0 = pxsim_Array__push(s.tmp_0, "amuse");
    r0 = pxsim_Array__push(s.tmp_0, "amyls");
    r0 = pxsim_Array__push(s.tmp_0, "anana");
    r0 = pxsim_Array__push(s.tmp_0, "anata");
    r0 = pxsim_Array__push(s.tmp_0, "ancho");
    r0 = pxsim_Array__push(s.tmp_0, "ancle");
    r0 = pxsim_Array__push(s.tmp_0, "ancon");
    r0 = pxsim_Array__push(s.tmp_0, "andic");
    r0 = pxsim_Array__push(s.tmp_0, "andro");
    r0 = pxsim_Array__push(s.tmp_0, "anear");
    r0 = pxsim_Array__push(s.tmp_0, "anele");
    r0 = pxsim_Array__push(s.tmp_0, "anent");
    r0 = pxsim_Array__push(s.tmp_0, "angas");
    r0 = pxsim_Array__push(s.tmp_0, "angel");
    r0 = pxsim_Array__push(s.tmp_0, "anger");
    r0 = pxsim_Array__push(s.tmp_0, "angle");
    r0 = pxsim_Array__push(s.tmp_0, "anglo");
    r0 = pxsim_Array__push(s.tmp_0, "angry");
    r0 = pxsim_Array__push(s.tmp_0, "angst");
    r0 = pxsim_Array__push(s.tmp_0, "anigh");
    r0 = pxsim_Array__push(s.tmp_0, "anile");
    r0 = pxsim_Array__push(s.tmp_0, "anils");
    r0 = pxsim_Array__push(s.tmp_0, "anima");
    r0 = pxsim_Array__push(s.tmp_0, "anime");
    r0 = pxsim_Array__push(s.tmp_0, "animi");
    r0 = pxsim_Array__push(s.tmp_0, "anion");
    r0 = pxsim_Array__push(s.tmp_0, "anise");
    r0 = pxsim_Array__push(s.tmp_0, "anker");
    r0 = pxsim_Array__push(s.tmp_0, "ankhs");
    r0 = pxsim_Array__push(s.tmp_0, "ankle");
    r0 = pxsim_Array__push(s.tmp_0, "ankus");
    r0 = pxsim_Array__push(s.tmp_0, "anlas");
    r0 = pxsim_Array__push(s.tmp_0, "annal");
    r0 = pxsim_Array__push(s.tmp_0, "annan");
    r0 = pxsim_Array__push(s.tmp_0, "annas");
    r0 = pxsim_Array__push(s.tmp_0, "annat");
    r0 = pxsim_Array__push(s.tmp_0, "annex");
    r0 = pxsim_Array__push(s.tmp_0, "annoy");
    r0 = pxsim_Array__push(s.tmp_0, "annul");
    r0 = pxsim_Array__push(s.tmp_0, "annum");
    r0 = pxsim_Array__push(s.tmp_0, "annus");
    r0 = pxsim_Array__push(s.tmp_0, "anoas");
    r0 = pxsim_Array__push(s.tmp_0, "anode");
    r0 = pxsim_Array__push(s.tmp_0, "anole");
    r0 = pxsim_Array__push(s.tmp_0, "anomy");
    r0 = pxsim_Array__push(s.tmp_0, "ansae");
    r0 = pxsim_Array__push(s.tmp_0, "ansas");
    r0 = pxsim_Array__push(s.tmp_0, "antae");
    r0 = pxsim_Array__push(s.tmp_0, "antar");
    r0 = pxsim_Array__push(s.tmp_0, "antas");
    r0 = pxsim_Array__push(s.tmp_0, "anted");
    r0 = pxsim_Array__push(s.tmp_0, "antes");
    r0 = pxsim_Array__push(s.tmp_0, "antic");
    r0 = pxsim_Array__push(s.tmp_0, "antis");
    r0 = pxsim_Array__push(s.tmp_0, "antra");
    r0 = pxsim_Array__push(s.tmp_0, "antre");
    r0 = pxsim_Array__push(s.tmp_0, "antsy");
    r0 = pxsim_Array__push(s.tmp_0, "anura");
    r0 = pxsim_Array__push(s.tmp_0, "anvil");
    r0 = pxsim_Array__push(s.tmp_0, "anyon");
    r0 = pxsim_Array__push(s.tmp_0, "aorta");
    r0 = pxsim_Array__push(s.tmp_0, "apace");
    r0 = pxsim_Array__push(s.tmp_0, "apage");
    r0 = pxsim_Array__push(s.tmp_0, "apaid");
    r0 = pxsim_Array__push(s.tmp_0, "apart");
    r0 = pxsim_Array__push(s.tmp_0, "apayd");
    r0 = pxsim_Array__push(s.tmp_0, "apays");
    r0 = pxsim_Array__push(s.tmp_0, "apeak");
    r0 = pxsim_Array__push(s.tmp_0, "apeek");
    r0 = pxsim_Array__push(s.tmp_0, "apers");
    r0 = pxsim_Array__push(s.tmp_0, "apert");
    r0 = pxsim_Array__push(s.tmp_0, "apery");
    r0 = pxsim_Array__push(s.tmp_0, "apgar");
    r0 = pxsim_Array__push(s.tmp_0, "aphid");
    r0 = pxsim_Array__push(s.tmp_0, "aphis");
    r0 = pxsim_Array__push(s.tmp_0, "apian");
    r0 = pxsim_Array__push(s.tmp_0, "aping");
    r0 = pxsim_Array__push(s.tmp_0, "apiol");
    r0 = pxsim_Array__push(s.tmp_0, "apish");
    r0 = pxsim_Array__push(s.tmp_0, "apism");
    r0 = pxsim_Array__push(s.tmp_0, "apnea");
    r0 = pxsim_Array__push(s.tmp_0, "apode");
    r0 = pxsim_Array__push(s.tmp_0, "apods");
    r0 = pxsim_Array__push(s.tmp_0, "apols");
    r0 = pxsim_Array__push(s.tmp_0, "apoop");
    r0 = pxsim_Array__push(s.tmp_0, "aport");
    r0 = pxsim_Array__push(s.tmp_0, "appal");
    r0 = pxsim_Array__push(s.tmp_0, "appam");
    r0 = pxsim_Array__push(s.tmp_0, "appay");
    r0 = pxsim_Array__push(s.tmp_0, "appel");
    r0 = pxsim_Array__push(s.tmp_0, "apple");
    r0 = pxsim_Array__push(s.tmp_0, "apply");
    r0 = pxsim_Array__push(s.tmp_0, "appro");
    r0 = pxsim_Array__push(s.tmp_0, "appts");
    r0 = pxsim_Array__push(s.tmp_0, "appui");
    r0 = pxsim_Array__push(s.tmp_0, "appuy");
    r0 = pxsim_Array__push(s.tmp_0, "apres");
    r0 = pxsim_Array__push(s.tmp_0, "apron");
    r0 = pxsim_Array__push(s.tmp_0, "apses");
    r0 = pxsim_Array__push(s.tmp_0, "apsis");
    r0 = pxsim_Array__push(s.tmp_0, "apsos");
    r0 = pxsim_Array__push(s.tmp_0, "apted");
    r0 = pxsim_Array__push(s.tmp_0, "apter");
    r0 = pxsim_Array__push(s.tmp_0, "aptly");
    r0 = pxsim_Array__push(s.tmp_0, "aquae");
    r0 = pxsim_Array__push(s.tmp_0, "aquas");
    r0 = pxsim_Array__push(s.tmp_0, "araba");
    r0 = pxsim_Array__push(s.tmp_0, "araks");
    r0 = pxsim_Array__push(s.tmp_0, "arame");
    r0 = pxsim_Array__push(s.tmp_0, "arars");
    r0 = pxsim_Array__push(s.tmp_0, "arbah");
    r0 = pxsim_Array__push(s.tmp_0, "arbas");
    r0 = pxsim_Array__push(s.tmp_0, "arbor");
    r0 = pxsim_Array__push(s.tmp_0, "arced");
    r0 = pxsim_Array__push(s.tmp_0, "archi");
    r0 = pxsim_Array__push(s.tmp_0, "arcos");
    r0 = pxsim_Array__push(s.tmp_0, "arcus");
    r0 = pxsim_Array__push(s.tmp_0, "ardeb");
    r0 = pxsim_Array__push(s.tmp_0, "ardor");
    r0 = pxsim_Array__push(s.tmp_0, "ardri");
    r0 = pxsim_Array__push(s.tmp_0, "aread");
    r0 = pxsim_Array__push(s.tmp_0, "areae");
    r0 = pxsim_Array__push(s.tmp_0, "areal");
    r0 = pxsim_Array__push(s.tmp_0, "arear");
    r0 = pxsim_Array__push(s.tmp_0, "areas");
    r0 = pxsim_Array__push(s.tmp_0, "areca");
    r0 = pxsim_Array__push(s.tmp_0, "aredd");
    r0 = pxsim_Array__push(s.tmp_0, "arede");
    r0 = pxsim_Array__push(s.tmp_0, "arefy");
    r0 = pxsim_Array__push(s.tmp_0, "areic");
    r0 = pxsim_Array__push(s.tmp_0, "arena");
    r0 = pxsim_Array__push(s.tmp_0, "arene");
    r0 = pxsim_Array__push(s.tmp_0, "arepa");
    r0 = pxsim_Array__push(s.tmp_0, "arere");
    r0 = pxsim_Array__push(s.tmp_0, "arete");
    r0 = pxsim_Array__push(s.tmp_0, "arets");
    r0 = pxsim_Array__push(s.tmp_0, "arett");
    r0 = pxsim_Array__push(s.tmp_0, "argal");
    r0 = pxsim_Array__push(s.tmp_0, "argan");
    r0 = pxsim_Array__push(s.tmp_0, "argil");
    r0 = pxsim_Array__push(s.tmp_0, "argle");
    r0 = pxsim_Array__push(s.tmp_0, "argol");
    r0 = pxsim_Array__push(s.tmp_0, "argon");
    r0 = pxsim_Array__push(s.tmp_0, "argot");
    r0 = pxsim_Array__push(s.tmp_0, "argue");
    r0 = pxsim_Array__push(s.tmp_0, "argus");
    r0 = pxsim_Array__push(s.tmp_0, "arhat");
    r0 = pxsim_Array__push(s.tmp_0, "arias");
    r0 = pxsim_Array__push(s.tmp_0, "ariel");
    r0 = pxsim_Array__push(s.tmp_0, "ariki");
    r0 = pxsim_Array__push(s.tmp_0, "arils");
    r0 = pxsim_Array__push(s.tmp_0, "ariot");
    r0 = pxsim_Array__push(s.tmp_0, "arise");
    r0 = pxsim_Array__push(s.tmp_0, "arish");
    r0 = pxsim_Array__push(s.tmp_0, "arith");
    r0 = pxsim_Array__push(s.tmp_0, "arked");
    r0 = pxsim_Array__push(s.tmp_0, "arled");
    r0 = pxsim_Array__push(s.tmp_0, "arles");
    r0 = pxsim_Array__push(s.tmp_0, "armed");
    r0 = pxsim_Array__push(s.tmp_0, "armer");
    r0 = pxsim_Array__push(s.tmp_0, "armet");
    r0 = pxsim_Array__push(s.tmp_0, "armil");
    r0 = pxsim_Array__push(s.tmp_0, "armor");
    r0 = pxsim_Array__push(s.tmp_0, "arnas");
    r0 = pxsim_Array__push(s.tmp_0, "arnis");
    r0 = pxsim_Array__push(s.tmp_0, "arnut");
    r0 = pxsim_Array__push(s.tmp_0, "aroba");
    r0 = pxsim_Array__push(s.tmp_0, "aroha");
    r0 = pxsim_Array__push(s.tmp_0, "aroid");
    r0 = pxsim_Array__push(s.tmp_0, "aroma");
    r0 = pxsim_Array__push(s.tmp_0, "arose");
    r0 = pxsim_Array__push(s.tmp_0, "arpas");
    r0 = pxsim_Array__push(s.tmp_0, "arpen");
    r0 = pxsim_Array__push(s.tmp_0, "arrah");
    r0 = pxsim_Array__push(s.tmp_0, "arras");
    r0 = pxsim_Array__push(s.tmp_0, "array");
    r0 = pxsim_Array__push(s.tmp_0, "arret");
    r0 = pxsim_Array__push(s.tmp_0, "arris");
    r0 = pxsim_Array__push(s.tmp_0, "arrow");
    r0 = pxsim_Array__push(s.tmp_0, "arroz");
    r0 = pxsim_Array__push(s.tmp_0, "arsed");
    r0 = pxsim_Array__push(s.tmp_0, "arses");
    r0 = pxsim_Array__push(s.tmp_0, "arsey");
    r0 = pxsim_Array__push(s.tmp_0, "arsis");
    r0 = pxsim_Array__push(s.tmp_0, "arson");
    r0 = pxsim_Array__push(s.tmp_0, "artal");
    r0 = pxsim_Array__push(s.tmp_0, "artel");
    r0 = pxsim_Array__push(s.tmp_0, "arter");
    r0 = pxsim_Array__push(s.tmp_0, "artic");
    r0 = pxsim_Array__push(s.tmp_0, "artis");
    r0 = pxsim_Array__push(s.tmp_0, "artly");
    r0 = pxsim_Array__push(s.tmp_0, "artsy");
    r0 = pxsim_Array__push(s.tmp_0, "aruhe");
    r0 = pxsim_Array__push(s.tmp_0, "arums");
    r0 = pxsim_Array__push(s.tmp_0, "arval");
    r0 = pxsim_Array__push(s.tmp_0, "arvee");
    r0 = pxsim_Array__push(s.tmp_0, "arvos");
    r0 = pxsim_Array__push(s.tmp_0, "aryls");
    r0 = pxsim_Array__push(s.tmp_0, "asada");
    r0 = pxsim_Array__push(s.tmp_0, "asana");
    r0 = pxsim_Array__push(s.tmp_0, "ascon");
    r0 = pxsim_Array__push(s.tmp_0, "ascot");
    r0 = pxsim_Array__push(s.tmp_0, "ascus");
    r0 = pxsim_Array__push(s.tmp_0, "asdic");
    r0 = pxsim_Array__push(s.tmp_0, "ashed");
    r0 = pxsim_Array__push(s.tmp_0, "ashen");
    r0 = pxsim_Array__push(s.tmp_0, "ashes");
    r0 = pxsim_Array__push(s.tmp_0, "ashet");
    r0 = pxsim_Array__push(s.tmp_0, "aside");
    r0 = pxsim_Array__push(s.tmp_0, "asity");
    r0 = pxsim_Array__push(s.tmp_0, "askar");
    r0 = pxsim_Array__push(s.tmp_0, "asked");
    r0 = pxsim_Array__push(s.tmp_0, "asker");
    r0 = pxsim_Array__push(s.tmp_0, "askew");
    r0 = pxsim_Array__push(s.tmp_0, "askoi");
    r0 = pxsim_Array__push(s.tmp_0, "askos");
    r0 = pxsim_Array__push(s.tmp_0, "aspen");
    r0 = pxsim_Array__push(s.tmp_0, "asper");
    r0 = pxsim_Array__push(s.tmp_0, "aspic");
    r0 = pxsim_Array__push(s.tmp_0, "aspie");
    r0 = pxsim_Array__push(s.tmp_0, "aspis");
    r0 = pxsim_Array__push(s.tmp_0, "aspro");
    r0 = pxsim_Array__push(s.tmp_0, "assai");
    r0 = pxsim_Array__push(s.tmp_0, "assam");
    r0 = pxsim_Array__push(s.tmp_0, "assay");
    r0 = pxsim_Array__push(s.tmp_0, "assed");
    r0 = pxsim_Array__push(s.tmp_0, "asses");
    r0 = pxsim_Array__push(s.tmp_0, "asset");
    r0 = pxsim_Array__push(s.tmp_0, "assez");
    r0 = pxsim_Array__push(s.tmp_0, "assot");
    r0 = pxsim_Array__push(s.tmp_0, "aster");
    r0 = pxsim_Array__push(s.tmp_0, "astir");
    r0 = pxsim_Array__push(s.tmp_0, "astun");
    r0 = pxsim_Array__push(s.tmp_0, "asura");
    r0 = pxsim_Array__push(s.tmp_0, "asway");
    r0 = pxsim_Array__push(s.tmp_0, "aswim");
    r0 = pxsim_Array__push(s.tmp_0, "asyla");
    r0 = pxsim_Array__push(s.tmp_0, "ataps");
    r0 = pxsim_Array__push(s.tmp_0, "ataxy");
    r0 = pxsim_Array__push(s.tmp_0, "atigi");
    r0 = pxsim_Array__push(s.tmp_0, "atilt");
    r0 = pxsim_Array__push(s.tmp_0, "atimy");
    r0 = pxsim_Array__push(s.tmp_0, "atlas");
    r0 = pxsim_Array__push(s.tmp_0, "atman");
    r0 = pxsim_Array__push(s.tmp_0, "atmas");
    r0 = pxsim_Array__push(s.tmp_0, "atmos");
    r0 = pxsim_Array__push(s.tmp_0, "atocs");
    r0 = pxsim_Array__push(s.tmp_0, "atoke");
    r0 = pxsim_Array__push(s.tmp_0, "atoks");
    r0 = pxsim_Array__push(s.tmp_0, "atoll");
    r0 = pxsim_Array__push(s.tmp_0, "atoms");
    r0 = pxsim_Array__push(s.tmp_0, "atomy");
    r0 = pxsim_Array__push(s.tmp_0, "atone");
    r0 = pxsim_Array__push(s.tmp_0, "atony");
    r0 = pxsim_Array__push(s.tmp_0, "atopy");
    r0 = pxsim_Array__push(s.tmp_0, "atria");
    r0 = pxsim_Array__push(s.tmp_0, "atrip");
    r0 = pxsim_Array__push(s.tmp_0, "attap");
    r0 = pxsim_Array__push(s.tmp_0, "attar");
    r0 = pxsim_Array__push(s.tmp_0, "attas");
    r0 = pxsim_Array__push(s.tmp_0, "atter");
    r0 = pxsim_Array__push(s.tmp_0, "attic");
    r0 = pxsim_Array__push(s.tmp_0, "atuas");
    r0 = pxsim_Array__push(s.tmp_0, "aucht");
    r0 = pxsim_Array__push(s.tmp_0, "audad");
    r0 = pxsim_Array__push(s.tmp_0, "audax");
    r0 = pxsim_Array__push(s.tmp_0, "audio");
    r0 = pxsim_Array__push(s.tmp_0, "audit");
    r0 = pxsim_Array__push(s.tmp_0, "augen");
    r0 = pxsim_Array__push(s.tmp_0, "auger");
    r0 = pxsim_Array__push(s.tmp_0, "auges");
    r0 = pxsim_Array__push(s.tmp_0, "aught");
    r0 = pxsim_Array__push(s.tmp_0, "augur");
    r0 = pxsim_Array__push(s.tmp_0, "aulas");
    r0 = pxsim_Array__push(s.tmp_0, "aulic");
    r0 = pxsim_Array__push(s.tmp_0, "auloi");
    r0 = pxsim_Array__push(s.tmp_0, "aulos");
    r0 = pxsim_Array__push(s.tmp_0, "aumil");
    r0 = pxsim_Array__push(s.tmp_0, "aunes");
    r0 = pxsim_Array__push(s.tmp_0, "aunts");
    r0 = pxsim_Array__push(s.tmp_0, "aunty");
    r0 = pxsim_Array__push(s.tmp_0, "aurae");
    r0 = pxsim_Array__push(s.tmp_0, "aural");
    r0 = pxsim_Array__push(s.tmp_0, "aurar");
    r0 = pxsim_Array__push(s.tmp_0, "auras");
    r0 = pxsim_Array__push(s.tmp_0, "aurei");
    r0 = pxsim_Array__push(s.tmp_0, "aures");
    r0 = pxsim_Array__push(s.tmp_0, "auric");
    r0 = pxsim_Array__push(s.tmp_0, "auris");
    r0 = pxsim_Array__push(s.tmp_0, "aurum");
    r0 = pxsim_Array__push(s.tmp_0, "autos");
    r0 = pxsim_Array__push(s.tmp_0, "auxin");
    r0 = pxsim_Array__push(s.tmp_0, "avail");
    r0 = pxsim_Array__push(s.tmp_0, "avale");
    r0 = pxsim_Array__push(s.tmp_0, "avant");
    r0 = pxsim_Array__push(s.tmp_0, "avast");
    r0 = pxsim_Array__push(s.tmp_0, "avels");
    r0 = pxsim_Array__push(s.tmp_0, "avens");
    r0 = pxsim_Array__push(s.tmp_0, "avers");
    r0 = pxsim_Array__push(s.tmp_0, "avert");
    r0 = pxsim_Array__push(s.tmp_0, "avgas");
    r0 = pxsim_Array__push(s.tmp_0, "avian");
    r0 = pxsim_Array__push(s.tmp_0, "avine");
    r0 = pxsim_Array__push(s.tmp_0, "avion");
    r0 = pxsim_Array__push(s.tmp_0, "avise");
    r0 = pxsim_Array__push(s.tmp_0, "aviso");
    r0 = pxsim_Array__push(s.tmp_0, "avize");
    r0 = pxsim_Array__push(s.tmp_0, "avoid");
    r0 = pxsim_Array__push(s.tmp_0, "avows");
    r0 = pxsim_Array__push(s.tmp_0, "avyze");
    r0 = pxsim_Array__push(s.tmp_0, "await");
    r0 = pxsim_Array__push(s.tmp_0, "awake");
    r0 = pxsim_Array__push(s.tmp_0, "award");
    r0 = pxsim_Array__push(s.tmp_0, "aware");
    r0 = pxsim_Array__push(s.tmp_0, "awari");
    r0 = pxsim_Array__push(s.tmp_0, "awarn");
    r0 = pxsim_Array__push(s.tmp_0, "awash");
    r0 = pxsim_Array__push(s.tmp_0, "awato");
    r0 = pxsim_Array__push(s.tmp_0, "awave");
    r0 = pxsim_Array__push(s.tmp_0, "aways");
    r0 = pxsim_Array__push(s.tmp_0, "awdls");
    r0 = pxsim_Array__push(s.tmp_0, "aweel");
    r0 = pxsim_Array__push(s.tmp_0, "aweto");
    r0 = pxsim_Array__push(s.tmp_0, "awful");
    r0 = pxsim_Array__push(s.tmp_0, "awing");
    r0 = pxsim_Array__push(s.tmp_0, "awkin");
    r0 = pxsim_Array__push(s.tmp_0, "awmry");
    r0 = pxsim_Array__push(s.tmp_0, "awned");
    r0 = pxsim_Array__push(s.tmp_0, "awner");
    r0 = pxsim_Array__push(s.tmp_0, "awoke");
    r0 = pxsim_Array__push(s.tmp_0, "awols");
    r0 = pxsim_Array__push(s.tmp_0, "awork");
    r0 = pxsim_Array__push(s.tmp_0, "axels");
    r0 = pxsim_Array__push(s.tmp_0, "axial");
    r0 = pxsim_Array__push(s.tmp_0, "axile");
    r0 = pxsim_Array__push(s.tmp_0, "axils");
    r0 = pxsim_Array__push(s.tmp_0, "axing");
    r0 = pxsim_Array__push(s.tmp_0, "axiom");
    r0 = pxsim_Array__push(s.tmp_0, "axion");
    r0 = pxsim_Array__push(s.tmp_0, "axite");
    r0 = pxsim_Array__push(s.tmp_0, "axled");
    r0 = pxsim_Array__push(s.tmp_0, "axles");
    r0 = pxsim_Array__push(s.tmp_0, "axman");
    r0 = pxsim_Array__push(s.tmp_0, "axmen");
    r0 = pxsim_Array__push(s.tmp_0, "axoid");
    r0 = pxsim_Array__push(s.tmp_0, "axone");
    r0 = pxsim_Array__push(s.tmp_0, "axons");
    r0 = pxsim_Array__push(s.tmp_0, "ayahs");
    r0 = pxsim_Array__push(s.tmp_0, "ayaya");
    r0 = pxsim_Array__push(s.tmp_0, "ayelp");
    r0 = pxsim_Array__push(s.tmp_0, "aygre");
    r0 = pxsim_Array__push(s.tmp_0, "ayins");
    r0 = pxsim_Array__push(s.tmp_0, "aymag");
    r0 = pxsim_Array__push(s.tmp_0, "ayont");
    r0 = pxsim_Array__push(s.tmp_0, "ayres");
    r0 = pxsim_Array__push(s.tmp_0, "ayrie");
    r0 = pxsim_Array__push(s.tmp_0, "azans");
    r0 = pxsim_Array__push(s.tmp_0, "azide");
    r0 = pxsim_Array__push(s.tmp_0, "azido");
    r0 = pxsim_Array__push(s.tmp_0, "azine");
    r0 = pxsim_Array__push(s.tmp_0, "azlon");
    r0 = pxsim_Array__push(s.tmp_0, "azoic");
    r0 = pxsim_Array__push(s.tmp_0, "azole");
    r0 = pxsim_Array__push(s.tmp_0, "azons");
    r0 = pxsim_Array__push(s.tmp_0, "azote");
    r0 = pxsim_Array__push(s.tmp_0, "azoth");
    r0 = pxsim_Array__push(s.tmp_0, "azuki");
    r0 = pxsim_Array__push(s.tmp_0, "azure");
    r0 = pxsim_Array__push(s.tmp_0, "azurn");
    r0 = pxsim_Array__push(s.tmp_0, "azury");
    r0 = pxsim_Array__push(s.tmp_0, "azygy");
    r0 = pxsim_Array__push(s.tmp_0, "azyme");
    r0 = pxsim_Array__push(s.tmp_0, "azyms");
    r0 = pxsim_Array__push(s.tmp_0, "baaed");
    r0 = pxsim_Array__push(s.tmp_0, "baals");
    r0 = pxsim_Array__push(s.tmp_0, "baaps");
    r0 = pxsim_Array__push(s.tmp_0, "babas");
    r0 = pxsim_Array__push(s.tmp_0, "babby");
    r0 = pxsim_Array__push(s.tmp_0, "babel");
    r0 = pxsim_Array__push(s.tmp_0, "babes");
    r0 = pxsim_Array__push(s.tmp_0, "babka");
    r0 = pxsim_Array__push(s.tmp_0, "baboo");
    r0 = pxsim_Array__push(s.tmp_0, "babul");
    r0 = pxsim_Array__push(s.tmp_0, "babus");
    r0 = pxsim_Array__push(s.tmp_0, "bacca");
    r0 = pxsim_Array__push(s.tmp_0, "bacco");
    r0 = pxsim_Array__push(s.tmp_0, "baccy");
    r0 = pxsim_Array__push(s.tmp_0, "bacha");
    r0 = pxsim_Array__push(s.tmp_0, "bachs");
    r0 = pxsim_Array__push(s.tmp_0, "backs");
    r0 = pxsim_Array__push(s.tmp_0, "backy");
    r0 = pxsim_Array__push(s.tmp_0, "bacne");
    r0 = pxsim_Array__push(s.tmp_0, "bacon");
    r0 = pxsim_Array__push(s.tmp_0, "badam");
    r0 = pxsim_Array__push(s.tmp_0, "baddy");
    r0 = pxsim_Array__push(s.tmp_0, "badge");
    r0 = pxsim_Array__push(s.tmp_0, "badly");
    r0 = pxsim_Array__push(s.tmp_0, "baels");
    r0 = pxsim_Array__push(s.tmp_0, "baffs");
    r0 = pxsim_Array__push(s.tmp_0, "baffy");
    r0 = pxsim_Array__push(s.tmp_0, "bafta");
    r0 = pxsim_Array__push(s.tmp_0, "bafts");
    r0 = pxsim_Array__push(s.tmp_0, "bagel");
    r0 = pxsim_Array__push(s.tmp_0, "baggy");
    r0 = pxsim_Array__push(s.tmp_0, "baghs");
    r0 = pxsim_Array__push(s.tmp_0, "bagie");
    r0 = pxsim_Array__push(s.tmp_0, "bagsy");
    r0 = pxsim_Array__push(s.tmp_0, "bagua");
    r0 = pxsim_Array__push(s.tmp_0, "bahts");
    r0 = pxsim_Array__push(s.tmp_0, "bahus");
    r0 = pxsim_Array__push(s.tmp_0, "bahut");
    r0 = pxsim_Array__push(s.tmp_0, "baiks");
    r0 = pxsim_Array__push(s.tmp_0, "baile");
    r0 = pxsim_Array__push(s.tmp_0, "bails");
    r0 = pxsim_Array__push(s.tmp_0, "bairn");
    r0 = pxsim_Array__push(s.tmp_0, "baisa");
    r0 = pxsim_Array__push(s.tmp_0, "baith");
    r0 = pxsim_Array__push(s.tmp_0, "baits");
    r0 = pxsim_Array__push(s.tmp_0, "baiza");
    r0 = pxsim_Array__push(s.tmp_0, "baize");
    r0 = pxsim_Array__push(s.tmp_0, "bajan");
    r0 = pxsim_Array__push(s.tmp_0, "bajra");
    r0 = pxsim_Array__push(s.tmp_0, "bajri");
    r0 = pxsim_Array__push(s.tmp_0, "bajus");
    r0 = pxsim_Array__push(s.tmp_0, "baked");
    r0 = pxsim_Array__push(s.tmp_0, "baken");
    r0 = pxsim_Array__push(s.tmp_0, "baker");
    r0 = pxsim_Array__push(s.tmp_0, "bakes");
    r0 = pxsim_Array__push(s.tmp_0, "bakra");
    r0 = pxsim_Array__push(s.tmp_0, "balas");
    r0 = pxsim_Array__push(s.tmp_0, "balds");
    r0 = pxsim_Array__push(s.tmp_0, "baldy");
    r0 = pxsim_Array__push(s.tmp_0, "baled");
    r0 = pxsim_Array__push(s.tmp_0, "baler");
    r0 = pxsim_Array__push(s.tmp_0, "bales");
    r0 = pxsim_Array__push(s.tmp_0, "balks");
    r0 = pxsim_Array__push(s.tmp_0, "balky");
    r0 = pxsim_Array__push(s.tmp_0, "ballo");
    r0 = pxsim_Array__push(s.tmp_0, "balls");
    r0 = pxsim_Array__push(s.tmp_0, "bally");
    r0 = pxsim_Array__push(s.tmp_0, "balms");
    r0 = pxsim_Array__push(s.tmp_0, "balmy");
    r0 = pxsim_Array__push(s.tmp_0, "baloi");
    r0 = pxsim_Array__push(s.tmp_0, "balon");
    r0 = pxsim_Array__push(s.tmp_0, "baloo");
    r0 = pxsim_Array__push(s.tmp_0, "balot");
    r0 = pxsim_Array__push(s.tmp_0, "balsa");
    r0 = pxsim_Array__push(s.tmp_0, "balti");
    r0 = pxsim_Array__push(s.tmp_0, "balun");
    r0 = pxsim_Array__push(s.tmp_0, "balus");
    r0 = pxsim_Array__push(s.tmp_0, "balut");
    r0 = pxsim_Array__push(s.tmp_0, "bamas");
    r0 = pxsim_Array__push(s.tmp_0, "bambi");
    r0 = pxsim_Array__push(s.tmp_0, "bamma");
    r0 = pxsim_Array__push(s.tmp_0, "bammy");
    r0 = pxsim_Array__push(s.tmp_0, "banak");
    r0 = pxsim_Array__push(s.tmp_0, "banal");
    r0 = pxsim_Array__push(s.tmp_0, "banco");
    r0 = pxsim_Array__push(s.tmp_0, "bancs");
    r0 = pxsim_Array__push(s.tmp_0, "banda");
    r0 = pxsim_Array__push(s.tmp_0, "bandh");
    r0 = pxsim_Array__push(s.tmp_0, "bands");
    r0 = pxsim_Array__push(s.tmp_0, "bandy");
    r0 = pxsim_Array__push(s.tmp_0, "baned");
    r0 = pxsim_Array__push(s.tmp_0, "banes");
    r0 = pxsim_Array__push(s.tmp_0, "bangs");
    r0 = pxsim_Array__push(s.tmp_0, "bania");
    r0 = pxsim_Array__push(s.tmp_0, "banjo");
    r0 = pxsim_Array__push(s.tmp_0, "banks");
    r0 = pxsim_Array__push(s.tmp_0, "banky");
    r0 = pxsim_Array__push(s.tmp_0, "banns");
    r0 = pxsim_Array__push(s.tmp_0, "bants");
    r0 = pxsim_Array__push(s.tmp_0, "bantu");
    r0 = pxsim_Array__push(s.tmp_0, "banty");
    r0 = pxsim_Array__push(s.tmp_0, "bantz");
    r0 = pxsim_Array__push(s.tmp_0, "banya");
    r0 = pxsim_Array__push(s.tmp_0, "baons");
    r0 = pxsim_Array__push(s.tmp_0, "baozi");
    r0 = pxsim_Array__push(s.tmp_0, "bappu");
    r0 = pxsim_Array__push(s.tmp_0, "bapus");
    r0 = pxsim_Array__push(s.tmp_0, "barbe");
    r0 = pxsim_Array__push(s.tmp_0, "barbs");
    r0 = pxsim_Array__push(s.tmp_0, "barby");
    r0 = pxsim_Array__push(s.tmp_0, "barca");
    r0 = pxsim_Array__push(s.tmp_0, "barde");
    r0 = pxsim_Array__push(s.tmp_0, "bardo");
    r0 = pxsim_Array__push(s.tmp_0, "bards");
    r0 = pxsim_Array__push(s.tmp_0, "bardy");
    r0 = pxsim_Array__push(s.tmp_0, "bared");
    r0 = pxsim_Array__push(s.tmp_0, "barer");
    r0 = pxsim_Array__push(s.tmp_0, "bares");
    r0 = pxsim_Array__push(s.tmp_0, "barfi");
    r0 = pxsim_Array__push(s.tmp_0, "barfs");
    r0 = pxsim_Array__push(s.tmp_0, "barfy");
    r0 = pxsim_Array__push(s.tmp_0, "barge");
    r0 = pxsim_Array__push(s.tmp_0, "baric");
    r0 = pxsim_Array__push(s.tmp_0, "barks");
    r0 = pxsim_Array__push(s.tmp_0, "barky");
    r0 = pxsim_Array__push(s.tmp_0, "barms");
    r0 = pxsim_Array__push(s.tmp_0, "barmy");
    r0 = pxsim_Array__push(s.tmp_0, "barns");
    r0 = pxsim_Array__push(s.tmp_0, "barny");
    r0 = pxsim_Array__push(s.tmp_0, "baron");
    r0 = pxsim_Array__push(s.tmp_0, "barps");
    r0 = pxsim_Array__push(s.tmp_0, "barra");
    r0 = pxsim_Array__push(s.tmp_0, "barre");
    r0 = pxsim_Array__push(s.tmp_0, "barro");
    r0 = pxsim_Array__push(s.tmp_0, "barry");
    r0 = pxsim_Array__push(s.tmp_0, "barye");
    r0 = pxsim_Array__push(s.tmp_0, "basal");
    r0 = pxsim_Array__push(s.tmp_0, "basan");
    r0 = pxsim_Array__push(s.tmp_0, "basas");
    r0 = pxsim_Array__push(s.tmp_0, "based");
    r0 = pxsim_Array__push(s.tmp_0, "basen");
    r0 = pxsim_Array__push(s.tmp_0, "baser");
    r0 = pxsim_Array__push(s.tmp_0, "bases");
    r0 = pxsim_Array__push(s.tmp_0, "basha");
    r0 = pxsim_Array__push(s.tmp_0, "basho");
    r0 = pxsim_Array__push(s.tmp_0, "basic");
    r0 = pxsim_Array__push(s.tmp_0, "basij");
    r0 = pxsim_Array__push(s.tmp_0, "basil");
    r0 = pxsim_Array__push(s.tmp_0, "basin");
    r0 = pxsim_Array__push(s.tmp_0, "basis");
    r0 = pxsim_Array__push(s.tmp_0, "basks");
    r0 = pxsim_Array__push(s.tmp_0, "bason");
    r0 = pxsim_Array__push(s.tmp_0, "basse");
    r0 = pxsim_Array__push(s.tmp_0, "bassi");
    r0 = pxsim_Array__push(s.tmp_0, "basso");
    r0 = pxsim_Array__push(s.tmp_0, "bassy");
    r0 = pxsim_Array__push(s.tmp_0, "basta");
    r0 = pxsim_Array__push(s.tmp_0, "baste");
    r0 = pxsim_Array__push(s.tmp_0, "basti");
    r0 = pxsim_Array__push(s.tmp_0, "basto");
    r0 = pxsim_Array__push(s.tmp_0, "basts");
    r0 = pxsim_Array__push(s.tmp_0, "batch");
    r0 = pxsim_Array__push(s.tmp_0, "bated");
    r0 = pxsim_Array__push(s.tmp_0, "bates");
    r0 = pxsim_Array__push(s.tmp_0, "bathe");
    r0 = pxsim_Array__push(s.tmp_0, "baths");
    r0 = pxsim_Array__push(s.tmp_0, "batik");
    r0 = pxsim_Array__push(s.tmp_0, "baton");
    r0 = pxsim_Array__push(s.tmp_0, "batos");
    r0 = pxsim_Array__push(s.tmp_0, "batta");
    r0 = pxsim_Array__push(s.tmp_0, "batts");
    r0 = pxsim_Array__push(s.tmp_0, "battu");
    r0 = pxsim_Array__push(s.tmp_0, "batty");
    r0 = pxsim_Array__push(s.tmp_0, "bauds");
    r0 = pxsim_Array__push(s.tmp_0, "bauks");
    r0 = pxsim_Array__push(s.tmp_0, "baulk");
    r0 = pxsim_Array__push(s.tmp_0, "baurs");
    r0 = pxsim_Array__push(s.tmp_0, "bavin");
    r0 = pxsim_Array__push(s.tmp_0, "bawds");
    r0 = pxsim_Array__push(s.tmp_0, "bawdy");
    r0 = pxsim_Array__push(s.tmp_0, "bawks");
    r0 = pxsim_Array__push(s.tmp_0, "bawls");
    r0 = pxsim_Array__push(s.tmp_0, "bawns");
    r0 = pxsim_Array__push(s.tmp_0, "bawrs");
    r0 = pxsim_Array__push(s.tmp_0, "bawty");
    r0 = pxsim_Array__push(s.tmp_0, "bayas");
    r0 = pxsim_Array__push(s.tmp_0, "bayed");
    r0 = pxsim_Array__push(s.tmp_0, "bayer");
    r0 = pxsim_Array__push(s.tmp_0, "bayes");
    r0 = pxsim_Array__push(s.tmp_0, "bayle");
    r0 = pxsim_Array__push(s.tmp_0, "bayou");
    r0 = pxsim_Array__push(s.tmp_0, "bayts");
    r0 = pxsim_Array__push(s.tmp_0, "bazar");
    r0 = pxsim_Array__push(s.tmp_0, "bazas");
    r0 = pxsim_Array__push(s.tmp_0, "bazoo");
    r0 = pxsim_Array__push(s.tmp_0, "bball");
    r0 = pxsim_Array__push(s.tmp_0, "bdays");
    r0 = pxsim_Array__push(s.tmp_0, "beach");
    r0 = pxsim_Array__push(s.tmp_0, "beads");
    r0 = pxsim_Array__push(s.tmp_0, "beady");
    r0 = pxsim_Array__push(s.tmp_0, "beaks");
    r0 = pxsim_Array__push(s.tmp_0, "beaky");
    r0 = pxsim_Array__push(s.tmp_0, "beals");
    r0 = pxsim_Array__push(s.tmp_0, "beams");
    r0 = pxsim_Array__push(s.tmp_0, "beamy");
    r0 = pxsim_Array__push(s.tmp_0, "beano");
    r0 = pxsim_Array__push(s.tmp_0, "beans");
    r0 = pxsim_Array__push(s.tmp_0, "beany");
    r0 = pxsim_Array__push(s.tmp_0, "beard");
    r0 = pxsim_Array__push(s.tmp_0, "beare");
    r0 = pxsim_Array__push(s.tmp_0, "bears");
    r0 = pxsim_Array__push(s.tmp_0, "beast");
    r0 = pxsim_Array__push(s.tmp_0, "beath");
    r0 = pxsim_Array__push(s.tmp_0, "beats");
    r0 = pxsim_Array__push(s.tmp_0, "beaty");
    r0 = pxsim_Array__push(s.tmp_0, "beaus");
    r0 = pxsim_Array__push(s.tmp_0, "beaut");
    r0 = pxsim_Array__push(s.tmp_0, "beaux");
    r0 = pxsim_Array__push(s.tmp_0, "bebop");
    r0 = pxsim_Array__push(s.tmp_0, "becap");
    r0 = pxsim_Array__push(s.tmp_0, "becke");
    r0 = pxsim_Array__push(s.tmp_0, "becks");
    r0 = pxsim_Array__push(s.tmp_0, "bedad");
    r0 = pxsim_Array__push(s.tmp_0, "bedel");
    r0 = pxsim_Array__push(s.tmp_0, "bedes");
    r0 = pxsim_Array__push(s.tmp_0, "bedew");
    r0 = pxsim_Array__push(s.tmp_0, "bedim");
    r0 = pxsim_Array__push(s.tmp_0, "bedye");
    r0 = pxsim_Array__push(s.tmp_0, "beech");
    r0 = pxsim_Array__push(s.tmp_0, "beedi");
    r0 = pxsim_Array__push(s.tmp_0, "beefs");
    r0 = pxsim_Array__push(s.tmp_0, "beefy");
    r0 = pxsim_Array__push(s.tmp_0, "beeps");
    r0 = pxsim_Array__push(s.tmp_0, "beers");
    r0 = pxsim_Array__push(s.tmp_0, "beery");
    r0 = pxsim_Array__push(s.tmp_0, "beets");
    r0 = pxsim_Array__push(s.tmp_0, "befit");
    r0 = pxsim_Array__push(s.tmp_0, "befog");
    r0 = pxsim_Array__push(s.tmp_0, "begad");
    r0 = pxsim_Array__push(s.tmp_0, "began");
    r0 = pxsim_Array__push(s.tmp_0, "begar");
    r0 = pxsim_Array__push(s.tmp_0, "begat");
    r0 = pxsim_Array__push(s.tmp_0, "begem");
    r0 = pxsim_Array__push(s.tmp_0, "beget");
    r0 = pxsim_Array__push(s.tmp_0, "begin");
    r0 = pxsim_Array__push(s.tmp_0, "begob");
    r0 = pxsim_Array__push(s.tmp_0, "begot");
    r0 = pxsim_Array__push(s.tmp_0, "begum");
    r0 = pxsim_Array__push(s.tmp_0, "begun");
    r0 = pxsim_Array__push(s.tmp_0, "beige");
    r0 = pxsim_Array__push(s.tmp_0, "beigy");
    r0 = pxsim_Array__push(s.tmp_0, "being");
    r0 = pxsim_Array__push(s.tmp_0, "beins");
    r0 = pxsim_Array__push(s.tmp_0, "beira");
    r0 = pxsim_Array__push(s.tmp_0, "beisa");
    r0 = pxsim_Array__push(s.tmp_0, "bekah");
    r0 = pxsim_Array__push(s.tmp_0, "belah");
    r0 = pxsim_Array__push(s.tmp_0, "belar");
    r0 = pxsim_Array__push(s.tmp_0, "belay");
    r0 = pxsim_Array__push(s.tmp_0, "belch");
    r0 = pxsim_Array__push(s.tmp_0, "belee");
    r0 = pxsim_Array__push(s.tmp_0, "belga");
    r0 = pxsim_Array__push(s.tmp_0, "belie");
    r0 = pxsim_Array__push(s.tmp_0, "belit");
    r0 = pxsim_Array__push(s.tmp_0, "belle");
    r0 = pxsim_Array__push(s.tmp_0, "belli");
    r0 = pxsim_Array__push(s.tmp_0, "bello");
    r0 = pxsim_Array__push(s.tmp_0, "bells");
    r0 = pxsim_Array__push(s.tmp_0, "belly");
    r0 = pxsim_Array__push(s.tmp_0, "belon");
    r0 = pxsim_Array__push(s.tmp_0, "below");
    r0 = pxsim_Array__push(s.tmp_0, "belts");
    r0 = pxsim_Array__push(s.tmp_0, "belve");
    r0 = pxsim_Array__push(s.tmp_0, "bemad");
    r0 = pxsim_Array__push(s.tmp_0, "bemas");
    r0 = pxsim_Array__push(s.tmp_0, "bemix");
    r0 = pxsim_Array__push(s.tmp_0, "bemud");
    r0 = pxsim_Array__push(s.tmp_0, "bench");
    r0 = pxsim_Array__push(s.tmp_0, "bends");
    r0 = pxsim_Array__push(s.tmp_0, "bendy");
    r0 = pxsim_Array__push(s.tmp_0, "benes");
    r0 = pxsim_Array__push(s.tmp_0, "benet");
    r0 = pxsim_Array__push(s.tmp_0, "benga");
    r0 = pxsim_Array__push(s.tmp_0, "benis");
    r0 = pxsim_Array__push(s.tmp_0, "benji");
    r0 = pxsim_Array__push(s.tmp_0, "benne");
    r0 = pxsim_Array__push(s.tmp_0, "benni");
    r0 = pxsim_Array__push(s.tmp_0, "benny");
    r0 = pxsim_Array__push(s.tmp_0, "bento");
    r0 = pxsim_Array__push(s.tmp_0, "bents");
    r0 = pxsim_Array__push(s.tmp_0, "benty");
    r0 = pxsim_Array__push(s.tmp_0, "bepat");
    r0 = pxsim_Array__push(s.tmp_0, "beray");
    r0 = pxsim_Array__push(s.tmp_0, "beres");
    r0 = pxsim_Array__push(s.tmp_0, "beret");
    r0 = pxsim_Array__push(s.tmp_0, "bergs");
    r0 = pxsim_Array__push(s.tmp_0, "berko");
    r0 = pxsim_Array__push(s.tmp_0, "berks");
    r0 = pxsim_Array__push(s.tmp_0, "berme");
    r0 = pxsim_Array__push(s.tmp_0, "berms");
    r0 = pxsim_Array__push(s.tmp_0, "berob");
    r0 = pxsim_Array__push(s.tmp_0, "berry");
    r0 = pxsim_Array__push(s.tmp_0, "berth");
    r0 = pxsim_Array__push(s.tmp_0, "beryl");
    r0 = pxsim_Array__push(s.tmp_0, "besat");
    r0 = pxsim_Array__push(s.tmp_0, "besaw");
    r0 = pxsim_Array__push(s.tmp_0, "besee");
    r0 = pxsim_Array__push(s.tmp_0, "beses");
    r0 = pxsim_Array__push(s.tmp_0, "beset");
    r0 = pxsim_Array__push(s.tmp_0, "besit");
    r0 = pxsim_Array__push(s.tmp_0, "besom");
    r0 = pxsim_Array__push(s.tmp_0, "besot");
    r0 = pxsim_Array__push(s.tmp_0, "besti");
    r0 = pxsim_Array__push(s.tmp_0, "bests");
    r0 = pxsim_Array__push(s.tmp_0, "betas");
    r0 = pxsim_Array__push(s.tmp_0, "beted");
    r0 = pxsim_Array__push(s.tmp_0, "betel");
    r0 = pxsim_Array__push(s.tmp_0, "betes");
    r0 = pxsim_Array__push(s.tmp_0, "beths");
    r0 = pxsim_Array__push(s.tmp_0, "betid");
    r0 = pxsim_Array__push(s.tmp_0, "beton");
    r0 = pxsim_Array__push(s.tmp_0, "betta");
    r0 = pxsim_Array__push(s.tmp_0, "betty");
    r0 = pxsim_Array__push(s.tmp_0, "bevan");
    r0 = pxsim_Array__push(s.tmp_0, "bevel");
    r0 = pxsim_Array__push(s.tmp_0, "bever");
    r0 = pxsim_Array__push(s.tmp_0, "bevor");
    r0 = pxsim_Array__push(s.tmp_0, "bevue");
    r0 = pxsim_Array__push(s.tmp_0, "bevvy");
    r0 = pxsim_Array__push(s.tmp_0, "bewdy");
    r0 = pxsim_Array__push(s.tmp_0, "bewet");
    r0 = pxsim_Array__push(s.tmp_0, "bewig");
    r0 = pxsim_Array__push(s.tmp_0, "bezel");
    r0 = pxsim_Array__push(s.tmp_0, "bezes");
    r0 = pxsim_Array__push(s.tmp_0, "bezil");
    r0 = pxsim_Array__push(s.tmp_0, "bezzy");
    r0 = pxsim_Array__push(s.tmp_0, "bhais");
    r0 = pxsim_Array__push(s.tmp_0, "bhaji");
    r0 = pxsim_Array__push(s.tmp_0, "bhang");
    r0 = pxsim_Array__push(s.tmp_0, "bhats");
    r0 = pxsim_Array__push(s.tmp_0, "bhava");
    r0 = pxsim_Array__push(s.tmp_0, "bhels");
    r0 = pxsim_Array__push(s.tmp_0, "bhoot");
    r0 = pxsim_Array__push(s.tmp_0, "bhuna");
    r0 = pxsim_Array__push(s.tmp_0, "bhuts");
    r0 = pxsim_Array__push(s.tmp_0, "biach");
    r0 = pxsim_Array__push(s.tmp_0, "biali");
    r0 = pxsim_Array__push(s.tmp_0, "bialy");
    r0 = pxsim_Array__push(s.tmp_0, "bibbs");
    r0 = pxsim_Array__push(s.tmp_0, "bibes");
    r0 = pxsim_Array__push(s.tmp_0, "bibis");
    r0 = pxsim_Array__push(s.tmp_0, "bible");
    r0 = pxsim_Array__push(s.tmp_0, "biccy");
    r0 = pxsim_Array__push(s.tmp_0, "bicep");
    r0 = pxsim_Array__push(s.tmp_0, "bices");
    r0 = pxsim_Array__push(s.tmp_0, "bicky");
    r0 = pxsim_Array__push(s.tmp_0, "biddy");
    r0 = pxsim_Array__push(s.tmp_0, "bided");
    r0 = pxsim_Array__push(s.tmp_0, "bider");
    r0 = pxsim_Array__push(s.tmp_0, "bides");
    r0 = pxsim_Array__push(s.tmp_0, "bidet");
    r0 = pxsim_Array__push(s.tmp_0, "bidis");
    r0 = pxsim_Array__push(s.tmp_0, "bidon");
    r0 = pxsim_Array__push(s.tmp_0, "bidri");
    r0 = pxsim_Array__push(s.tmp_0, "bield");
    r0 = pxsim_Array__push(s.tmp_0, "biers");
    r0 = pxsim_Array__push(s.tmp_0, "biffo");
    r0 = pxsim_Array__push(s.tmp_0, "biffs");
    r0 = pxsim_Array__push(s.tmp_0, "biffy");
    r0 = pxsim_Array__push(s.tmp_0, "bifid");
    r0 = pxsim_Array__push(s.tmp_0, "bigae");
    r0 = pxsim_Array__push(s.tmp_0, "biggs");
    r0 = pxsim_Array__push(s.tmp_0, "biggy");
    r0 = pxsim_Array__push(s.tmp_0, "bigha");
    r0 = pxsim_Array__push(s.tmp_0, "bight");
    r0 = pxsim_Array__push(s.tmp_0, "bigly");
    r0 = pxsim_Array__push(s.tmp_0, "bigos");
    r0 = pxsim_Array__push(s.tmp_0, "bigot");
    r0 = pxsim_Array__push(s.tmp_0, "bihon");
    r0 = pxsim_Array__push(s.tmp_0, "bijou");
    r0 = pxsim_Array__push(s.tmp_0, "biked");
    r0 = pxsim_Array__push(s.tmp_0, "biker");
    r0 = pxsim_Array__push(s.tmp_0, "bikes");
    r0 = pxsim_Array__push(s.tmp_0, "bikie");
    r0 = pxsim_Array__push(s.tmp_0, "bikky");
    r0 = pxsim_Array__push(s.tmp_0, "bilal");
    r0 = pxsim_Array__push(s.tmp_0, "bilat");
    r0 = pxsim_Array__push(s.tmp_0, "bilbo");
    r0 = pxsim_Array__push(s.tmp_0, "bilby");
    r0 = pxsim_Array__push(s.tmp_0, "biled");
    r0 = pxsim_Array__push(s.tmp_0, "biles");
    r0 = pxsim_Array__push(s.tmp_0, "bilge");
    r0 = pxsim_Array__push(s.tmp_0, "bilgy");
    r0 = pxsim_Array__push(s.tmp_0, "bilks");
    r0 = pxsim_Array__push(s.tmp_0, "bills");
    r0 = pxsim_Array__push(s.tmp_0, "billy");
    r0 = pxsim_Array__push(s.tmp_0, "bimah");
    r0 = pxsim_Array__push(s.tmp_0, "bimas");
    r0 = pxsim_Array__push(s.tmp_0, "bimbo");
    r0 = pxsim_Array__push(s.tmp_0, "binal");
    r0 = pxsim_Array__push(s.tmp_0, "bindi");
    r0 = pxsim_Array__push(s.tmp_0, "binds");
    r0 = pxsim_Array__push(s.tmp_0, "biner");
    r0 = pxsim_Array__push(s.tmp_0, "bines");
    r0 = pxsim_Array__push(s.tmp_0, "binge");
    r0 = pxsim_Array__push(s.tmp_0, "bingo");
    r0 = pxsim_Array__push(s.tmp_0, "bings");
    r0 = pxsim_Array__push(s.tmp_0, "bingy");
    r0 = pxsim_Array__push(s.tmp_0, "binit");
    r0 = pxsim_Array__push(s.tmp_0, "binks");
    r0 = pxsim_Array__push(s.tmp_0, "binky");
    r0 = pxsim_Array__push(s.tmp_0, "bints");
    r0 = pxsim_Array__push(s.tmp_0, "biogs");
    r0 = pxsim_Array__push(s.tmp_0, "biome");
    r0 = pxsim_Array__push(s.tmp_0, "bions");
    r0 = pxsim_Array__push(s.tmp_0, "biont");
    r0 = pxsim_Array__push(s.tmp_0, "biose");
    r0 = pxsim_Array__push(s.tmp_0, "biota");
    r0 = pxsim_Array__push(s.tmp_0, "biped");
    r0 = pxsim_Array__push(s.tmp_0, "bipod");
    r0 = pxsim_Array__push(s.tmp_0, "bippy");
    r0 = pxsim_Array__push(s.tmp_0, "birch");
    r0 = pxsim_Array__push(s.tmp_0, "birdo");
    r0 = pxsim_Array__push(s.tmp_0, "birds");
    r0 = pxsim_Array__push(s.tmp_0, "biris");
    r0 = pxsim_Array__push(s.tmp_0, "birks");
    r0 = pxsim_Array__push(s.tmp_0, "birle");
    r0 = pxsim_Array__push(s.tmp_0, "birls");
    r0 = pxsim_Array__push(s.tmp_0, "biros");
    r0 = pxsim_Array__push(s.tmp_0, "birrs");
    r0 = pxsim_Array__push(s.tmp_0, "birse");
    r0 = pxsim_Array__push(s.tmp_0, "birsy");
    r0 = pxsim_Array__push(s.tmp_0, "birth");
    r0 = pxsim_Array__push(s.tmp_0, "birze");
    r0 = pxsim_Array__push(s.tmp_0, "birzz");
    r0 = pxsim_Array__push(s.tmp_0, "bises");
    r0 = pxsim_Array__push(s.tmp_0, "bisks");
    r0 = pxsim_Array__push(s.tmp_0, "bisom");
    r0 = pxsim_Array__push(s.tmp_0, "bison");
    r0 = pxsim_Array__push(s.tmp_0, "bitch");
    r0 = pxsim_Array__push(s.tmp_0, "biter");
    r0 = pxsim_Array__push(s.tmp_0, "bites");
    r0 = pxsim_Array__push(s.tmp_0, "bitey");
    r0 = pxsim_Array__push(s.tmp_0, "bitos");
    r0 = pxsim_Array__push(s.tmp_0, "bitou");
    r0 = pxsim_Array__push(s.tmp_0, "bitsy");
    r0 = pxsim_Array__push(s.tmp_0, "bitte");
    r0 = pxsim_Array__push(s.tmp_0, "bitts");
    r0 = pxsim_Array__push(s.tmp_0, "bitty");
    r0 = pxsim_Array__push(s.tmp_0, "bivia");
    r0 = pxsim_Array__push(s.tmp_0, "bivvy");
    r0 = pxsim_Array__push(s.tmp_0, "bizes");
    r0 = pxsim_Array__push(s.tmp_0, "bizzo");
    r0 = pxsim_Array__push(s.tmp_0, "bizzy");
    r0 = pxsim_Array__push(s.tmp_0, "blabs");
    r0 = pxsim_Array__push(s.tmp_0, "black");
    r0 = pxsim_Array__push(s.tmp_0, "blade");
    r0 = pxsim_Array__push(s.tmp_0, "blads");
    r0 = pxsim_Array__push(s.tmp_0, "blady");
    r0 = pxsim_Array__push(s.tmp_0, "blaer");
    r0 = pxsim_Array__push(s.tmp_0, "blaes");
    r0 = pxsim_Array__push(s.tmp_0, "blaff");
    r0 = pxsim_Array__push(s.tmp_0, "blags");
    r0 = pxsim_Array__push(s.tmp_0, "blahs");
    r0 = pxsim_Array__push(s.tmp_0, "blain");
    r0 = pxsim_Array__push(s.tmp_0, "blame");
    r0 = pxsim_Array__push(s.tmp_0, "blams");
    r0 = pxsim_Array__push(s.tmp_0, "blanc");
    r0 = pxsim_Array__push(s.tmp_0, "bland");
    r0 = pxsim_Array__push(s.tmp_0, "blank");
    r0 = pxsim_Array__push(s.tmp_0, "blare");
    r0 = pxsim_Array__push(s.tmp_0, "blart");
    r0 = pxsim_Array__push(s.tmp_0, "blase");
    r0 = pxsim_Array__push(s.tmp_0, "blash");
    r0 = pxsim_Array__push(s.tmp_0, "blast");
    r0 = pxsim_Array__push(s.tmp_0, "blate");
    r0 = pxsim_Array__push(s.tmp_0, "blats");
    r0 = pxsim_Array__push(s.tmp_0, "blatt");
    r0 = pxsim_Array__push(s.tmp_0, "blaud");
    r0 = pxsim_Array__push(s.tmp_0, "blawn");
    r0 = pxsim_Array__push(s.tmp_0, "blaws");
    r0 = pxsim_Array__push(s.tmp_0, "blays");
    r0 = pxsim_Array__push(s.tmp_0, "blaze");
    r0 = pxsim_Array__push(s.tmp_0, "bleah");
    r0 = pxsim_Array__push(s.tmp_0, "bleak");
    r0 = pxsim_Array__push(s.tmp_0, "blear");
    r0 = pxsim_Array__push(s.tmp_0, "bleat");
    r0 = pxsim_Array__push(s.tmp_0, "blebs");
    r0 = pxsim_Array__push(s.tmp_0, "blech");
    r0 = pxsim_Array__push(s.tmp_0, "bleed");
    r0 = pxsim_Array__push(s.tmp_0, "bleep");
    r0 = pxsim_Array__push(s.tmp_0, "blees");
    r0 = pxsim_Array__push(s.tmp_0, "blend");
    r0 = pxsim_Array__push(s.tmp_0, "blent");
    r0 = pxsim_Array__push(s.tmp_0, "blert");
    r0 = pxsim_Array__push(s.tmp_0, "bless");
    r0 = pxsim_Array__push(s.tmp_0, "blest");
    r0 = pxsim_Array__push(s.tmp_0, "blets");
    r0 = pxsim_Array__push(s.tmp_0, "bleys");
    r0 = pxsim_Array__push(s.tmp_0, "blimp");
    r0 = pxsim_Array__push(s.tmp_0, "blimy");
    r0 = pxsim_Array__push(s.tmp_0, "blind");
    r0 = pxsim_Array__push(s.tmp_0, "bling");
    r0 = pxsim_Array__push(s.tmp_0, "blini");
    r0 = pxsim_Array__push(s.tmp_0, "blink");
    r0 = pxsim_Array__push(s.tmp_0, "blins");
    r0 = pxsim_Array__push(s.tmp_0, "bliny");
    r0 = pxsim_Array__push(s.tmp_0, "blips");
    r0 = pxsim_Array__push(s.tmp_0, "bliss");
    r0 = pxsim_Array__push(s.tmp_0, "blist");
    r0 = pxsim_Array__push(s.tmp_0, "blite");
    r0 = pxsim_Array__push(s.tmp_0, "blits");
    r0 = pxsim_Array__push(s.tmp_0, "blitz");
    r0 = pxsim_Array__push(s.tmp_0, "blive");
    r0 = pxsim_Array__push(s.tmp_0, "bloat");
    r0 = pxsim_Array__push(s.tmp_0, "blobs");
    r0 = pxsim_Array__push(s.tmp_0, "block");
    r0 = pxsim_Array__push(s.tmp_0, "blocs");
    r0 = pxsim_Array__push(s.tmp_0, "blogs");
    r0 = pxsim_Array__push(s.tmp_0, "bloke");
    r0 = pxsim_Array__push(s.tmp_0, "blond");
    r0 = pxsim_Array__push(s.tmp_0, "blonx");
    r0 = pxsim_Array__push(s.tmp_0, "blood");
    r0 = pxsim_Array__push(s.tmp_0, "blook");
    r0 = pxsim_Array__push(s.tmp_0, "bloom");
    r0 = pxsim_Array__push(s.tmp_0, "bloop");
    r0 = pxsim_Array__push(s.tmp_0, "blore");
    r0 = pxsim_Array__push(s.tmp_0, "blots");
    r0 = pxsim_Array__push(s.tmp_0, "blown");
    r0 = pxsim_Array__push(s.tmp_0, "blows");
    r0 = pxsim_Array__push(s.tmp_0, "blowy");
    r0 = pxsim_Array__push(s.tmp_0, "blubs");
    r0 = pxsim_Array__push(s.tmp_0, "blude");
    r0 = pxsim_Array__push(s.tmp_0, "bluds");
    r0 = pxsim_Array__push(s.tmp_0, "bludy");
    r0 = pxsim_Array__push(s.tmp_0, "blued");
    r0 = pxsim_Array__push(s.tmp_0, "bluer");
    r0 = pxsim_Array__push(s.tmp_0, "blues");
    r0 = pxsim_Array__push(s.tmp_0, "bluet");
    r0 = pxsim_Array__push(s.tmp_0, "bluey");
    r0 = pxsim_Array__push(s.tmp_0, "bluff");
    r0 = pxsim_Array__push(s.tmp_0, "bluid");
    r0 = pxsim_Array__push(s.tmp_0, "blume");
    r0 = pxsim_Array__push(s.tmp_0, "blunk");
    r0 = pxsim_Array__push(s.tmp_0, "blunt");
    r0 = pxsim_Array__push(s.tmp_0, "blurb");
    r0 = pxsim_Array__push(s.tmp_0, "blurs");
    r0 = pxsim_Array__push(s.tmp_0, "blurt");
    r0 = pxsim_Array__push(s.tmp_0, "blush");
    r0 = pxsim_Array__push(s.tmp_0, "blype");
    r0 = pxsim_Array__push(s.tmp_0, "boabs");
    r0 = pxsim_Array__push(s.tmp_0, "boaks");
    r0 = pxsim_Array__push(s.tmp_0, "board");
    r0 = pxsim_Array__push(s.tmp_0, "boars");
    r0 = pxsim_Array__push(s.tmp_0, "boart");
    r0 = pxsim_Array__push(s.tmp_0, "boast");
    r0 = pxsim_Array__push(s.tmp_0, "boats");
    r0 = pxsim_Array__push(s.tmp_0, "boaty");
    r0 = pxsim_Array__push(s.tmp_0, "bobac");
    r0 = pxsim_Array__push(s.tmp_0, "bobak");
    r0 = pxsim_Array__push(s.tmp_0, "bobas");
    r0 = pxsim_Array__push(s.tmp_0, "bobby");
    r0 = pxsim_Array__push(s.tmp_0, "bobol");
    r0 = pxsim_Array__push(s.tmp_0, "bobos");
    r0 = pxsim_Array__push(s.tmp_0, "bocca");
    r0 = pxsim_Array__push(s.tmp_0, "bocce");
    r0 = pxsim_Array__push(s.tmp_0, "bocci");
    r0 = pxsim_Array__push(s.tmp_0, "boche");
    r0 = pxsim_Array__push(s.tmp_0, "bocks");
    r0 = pxsim_Array__push(s.tmp_0, "boded");
    r0 = pxsim_Array__push(s.tmp_0, "bodes");
    r0 = pxsim_Array__push(s.tmp_0, "bodge");
    r0 = pxsim_Array__push(s.tmp_0, "bodgy");
    r0 = pxsim_Array__push(s.tmp_0, "bodhi");
    r0 = pxsim_Array__push(s.tmp_0, "bodle");
    r0 = pxsim_Array__push(s.tmp_0, "bodoh");
    r0 = pxsim_Array__push(s.tmp_0, "boeps");
    r0 = pxsim_Array__push(s.tmp_0, "boers");
    r0 = pxsim_Array__push(s.tmp_0, "boeti");
    r0 = pxsim_Array__push(s.tmp_0, "boets");
    r0 = pxsim_Array__push(s.tmp_0, "boeuf");
    r0 = pxsim_Array__push(s.tmp_0, "boffo");
    r0 = pxsim_Array__push(s.tmp_0, "boffs");
    r0 = pxsim_Array__push(s.tmp_0, "bogan");
    r0 = pxsim_Array__push(s.tmp_0, "bogey");
    r0 = pxsim_Array__push(s.tmp_0, "boggy");
    r0 = pxsim_Array__push(s.tmp_0, "bogie");
    r0 = pxsim_Array__push(s.tmp_0, "bogle");
    r0 = pxsim_Array__push(s.tmp_0, "bogue");
    r0 = pxsim_Array__push(s.tmp_0, "bogus");
    r0 = pxsim_Array__push(s.tmp_0, "bohea");
    r0 = pxsim_Array__push(s.tmp_0, "bohos");
    r0 = pxsim_Array__push(s.tmp_0, "boils");
    r0 = pxsim_Array__push(s.tmp_0, "boing");
    r0 = pxsim_Array__push(s.tmp_0, "boink");
    r0 = pxsim_Array__push(s.tmp_0, "boite");
    r0 = pxsim_Array__push(s.tmp_0, "boked");
    r0 = pxsim_Array__push(s.tmp_0, "bokeh");
    r0 = pxsim_Array__push(s.tmp_0, "bokes");
    r0 = pxsim_Array__push(s.tmp_0, "bokos");
    r0 = pxsim_Array__push(s.tmp_0, "bolar");
    r0 = pxsim_Array__push(s.tmp_0, "bolas");
    r0 = pxsim_Array__push(s.tmp_0, "boldo");
    r0 = pxsim_Array__push(s.tmp_0, "bolds");
    r0 = pxsim_Array__push(s.tmp_0, "boles");
    r0 = pxsim_Array__push(s.tmp_0, "bolet");
    r0 = pxsim_Array__push(s.tmp_0, "bolix");
    r0 = pxsim_Array__push(s.tmp_0, "bolks");
    r0 = pxsim_Array__push(s.tmp_0, "bolls");
    r0 = pxsim_Array__push(s.tmp_0, "bolos");
    r0 = pxsim_Array__push(s.tmp_0, "bolts");
    r0 = pxsim_Array__push(s.tmp_0, "bolus");
    r0 = pxsim_Array__push(s.tmp_0, "bomas");
    r0 = pxsim_Array__push(s.tmp_0, "bombe");
    r0 = pxsim_Array__push(s.tmp_0, "bombo");
    r0 = pxsim_Array__push(s.tmp_0, "bombs");
    r0 = pxsim_Array__push(s.tmp_0, "bomoh");
    r0 = pxsim_Array__push(s.tmp_0, "bomor");
    r0 = pxsim_Array__push(s.tmp_0, "bonce");
    r0 = pxsim_Array__push(s.tmp_0, "bonds");
    r0 = pxsim_Array__push(s.tmp_0, "boned");
    r0 = pxsim_Array__push(s.tmp_0, "boner");
    r0 = pxsim_Array__push(s.tmp_0, "bones");
    r0 = pxsim_Array__push(s.tmp_0, "boney");
    r0 = pxsim_Array__push(s.tmp_0, "bongo");
    r0 = pxsim_Array__push(s.tmp_0, "bongs");
    r0 = pxsim_Array__push(s.tmp_0, "bonie");
    r0 = pxsim_Array__push(s.tmp_0, "bonks");
    r0 = pxsim_Array__push(s.tmp_0, "bonne");
    r0 = pxsim_Array__push(s.tmp_0, "bonny");
    r0 = pxsim_Array__push(s.tmp_0, "bonum");
    r0 = pxsim_Array__push(s.tmp_0, "bonus");
    r0 = pxsim_Array__push(s.tmp_0, "bonza");
    r0 = pxsim_Array__push(s.tmp_0, "bonze");
    r0 = pxsim_Array__push(s.tmp_0, "booai");
    r0 = pxsim_Array__push(s.tmp_0, "booay");
    r0 = pxsim_Array__push(s.tmp_0, "boobs");
    r0 = pxsim_Array__push(s.tmp_0, "booby");
    r0 = pxsim_Array__push(s.tmp_0, "boody");
    r0 = pxsim_Array__push(s.tmp_0, "booed");
    r0 = pxsim_Array__push(s.tmp_0, "boofy");
    r0 = pxsim_Array__push(s.tmp_0, "boogy");
    r0 = pxsim_Array__push(s.tmp_0, "boohs");
    r0 = pxsim_Array__push(s.tmp_0, "books");
    r0 = pxsim_Array__push(s.tmp_0, "booky");
    r0 = pxsim_Array__push(s.tmp_0, "bools");
    r0 = pxsim_Array__push(s.tmp_0, "booms");
    r0 = pxsim_Array__push(s.tmp_0, "boomy");
    r0 = pxsim_Array__push(s.tmp_0, "boong");
    r0 = pxsim_Array__push(s.tmp_0, "boons");
    r0 = pxsim_Array__push(s.tmp_0, "boord");
    r0 = pxsim_Array__push(s.tmp_0, "boors");
    r0 = pxsim_Array__push(s.tmp_0, "boose");
    r0 = pxsim_Array__push(s.tmp_0, "boost");
    r0 = pxsim_Array__push(s.tmp_0, "booth");
    r0 = pxsim_Array__push(s.tmp_0, "boots");
    r0 = pxsim_Array__push(s.tmp_0, "booty");
    r0 = pxsim_Array__push(s.tmp_0, "booze");
    r0 = pxsim_Array__push(s.tmp_0, "boozy");
    r0 = pxsim_Array__push(s.tmp_0, "boppy");
    r0 = pxsim_Array__push(s.tmp_0, "borak");
    r0 = pxsim_Array__push(s.tmp_0, "boral");
    r0 = pxsim_Array__push(s.tmp_0, "boras");
    r0 = pxsim_Array__push(s.tmp_0, "borax");
    r0 = pxsim_Array__push(s.tmp_0, "borde");
    r0 = pxsim_Array__push(s.tmp_0, "bords");
    r0 = pxsim_Array__push(s.tmp_0, "bored");
    r0 = pxsim_Array__push(s.tmp_0, "boree");
    r0 = pxsim_Array__push(s.tmp_0, "borek");
    r0 = pxsim_Array__push(s.tmp_0, "borel");
    r0 = pxsim_Array__push(s.tmp_0, "borer");
    r0 = pxsim_Array__push(s.tmp_0, "bores");
    r0 = pxsim_Array__push(s.tmp_0, "borgo");
    r0 = pxsim_Array__push(s.tmp_0, "boric");
    r0 = pxsim_Array__push(s.tmp_0, "borks");
    r0 = pxsim_Array__push(s.tmp_0, "borms");
    r0 = pxsim_Array__push(s.tmp_0, "borna");
    r0 = pxsim_Array__push(s.tmp_0, "borne");
    r0 = pxsim_Array__push(s.tmp_0, "boron");
    r0 = pxsim_Array__push(s.tmp_0, "borts");
    r0 = pxsim_Array__push(s.tmp_0, "borty");
    r0 = pxsim_Array__push(s.tmp_0, "bortz");
    r0 = pxsim_Array__push(s.tmp_0, "bosey");
    r0 = pxsim_Array__push(s.tmp_0, "bosie");
    r0 = pxsim_Array__push(s.tmp_0, "bosks");
    r0 = pxsim_Array__push(s.tmp_0, "bosky");
    r0 = pxsim_Array__push(s.tmp_0, "bosom");
    r0 = pxsim_Array__push(s.tmp_0, "boson");
    r0 = pxsim_Array__push(s.tmp_0, "bossa");
    r0 = pxsim_Array__push(s.tmp_0, "bossy");
    r0 = pxsim_Array__push(s.tmp_0, "bosun");
    r0 = pxsim_Array__push(s.tmp_0, "botas");
    r0 = pxsim_Array__push(s.tmp_0, "botch");
    r0 = pxsim_Array__push(s.tmp_0, "boteh");
    r0 = pxsim_Array__push(s.tmp_0, "botel");
    r0 = pxsim_Array__push(s.tmp_0, "botes");
    r0 = pxsim_Array__push(s.tmp_0, "botew");
    r0 = pxsim_Array__push(s.tmp_0, "bothy");
    r0 = pxsim_Array__push(s.tmp_0, "botos");
    r0 = pxsim_Array__push(s.tmp_0, "botte");
    r0 = pxsim_Array__push(s.tmp_0, "botts");
    r0 = pxsim_Array__push(s.tmp_0, "botty");
    r0 = pxsim_Array__push(s.tmp_0, "bouge");
    r0 = pxsim_Array__push(s.tmp_0, "bough");
    r0 = pxsim_Array__push(s.tmp_0, "bouks");
    r0 = pxsim_Array__push(s.tmp_0, "boule");
    r0 = pxsim_Array__push(s.tmp_0, "boult");
    r0 = pxsim_Array__push(s.tmp_0, "bound");
    r0 = pxsim_Array__push(s.tmp_0, "bouns");
    r0 = pxsim_Array__push(s.tmp_0, "bourd");
    r0 = pxsim_Array__push(s.tmp_0, "bourg");
    r0 = pxsim_Array__push(s.tmp_0, "bourn");
    r0 = pxsim_Array__push(s.tmp_0, "bouse");
    r0 = pxsim_Array__push(s.tmp_0, "bousy");
    r0 = pxsim_Array__push(s.tmp_0, "bouts");
    r0 = pxsim_Array__push(s.tmp_0, "boutu");
    r0 = pxsim_Array__push(s.tmp_0, "bovid");
    r0 = pxsim_Array__push(s.tmp_0, "bowat");
    r0 = pxsim_Array__push(s.tmp_0, "bowed");
    r0 = pxsim_Array__push(s.tmp_0, "bowel");
    r0 = pxsim_Array__push(s.tmp_0, "bower");
    r0 = pxsim_Array__push(s.tmp_0, "bowes");
    r0 = pxsim_Array__push(s.tmp_0, "bowet");
    r0 = pxsim_Array__push(s.tmp_0, "bowie");
    r0 = pxsim_Array__push(s.tmp_0, "bowls");
    r0 = pxsim_Array__push(s.tmp_0, "bowne");
    r0 = pxsim_Array__push(s.tmp_0, "bowrs");
    r0 = pxsim_Array__push(s.tmp_0, "bowse");
    r0 = pxsim_Array__push(s.tmp_0, "boxed");
    r0 = pxsim_Array__push(s.tmp_0, "boxen");
    r0 = pxsim_Array__push(s.tmp_0, "boxer");
    r0 = pxsim_Array__push(s.tmp_0, "boxes");
    r0 = pxsim_Array__push(s.tmp_0, "boxla");
    r0 = pxsim_Array__push(s.tmp_0, "boxty");
    r0 = pxsim_Array__push(s.tmp_0, "boyar");
    r0 = pxsim_Array__push(s.tmp_0, "boyau");
    r0 = pxsim_Array__push(s.tmp_0, "boyed");
    r0 = pxsim_Array__push(s.tmp_0, "boyey");
    r0 = pxsim_Array__push(s.tmp_0, "boyfs");
    r0 = pxsim_Array__push(s.tmp_0, "boygs");
    r0 = pxsim_Array__push(s.tmp_0, "boyla");
    r0 = pxsim_Array__push(s.tmp_0, "boyly");
    r0 = pxsim_Array__push(s.tmp_0, "boyos");
    r0 = pxsim_Array__push(s.tmp_0, "boysy");
    r0 = pxsim_Array__push(s.tmp_0, "bozos");
    r0 = pxsim_Array__push(s.tmp_0, "braai");
    r0 = pxsim_Array__push(s.tmp_0, "brace");
    r0 = pxsim_Array__push(s.tmp_0, "brach");
    r0 = pxsim_Array__push(s.tmp_0, "brack");
    r0 = pxsim_Array__push(s.tmp_0, "bract");
    r0 = pxsim_Array__push(s.tmp_0, "brads");
    r0 = pxsim_Array__push(s.tmp_0, "braes");
    r0 = pxsim_Array__push(s.tmp_0, "brags");
    r0 = pxsim_Array__push(s.tmp_0, "brahs");
    r0 = pxsim_Array__push(s.tmp_0, "braid");
    r0 = pxsim_Array__push(s.tmp_0, "brail");
    r0 = pxsim_Array__push(s.tmp_0, "brain");
    r0 = pxsim_Array__push(s.tmp_0, "brake");
    r0 = pxsim_Array__push(s.tmp_0, "braks");
    r0 = pxsim_Array__push(s.tmp_0, "braky");
    r0 = pxsim_Array__push(s.tmp_0, "brame");
    r0 = pxsim_Array__push(s.tmp_0, "brand");
    r0 = pxsim_Array__push(s.tmp_0, "brane");
    r0 = pxsim_Array__push(s.tmp_0, "brank");
    r0 = pxsim_Array__push(s.tmp_0, "brans");
    r0 = pxsim_Array__push(s.tmp_0, "brant");
    r0 = pxsim_Array__push(s.tmp_0, "brash");
    r0 = pxsim_Array__push(s.tmp_0, "brass");
    r0 = pxsim_Array__push(s.tmp_0, "brast");
    r0 = pxsim_Array__push(s.tmp_0, "brats");
    r0 = pxsim_Array__push(s.tmp_0, "brava");
    r0 = pxsim_Array__push(s.tmp_0, "brave");
    r0 = pxsim_Array__push(s.tmp_0, "bravi");
    r0 = pxsim_Array__push(s.tmp_0, "bravo");
    r0 = pxsim_Array__push(s.tmp_0, "brawl");
    r0 = pxsim_Array__push(s.tmp_0, "brawn");
    r0 = pxsim_Array__push(s.tmp_0, "braws");
    r0 = pxsim_Array__push(s.tmp_0, "braxy");
    r0 = pxsim_Array__push(s.tmp_0, "brays");
    r0 = pxsim_Array__push(s.tmp_0, "braza");
    r0 = pxsim_Array__push(s.tmp_0, "braze");
    r0 = pxsim_Array__push(s.tmp_0, "bread");
    r0 = pxsim_Array__push(s.tmp_0, "break");
    r0 = pxsim_Array__push(s.tmp_0, "bream");
    r0 = pxsim_Array__push(s.tmp_0, "brede");
    r0 = pxsim_Array__push(s.tmp_0, "breds");
    r0 = pxsim_Array__push(s.tmp_0, "breed");
    r0 = pxsim_Array__push(s.tmp_0, "breem");
    r0 = pxsim_Array__push(s.tmp_0, "breer");
    r0 = pxsim_Array__push(s.tmp_0, "brees");
    r0 = pxsim_Array__push(s.tmp_0, "breid");
    r0 = pxsim_Array__push(s.tmp_0, "breis");
    r0 = pxsim_Array__push(s.tmp_0, "breme");
    r0 = pxsim_Array__push(s.tmp_0, "brens");
    r0 = pxsim_Array__push(s.tmp_0, "brent");
    r0 = pxsim_Array__push(s.tmp_0, "brere");
    r0 = pxsim_Array__push(s.tmp_0, "brers");
    r0 = pxsim_Array__push(s.tmp_0, "breve");
    r0 = pxsim_Array__push(s.tmp_0, "brews");
    r0 = pxsim_Array__push(s.tmp_0, "breys");
    r0 = pxsim_Array__push(s.tmp_0, "briar");
    r0 = pxsim_Array__push(s.tmp_0, "bribe");
    r0 = pxsim_Array__push(s.tmp_0, "brick");
    r0 = pxsim_Array__push(s.tmp_0, "bride");
    r0 = pxsim_Array__push(s.tmp_0, "brief");
    r0 = pxsim_Array__push(s.tmp_0, "brier");
    r0 = pxsim_Array__push(s.tmp_0, "bries");
    r0 = pxsim_Array__push(s.tmp_0, "brigs");
    r0 = pxsim_Array__push(s.tmp_0, "briki");
    r0 = pxsim_Array__push(s.tmp_0, "briks");
    r0 = pxsim_Array__push(s.tmp_0, "brill");
    r0 = pxsim_Array__push(s.tmp_0, "brims");
    r0 = pxsim_Array__push(s.tmp_0, "brine");
    r0 = pxsim_Array__push(s.tmp_0, "bring");
    r0 = pxsim_Array__push(s.tmp_0, "brink");
    r0 = pxsim_Array__push(s.tmp_0, "brins");
    r0 = pxsim_Array__push(s.tmp_0, "briny");
    r0 = pxsim_Array__push(s.tmp_0, "brios");
    r0 = pxsim_Array__push(s.tmp_0, "brise");
    r0 = pxsim_Array__push(s.tmp_0, "brisk");
    r0 = pxsim_Array__push(s.tmp_0, "briss");
    r0 = pxsim_Array__push(s.tmp_0, "brith");
    r0 = pxsim_Array__push(s.tmp_0, "brits");
    r0 = pxsim_Array__push(s.tmp_0, "britt");
    r0 = pxsim_Array__push(s.tmp_0, "brize");
    r0 = pxsim_Array__push(s.tmp_0, "broad");
    r0 = pxsim_Array__push(s.tmp_0, "broch");
    r0 = pxsim_Array__push(s.tmp_0, "brock");
    r0 = pxsim_Array__push(s.tmp_0, "brods");
    r0 = pxsim_Array__push(s.tmp_0, "brogh");
    r0 = pxsim_Array__push(s.tmp_0, "brogs");
    r0 = pxsim_Array__push(s.tmp_0, "broil");
    r0 = pxsim_Array__push(s.tmp_0, "broke");
    r0 = pxsim_Array__push(s.tmp_0, "brome");
    r0 = pxsim_Array__push(s.tmp_0, "bromo");
    r0 = pxsim_Array__push(s.tmp_0, "bronc");
    r0 = pxsim_Array__push(s.tmp_0, "brond");
    r0 = pxsim_Array__push(s.tmp_0, "brood");
    r0 = pxsim_Array__push(s.tmp_0, "brook");
    r0 = pxsim_Array__push(s.tmp_0, "brool");
    r0 = pxsim_Array__push(s.tmp_0, "broom");
    r0 = pxsim_Array__push(s.tmp_0, "broos");
    r0 = pxsim_Array__push(s.tmp_0, "brose");
    r0 = pxsim_Array__push(s.tmp_0, "brosy");
    r0 = pxsim_Array__push(s.tmp_0, "broth");
    r0 = pxsim_Array__push(s.tmp_0, "brown");
    r0 = pxsim_Array__push(s.tmp_0, "brows");
    r0 = pxsim_Array__push(s.tmp_0, "bruck");
    r0 = pxsim_Array__push(s.tmp_0, "brugh");
    r0 = pxsim_Array__push(s.tmp_0, "bruhs");
    r0 = pxsim_Array__push(s.tmp_0, "bruin");
    r0 = pxsim_Array__push(s.tmp_0, "bruit");
    r0 = pxsim_Array__push(s.tmp_0, "bruja");
    r0 = pxsim_Array__push(s.tmp_0, "brujo");
    r0 = pxsim_Array__push(s.tmp_0, "brule");
    r0 = pxsim_Array__push(s.tmp_0, "brume");
    r0 = pxsim_Array__push(s.tmp_0, "brung");
    r0 = pxsim_Array__push(s.tmp_0, "brunt");
    r0 = pxsim_Array__push(s.tmp_0, "brush");
    r0 = pxsim_Array__push(s.tmp_0, "brusk");
    r0 = pxsim_Array__push(s.tmp_0, "brust");
    r0 = pxsim_Array__push(s.tmp_0, "brute");
    r0 = pxsim_Array__push(s.tmp_0, "bruts");
    r0 = pxsim_Array__push(s.tmp_0, "bruvs");
    r0 = pxsim_Array__push(s.tmp_0, "buats");
    r0 = pxsim_Array__push(s.tmp_0, "buaze");
    r0 = pxsim_Array__push(s.tmp_0, "bubal");
    r0 = pxsim_Array__push(s.tmp_0, "bubas");
    r0 = pxsim_Array__push(s.tmp_0, "bubba");
    r0 = pxsim_Array__push(s.tmp_0, "bubbe");
    r0 = pxsim_Array__push(s.tmp_0, "bubby");
    r0 = pxsim_Array__push(s.tmp_0, "bubus");
    r0 = pxsim_Array__push(s.tmp_0, "buchu");
    r0 = pxsim_Array__push(s.tmp_0, "bucko");
    r0 = pxsim_Array__push(s.tmp_0, "bucks");
    r0 = pxsim_Array__push(s.tmp_0, "bucku");
    r0 = pxsim_Array__push(s.tmp_0, "budas");
    r0 = pxsim_Array__push(s.tmp_0, "buddy");
    r0 = pxsim_Array__push(s.tmp_0, "buded");
    r0 = pxsim_Array__push(s.tmp_0, "budes");
    r0 = pxsim_Array__push(s.tmp_0, "budge");
    r0 = pxsim_Array__push(s.tmp_0, "budis");
    r0 = pxsim_Array__push(s.tmp_0, "budos");
    r0 = pxsim_Array__push(s.tmp_0, "buena");
    r0 = pxsim_Array__push(s.tmp_0, "buffa");
    r0 = pxsim_Array__push(s.tmp_0, "buffe");
    r0 = pxsim_Array__push(s.tmp_0, "buffi");
    r0 = pxsim_Array__push(s.tmp_0, "buffo");
    r0 = pxsim_Array__push(s.tmp_0, "buffs");
    r0 = pxsim_Array__push(s.tmp_0, "buffy");
    r0 = pxsim_Array__push(s.tmp_0, "bufos");
    r0 = pxsim_Array__push(s.tmp_0, "bufty");
    r0 = pxsim_Array__push(s.tmp_0, "bugan");
    r0 = pxsim_Array__push(s.tmp_0, "buggy");
    r0 = pxsim_Array__push(s.tmp_0, "bugle");
    r0 = pxsim_Array__push(s.tmp_0, "buhls");
    r0 = pxsim_Array__push(s.tmp_0, "buhrs");
    r0 = pxsim_Array__push(s.tmp_0, "buiks");
    r0 = pxsim_Array__push(s.tmp_0, "build");
    r0 = pxsim_Array__push(s.tmp_0, "built");
    r0 = pxsim_Array__push(s.tmp_0, "buist");
    r0 = pxsim_Array__push(s.tmp_0, "bukes");
    r0 = pxsim_Array__push(s.tmp_0, "bukos");
    r0 = pxsim_Array__push(s.tmp_0, "bulbs");
    r0 = pxsim_Array__push(s.tmp_0, "bulge");
    r0 = pxsim_Array__push(s.tmp_0, "bulgy");
    r0 = pxsim_Array__push(s.tmp_0, "bulks");
    r0 = pxsim_Array__push(s.tmp_0, "bulky");
    r0 = pxsim_Array__push(s.tmp_0, "bulla");
    r0 = pxsim_Array__push(s.tmp_0, "bulls");
    r0 = pxsim_Array__push(s.tmp_0, "bully");
    r0 = pxsim_Array__push(s.tmp_0, "bulse");
    r0 = pxsim_Array__push(s.tmp_0, "bumbo");
    r0 = pxsim_Array__push(s.tmp_0, "bumfs");
    r0 = pxsim_Array__push(s.tmp_0, "bumph");
    r0 = pxsim_Array__push(s.tmp_0, "bumps");
    r0 = pxsim_Array__push(s.tmp_0, "bumpy");
    r0 = pxsim_Array__push(s.tmp_0, "bunas");
    r0 = pxsim_Array__push(s.tmp_0, "bunce");
    r0 = pxsim_Array__push(s.tmp_0, "bunch");
    r0 = pxsim_Array__push(s.tmp_0, "bunco");
    r0 = pxsim_Array__push(s.tmp_0, "bunde");
    r0 = pxsim_Array__push(s.tmp_0, "bundh");
    r0 = pxsim_Array__push(s.tmp_0, "bunds");
    r0 = pxsim_Array__push(s.tmp_0, "bundt");
    r0 = pxsim_Array__push(s.tmp_0, "bundu");
    r0 = pxsim_Array__push(s.tmp_0, "bundy");
    r0 = pxsim_Array__push(s.tmp_0, "bungs");
    r0 = pxsim_Array__push(s.tmp_0, "bungy");
    r0 = pxsim_Array__push(s.tmp_0, "bunia");
    r0 = pxsim_Array__push(s.tmp_0, "bunje");
    r0 = pxsim_Array__push(s.tmp_0, "bunjy");
    r0 = pxsim_Array__push(s.tmp_0, "bunko");
    r0 = pxsim_Array__push(s.tmp_0, "bunks");
    r0 = pxsim_Array__push(s.tmp_0, "bunns");
    r0 = pxsim_Array__push(s.tmp_0, "bunny");
    r0 = pxsim_Array__push(s.tmp_0, "bunts");
    r0 = pxsim_Array__push(s.tmp_0, "bunty");
    r0 = pxsim_Array__push(s.tmp_0, "bunya");
    r0 = pxsim_Array__push(s.tmp_0, "buoys");
    r0 = pxsim_Array__push(s.tmp_0, "buppy");
    r0 = pxsim_Array__push(s.tmp_0, "buran");
    r0 = pxsim_Array__push(s.tmp_0, "buras");
    r0 = pxsim_Array__push(s.tmp_0, "burbs");
    r0 = pxsim_Array__push(s.tmp_0, "burds");
    r0 = pxsim_Array__push(s.tmp_0, "buret");
    r0 = pxsim_Array__push(s.tmp_0, "burfi");
    r0 = pxsim_Array__push(s.tmp_0, "burgh");
    r0 = pxsim_Array__push(s.tmp_0, "burgs");
    r0 = pxsim_Array__push(s.tmp_0, "burin");
    r0 = pxsim_Array__push(s.tmp_0, "burka");
    r0 = pxsim_Array__push(s.tmp_0, "burke");
    r0 = pxsim_Array__push(s.tmp_0, "burks");
    r0 = pxsim_Array__push(s.tmp_0, "burls");
    r0 = pxsim_Array__push(s.tmp_0, "burly");
    r0 = pxsim_Array__push(s.tmp_0, "burns");
    r0 = pxsim_Array__push(s.tmp_0, "burnt");
    r0 = pxsim_Array__push(s.tmp_0, "buroo");
    r0 = pxsim_Array__push(s.tmp_0, "burps");
    r0 = pxsim_Array__push(s.tmp_0, "burqa");
    r0 = pxsim_Array__push(s.tmp_0, "burra");
    r0 = pxsim_Array__push(s.tmp_0, "burro");
    r0 = pxsim_Array__push(s.tmp_0, "burrs");
    r0 = pxsim_Array__push(s.tmp_0, "burry");
    r0 = pxsim_Array__push(s.tmp_0, "bursa");
    r0 = pxsim_Array__push(s.tmp_0, "burse");
    r0 = pxsim_Array__push(s.tmp_0, "burst");
    r0 = pxsim_Array__push(s.tmp_0, "busby");
    r0 = pxsim_Array__push(s.tmp_0, "bused");
    r0 = pxsim_Array__push(s.tmp_0, "buses");
    r0 = pxsim_Array__push(s.tmp_0, "bushy");
    r0 = pxsim_Array__push(s.tmp_0, "busks");
    r0 = pxsim_Array__push(s.tmp_0, "busky");
    r0 = pxsim_Array__push(s.tmp_0, "bussu");
    r0 = pxsim_Array__push(s.tmp_0, "busti");
    r0 = pxsim_Array__push(s.tmp_0, "busts");
    r0 = pxsim_Array__push(s.tmp_0, "busty");
    r0 = pxsim_Array__push(s.tmp_0, "butch");
    r0 = pxsim_Array__push(s.tmp_0, "buteo");
    r0 = pxsim_Array__push(s.tmp_0, "butes");
    r0 = pxsim_Array__push(s.tmp_0, "butle");
    r0 = pxsim_Array__push(s.tmp_0, "butoh");
    r0 = pxsim_Array__push(s.tmp_0, "butte");
    r0 = pxsim_Array__push(s.tmp_0, "butts");
    r0 = pxsim_Array__push(s.tmp_0, "butty");
    r0 = pxsim_Array__push(s.tmp_0, "butut");
    r0 = pxsim_Array__push(s.tmp_0, "butyl");
    r0 = pxsim_Array__push(s.tmp_0, "buxom");
    r0 = pxsim_Array__push(s.tmp_0, "buyer");
    r0 = pxsim_Array__push(s.tmp_0, "buyin");
    r0 = pxsim_Array__push(s.tmp_0, "buzzy");
    r0 = pxsim_Array__push(s.tmp_0, "bwana");
    r0 = pxsim_Array__push(s.tmp_0, "bwazi");
    r0 = pxsim_Array__push(s.tmp_0, "byded");
    r0 = pxsim_Array__push(s.tmp_0, "bydes");
    r0 = pxsim_Array__push(s.tmp_0, "byked");
    r0 = pxsim_Array__push(s.tmp_0, "bykes");
    r0 = pxsim_Array__push(s.tmp_0, "bylaw");
    r0 = pxsim_Array__push(s.tmp_0, "byres");
    r0 = pxsim_Array__push(s.tmp_0, "byrls");
    r0 = pxsim_Array__push(s.tmp_0, "byssi");
    r0 = pxsim_Array__push(s.tmp_0, "bytes");
    r0 = pxsim_Array__push(s.tmp_0, "byway");
    r0 = pxsim_Array__push(s.tmp_0, "caaed");
    r0 = pxsim_Array__push(s.tmp_0, "cabal");
    r0 = pxsim_Array__push(s.tmp_0, "cabas");
    r0 = pxsim_Array__push(s.tmp_0, "cabby");
    r0 = pxsim_Array__push(s.tmp_0, "caber");
    r0 = pxsim_Array__push(s.tmp_0, "cabin");
    r0 = pxsim_Array__push(s.tmp_0, "cable");
    r0 = pxsim_Array__push(s.tmp_0, "cabob");
    r0 = pxsim_Array__push(s.tmp_0, "caboc");
    r0 = pxsim_Array__push(s.tmp_0, "cabre");
    r0 = pxsim_Array__push(s.tmp_0, "cacao");
    r0 = pxsim_Array__push(s.tmp_0, "cacas");
    r0 = pxsim_Array__push(s.tmp_0, "cache");
    r0 = pxsim_Array__push(s.tmp_0, "cacks");
    r0 = pxsim_Array__push(s.tmp_0, "cacky");
    r0 = pxsim_Array__push(s.tmp_0, "cacti");
    r0 = pxsim_Array__push(s.tmp_0, "caddy");
    r0 = pxsim_Array__push(s.tmp_0, "cadee");
    r0 = pxsim_Array__push(s.tmp_0, "cades");
    r0 = pxsim_Array__push(s.tmp_0, "cadet");
    r0 = pxsim_Array__push(s.tmp_0, "cadge");
    r0 = pxsim_Array__push(s.tmp_0, "cadgy");
    r0 = pxsim_Array__push(s.tmp_0, "cadie");
    r0 = pxsim_Array__push(s.tmp_0, "cadis");
    r0 = pxsim_Array__push(s.tmp_0, "cadre");
    r0 = pxsim_Array__push(s.tmp_0, "caeca");
    r0 = pxsim_Array__push(s.tmp_0, "caese");
    r0 = pxsim_Array__push(s.tmp_0, "cafes");
    r0 = pxsim_Array__push(s.tmp_0, "caffe");
    r0 = pxsim_Array__push(s.tmp_0, "caffs");
    r0 = pxsim_Array__push(s.tmp_0, "caged");
    r0 = pxsim_Array__push(s.tmp_0, "cager");
    r0 = pxsim_Array__push(s.tmp_0, "cages");
    r0 = pxsim_Array__push(s.tmp_0, "cagey");
    r0 = pxsim_Array__push(s.tmp_0, "cagot");
    r0 = pxsim_Array__push(s.tmp_0, "cahow");
    r0 = pxsim_Array__push(s.tmp_0, "caids");
    r0 = pxsim_Array__push(s.tmp_0, "cains");
    r0 = pxsim_Array__push(s.tmp_0, "caird");
    r0 = pxsim_Array__push(s.tmp_0, "cairn");
    r0 = pxsim_Array__push(s.tmp_0, "cajon");
    r0 = pxsim_Array__push(s.tmp_0, "cajun");
    r0 = pxsim_Array__push(s.tmp_0, "caked");
    r0 = pxsim_Array__push(s.tmp_0, "cakes");
    r0 = pxsim_Array__push(s.tmp_0, "cakey");
    r0 = pxsim_Array__push(s.tmp_0, "calfs");
    r0 = pxsim_Array__push(s.tmp_0, "calid");
    r0 = pxsim_Array__push(s.tmp_0, "calif");
    r0 = pxsim_Array__push(s.tmp_0, "calix");
    r0 = pxsim_Array__push(s.tmp_0, "calks");
    r0 = pxsim_Array__push(s.tmp_0, "calla");
    r0 = pxsim_Array__push(s.tmp_0, "calle");
    r0 = pxsim_Array__push(s.tmp_0, "calls");
    r0 = pxsim_Array__push(s.tmp_0, "calms");
    r0 = pxsim_Array__push(s.tmp_0, "calmy");
    r0 = pxsim_Array__push(s.tmp_0, "calos");
    r0 = pxsim_Array__push(s.tmp_0, "calpa");
    r0 = pxsim_Array__push(s.tmp_0, "calps");
    r0 = pxsim_Array__push(s.tmp_0, "calve");
    r0 = pxsim_Array__push(s.tmp_0, "calyx");
    r0 = pxsim_Array__push(s.tmp_0, "caman");
    r0 = pxsim_Array__push(s.tmp_0, "camas");
    r0 = pxsim_Array__push(s.tmp_0, "camel");
    r0 = pxsim_Array__push(s.tmp_0, "cameo");
    r0 = pxsim_Array__push(s.tmp_0, "cames");
    r0 = pxsim_Array__push(s.tmp_0, "camis");
    r0 = pxsim_Array__push(s.tmp_0, "camos");
    r0 = pxsim_Array__push(s.tmp_0, "campi");
    r0 = pxsim_Array__push(s.tmp_0, "campo");
    r0 = pxsim_Array__push(s.tmp_0, "camps");
    r0 = pxsim_Array__push(s.tmp_0, "campy");
    r0 = pxsim_Array__push(s.tmp_0, "camus");
    r0 = pxsim_Array__push(s.tmp_0, "canal");
    r0 = pxsim_Array__push(s.tmp_0, "cando");
    r0 = pxsim_Array__push(s.tmp_0, "candy");
    r0 = pxsim_Array__push(s.tmp_0, "caned");
    r0 = pxsim_Array__push(s.tmp_0, "caneh");
    r0 = pxsim_Array__push(s.tmp_0, "caner");
    r0 = pxsim_Array__push(s.tmp_0, "canes");
    r0 = pxsim_Array__push(s.tmp_0, "cangs");
    r0 = pxsim_Array__push(s.tmp_0, "canid");
    r0 = pxsim_Array__push(s.tmp_0, "canna");
    r0 = pxsim_Array__push(s.tmp_0, "canns");
    r0 = pxsim_Array__push(s.tmp_0, "canny");
    r0 = pxsim_Array__push(s.tmp_0, "canoe");
    r0 = pxsim_Array__push(s.tmp_0, "canon");
    r0 = pxsim_Array__push(s.tmp_0, "canso");
    r0 = pxsim_Array__push(s.tmp_0, "canst");
    r0 = pxsim_Array__push(s.tmp_0, "canti");
    r0 = pxsim_Array__push(s.tmp_0, "canto");
    r0 = pxsim_Array__push(s.tmp_0, "cants");
    r0 = pxsim_Array__push(s.tmp_0, "canty");
    r0 = pxsim_Array__push(s.tmp_0, "capas");
    r0 = pxsim_Array__push(s.tmp_0, "capax");
    r0 = pxsim_Array__push(s.tmp_0, "caped");
    r0 = pxsim_Array__push(s.tmp_0, "caper");
    r0 = pxsim_Array__push(s.tmp_0, "capes");
    r0 = pxsim_Array__push(s.tmp_0, "capex");
    r0 = pxsim_Array__push(s.tmp_0, "caphs");
    r0 = pxsim_Array__push(s.tmp_0, "capiz");
    r0 = pxsim_Array__push(s.tmp_0, "caple");
    r0 = pxsim_Array__push(s.tmp_0, "capon");
    r0 = pxsim_Array__push(s.tmp_0, "capos");
    r0 = pxsim_Array__push(s.tmp_0, "capot");
    r0 = pxsim_Array__push(s.tmp_0, "capri");
    r0 = pxsim_Array__push(s.tmp_0, "capul");
    r0 = pxsim_Array__push(s.tmp_0, "caput");
    r0 = pxsim_Array__push(s.tmp_0, "carap");
    r0 = pxsim_Array__push(s.tmp_0, "carat");
    r0 = pxsim_Array__push(s.tmp_0, "carbo");
    r0 = pxsim_Array__push(s.tmp_0, "carbs");
    r0 = pxsim_Array__push(s.tmp_0, "carby");
    r0 = pxsim_Array__push(s.tmp_0, "cardi");
    r0 = pxsim_Array__push(s.tmp_0, "cards");
    r0 = pxsim_Array__push(s.tmp_0, "cardy");
    r0 = pxsim_Array__push(s.tmp_0, "cared");
    r0 = pxsim_Array__push(s.tmp_0, "carer");
    r0 = pxsim_Array__push(s.tmp_0, "cares");
    r0 = pxsim_Array__push(s.tmp_0, "caret");
    r0 = pxsim_Array__push(s.tmp_0, "carex");
    r0 = pxsim_Array__push(s.tmp_0, "cargo");
    r0 = pxsim_Array__push(s.tmp_0, "carks");
    r0 = pxsim_Array__push(s.tmp_0, "carle");
    r0 = pxsim_Array__push(s.tmp_0, "carls");
    r0 = pxsim_Array__push(s.tmp_0, "carne");
    r0 = pxsim_Array__push(s.tmp_0, "carns");
    r0 = pxsim_Array__push(s.tmp_0, "carny");
    r0 = pxsim_Array__push(s.tmp_0, "carob");
    r0 = pxsim_Array__push(s.tmp_0, "carol");
    r0 = pxsim_Array__push(s.tmp_0, "carom");
    r0 = pxsim_Array__push(s.tmp_0, "caron");
    r0 = pxsim_Array__push(s.tmp_0, "carpe");
    r0 = pxsim_Array__push(s.tmp_0, "carpi");
    r0 = pxsim_Array__push(s.tmp_0, "carps");
    r0 = pxsim_Array__push(s.tmp_0, "carrs");
    r0 = pxsim_Array__push(s.tmp_0, "carry");
    r0 = pxsim_Array__push(s.tmp_0, "carse");
    r0 = pxsim_Array__push(s.tmp_0, "carta");
    r0 = pxsim_Array__push(s.tmp_0, "carte");
    r0 = pxsim_Array__push(s.tmp_0, "carts");
    r0 = pxsim_Array__push(s.tmp_0, "carve");
    r0 = pxsim_Array__push(s.tmp_0, "carvy");
    r0 = pxsim_Array__push(s.tmp_0, "casas");
    r0 = pxsim_Array__push(s.tmp_0, "casco");
    r0 = pxsim_Array__push(s.tmp_0, "cased");
    r0 = pxsim_Array__push(s.tmp_0, "caser");
    r0 = pxsim_Array__push(s.tmp_0, "cases");
    r0 = pxsim_Array__push(s.tmp_0, "casks");
    r0 = pxsim_Array__push(s.tmp_0, "casky");
    r0 = pxsim_Array__push(s.tmp_0, "caste");
    r0 = pxsim_Array__push(s.tmp_0, "casts");
    r0 = pxsim_Array__push(s.tmp_0, "casus");
    r0 = pxsim_Array__push(s.tmp_0, "catch");
    r0 = pxsim_Array__push(s.tmp_0, "cater");
    r0 = pxsim_Array__push(s.tmp_0, "cates");
    r0 = pxsim_Array__push(s.tmp_0, "catty");
    r0 = pxsim_Array__push(s.tmp_0, "cauda");
    r0 = pxsim_Array__push(s.tmp_0, "cauks");
    r0 = pxsim_Array__push(s.tmp_0, "cauld");
    r0 = pxsim_Array__push(s.tmp_0, "caulk");
    r0 = pxsim_Array__push(s.tmp_0, "cauls");
    r0 = pxsim_Array__push(s.tmp_0, "caums");
    r0 = pxsim_Array__push(s.tmp_0, "caups");
    r0 = pxsim_Array__push(s.tmp_0, "cauri");
    r0 = pxsim_Array__push(s.tmp_0, "causa");
    r0 = pxsim_Array__push(s.tmp_0, "cause");
    r0 = pxsim_Array__push(s.tmp_0, "cavas");
    r0 = pxsim_Array__push(s.tmp_0, "caved");
    r0 = pxsim_Array__push(s.tmp_0, "cavel");
    r0 = pxsim_Array__push(s.tmp_0, "caver");
    r0 = pxsim_Array__push(s.tmp_0, "caves");
    r0 = pxsim_Array__push(s.tmp_0, "cavie");
    r0 = pxsim_Array__push(s.tmp_0, "cavil");
    r0 = pxsim_Array__push(s.tmp_0, "cavus");
    r0 = pxsim_Array__push(s.tmp_0, "cawed");
    r0 = pxsim_Array__push(s.tmp_0, "cawks");
    r0 = pxsim_Array__push(s.tmp_0, "caxon");
    r0 = pxsim_Array__push(s.tmp_0, "cease");
    r0 = pxsim_Array__push(s.tmp_0, "ceaze");
    r0 = pxsim_Array__push(s.tmp_0, "cebid");
    r0 = pxsim_Array__push(s.tmp_0, "cecal");
    r0 = pxsim_Array__push(s.tmp_0, "cecum");
    r0 = pxsim_Array__push(s.tmp_0, "cedar");
    r0 = pxsim_Array__push(s.tmp_0, "ceded");
    r0 = pxsim_Array__push(s.tmp_0, "ceder");
    r0 = pxsim_Array__push(s.tmp_0, "cedes");
    r0 = pxsim_Array__push(s.tmp_0, "cedis");
    r0 = pxsim_Array__push(s.tmp_0, "ceiba");
    r0 = pxsim_Array__push(s.tmp_0, "ceili");
    r0 = pxsim_Array__push(s.tmp_0, "ceils");
    r0 = pxsim_Array__push(s.tmp_0, "celeb");
    r0 = pxsim_Array__push(s.tmp_0, "cella");
    r0 = pxsim_Array__push(s.tmp_0, "celli");
    r0 = pxsim_Array__push(s.tmp_0, "cello");
    r0 = pxsim_Array__push(s.tmp_0, "cells");
    r0 = pxsim_Array__push(s.tmp_0, "celly");
    r0 = pxsim_Array__push(s.tmp_0, "celom");
    r0 = pxsim_Array__push(s.tmp_0, "celts");
    r0 = pxsim_Array__push(s.tmp_0, "cense");
    r0 = pxsim_Array__push(s.tmp_0, "cento");
    r0 = pxsim_Array__push(s.tmp_0, "cents");
    r0 = pxsim_Array__push(s.tmp_0, "centu");
    r0 = pxsim_Array__push(s.tmp_0, "ceorl");
    r0 = pxsim_Array__push(s.tmp_0, "cepes");
    r0 = pxsim_Array__push(s.tmp_0, "cerci");
    r0 = pxsim_Array__push(s.tmp_0, "cered");
    r0 = pxsim_Array__push(s.tmp_0, "ceres");
    r0 = pxsim_Array__push(s.tmp_0, "cerge");
    r0 = pxsim_Array__push(s.tmp_0, "ceria");
    r0 = pxsim_Array__push(s.tmp_0, "ceric");
    r0 = pxsim_Array__push(s.tmp_0, "cerne");
    r0 = pxsim_Array__push(s.tmp_0, "ceroc");
    r0 = pxsim_Array__push(s.tmp_0, "ceros");
    r0 = pxsim_Array__push(s.tmp_0, "certs");
    r0 = pxsim_Array__push(s.tmp_0, "certy");
    r0 = pxsim_Array__push(s.tmp_0, "cesse");
    r0 = pxsim_Array__push(s.tmp_0, "cesta");
    r0 = pxsim_Array__push(s.tmp_0, "cesti");
    r0 = pxsim_Array__push(s.tmp_0, "cetes");
    r0 = pxsim_Array__push(s.tmp_0, "cetyl");
    r0 = pxsim_Array__push(s.tmp_0, "cezve");
    r0 = pxsim_Array__push(s.tmp_0, "chaap");
    r0 = pxsim_Array__push(s.tmp_0, "chaat");
    r0 = pxsim_Array__push(s.tmp_0, "chace");
    r0 = pxsim_Array__push(s.tmp_0, "chack");
    r0 = pxsim_Array__push(s.tmp_0, "chaco");
    r0 = pxsim_Array__push(s.tmp_0, "chado");
    r0 = pxsim_Array__push(s.tmp_0, "chads");
    r0 = pxsim_Array__push(s.tmp_0, "chafe");
    r0 = pxsim_Array__push(s.tmp_0, "chaff");
    r0 = pxsim_Array__push(s.tmp_0, "chaft");
    r0 = pxsim_Array__push(s.tmp_0, "chain");
    r0 = pxsim_Array__push(s.tmp_0, "chair");
    r0 = pxsim_Array__push(s.tmp_0, "chais");
    r0 = pxsim_Array__push(s.tmp_0, "chalk");
    r0 = pxsim_Array__push(s.tmp_0, "chals");
    r0 = pxsim_Array__push(s.tmp_0, "champ");
    r0 = pxsim_Array__push(s.tmp_0, "chams");
    r0 = pxsim_Array__push(s.tmp_0, "chana");
    r0 = pxsim_Array__push(s.tmp_0, "chang");
    r0 = pxsim_Array__push(s.tmp_0, "chank");
    r0 = pxsim_Array__push(s.tmp_0, "chant");
    r0 = pxsim_Array__push(s.tmp_0, "chaos");
    r0 = pxsim_Array__push(s.tmp_0, "chape");
    r0 = pxsim_Array__push(s.tmp_0, "chaps");
    r0 = pxsim_Array__push(s.tmp_0, "chapt");
    r0 = pxsim_Array__push(s.tmp_0, "chara");
    r0 = pxsim_Array__push(s.tmp_0, "chard");
    r0 = pxsim_Array__push(s.tmp_0, "chare");
    r0 = pxsim_Array__push(s.tmp_0, "chark");
    r0 = pxsim_Array__push(s.tmp_0, "charm");
    r0 = pxsim_Array__push(s.tmp_0, "charr");
    r0 = pxsim_Array__push(s.tmp_0, "chars");
    r0 = pxsim_Array__push(s.tmp_0, "chart");
    r0 = pxsim_Array__push(s.tmp_0, "chary");
    r0 = pxsim_Array__push(s.tmp_0, "chase");
    r0 = pxsim_Array__push(s.tmp_0, "chasm");
    r0 = pxsim_Array__push(s.tmp_0, "chats");
    r0 = pxsim_Array__push(s.tmp_0, "chava");
    r0 = pxsim_Array__push(s.tmp_0, "chave");
    r0 = pxsim_Array__push(s.tmp_0, "chavs");
    r0 = pxsim_Array__push(s.tmp_0, "chawk");
    r0 = pxsim_Array__push(s.tmp_0, "chawl");
    r0 = pxsim_Array__push(s.tmp_0, "chaws");
    r0 = pxsim_Array__push(s.tmp_0, "chaya");
    r0 = pxsim_Array__push(s.tmp_0, "chays");
    r0 = pxsim_Array__push(s.tmp_0, "cheap");
    r0 = pxsim_Array__push(s.tmp_0, "cheat");
    r0 = pxsim_Array__push(s.tmp_0, "cheba");
    r0 = pxsim_Array__push(s.tmp_0, "check");
    r0 = pxsim_Array__push(s.tmp_0, "chedi");
    r0 = pxsim_Array__push(s.tmp_0, "cheeb");
    r0 = pxsim_Array__push(s.tmp_0, "cheek");
    r0 = pxsim_Array__push(s.tmp_0, "cheep");
    r0 = pxsim_Array__push(s.tmp_0, "cheer");
    r0 = pxsim_Array__push(s.tmp_0, "cheet");
    r0 = pxsim_Array__push(s.tmp_0, "chefs");
    r0 = pxsim_Array__push(s.tmp_0, "cheka");
    r0 = pxsim_Array__push(s.tmp_0, "chela");
    r0 = pxsim_Array__push(s.tmp_0, "chelp");
    r0 = pxsim_Array__push(s.tmp_0, "chemo");
    r0 = pxsim_Array__push(s.tmp_0, "chems");
    r0 = pxsim_Array__push(s.tmp_0, "chere");
    r0 = pxsim_Array__push(s.tmp_0, "chert");
    r0 = pxsim_Array__push(s.tmp_0, "chess");
    r0 = pxsim_Array__push(s.tmp_0, "chest");
    r0 = pxsim_Array__push(s.tmp_0, "cheth");
    r0 = pxsim_Array__push(s.tmp_0, "chevy");
    r0 = pxsim_Array__push(s.tmp_0, "chews");
    r0 = pxsim_Array__push(s.tmp_0, "chewy");
    r0 = pxsim_Array__push(s.tmp_0, "chiao");
    r0 = pxsim_Array__push(s.tmp_0, "chias");
    r0 = pxsim_Array__push(s.tmp_0, "chiba");
    r0 = pxsim_Array__push(s.tmp_0, "chibs");
    r0 = pxsim_Array__push(s.tmp_0, "chica");
    r0 = pxsim_Array__push(s.tmp_0, "chich");
    r0 = pxsim_Array__push(s.tmp_0, "chick");
    r0 = pxsim_Array__push(s.tmp_0, "chico");
    r0 = pxsim_Array__push(s.tmp_0, "chics");
    r0 = pxsim_Array__push(s.tmp_0, "chide");
    r0 = pxsim_Array__push(s.tmp_0, "chief");
    r0 = pxsim_Array__push(s.tmp_0, "chiel");
    r0 = pxsim_Array__push(s.tmp_0, "chiko");
    r0 = pxsim_Array__push(s.tmp_0, "chiks");
    r0 = pxsim_Array__push(s.tmp_0, "child");
    r0 = pxsim_Array__push(s.tmp_0, "chile");
    r0 = pxsim_Array__push(s.tmp_0, "chili");
    r0 = pxsim_Array__push(s.tmp_0, "chill");
    r0 = pxsim_Array__push(s.tmp_0, "chimb");
    r0 = pxsim_Array__push(s.tmp_0, "chime");
    r0 = pxsim_Array__push(s.tmp_0, "chimo");
    r0 = pxsim_Array__push(s.tmp_0, "chimp");
    r0 = pxsim_Array__push(s.tmp_0, "china");
    r0 = pxsim_Array__push(s.tmp_0, "chine");
    r0 = pxsim_Array__push(s.tmp_0, "ching");
    r0 = pxsim_Array__push(s.tmp_0, "chink");
    r0 = pxsim_Array__push(s.tmp_0, "chino");
    r0 = pxsim_Array__push(s.tmp_0, "chins");
    r0 = pxsim_Array__push(s.tmp_0, "chips");
    r0 = pxsim_Array__push(s.tmp_0, "chirk");
    r0 = pxsim_Array__push(s.tmp_0, "chirl");
    r0 = pxsim_Array__push(s.tmp_0, "chirm");
    r0 = pxsim_Array__push(s.tmp_0, "chiro");
    r0 = pxsim_Array__push(s.tmp_0, "chirp");
    r0 = pxsim_Array__push(s.tmp_0, "chirr");
    r0 = pxsim_Array__push(s.tmp_0, "chirt");
    r0 = pxsim_Array__push(s.tmp_0, "chiru");
    r0 = pxsim_Array__push(s.tmp_0, "chiti");
    r0 = pxsim_Array__push(s.tmp_0, "chits");
    r0 = pxsim_Array__push(s.tmp_0, "chiva");
    r0 = pxsim_Array__push(s.tmp_0, "chive");
    r0 = pxsim_Array__push(s.tmp_0, "chivs");
    r0 = pxsim_Array__push(s.tmp_0, "chivy");
    r0 = pxsim_Array__push(s.tmp_0, "chizz");
    r0 = pxsim_Array__push(s.tmp_0, "chock");
    r0 = pxsim_Array__push(s.tmp_0, "choco");
    r0 = pxsim_Array__push(s.tmp_0, "chocs");
    r0 = pxsim_Array__push(s.tmp_0, "chode");
    r0 = pxsim_Array__push(s.tmp_0, "chogs");
    r0 = pxsim_Array__push(s.tmp_0, "choil");
    r0 = pxsim_Array__push(s.tmp_0, "choir");
    r0 = pxsim_Array__push(s.tmp_0, "choke");
    r0 = pxsim_Array__push(s.tmp_0, "choko");
    r0 = pxsim_Array__push(s.tmp_0, "choky");
    r0 = pxsim_Array__push(s.tmp_0, "chola");
    r0 = pxsim_Array__push(s.tmp_0, "choli");
    r0 = pxsim_Array__push(s.tmp_0, "cholo");
    r0 = pxsim_Array__push(s.tmp_0, "chomp");
    r0 = pxsim_Array__push(s.tmp_0, "chons");
    r0 = pxsim_Array__push(s.tmp_0, "choof");
    r0 = pxsim_Array__push(s.tmp_0, "chook");
    r0 = pxsim_Array__push(s.tmp_0, "choom");
    r0 = pxsim_Array__push(s.tmp_0, "choon");
    r0 = pxsim_Array__push(s.tmp_0, "chops");
    r0 = pxsim_Array__push(s.tmp_0, "chord");
    r0 = pxsim_Array__push(s.tmp_0, "chore");
    r0 = pxsim_Array__push(s.tmp_0, "chose");
    r0 = pxsim_Array__push(s.tmp_0, "choss");
    r0 = pxsim_Array__push(s.tmp_0, "chota");
    r0 = pxsim_Array__push(s.tmp_0, "chott");
    r0 = pxsim_Array__push(s.tmp_0, "chout");
    r0 = pxsim_Array__push(s.tmp_0, "choux");
    r0 = pxsim_Array__push(s.tmp_0, "chowk");
    r0 = pxsim_Array__push(s.tmp_0, "chows");
    r0 = pxsim_Array__push(s.tmp_0, "chubs");
    r0 = pxsim_Array__push(s.tmp_0, "chuck");
    r0 = pxsim_Array__push(s.tmp_0, "chufa");
    r0 = pxsim_Array__push(s.tmp_0, "chuff");
    r0 = pxsim_Array__push(s.tmp_0, "chugs");
    r0 = pxsim_Array__push(s.tmp_0, "chump");
    r0 = pxsim_Array__push(s.tmp_0, "chums");
    r0 = pxsim_Array__push(s.tmp_0, "chunk");
    r0 = pxsim_Array__push(s.tmp_0, "churl");
    r0 = pxsim_Array__push(s.tmp_0, "churn");
    r0 = pxsim_Array__push(s.tmp_0, "churr");
    r0 = pxsim_Array__push(s.tmp_0, "chuse");
    r0 = pxsim_Array__push(s.tmp_0, "chute");
    r0 = pxsim_Array__push(s.tmp_0, "chuts");
    r0 = pxsim_Array__push(s.tmp_0, "chyle");
    r0 = pxsim_Array__push(s.tmp_0, "chyme");
    r0 = pxsim_Array__push(s.tmp_0, "chynd");
    r0 = pxsim_Array__push(s.tmp_0, "cibol");
    r0 = pxsim_Array__push(s.tmp_0, "cided");
    r0 = pxsim_Array__push(s.tmp_0, "cider");
    r0 = pxsim_Array__push(s.tmp_0, "cides");
    r0 = pxsim_Array__push(s.tmp_0, "ciels");
    r0 = pxsim_Array__push(s.tmp_0, "cigar");
    r0 = pxsim_Array__push(s.tmp_0, "ciggy");
    r0 = pxsim_Array__push(s.tmp_0, "cilia");
    r0 = pxsim_Array__push(s.tmp_0, "cills");
    r0 = pxsim_Array__push(s.tmp_0, "cimar");
    r0 = pxsim_Array__push(s.tmp_0, "cimex");
    r0 = pxsim_Array__push(s.tmp_0, "cinch");
    r0 = pxsim_Array__push(s.tmp_0, "cinct");
    r0 = pxsim_Array__push(s.tmp_0, "cines");
    r0 = pxsim_Array__push(s.tmp_0, "cinqs");
    r0 = pxsim_Array__push(s.tmp_0, "cions");
    r0 = pxsim_Array__push(s.tmp_0, "cippi");
    r0 = pxsim_Array__push(s.tmp_0, "circa");
    r0 = pxsim_Array__push(s.tmp_0, "circs");
    r0 = pxsim_Array__push(s.tmp_0, "cires");
    r0 = pxsim_Array__push(s.tmp_0, "cirls");
    r0 = pxsim_Array__push(s.tmp_0, "cirri");
    r0 = pxsim_Array__push(s.tmp_0, "cisco");
    r0 = pxsim_Array__push(s.tmp_0, "cissy");
    r0 = pxsim_Array__push(s.tmp_0, "cists");
    r0 = pxsim_Array__push(s.tmp_0, "cital");
    r0 = pxsim_Array__push(s.tmp_0, "cited");
    r0 = pxsim_Array__push(s.tmp_0, "citee");
    r0 = pxsim_Array__push(s.tmp_0, "citer");
    r0 = pxsim_Array__push(s.tmp_0, "cites");
    r0 = pxsim_Array__push(s.tmp_0, "cives");
    r0 = pxsim_Array__push(s.tmp_0, "civet");
    r0 = pxsim_Array__push(s.tmp_0, "civic");
    r0 = pxsim_Array__push(s.tmp_0, "civie");
    r0 = pxsim_Array__push(s.tmp_0, "civil");
    r0 = pxsim_Array__push(s.tmp_0, "civvy");
    r0 = pxsim_Array__push(s.tmp_0, "clach");
    r0 = pxsim_Array__push(s.tmp_0, "clack");
    r0 = pxsim_Array__push(s.tmp_0, "clade");
    r0 = pxsim_Array__push(s.tmp_0, "clads");
    r0 = pxsim_Array__push(s.tmp_0, "claes");
    r0 = pxsim_Array__push(s.tmp_0, "clags");
    r0 = pxsim_Array__push(s.tmp_0, "claim");
    r0 = pxsim_Array__push(s.tmp_0, "clair");
    r0 = pxsim_Array__push(s.tmp_0, "clame");
    r0 = pxsim_Array__push(s.tmp_0, "clamp");
    r0 = pxsim_Array__push(s.tmp_0, "clams");
    r0 = pxsim_Array__push(s.tmp_0, "clang");
    r0 = pxsim_Array__push(s.tmp_0, "clank");
    r0 = pxsim_Array__push(s.tmp_0, "clans");
    r0 = pxsim_Array__push(s.tmp_0, "claps");
    r0 = pxsim_Array__push(s.tmp_0, "clapt");
    r0 = pxsim_Array__push(s.tmp_0, "claro");
    r0 = pxsim_Array__push(s.tmp_0, "clart");
    r0 = pxsim_Array__push(s.tmp_0, "clary");
    r0 = pxsim_Array__push(s.tmp_0, "clash");
    r0 = pxsim_Array__push(s.tmp_0, "clasp");
    r0 = pxsim_Array__push(s.tmp_0, "class");
    r0 = pxsim_Array__push(s.tmp_0, "clast");
    r0 = pxsim_Array__push(s.tmp_0, "clats");
    r0 = pxsim_Array__push(s.tmp_0, "claut");
    r0 = pxsim_Array__push(s.tmp_0, "clave");
    r0 = pxsim_Array__push(s.tmp_0, "clavi");
    r0 = pxsim_Array__push(s.tmp_0, "claws");
    r0 = pxsim_Array__push(s.tmp_0, "clays");
    r0 = pxsim_Array__push(s.tmp_0, "clean");
    r0 = pxsim_Array__push(s.tmp_0, "clear");
    r0 = pxsim_Array__push(s.tmp_0, "cleat");
    r0 = pxsim_Array__push(s.tmp_0, "cleck");
    r0 = pxsim_Array__push(s.tmp_0, "cleek");
    r0 = pxsim_Array__push(s.tmp_0, "cleep");
    r0 = pxsim_Array__push(s.tmp_0, "clefs");
    r0 = pxsim_Array__push(s.tmp_0, "cleft");
    r0 = pxsim_Array__push(s.tmp_0, "clegs");
    r0 = pxsim_Array__push(s.tmp_0, "cleik");
    r0 = pxsim_Array__push(s.tmp_0, "clems");
    r0 = pxsim_Array__push(s.tmp_0, "clepe");
    r0 = pxsim_Array__push(s.tmp_0, "clept");
    r0 = pxsim_Array__push(s.tmp_0, "clerk");
    r0 = pxsim_Array__push(s.tmp_0, "cleve");
    r0 = pxsim_Array__push(s.tmp_0, "clews");
    r0 = pxsim_Array__push(s.tmp_0, "click");
    r0 = pxsim_Array__push(s.tmp_0, "clied");
    r0 = pxsim_Array__push(s.tmp_0, "clies");
    r0 = pxsim_Array__push(s.tmp_0, "cliff");
    r0 = pxsim_Array__push(s.tmp_0, "clift");
    r0 = pxsim_Array__push(s.tmp_0, "climb");
    r0 = pxsim_Array__push(s.tmp_0, "clime");
    r0 = pxsim_Array__push(s.tmp_0, "cline");
    r0 = pxsim_Array__push(s.tmp_0, "cling");
    r0 = pxsim_Array__push(s.tmp_0, "clink");
    r0 = pxsim_Array__push(s.tmp_0, "clint");
    r0 = pxsim_Array__push(s.tmp_0, "clipe");
    r0 = pxsim_Array__push(s.tmp_0, "clips");
    r0 = pxsim_Array__push(s.tmp_0, "clipt");
    r0 = pxsim_Array__push(s.tmp_0, "clits");
    r0 = pxsim_Array__push(s.tmp_0, "cloak");
    r0 = pxsim_Array__push(s.tmp_0, "cloam");
    r0 = pxsim_Array__push(s.tmp_0, "clock");
    r0 = pxsim_Array__push(s.tmp_0, "clods");
    r0 = pxsim_Array__push(s.tmp_0, "cloff");
    r0 = pxsim_Array__push(s.tmp_0, "clogs");
    r0 = pxsim_Array__push(s.tmp_0, "cloke");
    r0 = pxsim_Array__push(s.tmp_0, "clomb");
    r0 = pxsim_Array__push(s.tmp_0, "clomp");
    r0 = pxsim_Array__push(s.tmp_0, "clone");
    r0 = pxsim_Array__push(s.tmp_0, "clonk");
    r0 = pxsim_Array__push(s.tmp_0, "clons");
    r0 = pxsim_Array__push(s.tmp_0, "cloop");
    r0 = pxsim_Array__push(s.tmp_0, "cloot");
    r0 = pxsim_Array__push(s.tmp_0, "clops");
    r0 = pxsim_Array__push(s.tmp_0, "close");
    r0 = pxsim_Array__push(s.tmp_0, "clote");
    r0 = pxsim_Array__push(s.tmp_0, "cloth");
    r0 = pxsim_Array__push(s.tmp_0, "clots");
    r0 = pxsim_Array__push(s.tmp_0, "cloud");
    r0 = pxsim_Array__push(s.tmp_0, "clour");
    r0 = pxsim_Array__push(s.tmp_0, "clous");
    r0 = pxsim_Array__push(s.tmp_0, "clout");
    r0 = pxsim_Array__push(s.tmp_0, "clove");
    r0 = pxsim_Array__push(s.tmp_0, "clown");
    r0 = pxsim_Array__push(s.tmp_0, "clows");
    r0 = pxsim_Array__push(s.tmp_0, "cloye");
    r0 = pxsim_Array__push(s.tmp_0, "cloys");
    r0 = pxsim_Array__push(s.tmp_0, "cloze");
    r0 = pxsim_Array__push(s.tmp_0, "clubs");
    r0 = pxsim_Array__push(s.tmp_0, "cluck");
    r0 = pxsim_Array__push(s.tmp_0, "clued");
    r0 = pxsim_Array__push(s.tmp_0, "clues");
    r0 = pxsim_Array__push(s.tmp_0, "cluey");
    r0 = pxsim_Array__push(s.tmp_0, "clump");
    r0 = pxsim_Array__push(s.tmp_0, "clung");
    r0 = pxsim_Array__push(s.tmp_0, "clunk");
    r0 = pxsim_Array__push(s.tmp_0, "clype");
    r0 = pxsim_Array__push(s.tmp_0, "cnida");
    r0 = pxsim_Array__push(s.tmp_0, "coach");
    r0 = pxsim_Array__push(s.tmp_0, "coact");
    r0 = pxsim_Array__push(s.tmp_0, "coady");
    r0 = pxsim_Array__push(s.tmp_0, "coala");
    r0 = pxsim_Array__push(s.tmp_0, "coals");
    r0 = pxsim_Array__push(s.tmp_0, "coaly");
    r0 = pxsim_Array__push(s.tmp_0, "coapt");
    r0 = pxsim_Array__push(s.tmp_0, "coarb");
    r0 = pxsim_Array__push(s.tmp_0, "coast");
    r0 = pxsim_Array__push(s.tmp_0, "coate");
    r0 = pxsim_Array__push(s.tmp_0, "coati");
    r0 = pxsim_Array__push(s.tmp_0, "coats");
    r0 = pxsim_Array__push(s.tmp_0, "cobbs");
    r0 = pxsim_Array__push(s.tmp_0, "cobby");
    r0 = pxsim_Array__push(s.tmp_0, "cobia");
    r0 = pxsim_Array__push(s.tmp_0, "coble");
    r0 = pxsim_Array__push(s.tmp_0, "cobot");
    r0 = pxsim_Array__push(s.tmp_0, "cobra");
    r0 = pxsim_Array__push(s.tmp_0, "cobza");
    r0 = pxsim_Array__push(s.tmp_0, "cocas");
    r0 = pxsim_Array__push(s.tmp_0, "cocci");
    r0 = pxsim_Array__push(s.tmp_0, "cocco");
    r0 = pxsim_Array__push(s.tmp_0, "cocks");
    r0 = pxsim_Array__push(s.tmp_0, "cocky");
    r0 = pxsim_Array__push(s.tmp_0, "cocoa");
    r0 = pxsim_Array__push(s.tmp_0, "cocos");
    r0 = pxsim_Array__push(s.tmp_0, "cocus");
    r0 = pxsim_Array__push(s.tmp_0, "codas");
    r0 = pxsim_Array__push(s.tmp_0, "codec");
    r0 = pxsim_Array__push(s.tmp_0, "coded");
    r0 = pxsim_Array__push(s.tmp_0, "coden");
    r0 = pxsim_Array__push(s.tmp_0, "coder");
    r0 = pxsim_Array__push(s.tmp_0, "codes");
    r0 = pxsim_Array__push(s.tmp_0, "codex");
    r0 = pxsim_Array__push(s.tmp_0, "codon");
    r0 = pxsim_Array__push(s.tmp_0, "coeds");
    r0 = pxsim_Array__push(s.tmp_0, "coffs");
    r0 = pxsim_Array__push(s.tmp_0, "cogie");
    r0 = pxsim_Array__push(s.tmp_0, "cogon");
    r0 = pxsim_Array__push(s.tmp_0, "cogue");
    r0 = pxsim_Array__push(s.tmp_0, "cohab");
    r0 = pxsim_Array__push(s.tmp_0, "cohen");
    r0 = pxsim_Array__push(s.tmp_0, "cohoe");
    r0 = pxsim_Array__push(s.tmp_0, "cohog");
    r0 = pxsim_Array__push(s.tmp_0, "cohos");
    r0 = pxsim_Array__push(s.tmp_0, "coifs");
    r0 = pxsim_Array__push(s.tmp_0, "coign");
    r0 = pxsim_Array__push(s.tmp_0, "coils");
    r0 = pxsim_Array__push(s.tmp_0, "coins");
    r0 = pxsim_Array__push(s.tmp_0, "coirs");
    r0 = pxsim_Array__push(s.tmp_0, "coits");
    r0 = pxsim_Array__push(s.tmp_0, "coked");
    r0 = pxsim_Array__push(s.tmp_0, "cokes");
    r0 = pxsim_Array__push(s.tmp_0, "cokey");
    r0 = pxsim_Array__push(s.tmp_0, "colas");
    r0 = pxsim_Array__push(s.tmp_0, "colby");
    r0 = pxsim_Array__push(s.tmp_0, "colds");
    r0 = pxsim_Array__push(s.tmp_0, "coled");
    r0 = pxsim_Array__push(s.tmp_0, "coles");
    r0 = pxsim_Array__push(s.tmp_0, "coley");
    r0 = pxsim_Array__push(s.tmp_0, "colic");
    r0 = pxsim_Array__push(s.tmp_0, "colin");
    r0 = pxsim_Array__push(s.tmp_0, "colle");
    r0 = pxsim_Array__push(s.tmp_0, "colls");
    r0 = pxsim_Array__push(s.tmp_0, "colly");
    r0 = pxsim_Array__push(s.tmp_0, "colog");
    r0 = pxsim_Array__push(s.tmp_0, "colon");
    r0 = pxsim_Array__push(s.tmp_0, "color");
    r0 = pxsim_Array__push(s.tmp_0, "colts");
    r0 = pxsim_Array__push(s.tmp_0, "colza");
    r0 = pxsim_Array__push(s.tmp_0, "comae");
    r0 = pxsim_Array__push(s.tmp_0, "comal");
    r0 = pxsim_Array__push(s.tmp_0, "comas");
    r0 = pxsim_Array__push(s.tmp_0, "combe");
    r0 = pxsim_Array__push(s.tmp_0, "combi");
    r0 = pxsim_Array__push(s.tmp_0, "combo");
    r0 = pxsim_Array__push(s.tmp_0, "combs");
    r0 = pxsim_Array__push(s.tmp_0, "comby");
    r0 = pxsim_Array__push(s.tmp_0, "comer");
    r0 = pxsim_Array__push(s.tmp_0, "comes");
    r0 = pxsim_Array__push(s.tmp_0, "comet");
    r0 = pxsim_Array__push(s.tmp_0, "comfy");
    r0 = pxsim_Array__push(s.tmp_0, "comic");
    r0 = pxsim_Array__push(s.tmp_0, "comix");
    r0 = pxsim_Array__push(s.tmp_0, "comma");
    r0 = pxsim_Array__push(s.tmp_0, "comme");
    r0 = pxsim_Array__push(s.tmp_0, "commo");
    r0 = pxsim_Array__push(s.tmp_0, "comms");
    r0 = pxsim_Array__push(s.tmp_0, "commy");
    r0 = pxsim_Array__push(s.tmp_0, "compo");
    r0 = pxsim_Array__push(s.tmp_0, "comps");
    r0 = pxsim_Array__push(s.tmp_0, "compt");
    r0 = pxsim_Array__push(s.tmp_0, "comte");
    r0 = pxsim_Array__push(s.tmp_0, "comus");
    r0 = pxsim_Array__push(s.tmp_0, "conch");
    r0 = pxsim_Array__push(s.tmp_0, "condo");
    r0 = pxsim_Array__push(s.tmp_0, "coned");
    r0 = pxsim_Array__push(s.tmp_0, "cones");
    r0 = pxsim_Array__push(s.tmp_0, "conex");
    r0 = pxsim_Array__push(s.tmp_0, "coney");
    r0 = pxsim_Array__push(s.tmp_0, "confs");
    r0 = pxsim_Array__push(s.tmp_0, "conga");
    r0 = pxsim_Array__push(s.tmp_0, "conge");
    r0 = pxsim_Array__push(s.tmp_0, "congo");
    r0 = pxsim_Array__push(s.tmp_0, "conia");
    r0 = pxsim_Array__push(s.tmp_0, "conic");
    r0 = pxsim_Array__push(s.tmp_0, "conin");
    r0 = pxsim_Array__push(s.tmp_0, "conks");
    r0 = pxsim_Array__push(s.tmp_0, "conky");
    r0 = pxsim_Array__push(s.tmp_0, "conne");
    r0 = pxsim_Array__push(s.tmp_0, "conns");
    r0 = pxsim_Array__push(s.tmp_0, "conte");
    r0 = pxsim_Array__push(s.tmp_0, "conto");
    r0 = pxsim_Array__push(s.tmp_0, "conus");
    r0 = pxsim_Array__push(s.tmp_0, "convo");
    r0 = pxsim_Array__push(s.tmp_0, "cooch");
    r0 = pxsim_Array__push(s.tmp_0, "cooed");
    r0 = pxsim_Array__push(s.tmp_0, "cooee");
    r0 = pxsim_Array__push(s.tmp_0, "cooer");
    r0 = pxsim_Array__push(s.tmp_0, "cooey");
    r0 = pxsim_Array__push(s.tmp_0, "coofs");
    r0 = pxsim_Array__push(s.tmp_0, "cooks");
    r0 = pxsim_Array__push(s.tmp_0, "cooky");
    r0 = pxsim_Array__push(s.tmp_0, "cools");
    r0 = pxsim_Array__push(s.tmp_0, "cooly");
    r0 = pxsim_Array__push(s.tmp_0, "coomb");
    r0 = pxsim_Array__push(s.tmp_0, "cooms");
    r0 = pxsim_Array__push(s.tmp_0, "coomy");
    r0 = pxsim_Array__push(s.tmp_0, "coons");
    r0 = pxsim_Array__push(s.tmp_0, "coops");
    r0 = pxsim_Array__push(s.tmp_0, "coopt");
    r0 = pxsim_Array__push(s.tmp_0, "coost");
    r0 = pxsim_Array__push(s.tmp_0, "coots");
    r0 = pxsim_Array__push(s.tmp_0, "cooty");
    r0 = pxsim_Array__push(s.tmp_0, "cooze");
    r0 = pxsim_Array__push(s.tmp_0, "copal");
    r0 = pxsim_Array__push(s.tmp_0, "copay");
    r0 = pxsim_Array__push(s.tmp_0, "coped");
    r0 = pxsim_Array__push(s.tmp_0, "copen");
    r0 = pxsim_Array__push(s.tmp_0, "coper");
    r0 = pxsim_Array__push(s.tmp_0, "copes");
    r0 = pxsim_Array__push(s.tmp_0, "copha");
    r0 = pxsim_Array__push(s.tmp_0, "coppy");
    r0 = pxsim_Array__push(s.tmp_0, "copra");
    r0 = pxsim_Array__push(s.tmp_0, "copse");
    r0 = pxsim_Array__push(s.tmp_0, "copsy");
    r0 = pxsim_Array__push(s.tmp_0, "coqui");
    r0 = pxsim_Array__push(s.tmp_0, "coral");
    r0 = pxsim_Array__push(s.tmp_0, "coram");
    r0 = pxsim_Array__push(s.tmp_0, "corbe");
    r0 = pxsim_Array__push(s.tmp_0, "corby");
    r0 = pxsim_Array__push(s.tmp_0, "corda");
    r0 = pxsim_Array__push(s.tmp_0, "cords");
    r0 = pxsim_Array__push(s.tmp_0, "cored");
    r0 = pxsim_Array__push(s.tmp_0, "corer");
    r0 = pxsim_Array__push(s.tmp_0, "cores");
    r0 = pxsim_Array__push(s.tmp_0, "corey");
    r0 = pxsim_Array__push(s.tmp_0, "corgi");
    r0 = pxsim_Array__push(s.tmp_0, "coria");
    r0 = pxsim_Array__push(s.tmp_0, "corks");
    r0 = pxsim_Array__push(s.tmp_0, "corky");
    r0 = pxsim_Array__push(s.tmp_0, "corms");
    r0 = pxsim_Array__push(s.tmp_0, "corni");
    r0 = pxsim_Array__push(s.tmp_0, "corno");
    r0 = pxsim_Array__push(s.tmp_0, "corns");
    r0 = pxsim_Array__push(s.tmp_0, "cornu");
    r0 = pxsim_Array__push(s.tmp_0, "corny");
    r0 = pxsim_Array__push(s.tmp_0, "corps");
    r0 = pxsim_Array__push(s.tmp_0, "corse");
    r0 = pxsim_Array__push(s.tmp_0, "corso");
    r0 = pxsim_Array__push(s.tmp_0, "cosec");
    r0 = pxsim_Array__push(s.tmp_0, "cosed");
    r0 = pxsim_Array__push(s.tmp_0, "coses");
    r0 = pxsim_Array__push(s.tmp_0, "coset");
    r0 = pxsim_Array__push(s.tmp_0, "cosey");
    r0 = pxsim_Array__push(s.tmp_0, "cosie");
    r0 = pxsim_Array__push(s.tmp_0, "costa");
    r0 = pxsim_Array__push(s.tmp_0, "coste");
    r0 = pxsim_Array__push(s.tmp_0, "costs");
    r0 = pxsim_Array__push(s.tmp_0, "cotan");
    r0 = pxsim_Array__push(s.tmp_0, "cotch");
    r0 = pxsim_Array__push(s.tmp_0, "coted");
    r0 = pxsim_Array__push(s.tmp_0, "cotes");
    r0 = pxsim_Array__push(s.tmp_0, "coths");
    r0 = pxsim_Array__push(s.tmp_0, "cotta");
    r0 = pxsim_Array__push(s.tmp_0, "cotts");
    r0 = pxsim_Array__push(s.tmp_0, "couch");
    r0 = pxsim_Array__push(s.tmp_0, "coude");
    r0 = pxsim_Array__push(s.tmp_0, "cough");
    r0 = pxsim_Array__push(s.tmp_0, "could");
    r0 = pxsim_Array__push(s.tmp_0, "count");
    r0 = pxsim_Array__push(s.tmp_0, "coupe");
    r0 = pxsim_Array__push(s.tmp_0, "coups");
    r0 = pxsim_Array__push(s.tmp_0, "courb");
    r0 = pxsim_Array__push(s.tmp_0, "courd");
    r0 = pxsim_Array__push(s.tmp_0, "coure");
    r0 = pxsim_Array__push(s.tmp_0, "cours");
    r0 = pxsim_Array__push(s.tmp_0, "court");
    r0 = pxsim_Array__push(s.tmp_0, "couta");
    r0 = pxsim_Array__push(s.tmp_0, "couth");
    r0 = pxsim_Array__push(s.tmp_0, "coved");
    r0 = pxsim_Array__push(s.tmp_0, "coven");
    r0 = pxsim_Array__push(s.tmp_0, "cover");
    r0 = pxsim_Array__push(s.tmp_0, "coves");
    r0 = pxsim_Array__push(s.tmp_0, "covet");
    r0 = pxsim_Array__push(s.tmp_0, "covey");
    r0 = pxsim_Array__push(s.tmp_0, "covin");
    r0 = pxsim_Array__push(s.tmp_0, "cowal");
    r0 = pxsim_Array__push(s.tmp_0, "cowan");
    r0 = pxsim_Array__push(s.tmp_0, "cowed");
    r0 = pxsim_Array__push(s.tmp_0, "cower");
    r0 = pxsim_Array__push(s.tmp_0, "cowks");
    r0 = pxsim_Array__push(s.tmp_0, "cowls");
    r0 = pxsim_Array__push(s.tmp_0, "cowps");
    r0 = pxsim_Array__push(s.tmp_0, "cowry");
    r0 = pxsim_Array__push(s.tmp_0, "coxae");
    r0 = pxsim_Array__push(s.tmp_0, "coxal");
    r0 = pxsim_Array__push(s.tmp_0, "coxed");
    r0 = pxsim_Array__push(s.tmp_0, "coxes");
    r0 = pxsim_Array__push(s.tmp_0, "coxib");
    r0 = pxsim_Array__push(s.tmp_0, "coyau");
    r0 = pxsim_Array__push(s.tmp_0, "coyed");
    r0 = pxsim_Array__push(s.tmp_0, "coyer");
    r0 = pxsim_Array__push(s.tmp_0, "coyly");
    r0 = pxsim_Array__push(s.tmp_0, "coypu");
    r0 = pxsim_Array__push(s.tmp_0, "cozed");
    r0 = pxsim_Array__push(s.tmp_0, "cozen");
    r0 = pxsim_Array__push(s.tmp_0, "cozes");
    r0 = pxsim_Array__push(s.tmp_0, "cozey");
    r0 = pxsim_Array__push(s.tmp_0, "cozie");
    r0 = pxsim_Array__push(s.tmp_0, "craal");
    r0 = pxsim_Array__push(s.tmp_0, "crabs");
    r0 = pxsim_Array__push(s.tmp_0, "crack");
    r0 = pxsim_Array__push(s.tmp_0, "craft");
    r0 = pxsim_Array__push(s.tmp_0, "crags");
    r0 = pxsim_Array__push(s.tmp_0, "craic");
    r0 = pxsim_Array__push(s.tmp_0, "craig");
    r0 = pxsim_Array__push(s.tmp_0, "crake");
    r0 = pxsim_Array__push(s.tmp_0, "crame");
    r0 = pxsim_Array__push(s.tmp_0, "cramp");
    r0 = pxsim_Array__push(s.tmp_0, "crams");
    r0 = pxsim_Array__push(s.tmp_0, "crane");
    r0 = pxsim_Array__push(s.tmp_0, "crank");
    r0 = pxsim_Array__push(s.tmp_0, "crans");
    r0 = pxsim_Array__push(s.tmp_0, "crape");
    r0 = pxsim_Array__push(s.tmp_0, "craps");
    r0 = pxsim_Array__push(s.tmp_0, "crapy");
    r0 = pxsim_Array__push(s.tmp_0, "crare");
    r0 = pxsim_Array__push(s.tmp_0, "crash");
    r0 = pxsim_Array__push(s.tmp_0, "crass");
    r0 = pxsim_Array__push(s.tmp_0, "crate");
    r0 = pxsim_Array__push(s.tmp_0, "crave");
    r0 = pxsim_Array__push(s.tmp_0, "crawl");
    r0 = pxsim_Array__push(s.tmp_0, "craws");
    r0 = pxsim_Array__push(s.tmp_0, "crays");
    r0 = pxsim_Array__push(s.tmp_0, "craze");
    r0 = pxsim_Array__push(s.tmp_0, "crazy");
    r0 = pxsim_Array__push(s.tmp_0, "creak");
    r0 = pxsim_Array__push(s.tmp_0, "cream");
    r0 = pxsim_Array__push(s.tmp_0, "credo");
    r0 = pxsim_Array__push(s.tmp_0, "creds");
    r0 = pxsim_Array__push(s.tmp_0, "creed");
    r0 = pxsim_Array__push(s.tmp_0, "creek");
    r0 = pxsim_Array__push(s.tmp_0, "creel");
    r0 = pxsim_Array__push(s.tmp_0, "creep");
    r0 = pxsim_Array__push(s.tmp_0, "crees");
    r0 = pxsim_Array__push(s.tmp_0, "crein");
    r0 = pxsim_Array__push(s.tmp_0, "crema");
    r0 = pxsim_Array__push(s.tmp_0, "creme");
    r0 = pxsim_Array__push(s.tmp_0, "crems");
    r0 = pxsim_Array__push(s.tmp_0, "crena");
    r0 = pxsim_Array__push(s.tmp_0, "crepe");
    r0 = pxsim_Array__push(s.tmp_0, "creps");
    r0 = pxsim_Array__push(s.tmp_0, "crept");
    r0 = pxsim_Array__push(s.tmp_0, "crepy");
    r0 = pxsim_Array__push(s.tmp_0, "cress");
    r0 = pxsim_Array__push(s.tmp_0, "crest");
    r0 = pxsim_Array__push(s.tmp_0, "crewe");
    r0 = pxsim_Array__push(s.tmp_0, "crews");
    r0 = pxsim_Array__push(s.tmp_0, "crias");
    r0 = pxsim_Array__push(s.tmp_0, "cribo");
    r0 = pxsim_Array__push(s.tmp_0, "cribs");
    r0 = pxsim_Array__push(s.tmp_0, "crick");
    r0 = pxsim_Array__push(s.tmp_0, "cried");
    r0 = pxsim_Array__push(s.tmp_0, "crier");
    r0 = pxsim_Array__push(s.tmp_0, "cries");
    r0 = pxsim_Array__push(s.tmp_0, "crime");
    r0 = pxsim_Array__push(s.tmp_0, "crimp");
    r0 = pxsim_Array__push(s.tmp_0, "crims");
    r0 = pxsim_Array__push(s.tmp_0, "crine");
    r0 = pxsim_Array__push(s.tmp_0, "crink");
    r0 = pxsim_Array__push(s.tmp_0, "crins");
    r0 = pxsim_Array__push(s.tmp_0, "crios");
    r0 = pxsim_Array__push(s.tmp_0, "cripe");
    r0 = pxsim_Array__push(s.tmp_0, "crips");
    r0 = pxsim_Array__push(s.tmp_0, "crise");
    r0 = pxsim_Array__push(s.tmp_0, "crisp");
    r0 = pxsim_Array__push(s.tmp_0, "criss");
    r0 = pxsim_Array__push(s.tmp_0, "crith");
    r0 = pxsim_Array__push(s.tmp_0, "crits");
    r0 = pxsim_Array__push(s.tmp_0, "croak");
    r0 = pxsim_Array__push(s.tmp_0, "croci");
    r0 = pxsim_Array__push(s.tmp_0, "crock");
    r0 = pxsim_Array__push(s.tmp_0, "crocs");
    r0 = pxsim_Array__push(s.tmp_0, "croft");
    r0 = pxsim_Array__push(s.tmp_0, "crogs");
    r0 = pxsim_Array__push(s.tmp_0, "cromb");
    r0 = pxsim_Array__push(s.tmp_0, "crome");
    r0 = pxsim_Array__push(s.tmp_0, "crone");
    r0 = pxsim_Array__push(s.tmp_0, "cronk");
    r0 = pxsim_Array__push(s.tmp_0, "crons");
    r0 = pxsim_Array__push(s.tmp_0, "crony");
    r0 = pxsim_Array__push(s.tmp_0, "crook");
    r0 = pxsim_Array__push(s.tmp_0, "crool");
    r0 = pxsim_Array__push(s.tmp_0, "croon");
    r0 = pxsim_Array__push(s.tmp_0, "crops");
    r0 = pxsim_Array__push(s.tmp_0, "crore");
    r0 = pxsim_Array__push(s.tmp_0, "cross");
    r0 = pxsim_Array__push(s.tmp_0, "crost");
    r0 = pxsim_Array__push(s.tmp_0, "croup");
    r0 = pxsim_Array__push(s.tmp_0, "crout");
    r0 = pxsim_Array__push(s.tmp_0, "crowd");
    r0 = pxsim_Array__push(s.tmp_0, "crowl");
    r0 = pxsim_Array__push(s.tmp_0, "crown");
    r0 = pxsim_Array__push(s.tmp_0, "crows");
    r0 = pxsim_Array__push(s.tmp_0, "croze");
    r0 = pxsim_Array__push(s.tmp_0, "cruck");
    r0 = pxsim_Array__push(s.tmp_0, "crude");
    r0 = pxsim_Array__push(s.tmp_0, "crudo");
    r0 = pxsim_Array__push(s.tmp_0, "cruds");
    r0 = pxsim_Array__push(s.tmp_0, "crudy");
    r0 = pxsim_Array__push(s.tmp_0, "cruel");
    r0 = pxsim_Array__push(s.tmp_0, "crues");
    r0 = pxsim_Array__push(s.tmp_0, "cruet");
    r0 = pxsim_Array__push(s.tmp_0, "cruft");
    r0 = pxsim_Array__push(s.tmp_0, "crumb");
    r0 = pxsim_Array__push(s.tmp_0, "crump");
    r0 = pxsim_Array__push(s.tmp_0, "crunk");
    r0 = pxsim_Array__push(s.tmp_0, "cruor");
    r0 = pxsim_Array__push(s.tmp_0, "crura");
    r0 = pxsim_Array__push(s.tmp_0, "cruse");
    r0 = pxsim_Array__push(s.tmp_0, "crush");
    r0 = pxsim_Array__push(s.tmp_0, "crust");
    r0 = pxsim_Array__push(s.tmp_0, "crusy");
    r0 = pxsim_Array__push(s.tmp_0, "cruve");
    r0 = pxsim_Array__push(s.tmp_0, "crwth");
    r0 = pxsim_Array__push(s.tmp_0, "cryer");
    r0 = pxsim_Array__push(s.tmp_0, "cryne");
    r0 = pxsim_Array__push(s.tmp_0, "crypt");
    r0 = pxsim_Array__push(s.tmp_0, "ctene");
    r0 = pxsim_Array__push(s.tmp_0, "cubby");
    r0 = pxsim_Array__push(s.tmp_0, "cubeb");
    r0 = pxsim_Array__push(s.tmp_0, "cubed");
    r0 = pxsim_Array__push(s.tmp_0, "cuber");
    r0 = pxsim_Array__push(s.tmp_0, "cubes");
    r0 = pxsim_Array__push(s.tmp_0, "cubic");
    r0 = pxsim_Array__push(s.tmp_0, "cubit");
    r0 = pxsim_Array__push(s.tmp_0, "cucks");
    r0 = pxsim_Array__push(s.tmp_0, "cudda");
    r0 = pxsim_Array__push(s.tmp_0, "cuddy");
    r0 = pxsim_Array__push(s.tmp_0, "cueca");
    r0 = pxsim_Array__push(s.tmp_0, "cuffo");
    r0 = pxsim_Array__push(s.tmp_0, "cuffs");
    r0 = pxsim_Array__push(s.tmp_0, "cuifs");
    r0 = pxsim_Array__push(s.tmp_0, "cuing");
    r0 = pxsim_Array__push(s.tmp_0, "cuish");
    r0 = pxsim_Array__push(s.tmp_0, "cuits");
    r0 = pxsim_Array__push(s.tmp_0, "cukes");
    r0 = pxsim_Array__push(s.tmp_0, "culch");
    r0 = pxsim_Array__push(s.tmp_0, "culet");
    r0 = pxsim_Array__push(s.tmp_0, "culex");
    r0 = pxsim_Array__push(s.tmp_0, "culls");
    r0 = pxsim_Array__push(s.tmp_0, "cully");
    r0 = pxsim_Array__push(s.tmp_0, "culms");
    r0 = pxsim_Array__push(s.tmp_0, "culpa");
    r0 = pxsim_Array__push(s.tmp_0, "culti");
    r0 = pxsim_Array__push(s.tmp_0, "cults");
    r0 = pxsim_Array__push(s.tmp_0, "culty");
    r0 = pxsim_Array__push(s.tmp_0, "cumec");
    r0 = pxsim_Array__push(s.tmp_0, "cumin");
    r0 = pxsim_Array__push(s.tmp_0, "cundy");
    r0 = pxsim_Array__push(s.tmp_0, "cunei");
    r0 = pxsim_Array__push(s.tmp_0, "cunit");
    r0 = pxsim_Array__push(s.tmp_0, "cunny");
    r0 = pxsim_Array__push(s.tmp_0, "cunts");
    r0 = pxsim_Array__push(s.tmp_0, "cupel");
    r0 = pxsim_Array__push(s.tmp_0, "cupid");
    r0 = pxsim_Array__push(s.tmp_0, "cuppa");
    r0 = pxsim_Array__push(s.tmp_0, "cuppy");
    r0 = pxsim_Array__push(s.tmp_0, "cupro");
    r0 = pxsim_Array__push(s.tmp_0, "curat");
    r0 = pxsim_Array__push(s.tmp_0, "curbs");
    r0 = pxsim_Array__push(s.tmp_0, "curch");
    r0 = pxsim_Array__push(s.tmp_0, "curds");
    r0 = pxsim_Array__push(s.tmp_0, "curdy");
    r0 = pxsim_Array__push(s.tmp_0, "cured");
    r0 = pxsim_Array__push(s.tmp_0, "curer");
    r0 = pxsim_Array__push(s.tmp_0, "cures");
    r0 = pxsim_Array__push(s.tmp_0, "curet");
    r0 = pxsim_Array__push(s.tmp_0, "curfs");
    r0 = pxsim_Array__push(s.tmp_0, "curia");
    r0 = pxsim_Array__push(s.tmp_0, "curie");
    r0 = pxsim_Array__push(s.tmp_0, "curio");
    r0 = pxsim_Array__push(s.tmp_0, "curli");
    r0 = pxsim_Array__push(s.tmp_0, "curls");
    r0 = pxsim_Array__push(s.tmp_0, "curly");
    r0 = pxsim_Array__push(s.tmp_0, "curns");
    r0 = pxsim_Array__push(s.tmp_0, "curny");
    r0 = pxsim_Array__push(s.tmp_0, "currs");
    r0 = pxsim_Array__push(s.tmp_0, "curry");
    r0 = pxsim_Array__push(s.tmp_0, "curse");
    r0 = pxsim_Array__push(s.tmp_0, "cursi");
    r0 = pxsim_Array__push(s.tmp_0, "curst");
    r0 = pxsim_Array__push(s.tmp_0, "curve");
    r0 = pxsim_Array__push(s.tmp_0, "curvy");
    r0 = pxsim_Array__push(s.tmp_0, "cusec");
    r0 = pxsim_Array__push(s.tmp_0, "cushy");
    r0 = pxsim_Array__push(s.tmp_0, "cusks");
    r0 = pxsim_Array__push(s.tmp_0, "cusps");
    r0 = pxsim_Array__push(s.tmp_0, "cuspy");
    r0 = pxsim_Array__push(s.tmp_0, "cusso");
    r0 = pxsim_Array__push(s.tmp_0, "cusum");
    r0 = pxsim_Array__push(s.tmp_0, "cutch");
    r0 = pxsim_Array__push(s.tmp_0, "cuter");
    r0 = pxsim_Array__push(s.tmp_0, "cutes");
    r0 = pxsim_Array__push(s.tmp_0, "cutey");
    r0 = pxsim_Array__push(s.tmp_0, "cutie");
    r0 = pxsim_Array__push(s.tmp_0, "cutin");
    r0 = pxsim_Array__push(s.tmp_0, "cutis");
    r0 = pxsim_Array__push(s.tmp_0, "cutto");
    r0 = pxsim_Array__push(s.tmp_0, "cutty");
    r0 = pxsim_Array__push(s.tmp_0, "cutup");
    r0 = pxsim_Array__push(s.tmp_0, "cuvee");
    r0 = pxsim_Array__push(s.tmp_0, "cuzes");
    r0 = pxsim_Array__push(s.tmp_0, "cwtch");
    r0 = pxsim_Array__push(s.tmp_0, "cyano");
    r0 = pxsim_Array__push(s.tmp_0, "cyans");
    r0 = pxsim_Array__push(s.tmp_0, "cyber");
    r0 = pxsim_Array__push(s.tmp_0, "cycad");
    r0 = pxsim_Array__push(s.tmp_0, "cycas");
    r0 = pxsim_Array__push(s.tmp_0, "cycle");
    r0 = pxsim_Array__push(s.tmp_0, "cyclo");
    r0 = pxsim_Array__push(s.tmp_0, "cyder");
    r0 = pxsim_Array__push(s.tmp_0, "cylix");
    r0 = pxsim_Array__push(s.tmp_0, "cymae");
    r0 = pxsim_Array__push(s.tmp_0, "cymar");
    r0 = pxsim_Array__push(s.tmp_0, "cymas");
    r0 = pxsim_Array__push(s.tmp_0, "cymes");
    r0 = pxsim_Array__push(s.tmp_0, "cymol");
    r0 = pxsim_Array__push(s.tmp_0, "cynic");
    r0 = pxsim_Array__push(s.tmp_0, "cysts");
    r0 = pxsim_Array__push(s.tmp_0, "cytes");
    r0 = pxsim_Array__push(s.tmp_0, "cyton");
    r0 = pxsim_Array__push(s.tmp_0, "czars");
    r0 = pxsim_Array__push(s.tmp_0, "daals");
    r0 = pxsim_Array__push(s.tmp_0, "dabba");
    r0 = pxsim_Array__push(s.tmp_0, "daces");
    r0 = pxsim_Array__push(s.tmp_0, "dacha");
    r0 = pxsim_Array__push(s.tmp_0, "dacks");
    r0 = pxsim_Array__push(s.tmp_0, "dadah");
    r0 = pxsim_Array__push(s.tmp_0, "dadas");
    r0 = pxsim_Array__push(s.tmp_0, "daddy");
    r0 = pxsim_Array__push(s.tmp_0, "dadis");
    r0 = pxsim_Array__push(s.tmp_0, "dadla");
    r0 = pxsim_Array__push(s.tmp_0, "dados");
    r0 = pxsim_Array__push(s.tmp_0, "daffs");
    r0 = pxsim_Array__push(s.tmp_0, "daffy");
    r0 = pxsim_Array__push(s.tmp_0, "dagga");
    r0 = pxsim_Array__push(s.tmp_0, "daggy");
    r0 = pxsim_Array__push(s.tmp_0, "dagos");
    r0 = pxsim_Array__push(s.tmp_0, "dahis");
    r0 = pxsim_Array__push(s.tmp_0, "dahls");
    r0 = pxsim_Array__push(s.tmp_0, "daiko");
    r0 = pxsim_Array__push(s.tmp_0, "daily");
    r0 = pxsim_Array__push(s.tmp_0, "daine");
    r0 = pxsim_Array__push(s.tmp_0, "daint");
    r0 = pxsim_Array__push(s.tmp_0, "dairy");
    r0 = pxsim_Array__push(s.tmp_0, "daisy");
    r0 = pxsim_Array__push(s.tmp_0, "daker");
    r0 = pxsim_Array__push(s.tmp_0, "daled");
    r0 = pxsim_Array__push(s.tmp_0, "dalek");
    r0 = pxsim_Array__push(s.tmp_0, "dales");
    r0 = pxsim_Array__push(s.tmp_0, "dalis");
    r0 = pxsim_Array__push(s.tmp_0, "dalle");
    r0 = pxsim_Array__push(s.tmp_0, "dally");
    r0 = pxsim_Array__push(s.tmp_0, "dalts");
    r0 = pxsim_Array__push(s.tmp_0, "daman");
    r0 = pxsim_Array__push(s.tmp_0, "damar");
    r0 = pxsim_Array__push(s.tmp_0, "dames");
    r0 = pxsim_Array__push(s.tmp_0, "damme");
    r0 = pxsim_Array__push(s.tmp_0, "damna");
    r0 = pxsim_Array__push(s.tmp_0, "damns");
    r0 = pxsim_Array__push(s.tmp_0, "damps");
    r0 = pxsim_Array__push(s.tmp_0, "dampy");
    r0 = pxsim_Array__push(s.tmp_0, "dance");
    r0 = pxsim_Array__push(s.tmp_0, "dancy");
    r0 = pxsim_Array__push(s.tmp_0, "danda");
    r0 = pxsim_Array__push(s.tmp_0, "dandy");
    r0 = pxsim_Array__push(s.tmp_0, "dangs");
    r0 = pxsim_Array__push(s.tmp_0, "danio");
    r0 = pxsim_Array__push(s.tmp_0, "danks");
    r0 = pxsim_Array__push(s.tmp_0, "danny");
    r0 = pxsim_Array__push(s.tmp_0, "danse");
    r0 = pxsim_Array__push(s.tmp_0, "dants");
    r0 = pxsim_Array__push(s.tmp_0, "dappy");
    r0 = pxsim_Array__push(s.tmp_0, "daraf");
    r0 = pxsim_Array__push(s.tmp_0, "darbs");
    r0 = pxsim_Array__push(s.tmp_0, "darcy");
    r0 = pxsim_Array__push(s.tmp_0, "dared");
    r0 = pxsim_Array__push(s.tmp_0, "darer");
    r0 = pxsim_Array__push(s.tmp_0, "dares");
    r0 = pxsim_Array__push(s.tmp_0, "darga");
    r0 = pxsim_Array__push(s.tmp_0, "dargs");
    r0 = pxsim_Array__push(s.tmp_0, "daric");
    r0 = pxsim_Array__push(s.tmp_0, "daris");
    r0 = pxsim_Array__push(s.tmp_0, "darks");
    r0 = pxsim_Array__push(s.tmp_0, "darky");
    r0 = pxsim_Array__push(s.tmp_0, "darls");
    r0 = pxsim_Array__push(s.tmp_0, "darns");
    r0 = pxsim_Array__push(s.tmp_0, "darre");
    r0 = pxsim_Array__push(s.tmp_0, "darts");
    r0 = pxsim_Array__push(s.tmp_0, "darzi");
    r0 = pxsim_Array__push(s.tmp_0, "dashi");
    r0 = pxsim_Array__push(s.tmp_0, "dashy");
    r0 = pxsim_Array__push(s.tmp_0, "datal");
    r0 = pxsim_Array__push(s.tmp_0, "dated");
    r0 = pxsim_Array__push(s.tmp_0, "dater");
    r0 = pxsim_Array__push(s.tmp_0, "dates");
    r0 = pxsim_Array__push(s.tmp_0, "datil");
    r0 = pxsim_Array__push(s.tmp_0, "datos");
    r0 = pxsim_Array__push(s.tmp_0, "datto");
    r0 = pxsim_Array__push(s.tmp_0, "datum");
    r0 = pxsim_Array__push(s.tmp_0, "daube");
    r0 = pxsim_Array__push(s.tmp_0, "daubs");
    r0 = pxsim_Array__push(s.tmp_0, "dauby");
    r0 = pxsim_Array__push(s.tmp_0, "dauds");
    r0 = pxsim_Array__push(s.tmp_0, "dault");
    r0 = pxsim_Array__push(s.tmp_0, "daunt");
    r0 = pxsim_Array__push(s.tmp_0, "daurs");
    r0 = pxsim_Array__push(s.tmp_0, "dauts");
    r0 = pxsim_Array__push(s.tmp_0, "daven");
    r0 = pxsim_Array__push(s.tmp_0, "davit");
    r0 = pxsim_Array__push(s.tmp_0, "dawah");
    r0 = pxsim_Array__push(s.tmp_0, "dawds");
    r0 = pxsim_Array__push(s.tmp_0, "dawed");
    r0 = pxsim_Array__push(s.tmp_0, "dawen");
    r0 = pxsim_Array__push(s.tmp_0, "dawgs");
    r0 = pxsim_Array__push(s.tmp_0, "dawks");
    r0 = pxsim_Array__push(s.tmp_0, "dawns");
    r0 = pxsim_Array__push(s.tmp_0, "dawts");
    r0 = pxsim_Array__push(s.tmp_0, "dayal");
    r0 = pxsim_Array__push(s.tmp_0, "dayan");
    r0 = pxsim_Array__push(s.tmp_0, "daych");
    r0 = pxsim_Array__push(s.tmp_0, "daynt");
    r0 = pxsim_Array__push(s.tmp_0, "dazed");
    r0 = pxsim_Array__push(s.tmp_0, "dazer");
    r0 = pxsim_Array__push(s.tmp_0, "dazes");
    r0 = pxsim_Array__push(s.tmp_0, "dbags");
    r0 = pxsim_Array__push(s.tmp_0, "deads");
    r0 = pxsim_Array__push(s.tmp_0, "deair");
    r0 = pxsim_Array__push(s.tmp_0, "deals");
    r0 = pxsim_Array__push(s.tmp_0, "dealt");
    r0 = pxsim_Array__push(s.tmp_0, "deans");
    r0 = pxsim_Array__push(s.tmp_0, "deare");
    r0 = pxsim_Array__push(s.tmp_0, "dearn");
    r0 = pxsim_Array__push(s.tmp_0, "dears");
    r0 = pxsim_Array__push(s.tmp_0, "deary");
    r0 = pxsim_Array__push(s.tmp_0, "deash");
    r0 = pxsim_Array__push(s.tmp_0, "death");
    r0 = pxsim_Array__push(s.tmp_0, "deave");
    r0 = pxsim_Array__push(s.tmp_0, "deaws");
    r0 = pxsim_Array__push(s.tmp_0, "deawy");
    r0 = pxsim_Array__push(s.tmp_0, "debag");
    r0 = pxsim_Array__push(s.tmp_0, "debar");
    r0 = pxsim_Array__push(s.tmp_0, "debby");
    r0 = pxsim_Array__push(s.tmp_0, "debel");
    r0 = pxsim_Array__push(s.tmp_0, "debes");
    r0 = pxsim_Array__push(s.tmp_0, "debit");
    r0 = pxsim_Array__push(s.tmp_0, "debts");
    r0 = pxsim_Array__push(s.tmp_0, "debud");
    r0 = pxsim_Array__push(s.tmp_0, "debug");
    r0 = pxsim_Array__push(s.tmp_0, "debur");
    r0 = pxsim_Array__push(s.tmp_0, "debus");
    r0 = pxsim_Array__push(s.tmp_0, "debut");
    r0 = pxsim_Array__push(s.tmp_0, "debye");
    r0 = pxsim_Array__push(s.tmp_0, "decad");
    r0 = pxsim_Array__push(s.tmp_0, "decaf");
    r0 = pxsim_Array__push(s.tmp_0, "decal");
    r0 = pxsim_Array__push(s.tmp_0, "decan");
    r0 = pxsim_Array__push(s.tmp_0, "decay");
    r0 = pxsim_Array__push(s.tmp_0, "decim");
    r0 = pxsim_Array__push(s.tmp_0, "decko");
    r0 = pxsim_Array__push(s.tmp_0, "decks");
    r0 = pxsim_Array__push(s.tmp_0, "decor");
    r0 = pxsim_Array__push(s.tmp_0, "decos");
    r0 = pxsim_Array__push(s.tmp_0, "decoy");
    r0 = pxsim_Array__push(s.tmp_0, "decry");
    r0 = pxsim_Array__push(s.tmp_0, "decyl");
    r0 = pxsim_Array__push(s.tmp_0, "dedal");
    r0 = pxsim_Array__push(s.tmp_0, "deeds");
    r0 = pxsim_Array__push(s.tmp_0, "deedy");
    r0 = pxsim_Array__push(s.tmp_0, "deely");
    r0 = pxsim_Array__push(s.tmp_0, "deems");
    r0 = pxsim_Array__push(s.tmp_0, "deens");
    r0 = pxsim_Array__push(s.tmp_0, "deeps");
    r0 = pxsim_Array__push(s.tmp_0, "deere");
    r0 = pxsim_Array__push(s.tmp_0, "deers");
    r0 = pxsim_Array__push(s.tmp_0, "deets");
    r0 = pxsim_Array__push(s.tmp_0, "deeve");
    r0 = pxsim_Array__push(s.tmp_0, "deevs");
    r0 = pxsim_Array__push(s.tmp_0, "defat");
    r0 = pxsim_Array__push(s.tmp_0, "defer");
    r0 = pxsim_Array__push(s.tmp_0, "deffo");
    r0 = pxsim_Array__push(s.tmp_0, "defis");
    r0 = pxsim_Array__push(s.tmp_0, "defog");
    r0 = pxsim_Array__push(s.tmp_0, "degas");
    r0 = pxsim_Array__push(s.tmp_0, "degum");
    r0 = pxsim_Array__push(s.tmp_0, "degus");
    r0 = pxsim_Array__push(s.tmp_0, "deice");
    r0 = pxsim_Array__push(s.tmp_0, "deids");
    r0 = pxsim_Array__push(s.tmp_0, "deify");
    r0 = pxsim_Array__push(s.tmp_0, "deign");
    r0 = pxsim_Array__push(s.tmp_0, "deils");
    r0 = pxsim_Array__push(s.tmp_0, "deink");
    r0 = pxsim_Array__push(s.tmp_0, "deism");
    r0 = pxsim_Array__push(s.tmp_0, "deist");
    r0 = pxsim_Array__push(s.tmp_0, "deity");
    r0 = pxsim_Array__push(s.tmp_0, "deked");
    r0 = pxsim_Array__push(s.tmp_0, "dekes");
    r0 = pxsim_Array__push(s.tmp_0, "dekko");
    r0 = pxsim_Array__push(s.tmp_0, "delay");
    r0 = pxsim_Array__push(s.tmp_0, "deled");
    r0 = pxsim_Array__push(s.tmp_0, "deles");
    r0 = pxsim_Array__push(s.tmp_0, "delfs");
    r0 = pxsim_Array__push(s.tmp_0, "delft");
    r0 = pxsim_Array__push(s.tmp_0, "delis");
    r0 = pxsim_Array__push(s.tmp_0, "della");
    r0 = pxsim_Array__push(s.tmp_0, "dells");
    r0 = pxsim_Array__push(s.tmp_0, "delly");
    r0 = pxsim_Array__push(s.tmp_0, "delos");
    r0 = pxsim_Array__push(s.tmp_0, "delph");
    r0 = pxsim_Array__push(s.tmp_0, "delta");
    r0 = pxsim_Array__push(s.tmp_0, "delts");
    r0 = pxsim_Array__push(s.tmp_0, "delve");
    r0 = pxsim_Array__push(s.tmp_0, "deman");
    r0 = pxsim_Array__push(s.tmp_0, "demes");
    r0 = pxsim_Array__push(s.tmp_0, "demic");
    r0 = pxsim_Array__push(s.tmp_0, "demit");
    r0 = pxsim_Array__push(s.tmp_0, "demob");
    r0 = pxsim_Array__push(s.tmp_0, "demoi");
    r0 = pxsim_Array__push(s.tmp_0, "demon");
    r0 = pxsim_Array__push(s.tmp_0, "demos");
    r0 = pxsim_Array__push(s.tmp_0, "demot");
    r0 = pxsim_Array__push(s.tmp_0, "dempt");
    r0 = pxsim_Array__push(s.tmp_0, "demur");
    r0 = pxsim_Array__push(s.tmp_0, "denar");
    r0 = pxsim_Array__push(s.tmp_0, "denay");
    r0 = pxsim_Array__push(s.tmp_0, "dench");
    r0 = pxsim_Array__push(s.tmp_0, "denes");
    r0 = pxsim_Array__push(s.tmp_0, "denet");
    r0 = pxsim_Array__push(s.tmp_0, "denim");
    r0 = pxsim_Array__push(s.tmp_0, "denis");
    r0 = pxsim_Array__push(s.tmp_0, "dense");
    r0 = pxsim_Array__push(s.tmp_0, "dente");
    r0 = pxsim_Array__push(s.tmp_0, "dents");
    r0 = pxsim_Array__push(s.tmp_0, "deoch");
    r0 = pxsim_Array__push(s.tmp_0, "deoxy");
    r0 = pxsim_Array__push(s.tmp_0, "depot");
    r0 = pxsim_Array__push(s.tmp_0, "depth");
    r0 = pxsim_Array__push(s.tmp_0, "derat");
    r0 = pxsim_Array__push(s.tmp_0, "deray");
    r0 = pxsim_Array__push(s.tmp_0, "derby");
    r0 = pxsim_Array__push(s.tmp_0, "dered");
    r0 = pxsim_Array__push(s.tmp_0, "deres");
    r0 = pxsim_Array__push(s.tmp_0, "derig");
    r0 = pxsim_Array__push(s.tmp_0, "derma");
    r0 = pxsim_Array__push(s.tmp_0, "derms");
    r0 = pxsim_Array__push(s.tmp_0, "derns");
    r0 = pxsim_Array__push(s.tmp_0, "derny");
    r0 = pxsim_Array__push(s.tmp_0, "deros");
    r0 = pxsim_Array__push(s.tmp_0, "derpy");
    r0 = pxsim_Array__push(s.tmp_0, "derro");
    r0 = pxsim_Array__push(s.tmp_0, "derry");
    r0 = pxsim_Array__push(s.tmp_0, "derth");
    r0 = pxsim_Array__push(s.tmp_0, "dervs");
    r0 = pxsim_Array__push(s.tmp_0, "desex");
    r0 = pxsim_Array__push(s.tmp_0, "deshi");
    r0 = pxsim_Array__push(s.tmp_0, "desis");
    r0 = pxsim_Array__push(s.tmp_0, "desks");
    r0 = pxsim_Array__push(s.tmp_0, "desse");
    r0 = pxsim_Array__push(s.tmp_0, "detag");
    r0 = pxsim_Array__push(s.tmp_0, "deter");
    r0 = pxsim_Array__push(s.tmp_0, "detox");
    r0 = pxsim_Array__push(s.tmp_0, "deuce");
    r0 = pxsim_Array__push(s.tmp_0, "devas");
    r0 = pxsim_Array__push(s.tmp_0, "devel");
    r0 = pxsim_Array__push(s.tmp_0, "devil");
    r0 = pxsim_Array__push(s.tmp_0, "devis");
    r0 = pxsim_Array__push(s.tmp_0, "devon");
    r0 = pxsim_Array__push(s.tmp_0, "devos");
    r0 = pxsim_Array__push(s.tmp_0, "devot");
    r0 = pxsim_Array__push(s.tmp_0, "dewan");
    r0 = pxsim_Array__push(s.tmp_0, "dewar");
    r0 = pxsim_Array__push(s.tmp_0, "dewax");
    r0 = pxsim_Array__push(s.tmp_0, "dewed");
    r0 = pxsim_Array__push(s.tmp_0, "dexes");
    r0 = pxsim_Array__push(s.tmp_0, "dexie");
    r0 = pxsim_Array__push(s.tmp_0, "dexys");
    r0 = pxsim_Array__push(s.tmp_0, "dhaba");
    r0 = pxsim_Array__push(s.tmp_0, "dhaks");
    r0 = pxsim_Array__push(s.tmp_0, "dhals");
    r0 = pxsim_Array__push(s.tmp_0, "dhikr");
    r0 = pxsim_Array__push(s.tmp_0, "dhobi");
    r0 = pxsim_Array__push(s.tmp_0, "dhole");
    r0 = pxsim_Array__push(s.tmp_0, "dholl");
    r0 = pxsim_Array__push(s.tmp_0, "dhols");
    r0 = pxsim_Array__push(s.tmp_0, "dhoni");
    r0 = pxsim_Array__push(s.tmp_0, "dhoti");
    r0 = pxsim_Array__push(s.tmp_0, "dhows");
    r0 = pxsim_Array__push(s.tmp_0, "dhuti");
    r0 = pxsim_Array__push(s.tmp_0, "diact");
    r0 = pxsim_Array__push(s.tmp_0, "dials");
    r0 = pxsim_Array__push(s.tmp_0, "diana");
    r0 = pxsim_Array__push(s.tmp_0, "diane");
    r0 = pxsim_Array__push(s.tmp_0, "diary");
    r0 = pxsim_Array__push(s.tmp_0, "diazo");
    r0 = pxsim_Array__push(s.tmp_0, "dibbs");
    r0 = pxsim_Array__push(s.tmp_0, "diced");
    r0 = pxsim_Array__push(s.tmp_0, "dicer");
    r0 = pxsim_Array__push(s.tmp_0, "dices");
    r0 = pxsim_Array__push(s.tmp_0, "dicey");
    r0 = pxsim_Array__push(s.tmp_0, "dicht");
    r0 = pxsim_Array__push(s.tmp_0, "dicks");
    r0 = pxsim_Array__push(s.tmp_0, "dicky");
    r0 = pxsim_Array__push(s.tmp_0, "dicot");
    r0 = pxsim_Array__push(s.tmp_0, "dicta");
    r0 = pxsim_Array__push(s.tmp_0, "dicto");
    r0 = pxsim_Array__push(s.tmp_0, "dicts");
    r0 = pxsim_Array__push(s.tmp_0, "dictu");
    r0 = pxsim_Array__push(s.tmp_0, "dicty");
    r0 = pxsim_Array__push(s.tmp_0, "diddy");
    r0 = pxsim_Array__push(s.tmp_0, "didie");
    r0 = pxsim_Array__push(s.tmp_0, "didis");
    r0 = pxsim_Array__push(s.tmp_0, "didos");
    r0 = pxsim_Array__push(s.tmp_0, "didst");
    r0 = pxsim_Array__push(s.tmp_0, "diebs");
    r0 = pxsim_Array__push(s.tmp_0, "diels");
    r0 = pxsim_Array__push(s.tmp_0, "diene");
    r0 = pxsim_Array__push(s.tmp_0, "diets");
    r0 = pxsim_Array__push(s.tmp_0, "diffs");
    r0 = pxsim_Array__push(s.tmp_0, "dight");
    r0 = pxsim_Array__push(s.tmp_0, "digit");
    r0 = pxsim_Array__push(s.tmp_0, "dikas");
    r0 = pxsim_Array__push(s.tmp_0, "diked");
    r0 = pxsim_Array__push(s.tmp_0, "diker");
    r0 = pxsim_Array__push(s.tmp_0, "dikes");
    r0 = pxsim_Array__push(s.tmp_0, "dikey");
    r0 = pxsim_Array__push(s.tmp_0, "dildo");
    r0 = pxsim_Array__push(s.tmp_0, "dilli");
    r0 = pxsim_Array__push(s.tmp_0, "dills");
    r0 = pxsim_Array__push(s.tmp_0, "dilly");
    r0 = pxsim_Array__push(s.tmp_0, "dimbo");
    r0 = pxsim_Array__push(s.tmp_0, "dimer");
    r0 = pxsim_Array__push(s.tmp_0, "dimes");
    r0 = pxsim_Array__push(s.tmp_0, "dimly");
    r0 = pxsim_Array__push(s.tmp_0, "dimps");
    r0 = pxsim_Array__push(s.tmp_0, "dinar");
    r0 = pxsim_Array__push(s.tmp_0, "dined");
    r0 = pxsim_Array__push(s.tmp_0, "diner");
    r0 = pxsim_Array__push(s.tmp_0, "dines");
    r0 = pxsim_Array__push(s.tmp_0, "dinge");
    r0 = pxsim_Array__push(s.tmp_0, "dingo");
    r0 = pxsim_Array__push(s.tmp_0, "dings");
    r0 = pxsim_Array__push(s.tmp_0, "dingy");
    r0 = pxsim_Array__push(s.tmp_0, "dinic");
    r0 = pxsim_Array__push(s.tmp_0, "dinks");
    r0 = pxsim_Array__push(s.tmp_0, "dinky");
    r0 = pxsim_Array__push(s.tmp_0, "dinlo");
    r0 = pxsim_Array__push(s.tmp_0, "dinna");
    r0 = pxsim_Array__push(s.tmp_0, "dinos");
    r0 = pxsim_Array__push(s.tmp_0, "dints");
    r0 = pxsim_Array__push(s.tmp_0, "dioch");
    r0 = pxsim_Array__push(s.tmp_0, "diode");
    r0 = pxsim_Array__push(s.tmp_0, "diols");
    r0 = pxsim_Array__push(s.tmp_0, "diota");
    r0 = pxsim_Array__push(s.tmp_0, "dippy");
    r0 = pxsim_Array__push(s.tmp_0, "dipso");
    r0 = pxsim_Array__push(s.tmp_0, "diram");
    r0 = pxsim_Array__push(s.tmp_0, "direr");
    r0 = pxsim_Array__push(s.tmp_0, "dirge");
    r0 = pxsim_Array__push(s.tmp_0, "dirke");
    r0 = pxsim_Array__push(s.tmp_0, "dirks");
    r0 = pxsim_Array__push(s.tmp_0, "dirls");
    r0 = pxsim_Array__push(s.tmp_0, "dirts");
    r0 = pxsim_Array__push(s.tmp_0, "dirty");
    r0 = pxsim_Array__push(s.tmp_0, "disas");
    r0 = pxsim_Array__push(s.tmp_0, "disci");
    r0 = pxsim_Array__push(s.tmp_0, "disco");
    r0 = pxsim_Array__push(s.tmp_0, "discs");
    r0 = pxsim_Array__push(s.tmp_0, "dishy");
    r0 = pxsim_Array__push(s.tmp_0, "disks");
    r0 = pxsim_Array__push(s.tmp_0, "disme");
    r0 = pxsim_Array__push(s.tmp_0, "dital");
    r0 = pxsim_Array__push(s.tmp_0, "ditas");
    r0 = pxsim_Array__push(s.tmp_0, "ditch");
    r0 = pxsim_Array__push(s.tmp_0, "dited");
    r0 = pxsim_Array__push(s.tmp_0, "dites");
    r0 = pxsim_Array__push(s.tmp_0, "ditsy");
    r0 = pxsim_Array__push(s.tmp_0, "ditto");
    r0 = pxsim_Array__push(s.tmp_0, "ditts");
    r0 = pxsim_Array__push(s.tmp_0, "ditty");
    r0 = pxsim_Array__push(s.tmp_0, "ditzy");
    r0 = pxsim_Array__push(s.tmp_0, "divan");
    r0 = pxsim_Array__push(s.tmp_0, "divas");
    r0 = pxsim_Array__push(s.tmp_0, "dived");
    r0 = pxsim_Array__push(s.tmp_0, "diver");
    r0 = pxsim_Array__push(s.tmp_0, "dives");
    r0 = pxsim_Array__push(s.tmp_0, "divey");
    r0 = pxsim_Array__push(s.tmp_0, "divis");
    r0 = pxsim_Array__push(s.tmp_0, "divna");
    r0 = pxsim_Array__push(s.tmp_0, "divos");
    r0 = pxsim_Array__push(s.tmp_0, "divot");
    r0 = pxsim_Array__push(s.tmp_0, "divvy");
    r0 = pxsim_Array__push(s.tmp_0, "diwan");
    r0 = pxsim_Array__push(s.tmp_0, "dixie");
    r0 = pxsim_Array__push(s.tmp_0, "dixit");
    r0 = pxsim_Array__push(s.tmp_0, "diyas");
    r0 = pxsim_Array__push(s.tmp_0, "dizen");
    r0 = pxsim_Array__push(s.tmp_0, "dizzy");
    r0 = pxsim_Array__push(s.tmp_0, "djinn");
    r0 = pxsim_Array__push(s.tmp_0, "djins");
    r0 = pxsim_Array__push(s.tmp_0, "doabs");
    r0 = pxsim_Array__push(s.tmp_0, "doats");
    r0 = pxsim_Array__push(s.tmp_0, "dobby");
    r0 = pxsim_Array__push(s.tmp_0, "dobes");
    r0 = pxsim_Array__push(s.tmp_0, "dobie");
    r0 = pxsim_Array__push(s.tmp_0, "dobla");
    r0 = pxsim_Array__push(s.tmp_0, "doble");
    r0 = pxsim_Array__push(s.tmp_0, "dobra");
    r0 = pxsim_Array__push(s.tmp_0, "dobro");
    r0 = pxsim_Array__push(s.tmp_0, "docht");
    r0 = pxsim_Array__push(s.tmp_0, "docks");
    r0 = pxsim_Array__push(s.tmp_0, "docos");
    r0 = pxsim_Array__push(s.tmp_0, "docus");
    r0 = pxsim_Array__push(s.tmp_0, "doddy");
    r0 = pxsim_Array__push(s.tmp_0, "dodge");
    r0 = pxsim_Array__push(s.tmp_0, "dodgy");
    r0 = pxsim_Array__push(s.tmp_0, "dodos");
    r0 = pxsim_Array__push(s.tmp_0, "doeks");
    r0 = pxsim_Array__push(s.tmp_0, "doers");
    r0 = pxsim_Array__push(s.tmp_0, "doest");
    r0 = pxsim_Array__push(s.tmp_0, "doeth");
    r0 = pxsim_Array__push(s.tmp_0, "doffs");
    r0 = pxsim_Array__push(s.tmp_0, "dogal");
    r0 = pxsim_Array__push(s.tmp_0, "dogan");
    r0 = pxsim_Array__push(s.tmp_0, "doges");
    r0 = pxsim_Array__push(s.tmp_0, "dogey");
    r0 = pxsim_Array__push(s.tmp_0, "doggo");
    r0 = pxsim_Array__push(s.tmp_0, "doggy");
    r0 = pxsim_Array__push(s.tmp_0, "dogie");
    r0 = pxsim_Array__push(s.tmp_0, "dogly");
    r0 = pxsim_Array__push(s.tmp_0, "dogma");
    r0 = pxsim_Array__push(s.tmp_0, "dohyo");
    r0 = pxsim_Array__push(s.tmp_0, "doilt");
    r0 = pxsim_Array__push(s.tmp_0, "doily");
    r0 = pxsim_Array__push(s.tmp_0, "doing");
    r0 = pxsim_Array__push(s.tmp_0, "doits");
    r0 = pxsim_Array__push(s.tmp_0, "dojos");
    r0 = pxsim_Array__push(s.tmp_0, "dolce");
    r0 = pxsim_Array__push(s.tmp_0, "dolci");
    r0 = pxsim_Array__push(s.tmp_0, "doled");
    r0 = pxsim_Array__push(s.tmp_0, "dolee");
    r0 = pxsim_Array__push(s.tmp_0, "doles");
    r0 = pxsim_Array__push(s.tmp_0, "doley");
    r0 = pxsim_Array__push(s.tmp_0, "dolia");
    r0 = pxsim_Array__push(s.tmp_0, "dolie");
    r0 = pxsim_Array__push(s.tmp_0, "dolls");
    r0 = pxsim_Array__push(s.tmp_0, "dolly");
    r0 = pxsim_Array__push(s.tmp_0, "dolma");
    r0 = pxsim_Array__push(s.tmp_0, "dolor");
    r0 = pxsim_Array__push(s.tmp_0, "dolos");
    r0 = pxsim_Array__push(s.tmp_0, "dolts");
    r0 = pxsim_Array__push(s.tmp_0, "domal");
    r0 = pxsim_Array__push(s.tmp_0, "domed");
    r0 = pxsim_Array__push(s.tmp_0, "domes");
    r0 = pxsim_Array__push(s.tmp_0, "domic");
    r0 = pxsim_Array__push(s.tmp_0, "donah");
    r0 = pxsim_Array__push(s.tmp_0, "donas");
    r0 = pxsim_Array__push(s.tmp_0, "donee");
    r0 = pxsim_Array__push(s.tmp_0, "doner");
    r0 = pxsim_Array__push(s.tmp_0, "donga");
    r0 = pxsim_Array__push(s.tmp_0, "dongs");
    r0 = pxsim_Array__push(s.tmp_0, "donko");
    r0 = pxsim_Array__push(s.tmp_0, "donna");
    r0 = pxsim_Array__push(s.tmp_0, "donne");
    r0 = pxsim_Array__push(s.tmp_0, "donny");
    r0 = pxsim_Array__push(s.tmp_0, "donor");
    r0 = pxsim_Array__push(s.tmp_0, "donsy");
    r0 = pxsim_Array__push(s.tmp_0, "donut");
    r0 = pxsim_Array__push(s.tmp_0, "doobs");
    r0 = pxsim_Array__push(s.tmp_0, "dooce");
    r0 = pxsim_Array__push(s.tmp_0, "doody");
    r0 = pxsim_Array__push(s.tmp_0, "doofs");
    r0 = pxsim_Array__push(s.tmp_0, "dooks");
    r0 = pxsim_Array__push(s.tmp_0, "dooky");
    r0 = pxsim_Array__push(s.tmp_0, "doole");
    r0 = pxsim_Array__push(s.tmp_0, "dools");
    r0 = pxsim_Array__push(s.tmp_0, "dooly");
    r0 = pxsim_Array__push(s.tmp_0, "dooms");
    r0 = pxsim_Array__push(s.tmp_0, "doomy");
    r0 = pxsim_Array__push(s.tmp_0, "doona");
    r0 = pxsim_Array__push(s.tmp_0, "doorn");
    r0 = pxsim_Array__push(s.tmp_0, "doors");
    r0 = pxsim_Array__push(s.tmp_0, "doozy");
    r0 = pxsim_Array__push(s.tmp_0, "dopas");
    r0 = pxsim_Array__push(s.tmp_0, "doped");
    r0 = pxsim_Array__push(s.tmp_0, "doper");
    r0 = pxsim_Array__push(s.tmp_0, "dopes");
    r0 = pxsim_Array__push(s.tmp_0, "dopey");
    r0 = pxsim_Array__push(s.tmp_0, "doppe");
    r0 = pxsim_Array__push(s.tmp_0, "dorad");
    r0 = pxsim_Array__push(s.tmp_0, "dorba");
    r0 = pxsim_Array__push(s.tmp_0, "dorbs");
    r0 = pxsim_Array__push(s.tmp_0, "doree");
    r0 = pxsim_Array__push(s.tmp_0, "dores");
    r0 = pxsim_Array__push(s.tmp_0, "doric");
    r0 = pxsim_Array__push(s.tmp_0, "doris");
    r0 = pxsim_Array__push(s.tmp_0, "dorje");
    r0 = pxsim_Array__push(s.tmp_0, "dorks");
    r0 = pxsim_Array__push(s.tmp_0, "dorky");
    r0 = pxsim_Array__push(s.tmp_0, "dorms");
    r0 = pxsim_Array__push(s.tmp_0, "dormy");
    r0 = pxsim_Array__push(s.tmp_0, "dorps");
    r0 = pxsim_Array__push(s.tmp_0, "dorrs");
    r0 = pxsim_Array__push(s.tmp_0, "dorsa");
    r0 = pxsim_Array__push(s.tmp_0, "dorse");
    r0 = pxsim_Array__push(s.tmp_0, "dorts");
    r0 = pxsim_Array__push(s.tmp_0, "dorty");
    r0 = pxsim_Array__push(s.tmp_0, "dosai");
    r0 = pxsim_Array__push(s.tmp_0, "dosas");
    r0 = pxsim_Array__push(s.tmp_0, "dosed");
    r0 = pxsim_Array__push(s.tmp_0, "doseh");
    r0 = pxsim_Array__push(s.tmp_0, "doser");
    r0 = pxsim_Array__push(s.tmp_0, "doses");
    r0 = pxsim_Array__push(s.tmp_0, "dosha");
    r0 = pxsim_Array__push(s.tmp_0, "dotal");
    r0 = pxsim_Array__push(s.tmp_0, "doted");
    r0 = pxsim_Array__push(s.tmp_0, "doter");
    r0 = pxsim_Array__push(s.tmp_0, "dotes");
    r0 = pxsim_Array__push(s.tmp_0, "dotty");
    r0 = pxsim_Array__push(s.tmp_0, "douar");
    r0 = pxsim_Array__push(s.tmp_0, "doubt");
    r0 = pxsim_Array__push(s.tmp_0, "douce");
    r0 = pxsim_Array__push(s.tmp_0, "doucs");
    r0 = pxsim_Array__push(s.tmp_0, "dough");
    r0 = pxsim_Array__push(s.tmp_0, "douks");
    r0 = pxsim_Array__push(s.tmp_0, "doula");
    r0 = pxsim_Array__push(s.tmp_0, "douma");
    r0 = pxsim_Array__push(s.tmp_0, "doums");
    r0 = pxsim_Array__push(s.tmp_0, "doups");
    r0 = pxsim_Array__push(s.tmp_0, "doura");
    r0 = pxsim_Array__push(s.tmp_0, "douse");
    r0 = pxsim_Array__push(s.tmp_0, "douts");
    r0 = pxsim_Array__push(s.tmp_0, "doved");
    r0 = pxsim_Array__push(s.tmp_0, "doven");
    r0 = pxsim_Array__push(s.tmp_0, "dover");
    r0 = pxsim_Array__push(s.tmp_0, "doves");
    r0 = pxsim_Array__push(s.tmp_0, "dovie");
    r0 = pxsim_Array__push(s.tmp_0, "dowak");
    r0 = pxsim_Array__push(s.tmp_0, "dowar");
    r0 = pxsim_Array__push(s.tmp_0, "dowds");
    r0 = pxsim_Array__push(s.tmp_0, "dowdy");
    r0 = pxsim_Array__push(s.tmp_0, "dowed");
    r0 = pxsim_Array__push(s.tmp_0, "dowel");
    r0 = pxsim_Array__push(s.tmp_0, "dower");
    r0 = pxsim_Array__push(s.tmp_0, "dowfs");
    r0 = pxsim_Array__push(s.tmp_0, "dowie");
    r0 = pxsim_Array__push(s.tmp_0, "dowle");
    r0 = pxsim_Array__push(s.tmp_0, "dowls");
    r0 = pxsim_Array__push(s.tmp_0, "dowly");
    r0 = pxsim_Array__push(s.tmp_0, "downa");
    r0 = pxsim_Array__push(s.tmp_0, "downs");
    r0 = pxsim_Array__push(s.tmp_0, "downy");
    r0 = pxsim_Array__push(s.tmp_0, "dowps");
    r0 = pxsim_Array__push(s.tmp_0, "dowry");
    r0 = pxsim_Array__push(s.tmp_0, "dowse");
    r0 = pxsim_Array__push(s.tmp_0, "dowts");
    r0 = pxsim_Array__push(s.tmp_0, "doxed");
    r0 = pxsim_Array__push(s.tmp_0, "doxes");
    r0 = pxsim_Array__push(s.tmp_0, "doxie");
    r0 = pxsim_Array__push(s.tmp_0, "doyen");
    r0 = pxsim_Array__push(s.tmp_0, "doyly");
    r0 = pxsim_Array__push(s.tmp_0, "dozed");
    r0 = pxsim_Array__push(s.tmp_0, "dozen");
    r0 = pxsim_Array__push(s.tmp_0, "dozer");
    r0 = pxsim_Array__push(s.tmp_0, "dozes");
    r0 = pxsim_Array__push(s.tmp_0, "drabs");
    r0 = pxsim_Array__push(s.tmp_0, "drack");
    r0 = pxsim_Array__push(s.tmp_0, "draco");
    r0 = pxsim_Array__push(s.tmp_0, "draff");
    r0 = pxsim_Array__push(s.tmp_0, "draft");
    r0 = pxsim_Array__push(s.tmp_0, "drags");
    r0 = pxsim_Array__push(s.tmp_0, "drail");
    r0 = pxsim_Array__push(s.tmp_0, "drain");
    r0 = pxsim_Array__push(s.tmp_0, "drake");
    r0 = pxsim_Array__push(s.tmp_0, "drama");
    r0 = pxsim_Array__push(s.tmp_0, "drams");
    r0 = pxsim_Array__push(s.tmp_0, "drank");
    r0 = pxsim_Array__push(s.tmp_0, "drant");
    r0 = pxsim_Array__push(s.tmp_0, "drape");
    r0 = pxsim_Array__push(s.tmp_0, "draps");
    r0 = pxsim_Array__push(s.tmp_0, "drapy");
    r0 = pxsim_Array__push(s.tmp_0, "drats");
    r0 = pxsim_Array__push(s.tmp_0, "drave");
    r0 = pxsim_Array__push(s.tmp_0, "drawl");
    r0 = pxsim_Array__push(s.tmp_0, "drawn");
    r0 = pxsim_Array__push(s.tmp_0, "draws");
    r0 = pxsim_Array__push(s.tmp_0, "drays");
    r0 = pxsim_Array__push(s.tmp_0, "dread");
    r0 = pxsim_Array__push(s.tmp_0, "dream");
    r0 = pxsim_Array__push(s.tmp_0, "drear");
    r0 = pxsim_Array__push(s.tmp_0, "dreck");
    r0 = pxsim_Array__push(s.tmp_0, "dreed");
    r0 = pxsim_Array__push(s.tmp_0, "dreer");
    r0 = pxsim_Array__push(s.tmp_0, "drees");
    r0 = pxsim_Array__push(s.tmp_0, "dregs");
    r0 = pxsim_Array__push(s.tmp_0, "dreks");
    r0 = pxsim_Array__push(s.tmp_0, "drent");
    r0 = pxsim_Array__push(s.tmp_0, "drere");
    r0 = pxsim_Array__push(s.tmp_0, "dress");
    r0 = pxsim_Array__push(s.tmp_0, "drest");
    r0 = pxsim_Array__push(s.tmp_0, "dreys");
    r0 = pxsim_Array__push(s.tmp_0, "dribs");
    r0 = pxsim_Array__push(s.tmp_0, "drice");
    r0 = pxsim_Array__push(s.tmp_0, "dried");
    r0 = pxsim_Array__push(s.tmp_0, "drier");
    r0 = pxsim_Array__push(s.tmp_0, "dries");
    r0 = pxsim_Array__push(s.tmp_0, "drift");
    r0 = pxsim_Array__push(s.tmp_0, "drill");
    r0 = pxsim_Array__push(s.tmp_0, "drily");
    r0 = pxsim_Array__push(s.tmp_0, "drink");
    r0 = pxsim_Array__push(s.tmp_0, "drips");
    r0 = pxsim_Array__push(s.tmp_0, "dript");
    r0 = pxsim_Array__push(s.tmp_0, "drive");
    r0 = pxsim_Array__push(s.tmp_0, "drock");
    r0 = pxsim_Array__push(s.tmp_0, "droid");
    r0 = pxsim_Array__push(s.tmp_0, "droil");
    r0 = pxsim_Array__push(s.tmp_0, "droit");
    r0 = pxsim_Array__push(s.tmp_0, "droke");
    r0 = pxsim_Array__push(s.tmp_0, "drole");
    r0 = pxsim_Array__push(s.tmp_0, "droll");
    r0 = pxsim_Array__push(s.tmp_0, "drome");
    r0 = pxsim_Array__push(s.tmp_0, "drone");
    r0 = pxsim_Array__push(s.tmp_0, "drony");
    r0 = pxsim_Array__push(s.tmp_0, "droob");
    r0 = pxsim_Array__push(s.tmp_0, "droog");
    r0 = pxsim_Array__push(s.tmp_0, "drook");
    r0 = pxsim_Array__push(s.tmp_0, "drool");
    r0 = pxsim_Array__push(s.tmp_0, "droop");
    r0 = pxsim_Array__push(s.tmp_0, "drops");
    r0 = pxsim_Array__push(s.tmp_0, "dropt");
    r0 = pxsim_Array__push(s.tmp_0, "dross");
    r0 = pxsim_Array__push(s.tmp_0, "drouk");
    r0 = pxsim_Array__push(s.tmp_0, "drove");
    r0 = pxsim_Array__push(s.tmp_0, "drown");
    r0 = pxsim_Array__push(s.tmp_0, "drows");
    r0 = pxsim_Array__push(s.tmp_0, "drubs");
    r0 = pxsim_Array__push(s.tmp_0, "drugs");
    r0 = pxsim_Array__push(s.tmp_0, "druid");
    r0 = pxsim_Array__push(s.tmp_0, "drums");
    r0 = pxsim_Array__push(s.tmp_0, "drunk");
    r0 = pxsim_Array__push(s.tmp_0, "drupe");
    r0 = pxsim_Array__push(s.tmp_0, "druse");
    r0 = pxsim_Array__push(s.tmp_0, "drusy");
    r0 = pxsim_Array__push(s.tmp_0, "druxy");
    r0 = pxsim_Array__push(s.tmp_0, "dryad");
    r0 = pxsim_Array__push(s.tmp_0, "dryas");
    r0 = pxsim_Array__push(s.tmp_0, "dryer");
    r0 = pxsim_Array__push(s.tmp_0, "dryly");
    r0 = pxsim_Array__push(s.tmp_0, "dsobo");
    r0 = pxsim_Array__push(s.tmp_0, "dsomo");
    r0 = pxsim_Array__push(s.tmp_0, "duads");
    r0 = pxsim_Array__push(s.tmp_0, "duals");
    r0 = pxsim_Array__push(s.tmp_0, "duans");
    r0 = pxsim_Array__push(s.tmp_0, "duars");
    r0 = pxsim_Array__push(s.tmp_0, "dubbo");
    r0 = pxsim_Array__push(s.tmp_0, "dubby");
    r0 = pxsim_Array__push(s.tmp_0, "ducal");
    r0 = pxsim_Array__push(s.tmp_0, "ducat");
    r0 = pxsim_Array__push(s.tmp_0, "duces");
    r0 = pxsim_Array__push(s.tmp_0, "duchy");
    r0 = pxsim_Array__push(s.tmp_0, "ducks");
    r0 = pxsim_Array__push(s.tmp_0, "ducky");
    r0 = pxsim_Array__push(s.tmp_0, "ducti");
    r0 = pxsim_Array__push(s.tmp_0, "ducts");
    r0 = pxsim_Array__push(s.tmp_0, "duddy");
    r0 = pxsim_Array__push(s.tmp_0, "duded");
    r0 = pxsim_Array__push(s.tmp_0, "dudes");
    r0 = pxsim_Array__push(s.tmp_0, "duels");
    r0 = pxsim_Array__push(s.tmp_0, "duets");
    r0 = pxsim_Array__push(s.tmp_0, "duett");
    r0 = pxsim_Array__push(s.tmp_0, "duffs");
    r0 = pxsim_Array__push(s.tmp_0, "dufus");
    r0 = pxsim_Array__push(s.tmp_0, "duing");
    r0 = pxsim_Array__push(s.tmp_0, "duits");
    r0 = pxsim_Array__push(s.tmp_0, "dukas");
    r0 = pxsim_Array__push(s.tmp_0, "duked");
    r0 = pxsim_Array__push(s.tmp_0, "dukes");
    r0 = pxsim_Array__push(s.tmp_0, "dukka");
    r0 = pxsim_Array__push(s.tmp_0, "dukun");
    r0 = pxsim_Array__push(s.tmp_0, "dulce");
    r0 = pxsim_Array__push(s.tmp_0, "dules");
    r0 = pxsim_Array__push(s.tmp_0, "dulia");
    r0 = pxsim_Array__push(s.tmp_0, "dulls");
    r0 = pxsim_Array__push(s.tmp_0, "dully");
    r0 = pxsim_Array__push(s.tmp_0, "dulse");
    r0 = pxsim_Array__push(s.tmp_0, "dumas");
    r0 = pxsim_Array__push(s.tmp_0, "dumbo");
    r0 = pxsim_Array__push(s.tmp_0, "dumbs");
    r0 = pxsim_Array__push(s.tmp_0, "dumka");
    r0 = pxsim_Array__push(s.tmp_0, "dumky");
    r0 = pxsim_Array__push(s.tmp_0, "dummy");
    r0 = pxsim_Array__push(s.tmp_0, "dumps");
    r0 = pxsim_Array__push(s.tmp_0, "dumpy");
    r0 = pxsim_Array__push(s.tmp_0, "dunam");
    r0 = pxsim_Array__push(s.tmp_0, "dunce");
    r0 = pxsim_Array__push(s.tmp_0, "dunch");
    r0 = pxsim_Array__push(s.tmp_0, "dunes");
    r0 = pxsim_Array__push(s.tmp_0, "dungs");
    r0 = pxsim_Array__push(s.tmp_0, "dungy");
    r0 = pxsim_Array__push(s.tmp_0, "dunks");
    r0 = pxsim_Array__push(s.tmp_0, "dunno");
    r0 = pxsim_Array__push(s.tmp_0, "dunny");
    r0 = pxsim_Array__push(s.tmp_0, "dunsh");
    r0 = pxsim_Array__push(s.tmp_0, "dunts");
    r0 = pxsim_Array__push(s.tmp_0, "duomi");
    r0 = pxsim_Array__push(s.tmp_0, "duomo");
    r0 = pxsim_Array__push(s.tmp_0, "duped");
    r0 = pxsim_Array__push(s.tmp_0, "duper");
    r0 = pxsim_Array__push(s.tmp_0, "dupes");
    r0 = pxsim_Array__push(s.tmp_0, "duple");
    r0 = pxsim_Array__push(s.tmp_0, "duply");
    r0 = pxsim_Array__push(s.tmp_0, "duppy");
    r0 = pxsim_Array__push(s.tmp_0, "dural");
    r0 = pxsim_Array__push(s.tmp_0, "duras");
    r0 = pxsim_Array__push(s.tmp_0, "dured");
    r0 = pxsim_Array__push(s.tmp_0, "dures");
    r0 = pxsim_Array__push(s.tmp_0, "durgy");
    r0 = pxsim_Array__push(s.tmp_0, "durns");
    r0 = pxsim_Array__push(s.tmp_0, "duroc");
    r0 = pxsim_Array__push(s.tmp_0, "duros");
    r0 = pxsim_Array__push(s.tmp_0, "duroy");
    r0 = pxsim_Array__push(s.tmp_0, "durra");
    r0 = pxsim_Array__push(s.tmp_0, "durrs");
    r0 = pxsim_Array__push(s.tmp_0, "durry");
    r0 = pxsim_Array__push(s.tmp_0, "durst");
    r0 = pxsim_Array__push(s.tmp_0, "durum");
    r0 = pxsim_Array__push(s.tmp_0, "durzi");
    r0 = pxsim_Array__push(s.tmp_0, "dusks");
    r0 = pxsim_Array__push(s.tmp_0, "dusky");
    r0 = pxsim_Array__push(s.tmp_0, "dusts");
    r0 = pxsim_Array__push(s.tmp_0, "dusty");
    r0 = pxsim_Array__push(s.tmp_0, "dutch");
    r0 = pxsim_Array__push(s.tmp_0, "duvet");
    r0 = pxsim_Array__push(s.tmp_0, "duxes");
    r0 = pxsim_Array__push(s.tmp_0, "dwaal");
    r0 = pxsim_Array__push(s.tmp_0, "dwale");
    r0 = pxsim_Array__push(s.tmp_0, "dwalm");
    r0 = pxsim_Array__push(s.tmp_0, "dwams");
    r0 = pxsim_Array__push(s.tmp_0, "dwamy");
    r0 = pxsim_Array__push(s.tmp_0, "dwang");
    r0 = pxsim_Array__push(s.tmp_0, "dwarf");
    r0 = pxsim_Array__push(s.tmp_0, "dwaum");
    r0 = pxsim_Array__push(s.tmp_0, "dweeb");
    r0 = pxsim_Array__push(s.tmp_0, "dwell");
    r0 = pxsim_Array__push(s.tmp_0, "dwelt");
    r0 = pxsim_Array__push(s.tmp_0, "dwile");
    r0 = pxsim_Array__push(s.tmp_0, "dwine");
    r0 = pxsim_Array__push(s.tmp_0, "dyads");
    r0 = pxsim_Array__push(s.tmp_0, "dyers");
    r0 = pxsim_Array__push(s.tmp_0, "dying");
    r0 = pxsim_Array__push(s.tmp_0, "dyked");
    r0 = pxsim_Array__push(s.tmp_0, "dykes");
    r0 = pxsim_Array__push(s.tmp_0, "dykey");
    r0 = pxsim_Array__push(s.tmp_0, "dykon");
    r0 = pxsim_Array__push(s.tmp_0, "dynel");
    r0 = pxsim_Array__push(s.tmp_0, "dynes");
    r0 = pxsim_Array__push(s.tmp_0, "dynos");
    r0 = pxsim_Array__push(s.tmp_0, "dzhos");
    r0 = pxsim_Array__push(s.tmp_0, "eager");
    r0 = pxsim_Array__push(s.tmp_0, "eagle");
    r0 = pxsim_Array__push(s.tmp_0, "eagly");
    r0 = pxsim_Array__push(s.tmp_0, "eagre");
    r0 = pxsim_Array__push(s.tmp_0, "ealed");
    r0 = pxsim_Array__push(s.tmp_0, "eales");
    r0 = pxsim_Array__push(s.tmp_0, "eaned");
    r0 = pxsim_Array__push(s.tmp_0, "eards");
    r0 = pxsim_Array__push(s.tmp_0, "eared");
    r0 = pxsim_Array__push(s.tmp_0, "earls");
    r0 = pxsim_Array__push(s.tmp_0, "early");
    r0 = pxsim_Array__push(s.tmp_0, "earns");
    r0 = pxsim_Array__push(s.tmp_0, "earnt");
    r0 = pxsim_Array__push(s.tmp_0, "earst");
    r0 = pxsim_Array__push(s.tmp_0, "earth");
    r0 = pxsim_Array__push(s.tmp_0, "eased");
    r0 = pxsim_Array__push(s.tmp_0, "easel");
    r0 = pxsim_Array__push(s.tmp_0, "easer");
    r0 = pxsim_Array__push(s.tmp_0, "eases");
    r0 = pxsim_Array__push(s.tmp_0, "easle");
    r0 = pxsim_Array__push(s.tmp_0, "easts");
    r0 = pxsim_Array__push(s.tmp_0, "eaten");
    r0 = pxsim_Array__push(s.tmp_0, "eater");
    r0 = pxsim_Array__push(s.tmp_0, "eathe");
    r0 = pxsim_Array__push(s.tmp_0, "eatin");
    r0 = pxsim_Array__push(s.tmp_0, "eaved");
    r0 = pxsim_Array__push(s.tmp_0, "eaver");
    r0 = pxsim_Array__push(s.tmp_0, "eaves");
    r0 = pxsim_Array__push(s.tmp_0, "ebank");
    r0 = pxsim_Array__push(s.tmp_0, "ebbed");
    r0 = pxsim_Array__push(s.tmp_0, "ebbet");
    r0 = pxsim_Array__push(s.tmp_0, "ebena");
    r0 = pxsim_Array__push(s.tmp_0, "ebene");
    r0 = pxsim_Array__push(s.tmp_0, "ebike");
    r0 = pxsim_Array__push(s.tmp_0, "ebons");
    r0 = pxsim_Array__push(s.tmp_0, "ebony");
    r0 = pxsim_Array__push(s.tmp_0, "ebook");
    r0 = pxsim_Array__push(s.tmp_0, "ecads");
    r0 = pxsim_Array__push(s.tmp_0, "ecard");
    r0 = pxsim_Array__push(s.tmp_0, "ecash");
    r0 = pxsim_Array__push(s.tmp_0, "eched");
    r0 = pxsim_Array__push(s.tmp_0, "eches");
    r0 = pxsim_Array__push(s.tmp_0, "echos");
    r0 = pxsim_Array__push(s.tmp_0, "ecigs");
    r0 = pxsim_Array__push(s.tmp_0, "eclat");
    r0 = pxsim_Array__push(s.tmp_0, "ecole");
    r0 = pxsim_Array__push(s.tmp_0, "ecrus");
    r0 = pxsim_Array__push(s.tmp_0, "edema");
    r0 = pxsim_Array__push(s.tmp_0, "edged");
    r0 = pxsim_Array__push(s.tmp_0, "edger");
    r0 = pxsim_Array__push(s.tmp_0, "edges");
    r0 = pxsim_Array__push(s.tmp_0, "edict");
    r0 = pxsim_Array__push(s.tmp_0, "edify");
    r0 = pxsim_Array__push(s.tmp_0, "edile");
    r0 = pxsim_Array__push(s.tmp_0, "edits");
    r0 = pxsim_Array__push(s.tmp_0, "educe");
    r0 = pxsim_Array__push(s.tmp_0, "educt");
    r0 = pxsim_Array__push(s.tmp_0, "eejit");
    r0 = pxsim_Array__push(s.tmp_0, "eensy");
    r0 = pxsim_Array__push(s.tmp_0, "eerie");
    r0 = pxsim_Array__push(s.tmp_0, "eeven");
    r0 = pxsim_Array__push(s.tmp_0, "eever");
    r0 = pxsim_Array__push(s.tmp_0, "eevns");
    r0 = pxsim_Array__push(s.tmp_0, "effed");
    r0 = pxsim_Array__push(s.tmp_0, "effer");
    r0 = pxsim_Array__push(s.tmp_0, "efits");
    r0 = pxsim_Array__push(s.tmp_0, "egads");
    r0 = pxsim_Array__push(s.tmp_0, "egers");
    r0 = pxsim_Array__push(s.tmp_0, "egest");
    r0 = pxsim_Array__push(s.tmp_0, "eggar");
    r0 = pxsim_Array__push(s.tmp_0, "egged");
    r0 = pxsim_Array__push(s.tmp_0, "egger");
    r0 = pxsim_Array__push(s.tmp_0, "egmas");
    r0 = pxsim_Array__push(s.tmp_0, "egret");
    r0 = pxsim_Array__push(s.tmp_0, "ehing");
    r0 = pxsim_Array__push(s.tmp_0, "eider");
    r0 = pxsim_Array__push(s.tmp_0, "eidos");
    r0 = pxsim_Array__push(s.tmp_0, "eight");
    r0 = pxsim_Array__push(s.tmp_0, "eigne");
    r0 = pxsim_Array__push(s.tmp_0, "eiked");
    r0 = pxsim_Array__push(s.tmp_0, "eikon");
    r0 = pxsim_Array__push(s.tmp_0, "eilds");
    r0 = pxsim_Array__push(s.tmp_0, "eiron");
    r0 = pxsim_Array__push(s.tmp_0, "eisel");
    r0 = pxsim_Array__push(s.tmp_0, "eject");
    r0 = pxsim_Array__push(s.tmp_0, "ejido");
    r0 = pxsim_Array__push(s.tmp_0, "ekdam");
    r0 = pxsim_Array__push(s.tmp_0, "eking");
    r0 = pxsim_Array__push(s.tmp_0, "ekkas");
    r0 = pxsim_Array__push(s.tmp_0, "elain");
    r0 = pxsim_Array__push(s.tmp_0, "eland");
    r0 = pxsim_Array__push(s.tmp_0, "elans");
    r0 = pxsim_Array__push(s.tmp_0, "elate");
    r0 = pxsim_Array__push(s.tmp_0, "elbow");
    r0 = pxsim_Array__push(s.tmp_0, "elchi");
    r0 = pxsim_Array__push(s.tmp_0, "elder");
    r0 = pxsim_Array__push(s.tmp_0, "eldin");
    r0 = pxsim_Array__push(s.tmp_0, "elect");
    r0 = pxsim_Array__push(s.tmp_0, "eleet");
    r0 = pxsim_Array__push(s.tmp_0, "elegy");
    r0 = pxsim_Array__push(s.tmp_0, "elemi");
    r0 = pxsim_Array__push(s.tmp_0, "elfed");
    r0 = pxsim_Array__push(s.tmp_0, "elfin");
    r0 = pxsim_Array__push(s.tmp_0, "eliad");
    r0 = pxsim_Array__push(s.tmp_0, "elide");
    r0 = pxsim_Array__push(s.tmp_0, "elint");
    r0 = pxsim_Array__push(s.tmp_0, "elite");
    r0 = pxsim_Array__push(s.tmp_0, "elmen");
    r0 = pxsim_Array__push(s.tmp_0, "eloge");
    r0 = pxsim_Array__push(s.tmp_0, "elogy");
    r0 = pxsim_Array__push(s.tmp_0, "eloin");
    r0 = pxsim_Array__push(s.tmp_0, "elope");
    r0 = pxsim_Array__push(s.tmp_0, "elops");
    r0 = pxsim_Array__push(s.tmp_0, "elpee");
    r0 = pxsim_Array__push(s.tmp_0, "elsin");
    r0 = pxsim_Array__push(s.tmp_0, "elude");
    r0 = pxsim_Array__push(s.tmp_0, "elute");
    r0 = pxsim_Array__push(s.tmp_0, "elvan");
    r0 = pxsim_Array__push(s.tmp_0, "elven");
    r0 = pxsim_Array__push(s.tmp_0, "elver");
    r0 = pxsim_Array__push(s.tmp_0, "elves");
    r0 = pxsim_Array__push(s.tmp_0, "emacs");
    r0 = pxsim_Array__push(s.tmp_0, "email");
    r0 = pxsim_Array__push(s.tmp_0, "embar");
    r0 = pxsim_Array__push(s.tmp_0, "embay");
    r0 = pxsim_Array__push(s.tmp_0, "embed");
    r0 = pxsim_Array__push(s.tmp_0, "ember");
    r0 = pxsim_Array__push(s.tmp_0, "embog");
    r0 = pxsim_Array__push(s.tmp_0, "embow");
    r0 = pxsim_Array__push(s.tmp_0, "embox");
    r0 = pxsim_Array__push(s.tmp_0, "embus");
    r0 = pxsim_Array__push(s.tmp_0, "emcee");
    r0 = pxsim_Array__push(s.tmp_0, "emeer");
    r0 = pxsim_Array__push(s.tmp_0, "emend");
    r0 = pxsim_Array__push(s.tmp_0, "emerg");
    r0 = pxsim_Array__push(s.tmp_0, "emery");
    r0 = pxsim_Array__push(s.tmp_0, "emeus");
    r0 = pxsim_Array__push(s.tmp_0, "emics");
    r0 = pxsim_Array__push(s.tmp_0, "emirs");
    r0 = pxsim_Array__push(s.tmp_0, "emits");
    r0 = pxsim_Array__push(s.tmp_0, "emmas");
    r0 = pxsim_Array__push(s.tmp_0, "emmer");
    r0 = pxsim_Array__push(s.tmp_0, "emmet");
    r0 = pxsim_Array__push(s.tmp_0, "emmew");
    r0 = pxsim_Array__push(s.tmp_0, "emmys");
    r0 = pxsim_Array__push(s.tmp_0, "emoji");
    r0 = pxsim_Array__push(s.tmp_0, "emong");
    r0 = pxsim_Array__push(s.tmp_0, "emote");
    r0 = pxsim_Array__push(s.tmp_0, "emove");
    r0 = pxsim_Array__push(s.tmp_0, "empts");
    r0 = pxsim_Array__push(s.tmp_0, "empty");
    r0 = pxsim_Array__push(s.tmp_0, "emule");
    r0 = pxsim_Array__push(s.tmp_0, "emure");
    r0 = pxsim_Array__push(s.tmp_0, "emyde");
    r0 = pxsim_Array__push(s.tmp_0, "emyds");
    r0 = pxsim_Array__push(s.tmp_0, "enact");
    r0 = pxsim_Array__push(s.tmp_0, "enarm");
    r0 = pxsim_Array__push(s.tmp_0, "enate");
    r0 = pxsim_Array__push(s.tmp_0, "ended");
    r0 = pxsim_Array__push(s.tmp_0, "ender");
    r0 = pxsim_Array__push(s.tmp_0, "endew");
    r0 = pxsim_Array__push(s.tmp_0, "endow");
    r0 = pxsim_Array__push(s.tmp_0, "endue");
    r0 = pxsim_Array__push(s.tmp_0, "enema");
    r0 = pxsim_Array__push(s.tmp_0, "enemy");
    r0 = pxsim_Array__push(s.tmp_0, "enews");
    r0 = pxsim_Array__push(s.tmp_0, "enfix");
    r0 = pxsim_Array__push(s.tmp_0, "eniac");
    r0 = pxsim_Array__push(s.tmp_0, "enjoy");
    r0 = pxsim_Array__push(s.tmp_0, "enlit");
    r0 = pxsim_Array__push(s.tmp_0, "enmew");
    r0 = pxsim_Array__push(s.tmp_0, "ennog");
    r0 = pxsim_Array__push(s.tmp_0, "ennui");
    r0 = pxsim_Array__push(s.tmp_0, "enoki");
    r0 = pxsim_Array__push(s.tmp_0, "enols");
    r0 = pxsim_Array__push(s.tmp_0, "enorm");
    r0 = pxsim_Array__push(s.tmp_0, "enows");
    r0 = pxsim_Array__push(s.tmp_0, "enrol");
    r0 = pxsim_Array__push(s.tmp_0, "ensew");
    r0 = pxsim_Array__push(s.tmp_0, "ensky");
    r0 = pxsim_Array__push(s.tmp_0, "ensue");
    r0 = pxsim_Array__push(s.tmp_0, "enter");
    r0 = pxsim_Array__push(s.tmp_0, "entia");
    r0 = pxsim_Array__push(s.tmp_0, "entre");
    r0 = pxsim_Array__push(s.tmp_0, "entry");
    r0 = pxsim_Array__push(s.tmp_0, "enure");
    r0 = pxsim_Array__push(s.tmp_0, "enurn");
    r0 = pxsim_Array__push(s.tmp_0, "envoi");
    r0 = pxsim_Array__push(s.tmp_0, "envoy");
    r0 = pxsim_Array__push(s.tmp_0, "enzym");
    r0 = pxsim_Array__push(s.tmp_0, "eolid");
    r0 = pxsim_Array__push(s.tmp_0, "eorls");
    r0 = pxsim_Array__push(s.tmp_0, "eosin");
    r0 = pxsim_Array__push(s.tmp_0, "epact");
    r0 = pxsim_Array__push(s.tmp_0, "epees");
    r0 = pxsim_Array__push(s.tmp_0, "epena");
    r0 = pxsim_Array__push(s.tmp_0, "epene");
    r0 = pxsim_Array__push(s.tmp_0, "ephah");
    r0 = pxsim_Array__push(s.tmp_0, "ephas");
    r0 = pxsim_Array__push(s.tmp_0, "ephod");
    r0 = pxsim_Array__push(s.tmp_0, "ephor");
    r0 = pxsim_Array__push(s.tmp_0, "epics");
    r0 = pxsim_Array__push(s.tmp_0, "epoch");
    r0 = pxsim_Array__push(s.tmp_0, "epode");
    r0 = pxsim_Array__push(s.tmp_0, "epopt");
    r0 = pxsim_Array__push(s.tmp_0, "epoxy");
    r0 = pxsim_Array__push(s.tmp_0, "eppie");
    r0 = pxsim_Array__push(s.tmp_0, "epris");
    r0 = pxsim_Array__push(s.tmp_0, "equal");
    r0 = pxsim_Array__push(s.tmp_0, "eques");
    r0 = pxsim_Array__push(s.tmp_0, "equid");
    r0 = pxsim_Array__push(s.tmp_0, "equip");
    r0 = pxsim_Array__push(s.tmp_0, "erase");
    r0 = pxsim_Array__push(s.tmp_0, "erbia");
    r0 = pxsim_Array__push(s.tmp_0, "erect");
    r0 = pxsim_Array__push(s.tmp_0, "erevs");
    r0 = pxsim_Array__push(s.tmp_0, "ergon");
    r0 = pxsim_Array__push(s.tmp_0, "ergos");
    r0 = pxsim_Array__push(s.tmp_0, "ergot");
    r0 = pxsim_Array__push(s.tmp_0, "erhus");
    r0 = pxsim_Array__push(s.tmp_0, "erica");
    r0 = pxsim_Array__push(s.tmp_0, "erick");
    r0 = pxsim_Array__push(s.tmp_0, "erics");
    r0 = pxsim_Array__push(s.tmp_0, "ering");
    r0 = pxsim_Array__push(s.tmp_0, "erned");
    r0 = pxsim_Array__push(s.tmp_0, "ernes");
    r0 = pxsim_Array__push(s.tmp_0, "erode");
    r0 = pxsim_Array__push(s.tmp_0, "erose");
    r0 = pxsim_Array__push(s.tmp_0, "erred");
    r0 = pxsim_Array__push(s.tmp_0, "error");
    r0 = pxsim_Array__push(s.tmp_0, "erses");
    r0 = pxsim_Array__push(s.tmp_0, "eruct");
    r0 = pxsim_Array__push(s.tmp_0, "erugo");
    r0 = pxsim_Array__push(s.tmp_0, "erupt");
    r0 = pxsim_Array__push(s.tmp_0, "eruvs");
    r0 = pxsim_Array__push(s.tmp_0, "erven");
    r0 = pxsim_Array__push(s.tmp_0, "ervil");
    r0 = pxsim_Array__push(s.tmp_0, "escar");
    r0 = pxsim_Array__push(s.tmp_0, "escot");
    r0 = pxsim_Array__push(s.tmp_0, "esile");
    r0 = pxsim_Array__push(s.tmp_0, "eskar");
    r0 = pxsim_Array__push(s.tmp_0, "esker");
    r0 = pxsim_Array__push(s.tmp_0, "esnes");
    r0 = pxsim_Array__push(s.tmp_0, "esrog");
    r0 = pxsim_Array__push(s.tmp_0, "essay");
    r0 = pxsim_Array__push(s.tmp_0, "esses");
    r0 = pxsim_Array__push(s.tmp_0, "ester");
    r0 = pxsim_Array__push(s.tmp_0, "estoc");
    r0 = pxsim_Array__push(s.tmp_0, "estop");
    r0 = pxsim_Array__push(s.tmp_0, "estro");
    r0 = pxsim_Array__push(s.tmp_0, "etage");
    r0 = pxsim_Array__push(s.tmp_0, "etape");
    r0 = pxsim_Array__push(s.tmp_0, "etats");
    r0 = pxsim_Array__push(s.tmp_0, "etens");
    r0 = pxsim_Array__push(s.tmp_0, "ethal");
    r0 = pxsim_Array__push(s.tmp_0, "ether");
    r0 = pxsim_Array__push(s.tmp_0, "ethic");
    r0 = pxsim_Array__push(s.tmp_0, "ethne");
    r0 = pxsim_Array__push(s.tmp_0, "ethos");
    r0 = pxsim_Array__push(s.tmp_0, "ethyl");
    r0 = pxsim_Array__push(s.tmp_0, "etics");
    r0 = pxsim_Array__push(s.tmp_0, "etnas");
    r0 = pxsim_Array__push(s.tmp_0, "etrog");
    r0 = pxsim_Array__push(s.tmp_0, "ettin");
    r0 = pxsim_Array__push(s.tmp_0, "ettle");
    r0 = pxsim_Array__push(s.tmp_0, "etude");
    r0 = pxsim_Array__push(s.tmp_0, "etuis");
    r0 = pxsim_Array__push(s.tmp_0, "etwee");
    r0 = pxsim_Array__push(s.tmp_0, "etyma");
    r0 = pxsim_Array__push(s.tmp_0, "eughs");
    r0 = pxsim_Array__push(s.tmp_0, "euked");
    r0 = pxsim_Array__push(s.tmp_0, "eupad");
    r0 = pxsim_Array__push(s.tmp_0, "euros");
    r0 = pxsim_Array__push(s.tmp_0, "eusol");
    r0 = pxsim_Array__push(s.tmp_0, "evade");
    r0 = pxsim_Array__push(s.tmp_0, "evegs");
    r0 = pxsim_Array__push(s.tmp_0, "evens");
    r0 = pxsim_Array__push(s.tmp_0, "event");
    r0 = pxsim_Array__push(s.tmp_0, "evert");
    r0 = pxsim_Array__push(s.tmp_0, "every");
    r0 = pxsim_Array__push(s.tmp_0, "evets");
    r0 = pxsim_Array__push(s.tmp_0, "evhoe");
    r0 = pxsim_Array__push(s.tmp_0, "evict");
    r0 = pxsim_Array__push(s.tmp_0, "evils");
    r0 = pxsim_Array__push(s.tmp_0, "evite");
    r0 = pxsim_Array__push(s.tmp_0, "evohe");
    r0 = pxsim_Array__push(s.tmp_0, "evoke");
    r0 = pxsim_Array__push(s.tmp_0, "ewers");
    r0 = pxsim_Array__push(s.tmp_0, "ewest");
    r0 = pxsim_Array__push(s.tmp_0, "ewhow");
    r0 = pxsim_Array__push(s.tmp_0, "ewked");
    r0 = pxsim_Array__push(s.tmp_0, "exact");
    r0 = pxsim_Array__push(s.tmp_0, "exalt");
    r0 = pxsim_Array__push(s.tmp_0, "exams");
    r0 = pxsim_Array__push(s.tmp_0, "excel");
    r0 = pxsim_Array__push(s.tmp_0, "exeat");
    r0 = pxsim_Array__push(s.tmp_0, "execs");
    r0 = pxsim_Array__push(s.tmp_0, "exeem");
    r0 = pxsim_Array__push(s.tmp_0, "exeme");
    r0 = pxsim_Array__push(s.tmp_0, "exert");
    r0 = pxsim_Array__push(s.tmp_0, "exfil");
    r0 = pxsim_Array__push(s.tmp_0, "exier");
    r0 = pxsim_Array__push(s.tmp_0, "exies");
    r0 = pxsim_Array__push(s.tmp_0, "exile");
    r0 = pxsim_Array__push(s.tmp_0, "exine");
    r0 = pxsim_Array__push(s.tmp_0, "exing");
    r0 = pxsim_Array__push(s.tmp_0, "exist");
    r0 = pxsim_Array__push(s.tmp_0, "exite");
    r0 = pxsim_Array__push(s.tmp_0, "exits");
    r0 = pxsim_Array__push(s.tmp_0, "exode");
    r0 = pxsim_Array__push(s.tmp_0, "exome");
    r0 = pxsim_Array__push(s.tmp_0, "exons");
    r0 = pxsim_Array__push(s.tmp_0, "expat");
    r0 = pxsim_Array__push(s.tmp_0, "expel");
    r0 = pxsim_Array__push(s.tmp_0, "expos");
    r0 = pxsim_Array__push(s.tmp_0, "extol");
    r0 = pxsim_Array__push(s.tmp_0, "extra");
    r0 = pxsim_Array__push(s.tmp_0, "exude");
    r0 = pxsim_Array__push(s.tmp_0, "exuls");
    r0 = pxsim_Array__push(s.tmp_0, "exult");
    r0 = pxsim_Array__push(s.tmp_0, "exurb");
    r0 = pxsim_Array__push(s.tmp_0, "eyass");
    r0 = pxsim_Array__push(s.tmp_0, "eyers");
    r0 = pxsim_Array__push(s.tmp_0, "eying");
    r0 = pxsim_Array__push(s.tmp_0, "eyots");
    r0 = pxsim_Array__push(s.tmp_0, "eyras");
    r0 = pxsim_Array__push(s.tmp_0, "eyres");
    r0 = pxsim_Array__push(s.tmp_0, "eyrie");
    r0 = pxsim_Array__push(s.tmp_0, "eyrir");
    r0 = pxsim_Array__push(s.tmp_0, "ezine");
    r0 = pxsim_Array__push(s.tmp_0, "fabbo");
    r0 = pxsim_Array__push(s.tmp_0, "fabby");
    r0 = pxsim_Array__push(s.tmp_0, "fable");
    r0 = pxsim_Array__push(s.tmp_0, "faced");
    r0 = pxsim_Array__push(s.tmp_0, "facer");
    r0 = pxsim_Array__push(s.tmp_0, "faces");
    r0 = pxsim_Array__push(s.tmp_0, "facet");
    r0 = pxsim_Array__push(s.tmp_0, "facey");
    r0 = pxsim_Array__push(s.tmp_0, "facia");
    r0 = pxsim_Array__push(s.tmp_0, "facie");
    r0 = pxsim_Array__push(s.tmp_0, "facta");
    r0 = pxsim_Array__push(s.tmp_0, "facto");
    r0 = pxsim_Array__push(s.tmp_0, "facts");
    r0 = pxsim_Array__push(s.tmp_0, "facty");
    r0 = pxsim_Array__push(s.tmp_0, "faddy");
    r0 = pxsim_Array__push(s.tmp_0, "faded");
    r0 = pxsim_Array__push(s.tmp_0, "fader");
    r0 = pxsim_Array__push(s.tmp_0, "fades");
    r0 = pxsim_Array__push(s.tmp_0, "fadge");
    r0 = pxsim_Array__push(s.tmp_0, "fados");
    r0 = pxsim_Array__push(s.tmp_0, "faena");
    r0 = pxsim_Array__push(s.tmp_0, "faery");
    r0 = pxsim_Array__push(s.tmp_0, "faffs");
    r0 = pxsim_Array__push(s.tmp_0, "faffy");
    r0 = pxsim_Array__push(s.tmp_0, "faggy");
    r0 = pxsim_Array__push(s.tmp_0, "fagin");
    r0 = pxsim_Array__push(s.tmp_0, "fagot");
    r0 = pxsim_Array__push(s.tmp_0, "faiks");
    r0 = pxsim_Array__push(s.tmp_0, "fails");
    r0 = pxsim_Array__push(s.tmp_0, "faine");
    r0 = pxsim_Array__push(s.tmp_0, "fains");
    r0 = pxsim_Array__push(s.tmp_0, "faint");
    r0 = pxsim_Array__push(s.tmp_0, "faire");
    r0 = pxsim_Array__push(s.tmp_0, "fairs");
    r0 = pxsim_Array__push(s.tmp_0, "fairy");
    r0 = pxsim_Array__push(s.tmp_0, "faith");
    r0 = pxsim_Array__push(s.tmp_0, "faked");
    r0 = pxsim_Array__push(s.tmp_0, "faker");
    r0 = pxsim_Array__push(s.tmp_0, "fakes");
    r0 = pxsim_Array__push(s.tmp_0, "fakey");
    r0 = pxsim_Array__push(s.tmp_0, "fakie");
    r0 = pxsim_Array__push(s.tmp_0, "fakir");
    r0 = pxsim_Array__push(s.tmp_0, "falaj");
    r0 = pxsim_Array__push(s.tmp_0, "fales");
    r0 = pxsim_Array__push(s.tmp_0, "falls");
    r0 = pxsim_Array__push(s.tmp_0, "false");
    r0 = pxsim_Array__push(s.tmp_0, "falsy");
    r0 = pxsim_Array__push(s.tmp_0, "famed");
    r0 = pxsim_Array__push(s.tmp_0, "fames");
    r0 = pxsim_Array__push(s.tmp_0, "fanal");
    r0 = pxsim_Array__push(s.tmp_0, "fancy");
    r0 = pxsim_Array__push(s.tmp_0, "fands");
    r0 = pxsim_Array__push(s.tmp_0, "fanes");
    r0 = pxsim_Array__push(s.tmp_0, "fanga");
    r0 = pxsim_Array__push(s.tmp_0, "fango");
    r0 = pxsim_Array__push(s.tmp_0, "fangs");
    r0 = pxsim_Array__push(s.tmp_0, "fanks");
    r0 = pxsim_Array__push(s.tmp_0, "fanny");
    r0 = pxsim_Array__push(s.tmp_0, "fanon");
    r0 = pxsim_Array__push(s.tmp_0, "fanos");
    r0 = pxsim_Array__push(s.tmp_0, "fanum");
    r0 = pxsim_Array__push(s.tmp_0, "faqir");
    r0 = pxsim_Array__push(s.tmp_0, "farad");
    r0 = pxsim_Array__push(s.tmp_0, "farce");
    r0 = pxsim_Array__push(s.tmp_0, "farci");
    r0 = pxsim_Array__push(s.tmp_0, "farcy");
    r0 = pxsim_Array__push(s.tmp_0, "fards");
    r0 = pxsim_Array__push(s.tmp_0, "fared");
    r0 = pxsim_Array__push(s.tmp_0, "farer");
    r0 = pxsim_Array__push(s.tmp_0, "fares");
    r0 = pxsim_Array__push(s.tmp_0, "farle");
    r0 = pxsim_Array__push(s.tmp_0, "farls");
    r0 = pxsim_Array__push(s.tmp_0, "farms");
    r0 = pxsim_Array__push(s.tmp_0, "faros");
    r0 = pxsim_Array__push(s.tmp_0, "farro");
    r0 = pxsim_Array__push(s.tmp_0, "farse");
    r0 = pxsim_Array__push(s.tmp_0, "farts");
    r0 = pxsim_Array__push(s.tmp_0, "fasci");
    r0 = pxsim_Array__push(s.tmp_0, "fasti");
    r0 = pxsim_Array__push(s.tmp_0, "fasts");
    r0 = pxsim_Array__push(s.tmp_0, "fatal");
    r0 = pxsim_Array__push(s.tmp_0, "fated");
    r0 = pxsim_Array__push(s.tmp_0, "fates");
    r0 = pxsim_Array__push(s.tmp_0, "fatly");
    r0 = pxsim_Array__push(s.tmp_0, "fatso");
    r0 = pxsim_Array__push(s.tmp_0, "fatty");
    r0 = pxsim_Array__push(s.tmp_0, "fatwa");
    r0 = pxsim_Array__push(s.tmp_0, "fauch");
    r0 = pxsim_Array__push(s.tmp_0, "faugh");
    r0 = pxsim_Array__push(s.tmp_0, "fauld");
    r0 = pxsim_Array__push(s.tmp_0, "fault");
    r0 = pxsim_Array__push(s.tmp_0, "fauna");
    r0 = pxsim_Array__push(s.tmp_0, "fauns");
    r0 = pxsim_Array__push(s.tmp_0, "faurd");
    r0 = pxsim_Array__push(s.tmp_0, "faute");
    r0 = pxsim_Array__push(s.tmp_0, "fauts");
    r0 = pxsim_Array__push(s.tmp_0, "fauve");
    r0 = pxsim_Array__push(s.tmp_0, "favas");
    r0 = pxsim_Array__push(s.tmp_0, "favel");
    r0 = pxsim_Array__push(s.tmp_0, "faver");
    r0 = pxsim_Array__push(s.tmp_0, "faves");
    r0 = pxsim_Array__push(s.tmp_0, "favor");
    r0 = pxsim_Array__push(s.tmp_0, "favus");
    r0 = pxsim_Array__push(s.tmp_0, "fawns");
    r0 = pxsim_Array__push(s.tmp_0, "fawny");
    r0 = pxsim_Array__push(s.tmp_0, "faxed");
    r0 = pxsim_Array__push(s.tmp_0, "faxes");
    r0 = pxsim_Array__push(s.tmp_0, "fayed");
    r0 = pxsim_Array__push(s.tmp_0, "fayer");
    r0 = pxsim_Array__push(s.tmp_0, "fayne");
    r0 = pxsim_Array__push(s.tmp_0, "fayre");
    r0 = pxsim_Array__push(s.tmp_0, "fazed");
    r0 = pxsim_Array__push(s.tmp_0, "fazes");
    r0 = pxsim_Array__push(s.tmp_0, "feals");
    r0 = pxsim_Array__push(s.tmp_0, "feard");
    r0 = pxsim_Array__push(s.tmp_0, "feare");
    r0 = pxsim_Array__push(s.tmp_0, "fears");
    r0 = pxsim_Array__push(s.tmp_0, "feart");
    r0 = pxsim_Array__push(s.tmp_0, "fease");
    r0 = pxsim_Array__push(s.tmp_0, "feast");
    r0 = pxsim_Array__push(s.tmp_0, "feats");
    r0 = pxsim_Array__push(s.tmp_0, "feaze");
    r0 = pxsim_Array__push(s.tmp_0, "fecal");
    r0 = pxsim_Array__push(s.tmp_0, "feces");
    r0 = pxsim_Array__push(s.tmp_0, "fecht");
    r0 = pxsim_Array__push(s.tmp_0, "fecit");
    r0 = pxsim_Array__push(s.tmp_0, "fecks");
    r0 = pxsim_Array__push(s.tmp_0, "fedai");
    r0 = pxsim_Array__push(s.tmp_0, "fedex");
    r0 = pxsim_Array__push(s.tmp_0, "feebs");
    r0 = pxsim_Array__push(s.tmp_0, "feeds");
    r0 = pxsim_Array__push(s.tmp_0, "feels");
    r0 = pxsim_Array__push(s.tmp_0, "feely");
    r0 = pxsim_Array__push(s.tmp_0, "feens");
    r0 = pxsim_Array__push(s.tmp_0, "feers");
    r0 = pxsim_Array__push(s.tmp_0, "feese");
    r0 = pxsim_Array__push(s.tmp_0, "feeze");
    r0 = pxsim_Array__push(s.tmp_0, "fehme");
    r0 = pxsim_Array__push(s.tmp_0, "feign");
    r0 = pxsim_Array__push(s.tmp_0, "feint");
    r0 = pxsim_Array__push(s.tmp_0, "feist");
    r0 = pxsim_Array__push(s.tmp_0, "felch");
    r0 = pxsim_Array__push(s.tmp_0, "felid");
    r0 = pxsim_Array__push(s.tmp_0, "felix");
    r0 = pxsim_Array__push(s.tmp_0, "fella");
    r0 = pxsim_Array__push(s.tmp_0, "fells");
    r0 = pxsim_Array__push(s.tmp_0, "felly");
    r0 = pxsim_Array__push(s.tmp_0, "felon");
    r0 = pxsim_Array__push(s.tmp_0, "felts");
    r0 = pxsim_Array__push(s.tmp_0, "felty");
    r0 = pxsim_Array__push(s.tmp_0, "femal");
    r0 = pxsim_Array__push(s.tmp_0, "femes");
    r0 = pxsim_Array__push(s.tmp_0, "femic");
    r0 = pxsim_Array__push(s.tmp_0, "femme");
    r0 = pxsim_Array__push(s.tmp_0, "femmy");
    r0 = pxsim_Array__push(s.tmp_0, "femur");
    r0 = pxsim_Array__push(s.tmp_0, "fence");
    r0 = pxsim_Array__push(s.tmp_0, "fends");
    r0 = pxsim_Array__push(s.tmp_0, "fendy");
    r0 = pxsim_Array__push(s.tmp_0, "fenis");
    r0 = pxsim_Array__push(s.tmp_0, "fenks");
    r0 = pxsim_Array__push(s.tmp_0, "fenny");
    r0 = pxsim_Array__push(s.tmp_0, "fents");
    r0 = pxsim_Array__push(s.tmp_0, "feods");
    r0 = pxsim_Array__push(s.tmp_0, "feoff");
    r0 = pxsim_Array__push(s.tmp_0, "feral");
    r0 = pxsim_Array__push(s.tmp_0, "ferer");
    r0 = pxsim_Array__push(s.tmp_0, "feres");
    r0 = pxsim_Array__push(s.tmp_0, "feria");
    r0 = pxsim_Array__push(s.tmp_0, "ferly");
    r0 = pxsim_Array__push(s.tmp_0, "fermi");
    r0 = pxsim_Array__push(s.tmp_0, "ferms");
    r0 = pxsim_Array__push(s.tmp_0, "ferns");
    r0 = pxsim_Array__push(s.tmp_0, "ferny");
    r0 = pxsim_Array__push(s.tmp_0, "ferox");
    r0 = pxsim_Array__push(s.tmp_0, "ferry");
    r0 = pxsim_Array__push(s.tmp_0, "fesse");
    r0 = pxsim_Array__push(s.tmp_0, "festa");
    r0 = pxsim_Array__push(s.tmp_0, "fests");
    r0 = pxsim_Array__push(s.tmp_0, "festy");
    r0 = pxsim_Array__push(s.tmp_0, "fetal");
    r0 = pxsim_Array__push(s.tmp_0, "fetas");
    r0 = pxsim_Array__push(s.tmp_0, "fetch");
    r0 = pxsim_Array__push(s.tmp_0, "feted");
    r0 = pxsim_Array__push(s.tmp_0, "fetes");
    r0 = pxsim_Array__push(s.tmp_0, "fetid");
    r0 = pxsim_Array__push(s.tmp_0, "fetor");
    r0 = pxsim_Array__push(s.tmp_0, "fetta");
    r0 = pxsim_Array__push(s.tmp_0, "fetts");
    r0 = pxsim_Array__push(s.tmp_0, "fetus");
    r0 = pxsim_Array__push(s.tmp_0, "fetwa");
    r0 = pxsim_Array__push(s.tmp_0, "feuar");
    r0 = pxsim_Array__push(s.tmp_0, "feuds");
    r0 = pxsim_Array__push(s.tmp_0, "feued");
    r0 = pxsim_Array__push(s.tmp_0, "fever");
    r0 = pxsim_Array__push(s.tmp_0, "fewer");
    r0 = pxsim_Array__push(s.tmp_0, "feyed");
    r0 = pxsim_Array__push(s.tmp_0, "feyer");
    r0 = pxsim_Array__push(s.tmp_0, "feyly");
    r0 = pxsim_Array__push(s.tmp_0, "fezes");
    r0 = pxsim_Array__push(s.tmp_0, "fezzy");
    r0 = pxsim_Array__push(s.tmp_0, "fiars");
    r0 = pxsim_Array__push(s.tmp_0, "fiats");
    r0 = pxsim_Array__push(s.tmp_0, "fiber");
    r0 = pxsim_Array__push(s.tmp_0, "fibre");
    r0 = pxsim_Array__push(s.tmp_0, "fibro");
    r0 = pxsim_Array__push(s.tmp_0, "fices");
    r0 = pxsim_Array__push(s.tmp_0, "fiche");
    r0 = pxsim_Array__push(s.tmp_0, "fichu");
    r0 = pxsim_Array__push(s.tmp_0, "ficin");
    r0 = pxsim_Array__push(s.tmp_0, "ficos");
    r0 = pxsim_Array__push(s.tmp_0, "ficta");
    r0 = pxsim_Array__push(s.tmp_0, "ficus");
    r0 = pxsim_Array__push(s.tmp_0, "fides");
    r0 = pxsim_Array__push(s.tmp_0, "fidge");
    r0 = pxsim_Array__push(s.tmp_0, "fidos");
    r0 = pxsim_Array__push(s.tmp_0, "fidus");
    r0 = pxsim_Array__push(s.tmp_0, "fiefs");
    r0 = pxsim_Array__push(s.tmp_0, "field");
    r0 = pxsim_Array__push(s.tmp_0, "fiend");
    r0 = pxsim_Array__push(s.tmp_0, "fient");
    r0 = pxsim_Array__push(s.tmp_0, "fiere");
    r0 = pxsim_Array__push(s.tmp_0, "fieri");
    r0 = pxsim_Array__push(s.tmp_0, "fiers");
    r0 = pxsim_Array__push(s.tmp_0, "fiery");
    r0 = pxsim_Array__push(s.tmp_0, "fiest");
    r0 = pxsim_Array__push(s.tmp_0, "fifed");
    r0 = pxsim_Array__push(s.tmp_0, "fifer");
    r0 = pxsim_Array__push(s.tmp_0, "fifes");
    r0 = pxsim_Array__push(s.tmp_0, "fifis");
    r0 = pxsim_Array__push(s.tmp_0, "fifth");
    r0 = pxsim_Array__push(s.tmp_0, "fifty");
    r0 = pxsim_Array__push(s.tmp_0, "figgy");
    r0 = pxsim_Array__push(s.tmp_0, "fight");
    r0 = pxsim_Array__push(s.tmp_0, "figos");
    r0 = pxsim_Array__push(s.tmp_0, "fiked");
    r0 = pxsim_Array__push(s.tmp_0, "fikes");
    r0 = pxsim_Array__push(s.tmp_0, "filar");
    r0 = pxsim_Array__push(s.tmp_0, "filch");
    r0 = pxsim_Array__push(s.tmp_0, "filed");
    r0 = pxsim_Array__push(s.tmp_0, "filer");
    r0 = pxsim_Array__push(s.tmp_0, "files");
    r0 = pxsim_Array__push(s.tmp_0, "filet");
    r0 = pxsim_Array__push(s.tmp_0, "filii");
    r0 = pxsim_Array__push(s.tmp_0, "filks");
    r0 = pxsim_Array__push(s.tmp_0, "fille");
    r0 = pxsim_Array__push(s.tmp_0, "fillo");
    r0 = pxsim_Array__push(s.tmp_0, "fills");
    r0 = pxsim_Array__push(s.tmp_0, "filly");
    r0 = pxsim_Array__push(s.tmp_0, "filmi");
    r0 = pxsim_Array__push(s.tmp_0, "films");
    r0 = pxsim_Array__push(s.tmp_0, "filmy");
    r0 = pxsim_Array__push(s.tmp_0, "filon");
    r0 = pxsim_Array__push(s.tmp_0, "filos");
    r0 = pxsim_Array__push(s.tmp_0, "filth");
    r0 = pxsim_Array__push(s.tmp_0, "filum");
    r0 = pxsim_Array__push(s.tmp_0, "final");
    r0 = pxsim_Array__push(s.tmp_0, "finca");
    r0 = pxsim_Array__push(s.tmp_0, "finch");
    r0 = pxsim_Array__push(s.tmp_0, "finds");
    r0 = pxsim_Array__push(s.tmp_0, "fined");
    r0 = pxsim_Array__push(s.tmp_0, "finer");
    r0 = pxsim_Array__push(s.tmp_0, "fines");
    r0 = pxsim_Array__push(s.tmp_0, "finis");
    r0 = pxsim_Array__push(s.tmp_0, "finks");
    r0 = pxsim_Array__push(s.tmp_0, "finny");
    r0 = pxsim_Array__push(s.tmp_0, "finos");
    r0 = pxsim_Array__push(s.tmp_0, "fiord");
    r0 = pxsim_Array__push(s.tmp_0, "fiqhs");
    r0 = pxsim_Array__push(s.tmp_0, "fique");
    r0 = pxsim_Array__push(s.tmp_0, "fired");
    r0 = pxsim_Array__push(s.tmp_0, "firer");
    r0 = pxsim_Array__push(s.tmp_0, "fires");
    r0 = pxsim_Array__push(s.tmp_0, "firie");
    r0 = pxsim_Array__push(s.tmp_0, "firks");
    r0 = pxsim_Array__push(s.tmp_0, "firma");
    r0 = pxsim_Array__push(s.tmp_0, "firms");
    r0 = pxsim_Array__push(s.tmp_0, "firni");
    r0 = pxsim_Array__push(s.tmp_0, "firns");
    r0 = pxsim_Array__push(s.tmp_0, "firry");
    r0 = pxsim_Array__push(s.tmp_0, "first");
    r0 = pxsim_Array__push(s.tmp_0, "firth");
    r0 = pxsim_Array__push(s.tmp_0, "fiscs");
    r0 = pxsim_Array__push(s.tmp_0, "fisho");
    r0 = pxsim_Array__push(s.tmp_0, "fishy");
    r0 = pxsim_Array__push(s.tmp_0, "fisks");
    r0 = pxsim_Array__push(s.tmp_0, "fists");
    r0 = pxsim_Array__push(s.tmp_0, "fisty");
    r0 = pxsim_Array__push(s.tmp_0, "fitch");
    r0 = pxsim_Array__push(s.tmp_0, "fitly");
    r0 = pxsim_Array__push(s.tmp_0, "fitna");
    r0 = pxsim_Array__push(s.tmp_0, "fitte");
    r0 = pxsim_Array__push(s.tmp_0, "fitts");
    r0 = pxsim_Array__push(s.tmp_0, "fiver");
    r0 = pxsim_Array__push(s.tmp_0, "fives");
    r0 = pxsim_Array__push(s.tmp_0, "fixed");
    r0 = pxsim_Array__push(s.tmp_0, "fixer");
    r0 = pxsim_Array__push(s.tmp_0, "fixes");
    r0 = pxsim_Array__push(s.tmp_0, "fixie");
    r0 = pxsim_Array__push(s.tmp_0, "fixit");
    r0 = pxsim_Array__push(s.tmp_0, "fizzy");
    r0 = pxsim_Array__push(s.tmp_0, "fjeld");
    r0 = pxsim_Array__push(s.tmp_0, "fjord");
    r0 = pxsim_Array__push(s.tmp_0, "flabs");
    r0 = pxsim_Array__push(s.tmp_0, "flack");
    r0 = pxsim_Array__push(s.tmp_0, "flaff");
    r0 = pxsim_Array__push(s.tmp_0, "flags");
    r0 = pxsim_Array__push(s.tmp_0, "flail");
    r0 = pxsim_Array__push(s.tmp_0, "flair");
    r0 = pxsim_Array__push(s.tmp_0, "flake");
    r0 = pxsim_Array__push(s.tmp_0, "flaks");
    r0 = pxsim_Array__push(s.tmp_0, "flaky");
    r0 = pxsim_Array__push(s.tmp_0, "flame");
    r0 = pxsim_Array__push(s.tmp_0, "flamm");
    r0 = pxsim_Array__push(s.tmp_0, "flams");
    r0 = pxsim_Array__push(s.tmp_0, "flamy");
    r0 = pxsim_Array__push(s.tmp_0, "flane");
    r0 = pxsim_Array__push(s.tmp_0, "flank");
    r0 = pxsim_Array__push(s.tmp_0, "flans");
    r0 = pxsim_Array__push(s.tmp_0, "flaps");
    r0 = pxsim_Array__push(s.tmp_0, "flare");
    r0 = pxsim_Array__push(s.tmp_0, "flary");
    r0 = pxsim_Array__push(s.tmp_0, "flash");
    r0 = pxsim_Array__push(s.tmp_0, "flask");
    r0 = pxsim_Array__push(s.tmp_0, "flats");
    r0 = pxsim_Array__push(s.tmp_0, "flava");
    r0 = pxsim_Array__push(s.tmp_0, "flawn");
    r0 = pxsim_Array__push(s.tmp_0, "flaws");
    r0 = pxsim_Array__push(s.tmp_0, "flawy");
    r0 = pxsim_Array__push(s.tmp_0, "flaxy");
    r0 = pxsim_Array__push(s.tmp_0, "flays");
    r0 = pxsim_Array__push(s.tmp_0, "fleam");
    r0 = pxsim_Array__push(s.tmp_0, "fleas");
    r0 = pxsim_Array__push(s.tmp_0, "fleck");
    r0 = pxsim_Array__push(s.tmp_0, "fleek");
    r0 = pxsim_Array__push(s.tmp_0, "fleer");
    r0 = pxsim_Array__push(s.tmp_0, "flees");
    r0 = pxsim_Array__push(s.tmp_0, "fleet");
    r0 = pxsim_Array__push(s.tmp_0, "flegs");
    r0 = pxsim_Array__push(s.tmp_0, "fleme");
    r0 = pxsim_Array__push(s.tmp_0, "flesh");
    r0 = pxsim_Array__push(s.tmp_0, "fleur");
    r0 = pxsim_Array__push(s.tmp_0, "flews");
    r0 = pxsim_Array__push(s.tmp_0, "flexi");
    r0 = pxsim_Array__push(s.tmp_0, "flexo");
    r0 = pxsim_Array__push(s.tmp_0, "fleys");
    r0 = pxsim_Array__push(s.tmp_0, "flick");
    r0 = pxsim_Array__push(s.tmp_0, "flics");
    r0 = pxsim_Array__push(s.tmp_0, "flied");
    r0 = pxsim_Array__push(s.tmp_0, "flier");
    r0 = pxsim_Array__push(s.tmp_0, "flies");
    r0 = pxsim_Array__push(s.tmp_0, "flimp");
    r0 = pxsim_Array__push(s.tmp_0, "flims");
    r0 = pxsim_Array__push(s.tmp_0, "fling");
    r0 = pxsim_Array__push(s.tmp_0, "flint");
    r0 = pxsim_Array__push(s.tmp_0, "flips");
    r0 = pxsim_Array__push(s.tmp_0, "flirs");
    r0 = pxsim_Array__push(s.tmp_0, "flirt");
    r0 = pxsim_Array__push(s.tmp_0, "flisk");
    r0 = pxsim_Array__push(s.tmp_0, "flite");
    r0 = pxsim_Array__push(s.tmp_0, "flits");
    r0 = pxsim_Array__push(s.tmp_0, "flitt");
    r0 = pxsim_Array__push(s.tmp_0, "float");
    r0 = pxsim_Array__push(s.tmp_0, "flobs");
    r0 = pxsim_Array__push(s.tmp_0, "flock");
    r0 = pxsim_Array__push(s.tmp_0, "flocs");
    r0 = pxsim_Array__push(s.tmp_0, "floes");
    r0 = pxsim_Array__push(s.tmp_0, "flogs");
    r0 = pxsim_Array__push(s.tmp_0, "flong");
    r0 = pxsim_Array__push(s.tmp_0, "flood");
    r0 = pxsim_Array__push(s.tmp_0, "floor");
    r0 = pxsim_Array__push(s.tmp_0, "flops");
    r0 = pxsim_Array__push(s.tmp_0, "flora");
    r0 = pxsim_Array__push(s.tmp_0, "flore");
    r0 = pxsim_Array__push(s.tmp_0, "flors");
    r0 = pxsim_Array__push(s.tmp_0, "flory");
    r0 = pxsim_Array__push(s.tmp_0, "flosh");
    r0 = pxsim_Array__push(s.tmp_0, "floss");
    r0 = pxsim_Array__push(s.tmp_0, "flota");
    r0 = pxsim_Array__push(s.tmp_0, "flote");
    r0 = pxsim_Array__push(s.tmp_0, "flour");
    r0 = pxsim_Array__push(s.tmp_0, "flout");
    r0 = pxsim_Array__push(s.tmp_0, "flown");
    r0 = pxsim_Array__push(s.tmp_0, "flows");
    r0 = pxsim_Array__push(s.tmp_0, "flowy");
    r0 = pxsim_Array__push(s.tmp_0, "flubs");
    r0 = pxsim_Array__push(s.tmp_0, "flued");
    r0 = pxsim_Array__push(s.tmp_0, "flues");
    r0 = pxsim_Array__push(s.tmp_0, "fluey");
    r0 = pxsim_Array__push(s.tmp_0, "fluff");
    r0 = pxsim_Array__push(s.tmp_0, "fluid");
    r0 = pxsim_Array__push(s.tmp_0, "fluke");
    r0 = pxsim_Array__push(s.tmp_0, "fluky");
    r0 = pxsim_Array__push(s.tmp_0, "flume");
    r0 = pxsim_Array__push(s.tmp_0, "flump");
    r0 = pxsim_Array__push(s.tmp_0, "flung");
    r0 = pxsim_Array__push(s.tmp_0, "flunk");
    r0 = pxsim_Array__push(s.tmp_0, "fluor");
    r0 = pxsim_Array__push(s.tmp_0, "flurr");
    r0 = pxsim_Array__push(s.tmp_0, "flush");
    r0 = pxsim_Array__push(s.tmp_0, "flute");
    r0 = pxsim_Array__push(s.tmp_0, "fluty");
    r0 = pxsim_Array__push(s.tmp_0, "fluyt");
    r0 = pxsim_Array__push(s.tmp_0, "flyby");
    r0 = pxsim_Array__push(s.tmp_0, "flyer");
    r0 = pxsim_Array__push(s.tmp_0, "flyin");
    r0 = pxsim_Array__push(s.tmp_0, "flype");
    r0 = pxsim_Array__push(s.tmp_0, "flyte");
    r0 = pxsim_Array__push(s.tmp_0, "fnarr");
    r0 = pxsim_Array__push(s.tmp_0, "foals");
    r0 = pxsim_Array__push(s.tmp_0, "foams");
    r0 = pxsim_Array__push(s.tmp_0, "foamy");
    r0 = pxsim_Array__push(s.tmp_0, "focal");
    r0 = pxsim_Array__push(s.tmp_0, "focus");
    r0 = pxsim_Array__push(s.tmp_0, "foehn");
    r0 = pxsim_Array__push(s.tmp_0, "fogey");
    r0 = pxsim_Array__push(s.tmp_0, "foggy");
    r0 = pxsim_Array__push(s.tmp_0, "fogie");
    r0 = pxsim_Array__push(s.tmp_0, "fogle");
    r0 = pxsim_Array__push(s.tmp_0, "fogos");
    r0 = pxsim_Array__push(s.tmp_0, "fogou");
    r0 = pxsim_Array__push(s.tmp_0, "fohns");
    r0 = pxsim_Array__push(s.tmp_0, "foids");
    r0 = pxsim_Array__push(s.tmp_0, "foils");
    r0 = pxsim_Array__push(s.tmp_0, "foins");
    r0 = pxsim_Array__push(s.tmp_0, "foist");
    r0 = pxsim_Array__push(s.tmp_0, "folds");
    r0 = pxsim_Array__push(s.tmp_0, "foley");
    r0 = pxsim_Array__push(s.tmp_0, "folia");
    r0 = pxsim_Array__push(s.tmp_0, "folic");
    r0 = pxsim_Array__push(s.tmp_0, "folie");
    r0 = pxsim_Array__push(s.tmp_0, "folio");
    r0 = pxsim_Array__push(s.tmp_0, "folks");
    r0 = pxsim_Array__push(s.tmp_0, "folky");
    r0 = pxsim_Array__push(s.tmp_0, "folly");
    r0 = pxsim_Array__push(s.tmp_0, "fomes");
    r0 = pxsim_Array__push(s.tmp_0, "fonda");
    r0 = pxsim_Array__push(s.tmp_0, "fonds");
    r0 = pxsim_Array__push(s.tmp_0, "fondu");
    r0 = pxsim_Array__push(s.tmp_0, "fones");
    r0 = pxsim_Array__push(s.tmp_0, "fonio");
    r0 = pxsim_Array__push(s.tmp_0, "fonly");
    r0 = pxsim_Array__push(s.tmp_0, "fonts");
    r0 = pxsim_Array__push(s.tmp_0, "foods");
    r0 = pxsim_Array__push(s.tmp_0, "foody");
    r0 = pxsim_Array__push(s.tmp_0, "fools");
    r0 = pxsim_Array__push(s.tmp_0, "foots");
    r0 = pxsim_Array__push(s.tmp_0, "footy");
    r0 = pxsim_Array__push(s.tmp_0, "foram");
    r0 = pxsim_Array__push(s.tmp_0, "foray");
    r0 = pxsim_Array__push(s.tmp_0, "forbs");
    r0 = pxsim_Array__push(s.tmp_0, "forby");
    r0 = pxsim_Array__push(s.tmp_0, "force");
    r0 = pxsim_Array__push(s.tmp_0, "fordo");
    r0 = pxsim_Array__push(s.tmp_0, "fords");
    r0 = pxsim_Array__push(s.tmp_0, "forel");
    r0 = pxsim_Array__push(s.tmp_0, "fores");
    r0 = pxsim_Array__push(s.tmp_0, "forex");
    r0 = pxsim_Array__push(s.tmp_0, "forge");
    r0 = pxsim_Array__push(s.tmp_0, "forgo");
    r0 = pxsim_Array__push(s.tmp_0, "forks");
    r0 = pxsim_Array__push(s.tmp_0, "forky");
    r0 = pxsim_Array__push(s.tmp_0, "forma");
    r0 = pxsim_Array__push(s.tmp_0, "forme");
    r0 = pxsim_Array__push(s.tmp_0, "forms");
    r0 = pxsim_Array__push(s.tmp_0, "forte");
    r0 = pxsim_Array__push(s.tmp_0, "forth");
    r0 = pxsim_Array__push(s.tmp_0, "forts");
    r0 = pxsim_Array__push(s.tmp_0, "forty");
    r0 = pxsim_Array__push(s.tmp_0, "forum");
    r0 = pxsim_Array__push(s.tmp_0, "forza");
    r0 = pxsim_Array__push(s.tmp_0, "forze");
    r0 = pxsim_Array__push(s.tmp_0, "fossa");
    r0 = pxsim_Array__push(s.tmp_0, "fosse");
    r0 = pxsim_Array__push(s.tmp_0, "fouat");
    r0 = pxsim_Array__push(s.tmp_0, "fouds");
    r0 = pxsim_Array__push(s.tmp_0, "fouer");
    r0 = pxsim_Array__push(s.tmp_0, "fouet");
    r0 = pxsim_Array__push(s.tmp_0, "foule");
    r0 = pxsim_Array__push(s.tmp_0, "fouls");
    r0 = pxsim_Array__push(s.tmp_0, "found");
    r0 = pxsim_Array__push(s.tmp_0, "fount");
    r0 = pxsim_Array__push(s.tmp_0, "fours");
    r0 = pxsim_Array__push(s.tmp_0, "fouth");
    r0 = pxsim_Array__push(s.tmp_0, "fovea");
    r0 = pxsim_Array__push(s.tmp_0, "fowls");
    r0 = pxsim_Array__push(s.tmp_0, "fowth");
    r0 = pxsim_Array__push(s.tmp_0, "foxed");
    r0 = pxsim_Array__push(s.tmp_0, "foxes");
    r0 = pxsim_Array__push(s.tmp_0, "foxie");
    r0 = pxsim_Array__push(s.tmp_0, "foyer");
    r0 = pxsim_Array__push(s.tmp_0, "foyle");
    r0 = pxsim_Array__push(s.tmp_0, "foyne");
    r0 = pxsim_Array__push(s.tmp_0, "frabs");
    r0 = pxsim_Array__push(s.tmp_0, "frack");
    r0 = pxsim_Array__push(s.tmp_0, "fract");
    r0 = pxsim_Array__push(s.tmp_0, "frags");
    r0 = pxsim_Array__push(s.tmp_0, "frail");
    r0 = pxsim_Array__push(s.tmp_0, "fraim");
    r0 = pxsim_Array__push(s.tmp_0, "frais");
    r0 = pxsim_Array__push(s.tmp_0, "frame");
    r0 = pxsim_Array__push(s.tmp_0, "franc");
    r0 = pxsim_Array__push(s.tmp_0, "frank");
    r0 = pxsim_Array__push(s.tmp_0, "frape");
    r0 = pxsim_Array__push(s.tmp_0, "fraps");
    r0 = pxsim_Array__push(s.tmp_0, "frass");
    r0 = pxsim_Array__push(s.tmp_0, "frate");
    r0 = pxsim_Array__push(s.tmp_0, "frati");
    r0 = pxsim_Array__push(s.tmp_0, "frats");
    r0 = pxsim_Array__push(s.tmp_0, "fraud");
    r0 = pxsim_Array__push(s.tmp_0, "fraus");
    r0 = pxsim_Array__push(s.tmp_0, "frays");
    r0 = pxsim_Array__push(s.tmp_0, "freak");
    r0 = pxsim_Array__push(s.tmp_0, "freed");
    r0 = pxsim_Array__push(s.tmp_0, "freer");
    r0 = pxsim_Array__push(s.tmp_0, "frees");
    r0 = pxsim_Array__push(s.tmp_0, "freet");
    r0 = pxsim_Array__push(s.tmp_0, "freit");
    r0 = pxsim_Array__push(s.tmp_0, "fremd");
    r0 = pxsim_Array__push(s.tmp_0, "frena");
    r0 = pxsim_Array__push(s.tmp_0, "freon");
    r0 = pxsim_Array__push(s.tmp_0, "frere");
    r0 = pxsim_Array__push(s.tmp_0, "fresh");
    r0 = pxsim_Array__push(s.tmp_0, "frets");
    r0 = pxsim_Array__push(s.tmp_0, "friar");
    r0 = pxsim_Array__push(s.tmp_0, "fribs");
    r0 = pxsim_Array__push(s.tmp_0, "fried");
    r0 = pxsim_Array__push(s.tmp_0, "frier");
    r0 = pxsim_Array__push(s.tmp_0, "fries");
    r0 = pxsim_Array__push(s.tmp_0, "frigs");
    r0 = pxsim_Array__push(s.tmp_0, "frill");
    r0 = pxsim_Array__push(s.tmp_0, "frise");
    r0 = pxsim_Array__push(s.tmp_0, "frisk");
    r0 = pxsim_Array__push(s.tmp_0, "frist");
    r0 = pxsim_Array__push(s.tmp_0, "frita");
    r0 = pxsim_Array__push(s.tmp_0, "frite");
    r0 = pxsim_Array__push(s.tmp_0, "frith");
    r0 = pxsim_Array__push(s.tmp_0, "frits");
    r0 = pxsim_Array__push(s.tmp_0, "fritt");
    r0 = pxsim_Array__push(s.tmp_0, "fritz");
    r0 = pxsim_Array__push(s.tmp_0, "frize");
    r0 = pxsim_Array__push(s.tmp_0, "frizz");
    r0 = pxsim_Array__push(s.tmp_0, "frock");
    r0 = pxsim_Array__push(s.tmp_0, "froes");
    r0 = pxsim_Array__push(s.tmp_0, "frogs");
    r0 = pxsim_Array__push(s.tmp_0, "fromm");
    r0 = pxsim_Array__push(s.tmp_0, "frond");
    r0 = pxsim_Array__push(s.tmp_0, "frons");
    r0 = pxsim_Array__push(s.tmp_0, "front");
    r0 = pxsim_Array__push(s.tmp_0, "froom");
    r0 = pxsim_Array__push(s.tmp_0, "frore");
    r0 = pxsim_Array__push(s.tmp_0, "frorn");
    r0 = pxsim_Array__push(s.tmp_0, "frory");
    r0 = pxsim_Array__push(s.tmp_0, "frosh");
    r0 = pxsim_Array__push(s.tmp_0, "frost");
    r0 = pxsim_Array__push(s.tmp_0, "froth");
    r0 = pxsim_Array__push(s.tmp_0, "frown");
    r0 = pxsim_Array__push(s.tmp_0, "frows");
    r0 = pxsim_Array__push(s.tmp_0, "frowy");
    r0 = pxsim_Array__push(s.tmp_0, "froyo");
    r0 = pxsim_Array__push(s.tmp_0, "froze");
    r0 = pxsim_Array__push(s.tmp_0, "frugs");
    r0 = pxsim_Array__push(s.tmp_0, "fruit");
    r0 = pxsim_Array__push(s.tmp_0, "frump");
    r0 = pxsim_Array__push(s.tmp_0, "frush");
    r0 = pxsim_Array__push(s.tmp_0, "frust");
    r0 = pxsim_Array__push(s.tmp_0, "fryer");
    r0 = pxsim_Array__push(s.tmp_0, "fubar");
    r0 = pxsim_Array__push(s.tmp_0, "fubby");
    r0 = pxsim_Array__push(s.tmp_0, "fubsy");
    r0 = pxsim_Array__push(s.tmp_0, "fucks");
    r0 = pxsim_Array__push(s.tmp_0, "fucus");
    r0 = pxsim_Array__push(s.tmp_0, "fuddy");
    r0 = pxsim_Array__push(s.tmp_0, "fudge");
    r0 = pxsim_Array__push(s.tmp_0, "fudgy");
    r0 = pxsim_Array__push(s.tmp_0, "fuels");
    r0 = pxsim_Array__push(s.tmp_0, "fuero");
    r0 = pxsim_Array__push(s.tmp_0, "fuffs");
    r0 = pxsim_Array__push(s.tmp_0, "fuffy");
    r0 = pxsim_Array__push(s.tmp_0, "fugal");
    r0 = pxsim_Array__push(s.tmp_0, "fuggy");
    r0 = pxsim_Array__push(s.tmp_0, "fugie");
    r0 = pxsim_Array__push(s.tmp_0, "fugio");
    r0 = pxsim_Array__push(s.tmp_0, "fugis");
    r0 = pxsim_Array__push(s.tmp_0, "fugle");
    r0 = pxsim_Array__push(s.tmp_0, "fugly");
    r0 = pxsim_Array__push(s.tmp_0, "fugue");
    r0 = pxsim_Array__push(s.tmp_0, "fugus");
    r0 = pxsim_Array__push(s.tmp_0, "fujis");
    r0 = pxsim_Array__push(s.tmp_0, "fulla");
    r0 = pxsim_Array__push(s.tmp_0, "fulls");
    r0 = pxsim_Array__push(s.tmp_0, "fully");
    r0 = pxsim_Array__push(s.tmp_0, "fulth");
    r0 = pxsim_Array__push(s.tmp_0, "fulwa");
    r0 = pxsim_Array__push(s.tmp_0, "fumed");
    r0 = pxsim_Array__push(s.tmp_0, "fumer");
    r0 = pxsim_Array__push(s.tmp_0, "fumes");
    r0 = pxsim_Array__push(s.tmp_0, "fumet");
    r0 = pxsim_Array__push(s.tmp_0, "funda");
    r0 = pxsim_Array__push(s.tmp_0, "fundi");
    r0 = pxsim_Array__push(s.tmp_0, "fundo");
    r0 = pxsim_Array__push(s.tmp_0, "funds");
    r0 = pxsim_Array__push(s.tmp_0, "fundy");
    r0 = pxsim_Array__push(s.tmp_0, "fungi");
    r0 = pxsim_Array__push(s.tmp_0, "fungo");
    r0 = pxsim_Array__push(s.tmp_0, "fungs");
    r0 = pxsim_Array__push(s.tmp_0, "funic");
    r0 = pxsim_Array__push(s.tmp_0, "funis");
    r0 = pxsim_Array__push(s.tmp_0, "funks");
    r0 = pxsim_Array__push(s.tmp_0, "funky");
    r0 = pxsim_Array__push(s.tmp_0, "funny");
    r0 = pxsim_Array__push(s.tmp_0, "funsy");
    r0 = pxsim_Array__push(s.tmp_0, "funts");
    r0 = pxsim_Array__push(s.tmp_0, "fural");
    r0 = pxsim_Array__push(s.tmp_0, "furan");
    r0 = pxsim_Array__push(s.tmp_0, "furca");
    r0 = pxsim_Array__push(s.tmp_0, "furls");
    r0 = pxsim_Array__push(s.tmp_0, "furol");
    r0 = pxsim_Array__push(s.tmp_0, "furor");
    r0 = pxsim_Array__push(s.tmp_0, "furos");
    r0 = pxsim_Array__push(s.tmp_0, "furrs");
    r0 = pxsim_Array__push(s.tmp_0, "furry");
    r0 = pxsim_Array__push(s.tmp_0, "furth");
    r0 = pxsim_Array__push(s.tmp_0, "furze");
    r0 = pxsim_Array__push(s.tmp_0, "furzy");
    r0 = pxsim_Array__push(s.tmp_0, "fused");
    r0 = pxsim_Array__push(s.tmp_0, "fusee");
    r0 = pxsim_Array__push(s.tmp_0, "fusel");
    r0 = pxsim_Array__push(s.tmp_0, "fuses");
    r0 = pxsim_Array__push(s.tmp_0, "fusil");
    r0 = pxsim_Array__push(s.tmp_0, "fusks");
    r0 = pxsim_Array__push(s.tmp_0, "fussy");
    r0 = pxsim_Array__push(s.tmp_0, "fusts");
    r0 = pxsim_Array__push(s.tmp_0, "fusty");
    r0 = pxsim_Array__push(s.tmp_0, "futon");
    r0 = pxsim_Array__push(s.tmp_0, "fuzed");
    r0 = pxsim_Array__push(s.tmp_0, "fuzee");
    r0 = pxsim_Array__push(s.tmp_0, "fuzes");
    r0 = pxsim_Array__push(s.tmp_0, "fuzil");
    r0 = pxsim_Array__push(s.tmp_0, "fuzzy");
    r0 = pxsim_Array__push(s.tmp_0, "fyces");
    r0 = pxsim_Array__push(s.tmp_0, "fyked");
    r0 = pxsim_Array__push(s.tmp_0, "fykes");
    r0 = pxsim_Array__push(s.tmp_0, "fyles");
    r0 = pxsim_Array__push(s.tmp_0, "fyrds");
    r0 = pxsim_Array__push(s.tmp_0, "fytte");
    r0 = pxsim_Array__push(s.tmp_0, "gabba");
    r0 = pxsim_Array__push(s.tmp_0, "gabby");
    r0 = pxsim_Array__push(s.tmp_0, "gable");
    r0 = pxsim_Array__push(s.tmp_0, "gaddi");
    r0 = pxsim_Array__push(s.tmp_0, "gades");
    r0 = pxsim_Array__push(s.tmp_0, "gadge");
    r0 = pxsim_Array__push(s.tmp_0, "gadgy");
    r0 = pxsim_Array__push(s.tmp_0, "gadid");
    r0 = pxsim_Array__push(s.tmp_0, "gadis");
    r0 = pxsim_Array__push(s.tmp_0, "gadje");
    r0 = pxsim_Array__push(s.tmp_0, "gadjo");
    r0 = pxsim_Array__push(s.tmp_0, "gadso");
    r0 = pxsim_Array__push(s.tmp_0, "gaffe");
    r0 = pxsim_Array__push(s.tmp_0, "gaffs");
    r0 = pxsim_Array__push(s.tmp_0, "gaged");
    r0 = pxsim_Array__push(s.tmp_0, "gager");
    r0 = pxsim_Array__push(s.tmp_0, "gages");
    r0 = pxsim_Array__push(s.tmp_0, "gaids");
    r0 = pxsim_Array__push(s.tmp_0, "gaily");
    r0 = pxsim_Array__push(s.tmp_0, "gains");
    r0 = pxsim_Array__push(s.tmp_0, "gairs");
    r0 = pxsim_Array__push(s.tmp_0, "gaita");
    r0 = pxsim_Array__push(s.tmp_0, "gaits");
    r0 = pxsim_Array__push(s.tmp_0, "gaitt");
    r0 = pxsim_Array__push(s.tmp_0, "gajos");
    r0 = pxsim_Array__push(s.tmp_0, "galah");
    r0 = pxsim_Array__push(s.tmp_0, "galas");
    r0 = pxsim_Array__push(s.tmp_0, "galax");
    r0 = pxsim_Array__push(s.tmp_0, "galea");
    r0 = pxsim_Array__push(s.tmp_0, "galed");
    r0 = pxsim_Array__push(s.tmp_0, "gales");
    r0 = pxsim_Array__push(s.tmp_0, "galia");
    r0 = pxsim_Array__push(s.tmp_0, "galis");
    r0 = pxsim_Array__push(s.tmp_0, "galls");
    r0 = pxsim_Array__push(s.tmp_0, "gally");
    r0 = pxsim_Array__push(s.tmp_0, "galop");
    r0 = pxsim_Array__push(s.tmp_0, "galut");
    r0 = pxsim_Array__push(s.tmp_0, "galvo");
    r0 = pxsim_Array__push(s.tmp_0, "gamas");
    r0 = pxsim_Array__push(s.tmp_0, "gamay");
    r0 = pxsim_Array__push(s.tmp_0, "gamba");
    r0 = pxsim_Array__push(s.tmp_0, "gambe");
    r0 = pxsim_Array__push(s.tmp_0, "gambo");
    r0 = pxsim_Array__push(s.tmp_0, "gambs");
    r0 = pxsim_Array__push(s.tmp_0, "gamed");
    r0 = pxsim_Array__push(s.tmp_0, "gamer");
    r0 = pxsim_Array__push(s.tmp_0, "games");
    r0 = pxsim_Array__push(s.tmp_0, "gamey");
    r0 = pxsim_Array__push(s.tmp_0, "gamic");
    r0 = pxsim_Array__push(s.tmp_0, "gamin");
    r0 = pxsim_Array__push(s.tmp_0, "gamma");
    r0 = pxsim_Array__push(s.tmp_0, "gamme");
    r0 = pxsim_Array__push(s.tmp_0, "gammy");
    r0 = pxsim_Array__push(s.tmp_0, "gamps");
    r0 = pxsim_Array__push(s.tmp_0, "gamut");
    r0 = pxsim_Array__push(s.tmp_0, "ganch");
    r0 = pxsim_Array__push(s.tmp_0, "gandy");
    r0 = pxsim_Array__push(s.tmp_0, "ganef");
    r0 = pxsim_Array__push(s.tmp_0, "ganev");
    r0 = pxsim_Array__push(s.tmp_0, "gangs");
    r0 = pxsim_Array__push(s.tmp_0, "ganja");
    r0 = pxsim_Array__push(s.tmp_0, "ganks");
    r0 = pxsim_Array__push(s.tmp_0, "ganof");
    r0 = pxsim_Array__push(s.tmp_0, "gants");
    r0 = pxsim_Array__push(s.tmp_0, "gaols");
    r0 = pxsim_Array__push(s.tmp_0, "gaped");
    r0 = pxsim_Array__push(s.tmp_0, "gaper");
    r0 = pxsim_Array__push(s.tmp_0, "gapes");
    r0 = pxsim_Array__push(s.tmp_0, "gapos");
    r0 = pxsim_Array__push(s.tmp_0, "gappy");
    r0 = pxsim_Array__push(s.tmp_0, "garam");
    r0 = pxsim_Array__push(s.tmp_0, "garba");
    r0 = pxsim_Array__push(s.tmp_0, "garbe");
    r0 = pxsim_Array__push(s.tmp_0, "garbo");
    r0 = pxsim_Array__push(s.tmp_0, "garbs");
    r0 = pxsim_Array__push(s.tmp_0, "garda");
    r0 = pxsim_Array__push(s.tmp_0, "garde");
    r0 = pxsim_Array__push(s.tmp_0, "gares");
    r0 = pxsim_Array__push(s.tmp_0, "garis");
    r0 = pxsim_Array__push(s.tmp_0, "garms");
    r0 = pxsim_Array__push(s.tmp_0, "garni");
    r0 = pxsim_Array__push(s.tmp_0, "garre");
    r0 = pxsim_Array__push(s.tmp_0, "garri");
    r0 = pxsim_Array__push(s.tmp_0, "garth");
    r0 = pxsim_Array__push(s.tmp_0, "garum");
    r0 = pxsim_Array__push(s.tmp_0, "gases");
    r0 = pxsim_Array__push(s.tmp_0, "gashy");
    r0 = pxsim_Array__push(s.tmp_0, "gasps");
    r0 = pxsim_Array__push(s.tmp_0, "gaspy");
    r0 = pxsim_Array__push(s.tmp_0, "gassy");
    r0 = pxsim_Array__push(s.tmp_0, "gasts");
    r0 = pxsim_Array__push(s.tmp_0, "gatch");
    r0 = pxsim_Array__push(s.tmp_0, "gated");
    r0 = pxsim_Array__push(s.tmp_0, "gater");
    r0 = pxsim_Array__push(s.tmp_0, "gates");
    r0 = pxsim_Array__push(s.tmp_0, "gaths");
    r0 = pxsim_Array__push(s.tmp_0, "gator");
    r0 = pxsim_Array__push(s.tmp_0, "gauch");
    r0 = pxsim_Array__push(s.tmp_0, "gaucy");
    r0 = pxsim_Array__push(s.tmp_0, "gauds");
    r0 = pxsim_Array__push(s.tmp_0, "gaudy");
    r0 = pxsim_Array__push(s.tmp_0, "gauge");
    r0 = pxsim_Array__push(s.tmp_0, "gauje");
    r0 = pxsim_Array__push(s.tmp_0, "gault");
    r0 = pxsim_Array__push(s.tmp_0, "gaums");
    r0 = pxsim_Array__push(s.tmp_0, "gaumy");
    r0 = pxsim_Array__push(s.tmp_0, "gaunt");
    r0 = pxsim_Array__push(s.tmp_0, "gaups");
    r0 = pxsim_Array__push(s.tmp_0, "gaurs");
    r0 = pxsim_Array__push(s.tmp_0, "gauss");
    r0 = pxsim_Array__push(s.tmp_0, "gauze");
    r0 = pxsim_Array__push(s.tmp_0, "gauzy");
    r0 = pxsim_Array__push(s.tmp_0, "gavel");
    r0 = pxsim_Array__push(s.tmp_0, "gavot");
    r0 = pxsim_Array__push(s.tmp_0, "gawcy");
    r0 = pxsim_Array__push(s.tmp_0, "gawds");
    r0 = pxsim_Array__push(s.tmp_0, "gawks");
    r0 = pxsim_Array__push(s.tmp_0, "gawky");
    r0 = pxsim_Array__push(s.tmp_0, "gawps");
    r0 = pxsim_Array__push(s.tmp_0, "gawsy");
    r0 = pxsim_Array__push(s.tmp_0, "gayal");
    r0 = pxsim_Array__push(s.tmp_0, "gayer");
    r0 = pxsim_Array__push(s.tmp_0, "gayly");
    r0 = pxsim_Array__push(s.tmp_0, "gazal");
    r0 = pxsim_Array__push(s.tmp_0, "gazar");
    r0 = pxsim_Array__push(s.tmp_0, "gazed");
    r0 = pxsim_Array__push(s.tmp_0, "gazer");
    r0 = pxsim_Array__push(s.tmp_0, "gazes");
    r0 = pxsim_Array__push(s.tmp_0, "gazon");
    r0 = pxsim_Array__push(s.tmp_0, "gazoo");
    r0 = pxsim_Array__push(s.tmp_0, "geals");
    r0 = pxsim_Array__push(s.tmp_0, "geans");
    r0 = pxsim_Array__push(s.tmp_0, "geare");
    r0 = pxsim_Array__push(s.tmp_0, "gears");
    r0 = pxsim_Array__push(s.tmp_0, "geasa");
    r0 = pxsim_Array__push(s.tmp_0, "geats");
    r0 = pxsim_Array__push(s.tmp_0, "gebur");
    r0 = pxsim_Array__push(s.tmp_0, "gecko");
    r0 = pxsim_Array__push(s.tmp_0, "gecks");
    r0 = pxsim_Array__push(s.tmp_0, "geeks");
    r0 = pxsim_Array__push(s.tmp_0, "geeky");
    r0 = pxsim_Array__push(s.tmp_0, "geeps");
    r0 = pxsim_Array__push(s.tmp_0, "geese");
    r0 = pxsim_Array__push(s.tmp_0, "geest");
    r0 = pxsim_Array__push(s.tmp_0, "geist");
    r0 = pxsim_Array__push(s.tmp_0, "geits");
    r0 = pxsim_Array__push(s.tmp_0, "gelds");
    r0 = pxsim_Array__push(s.tmp_0, "gelee");
    r0 = pxsim_Array__push(s.tmp_0, "gelid");
    r0 = pxsim_Array__push(s.tmp_0, "gelly");
    r0 = pxsim_Array__push(s.tmp_0, "gelts");
    r0 = pxsim_Array__push(s.tmp_0, "gemel");
    r0 = pxsim_Array__push(s.tmp_0, "gemma");
    r0 = pxsim_Array__push(s.tmp_0, "gemmy");
    r0 = pxsim_Array__push(s.tmp_0, "gemot");
    r0 = pxsim_Array__push(s.tmp_0, "genae");
    r0 = pxsim_Array__push(s.tmp_0, "genal");
    r0 = pxsim_Array__push(s.tmp_0, "genas");
    r0 = pxsim_Array__push(s.tmp_0, "genes");
    r0 = pxsim_Array__push(s.tmp_0, "genet");
    r0 = pxsim_Array__push(s.tmp_0, "genic");
    r0 = pxsim_Array__push(s.tmp_0, "genie");
    r0 = pxsim_Array__push(s.tmp_0, "genii");
    r0 = pxsim_Array__push(s.tmp_0, "genin");
    r0 = pxsim_Array__push(s.tmp_0, "genio");
    r0 = pxsim_Array__push(s.tmp_0, "genip");
    r0 = pxsim_Array__push(s.tmp_0, "genny");
    r0 = pxsim_Array__push(s.tmp_0, "genoa");
    r0 = pxsim_Array__push(s.tmp_0, "genom");
    r0 = pxsim_Array__push(s.tmp_0, "genre");
    r0 = pxsim_Array__push(s.tmp_0, "genro");
    r0 = pxsim_Array__push(s.tmp_0, "gents");
    r0 = pxsim_Array__push(s.tmp_0, "genty");
    r0 = pxsim_Array__push(s.tmp_0, "genua");
    r0 = pxsim_Array__push(s.tmp_0, "genus");
    r0 = pxsim_Array__push(s.tmp_0, "geode");
    r0 = pxsim_Array__push(s.tmp_0, "geoid");
    r0 = pxsim_Array__push(s.tmp_0, "gerah");
    r0 = pxsim_Array__push(s.tmp_0, "gerbe");
    r0 = pxsim_Array__push(s.tmp_0, "geres");
    r0 = pxsim_Array__push(s.tmp_0, "gerle");
    r0 = pxsim_Array__push(s.tmp_0, "germs");
    r0 = pxsim_Array__push(s.tmp_0, "germy");
    r0 = pxsim_Array__push(s.tmp_0, "gerne");
    r0 = pxsim_Array__push(s.tmp_0, "gesse");
    r0 = pxsim_Array__push(s.tmp_0, "gesso");
    r0 = pxsim_Array__push(s.tmp_0, "geste");
    r0 = pxsim_Array__push(s.tmp_0, "gests");
    r0 = pxsim_Array__push(s.tmp_0, "getas");
    r0 = pxsim_Array__push(s.tmp_0, "getup");
    r0 = pxsim_Array__push(s.tmp_0, "geums");
    r0 = pxsim_Array__push(s.tmp_0, "geyan");
    r0 = pxsim_Array__push(s.tmp_0, "geyer");
    r0 = pxsim_Array__push(s.tmp_0, "ghast");
    r0 = pxsim_Array__push(s.tmp_0, "ghats");
    r0 = pxsim_Array__push(s.tmp_0, "ghaut");
    r0 = pxsim_Array__push(s.tmp_0, "ghazi");
    r0 = pxsim_Array__push(s.tmp_0, "ghees");
    r0 = pxsim_Array__push(s.tmp_0, "ghest");
    r0 = pxsim_Array__push(s.tmp_0, "ghost");
    r0 = pxsim_Array__push(s.tmp_0, "ghoul");
    r0 = pxsim_Array__push(s.tmp_0, "ghusl");
    r0 = pxsim_Array__push(s.tmp_0, "ghyll");
    r0 = pxsim_Array__push(s.tmp_0, "giant");
    r0 = pxsim_Array__push(s.tmp_0, "gibed");
    r0 = pxsim_Array__push(s.tmp_0, "gibel");
    r0 = pxsim_Array__push(s.tmp_0, "giber");
    r0 = pxsim_Array__push(s.tmp_0, "gibes");
    r0 = pxsim_Array__push(s.tmp_0, "gibli");
    r0 = pxsim_Array__push(s.tmp_0, "gibus");
    r0 = pxsim_Array__push(s.tmp_0, "giddy");
    r0 = pxsim_Array__push(s.tmp_0, "gifts");
    r0 = pxsim_Array__push(s.tmp_0, "gigas");
    r0 = pxsim_Array__push(s.tmp_0, "gighe");
    r0 = pxsim_Array__push(s.tmp_0, "gigot");
    r0 = pxsim_Array__push(s.tmp_0, "gigue");
    r0 = pxsim_Array__push(s.tmp_0, "gilas");
    r0 = pxsim_Array__push(s.tmp_0, "gilds");
    r0 = pxsim_Array__push(s.tmp_0, "gilet");
    r0 = pxsim_Array__push(s.tmp_0, "gilia");
    r0 = pxsim_Array__push(s.tmp_0, "gills");
    r0 = pxsim_Array__push(s.tmp_0, "gilly");
    r0 = pxsim_Array__push(s.tmp_0, "gilpy");
    r0 = pxsim_Array__push(s.tmp_0, "gilts");
    r0 = pxsim_Array__push(s.tmp_0, "gimel");
    r0 = pxsim_Array__push(s.tmp_0, "gimme");
    r0 = pxsim_Array__push(s.tmp_0, "gimps");
    r0 = pxsim_Array__push(s.tmp_0, "gimpy");
    r0 = pxsim_Array__push(s.tmp_0, "ginch");
    r0 = pxsim_Array__push(s.tmp_0, "ginga");
    r0 = pxsim_Array__push(s.tmp_0, "ginge");
    r0 = pxsim_Array__push(s.tmp_0, "gings");
    r0 = pxsim_Array__push(s.tmp_0, "ginks");
    r0 = pxsim_Array__push(s.tmp_0, "ginny");
    r0 = pxsim_Array__push(s.tmp_0, "ginzo");
    r0 = pxsim_Array__push(s.tmp_0, "gipon");
    r0 = pxsim_Array__push(s.tmp_0, "gippo");
    r0 = pxsim_Array__push(s.tmp_0, "gippy");
    r0 = pxsim_Array__push(s.tmp_0, "gipsy");
    r0 = pxsim_Array__push(s.tmp_0, "girds");
    r0 = pxsim_Array__push(s.tmp_0, "girlf");
    r0 = pxsim_Array__push(s.tmp_0, "girls");
    r0 = pxsim_Array__push(s.tmp_0, "girly");
    r0 = pxsim_Array__push(s.tmp_0, "girns");
    r0 = pxsim_Array__push(s.tmp_0, "giron");
    r0 = pxsim_Array__push(s.tmp_0, "giros");
    r0 = pxsim_Array__push(s.tmp_0, "girrs");
    r0 = pxsim_Array__push(s.tmp_0, "girsh");
    r0 = pxsim_Array__push(s.tmp_0, "girth");
    r0 = pxsim_Array__push(s.tmp_0, "girts");
    r0 = pxsim_Array__push(s.tmp_0, "gismo");
    r0 = pxsim_Array__push(s.tmp_0, "gisms");
    r0 = pxsim_Array__push(s.tmp_0, "gists");
    r0 = pxsim_Array__push(s.tmp_0, "gitch");
    r0 = pxsim_Array__push(s.tmp_0, "gites");
    r0 = pxsim_Array__push(s.tmp_0, "giust");
    r0 = pxsim_Array__push(s.tmp_0, "gived");
    r0 = pxsim_Array__push(s.tmp_0, "given");
    r0 = pxsim_Array__push(s.tmp_0, "giver");
    r0 = pxsim_Array__push(s.tmp_0, "gives");
    r0 = pxsim_Array__push(s.tmp_0, "gizmo");
    r0 = pxsim_Array__push(s.tmp_0, "glace");
    r0 = pxsim_Array__push(s.tmp_0, "glade");
    r0 = pxsim_Array__push(s.tmp_0, "glads");
    r0 = pxsim_Array__push(s.tmp_0, "glady");
    r0 = pxsim_Array__push(s.tmp_0, "glaik");
    r0 = pxsim_Array__push(s.tmp_0, "glair");
    r0 = pxsim_Array__push(s.tmp_0, "glamp");
    r0 = pxsim_Array__push(s.tmp_0, "glams");
    r0 = pxsim_Array__push(s.tmp_0, "gland");
    r0 = pxsim_Array__push(s.tmp_0, "glans");
    r0 = pxsim_Array__push(s.tmp_0, "glare");
    r0 = pxsim_Array__push(s.tmp_0, "glary");
    r0 = pxsim_Array__push(s.tmp_0, "glass");
    r0 = pxsim_Array__push(s.tmp_0, "glatt");
    r0 = pxsim_Array__push(s.tmp_0, "glaum");
    r0 = pxsim_Array__push(s.tmp_0, "glaur");
    r0 = pxsim_Array__push(s.tmp_0, "glaze");
    r0 = pxsim_Array__push(s.tmp_0, "glazy");
    r0 = pxsim_Array__push(s.tmp_0, "gleam");
    r0 = pxsim_Array__push(s.tmp_0, "glean");
    r0 = pxsim_Array__push(s.tmp_0, "gleba");
    r0 = pxsim_Array__push(s.tmp_0, "glebe");
    r0 = pxsim_Array__push(s.tmp_0, "gleby");
    r0 = pxsim_Array__push(s.tmp_0, "glede");
    r0 = pxsim_Array__push(s.tmp_0, "gleds");
    r0 = pxsim_Array__push(s.tmp_0, "gleed");
    r0 = pxsim_Array__push(s.tmp_0, "gleek");
    r0 = pxsim_Array__push(s.tmp_0, "glees");
    r0 = pxsim_Array__push(s.tmp_0, "gleet");
    r0 = pxsim_Array__push(s.tmp_0, "gleis");
    r0 = pxsim_Array__push(s.tmp_0, "glens");
    r0 = pxsim_Array__push(s.tmp_0, "glent");
    r0 = pxsim_Array__push(s.tmp_0, "gleys");
    r0 = pxsim_Array__push(s.tmp_0, "glial");
    r0 = pxsim_Array__push(s.tmp_0, "glias");
    r0 = pxsim_Array__push(s.tmp_0, "glibs");
    r0 = pxsim_Array__push(s.tmp_0, "glide");
    r0 = pxsim_Array__push(s.tmp_0, "gliff");
    r0 = pxsim_Array__push(s.tmp_0, "glift");
    r0 = pxsim_Array__push(s.tmp_0, "glike");
    r0 = pxsim_Array__push(s.tmp_0, "glime");
    r0 = pxsim_Array__push(s.tmp_0, "glims");
    r0 = pxsim_Array__push(s.tmp_0, "glint");
    r0 = pxsim_Array__push(s.tmp_0, "glisk");
    r0 = pxsim_Array__push(s.tmp_0, "glits");
    r0 = pxsim_Array__push(s.tmp_0, "glitz");
    r0 = pxsim_Array__push(s.tmp_0, "gloam");
    r0 = pxsim_Array__push(s.tmp_0, "gloat");
    r0 = pxsim_Array__push(s.tmp_0, "globe");
    r0 = pxsim_Array__push(s.tmp_0, "globi");
    r0 = pxsim_Array__push(s.tmp_0, "globs");
    r0 = pxsim_Array__push(s.tmp_0, "globy");
    r0 = pxsim_Array__push(s.tmp_0, "glode");
    r0 = pxsim_Array__push(s.tmp_0, "glogg");
    r0 = pxsim_Array__push(s.tmp_0, "gloms");
    r0 = pxsim_Array__push(s.tmp_0, "gloom");
    r0 = pxsim_Array__push(s.tmp_0, "gloop");
    r0 = pxsim_Array__push(s.tmp_0, "glops");
    r0 = pxsim_Array__push(s.tmp_0, "glory");
    r0 = pxsim_Array__push(s.tmp_0, "gloss");
    r0 = pxsim_Array__push(s.tmp_0, "glost");
    r0 = pxsim_Array__push(s.tmp_0, "glout");
    r0 = pxsim_Array__push(s.tmp_0, "glove");
    r0 = pxsim_Array__push(s.tmp_0, "glows");
    r0 = pxsim_Array__push(s.tmp_0, "glowy");
    r0 = pxsim_Array__push(s.tmp_0, "gloze");
    r0 = pxsim_Array__push(s.tmp_0, "glued");
    r0 = pxsim_Array__push(s.tmp_0, "gluer");
    r0 = pxsim_Array__push(s.tmp_0, "glues");
    r0 = pxsim_Array__push(s.tmp_0, "gluey");
    r0 = pxsim_Array__push(s.tmp_0, "glugg");
    r0 = pxsim_Array__push(s.tmp_0, "glugs");
    r0 = pxsim_Array__push(s.tmp_0, "glume");
    r0 = pxsim_Array__push(s.tmp_0, "glums");
    r0 = pxsim_Array__push(s.tmp_0, "gluon");
    r0 = pxsim_Array__push(s.tmp_0, "glute");
    r0 = pxsim_Array__push(s.tmp_0, "gluts");
    r0 = pxsim_Array__push(s.tmp_0, "glyph");
    r0 = pxsim_Array__push(s.tmp_0, "gnapi");
    r0 = pxsim_Array__push(s.tmp_0, "gnarl");
    r0 = pxsim_Array__push(s.tmp_0, "gnarr");
    r0 = pxsim_Array__push(s.tmp_0, "gnars");
    r0 = pxsim_Array__push(s.tmp_0, "gnash");
    r0 = pxsim_Array__push(s.tmp_0, "gnats");
    r0 = pxsim_Array__push(s.tmp_0, "gnawn");
    r0 = pxsim_Array__push(s.tmp_0, "gnaws");
    r0 = pxsim_Array__push(s.tmp_0, "gnome");
    r0 = pxsim_Array__push(s.tmp_0, "gnows");
    r0 = pxsim_Array__push(s.tmp_0, "goads");
    r0 = pxsim_Array__push(s.tmp_0, "goafs");
    r0 = pxsim_Array__push(s.tmp_0, "goaft");
    r0 = pxsim_Array__push(s.tmp_0, "goals");
    r0 = pxsim_Array__push(s.tmp_0, "goary");
    r0 = pxsim_Array__push(s.tmp_0, "goats");
    r0 = pxsim_Array__push(s.tmp_0, "goaty");
    r0 = pxsim_Array__push(s.tmp_0, "goave");
    r0 = pxsim_Array__push(s.tmp_0, "goban");
    r0 = pxsim_Array__push(s.tmp_0, "gobar");
    r0 = pxsim_Array__push(s.tmp_0, "gobbe");
    r0 = pxsim_Array__push(s.tmp_0, "gobbi");
    r0 = pxsim_Array__push(s.tmp_0, "gobbo");
    r0 = pxsim_Array__push(s.tmp_0, "gobby");
    r0 = pxsim_Array__push(s.tmp_0, "gobis");
    r0 = pxsim_Array__push(s.tmp_0, "gobos");
    r0 = pxsim_Array__push(s.tmp_0, "godet");
    r0 = pxsim_Array__push(s.tmp_0, "godly");
    r0 = pxsim_Array__push(s.tmp_0, "godso");
    r0 = pxsim_Array__push(s.tmp_0, "goels");
    r0 = pxsim_Array__push(s.tmp_0, "goers");
    r0 = pxsim_Array__push(s.tmp_0, "goest");
    r0 = pxsim_Array__push(s.tmp_0, "goeth");
    r0 = pxsim_Array__push(s.tmp_0, "goety");
    r0 = pxsim_Array__push(s.tmp_0, "gofer");
    r0 = pxsim_Array__push(s.tmp_0, "goffs");
    r0 = pxsim_Array__push(s.tmp_0, "gogga");
    r0 = pxsim_Array__push(s.tmp_0, "gogos");
    r0 = pxsim_Array__push(s.tmp_0, "goier");
    r0 = pxsim_Array__push(s.tmp_0, "going");
    r0 = pxsim_Array__push(s.tmp_0, "gojis");
    r0 = pxsim_Array__push(s.tmp_0, "gokes");
    r0 = pxsim_Array__push(s.tmp_0, "golds");
    r0 = pxsim_Array__push(s.tmp_0, "goldy");
    r0 = pxsim_Array__push(s.tmp_0, "golem");
    r0 = pxsim_Array__push(s.tmp_0, "goles");
    r0 = pxsim_Array__push(s.tmp_0, "golfs");
    r0 = pxsim_Array__push(s.tmp_0, "golly");
    r0 = pxsim_Array__push(s.tmp_0, "golpe");
    r0 = pxsim_Array__push(s.tmp_0, "golps");
    r0 = pxsim_Array__push(s.tmp_0, "gombo");
    r0 = pxsim_Array__push(s.tmp_0, "gomer");
    r0 = pxsim_Array__push(s.tmp_0, "gompa");
    r0 = pxsim_Array__push(s.tmp_0, "gonad");
    r0 = pxsim_Array__push(s.tmp_0, "gonch");
    r0 = pxsim_Array__push(s.tmp_0, "gonef");
    r0 = pxsim_Array__push(s.tmp_0, "goner");
    r0 = pxsim_Array__push(s.tmp_0, "gongs");
    r0 = pxsim_Array__push(s.tmp_0, "gonia");
    r0 = pxsim_Array__push(s.tmp_0, "gonif");
    r0 = pxsim_Array__push(s.tmp_0, "gonks");
    r0 = pxsim_Array__push(s.tmp_0, "gonna");
    r0 = pxsim_Array__push(s.tmp_0, "gonof");
    r0 = pxsim_Array__push(s.tmp_0, "gonys");
    r0 = pxsim_Array__push(s.tmp_0, "gonzo");
    r0 = pxsim_Array__push(s.tmp_0, "gooby");
    r0 = pxsim_Array__push(s.tmp_0, "goodo");
    r0 = pxsim_Array__push(s.tmp_0, "goods");
    r0 = pxsim_Array__push(s.tmp_0, "goody");
    r0 = pxsim_Array__push(s.tmp_0, "gooey");
    r0 = pxsim_Array__push(s.tmp_0, "goofs");
    r0 = pxsim_Array__push(s.tmp_0, "goofy");
    r0 = pxsim_Array__push(s.tmp_0, "googs");
    r0 = pxsim_Array__push(s.tmp_0, "gooks");
    r0 = pxsim_Array__push(s.tmp_0, "gooky");
    r0 = pxsim_Array__push(s.tmp_0, "goold");
    r0 = pxsim_Array__push(s.tmp_0, "gools");
    r0 = pxsim_Array__push(s.tmp_0, "gooly");
    r0 = pxsim_Array__push(s.tmp_0, "goomy");
    r0 = pxsim_Array__push(s.tmp_0, "goons");
    r0 = pxsim_Array__push(s.tmp_0, "goony");
    r0 = pxsim_Array__push(s.tmp_0, "goops");
    r0 = pxsim_Array__push(s.tmp_0, "goopy");
    r0 = pxsim_Array__push(s.tmp_0, "goors");
    r0 = pxsim_Array__push(s.tmp_0, "goory");
    r0 = pxsim_Array__push(s.tmp_0, "goose");
    r0 = pxsim_Array__push(s.tmp_0, "goosy");
    r0 = pxsim_Array__push(s.tmp_0, "gopak");
    r0 = pxsim_Array__push(s.tmp_0, "gopik");
    r0 = pxsim_Array__push(s.tmp_0, "goral");
    r0 = pxsim_Array__push(s.tmp_0, "goras");
    r0 = pxsim_Array__push(s.tmp_0, "goray");
    r0 = pxsim_Array__push(s.tmp_0, "gorbs");
    r0 = pxsim_Array__push(s.tmp_0, "gordo");
    r0 = pxsim_Array__push(s.tmp_0, "gored");
    r0 = pxsim_Array__push(s.tmp_0, "gores");
    r0 = pxsim_Array__push(s.tmp_0, "gorge");
    r0 = pxsim_Array__push(s.tmp_0, "goris");
    r0 = pxsim_Array__push(s.tmp_0, "gorms");
    r0 = pxsim_Array__push(s.tmp_0, "gormy");
    r0 = pxsim_Array__push(s.tmp_0, "gorps");
    r0 = pxsim_Array__push(s.tmp_0, "gorse");
    r0 = pxsim_Array__push(s.tmp_0, "gorsy");
    r0 = pxsim_Array__push(s.tmp_0, "gosht");
    r0 = pxsim_Array__push(s.tmp_0, "gosse");
    r0 = pxsim_Array__push(s.tmp_0, "gotch");
    r0 = pxsim_Array__push(s.tmp_0, "goths");
    r0 = pxsim_Array__push(s.tmp_0, "gothy");
    r0 = pxsim_Array__push(s.tmp_0, "gotta");
    r0 = pxsim_Array__push(s.tmp_0, "gouch");
    r0 = pxsim_Array__push(s.tmp_0, "gouge");
    r0 = pxsim_Array__push(s.tmp_0, "gouks");
    r0 = pxsim_Array__push(s.tmp_0, "goura");
    r0 = pxsim_Array__push(s.tmp_0, "gourd");
    r0 = pxsim_Array__push(s.tmp_0, "gouts");
    r0 = pxsim_Array__push(s.tmp_0, "gouty");
    r0 = pxsim_Array__push(s.tmp_0, "goved");
    r0 = pxsim_Array__push(s.tmp_0, "goves");
    r0 = pxsim_Array__push(s.tmp_0, "gowan");
    r0 = pxsim_Array__push(s.tmp_0, "gowds");
    r0 = pxsim_Array__push(s.tmp_0, "gowfs");
    r0 = pxsim_Array__push(s.tmp_0, "gowks");
    r0 = pxsim_Array__push(s.tmp_0, "gowls");
    r0 = pxsim_Array__push(s.tmp_0, "gowns");
    r0 = pxsim_Array__push(s.tmp_0, "goxes");
    r0 = pxsim_Array__push(s.tmp_0, "goyim");
    r0 = pxsim_Array__push(s.tmp_0, "goyle");
    r0 = pxsim_Array__push(s.tmp_0, "graal");
    r0 = pxsim_Array__push(s.tmp_0, "grabs");
    r0 = pxsim_Array__push(s.tmp_0, "grace");
    r0 = pxsim_Array__push(s.tmp_0, "grade");
    r0 = pxsim_Array__push(s.tmp_0, "grads");
    r0 = pxsim_Array__push(s.tmp_0, "graff");
    r0 = pxsim_Array__push(s.tmp_0, "graft");
    r0 = pxsim_Array__push(s.tmp_0, "grail");
    r0 = pxsim_Array__push(s.tmp_0, "grain");
    r0 = pxsim_Array__push(s.tmp_0, "graip");
    r0 = pxsim_Array__push(s.tmp_0, "grama");
    r0 = pxsim_Array__push(s.tmp_0, "grame");
    r0 = pxsim_Array__push(s.tmp_0, "gramp");
    r0 = pxsim_Array__push(s.tmp_0, "grams");
    r0 = pxsim_Array__push(s.tmp_0, "grana");
    r0 = pxsim_Array__push(s.tmp_0, "grand");
    r0 = pxsim_Array__push(s.tmp_0, "grano");
    r0 = pxsim_Array__push(s.tmp_0, "grans");
    r0 = pxsim_Array__push(s.tmp_0, "grant");
    r0 = pxsim_Array__push(s.tmp_0, "grape");
    r0 = pxsim_Array__push(s.tmp_0, "graph");
    r0 = pxsim_Array__push(s.tmp_0, "grapy");
    r0 = pxsim_Array__push(s.tmp_0, "grasp");
    r0 = pxsim_Array__push(s.tmp_0, "grass");
    r0 = pxsim_Array__push(s.tmp_0, "grata");
    r0 = pxsim_Array__push(s.tmp_0, "grate");
    r0 = pxsim_Array__push(s.tmp_0, "grats");
    r0 = pxsim_Array__push(s.tmp_0, "grave");
    r0 = pxsim_Array__push(s.tmp_0, "gravs");
    r0 = pxsim_Array__push(s.tmp_0, "gravy");
    r0 = pxsim_Array__push(s.tmp_0, "grays");
    r0 = pxsim_Array__push(s.tmp_0, "graze");
    r0 = pxsim_Array__push(s.tmp_0, "great");
    r0 = pxsim_Array__push(s.tmp_0, "grebe");
    r0 = pxsim_Array__push(s.tmp_0, "grebo");
    r0 = pxsim_Array__push(s.tmp_0, "grece");
    r0 = pxsim_Array__push(s.tmp_0, "greed");
    r0 = pxsim_Array__push(s.tmp_0, "greek");
    r0 = pxsim_Array__push(s.tmp_0, "green");
    r0 = pxsim_Array__push(s.tmp_0, "grees");
    r0 = pxsim_Array__push(s.tmp_0, "greet");
    r0 = pxsim_Array__push(s.tmp_0, "grege");
    r0 = pxsim_Array__push(s.tmp_0, "grego");
    r0 = pxsim_Array__push(s.tmp_0, "grein");
    r0 = pxsim_Array__push(s.tmp_0, "grens");
    r0 = pxsim_Array__push(s.tmp_0, "greps");
    r0 = pxsim_Array__push(s.tmp_0, "grese");
    r0 = pxsim_Array__push(s.tmp_0, "greve");
    r0 = pxsim_Array__push(s.tmp_0, "grews");
    r0 = pxsim_Array__push(s.tmp_0, "greys");
    r0 = pxsim_Array__push(s.tmp_0, "grice");
    r0 = pxsim_Array__push(s.tmp_0, "gride");
    r0 = pxsim_Array__push(s.tmp_0, "grids");
    r0 = pxsim_Array__push(s.tmp_0, "grief");
    r0 = pxsim_Array__push(s.tmp_0, "griff");
    r0 = pxsim_Array__push(s.tmp_0, "grift");
    r0 = pxsim_Array__push(s.tmp_0, "grigs");
    r0 = pxsim_Array__push(s.tmp_0, "grike");
    r0 = pxsim_Array__push(s.tmp_0, "grill");
    r0 = pxsim_Array__push(s.tmp_0, "grime");
    r0 = pxsim_Array__push(s.tmp_0, "grimy");
    r0 = pxsim_Array__push(s.tmp_0, "grind");
    r0 = pxsim_Array__push(s.tmp_0, "grins");
    r0 = pxsim_Array__push(s.tmp_0, "griot");
    r0 = pxsim_Array__push(s.tmp_0, "gripe");
    r0 = pxsim_Array__push(s.tmp_0, "grips");
    r0 = pxsim_Array__push(s.tmp_0, "gript");
    r0 = pxsim_Array__push(s.tmp_0, "gripy");
    r0 = pxsim_Array__push(s.tmp_0, "grise");
    r0 = pxsim_Array__push(s.tmp_0, "grist");
    r0 = pxsim_Array__push(s.tmp_0, "grisy");
    r0 = pxsim_Array__push(s.tmp_0, "grith");
    r0 = pxsim_Array__push(s.tmp_0, "grits");
    r0 = pxsim_Array__push(s.tmp_0, "grize");
    r0 = pxsim_Array__push(s.tmp_0, "groan");
    r0 = pxsim_Array__push(s.tmp_0, "groat");
    r0 = pxsim_Array__push(s.tmp_0, "grody");
    r0 = pxsim_Array__push(s.tmp_0, "grogs");
    r0 = pxsim_Array__push(s.tmp_0, "groin");
    r0 = pxsim_Array__push(s.tmp_0, "groks");
    r0 = pxsim_Array__push(s.tmp_0, "groma");
    r0 = pxsim_Array__push(s.tmp_0, "groms");
    r0 = pxsim_Array__push(s.tmp_0, "grone");
    r0 = pxsim_Array__push(s.tmp_0, "groof");
    r0 = pxsim_Array__push(s.tmp_0, "groom");
    r0 = pxsim_Array__push(s.tmp_0, "grope");
    r0 = pxsim_Array__push(s.tmp_0, "gross");
    r0 = pxsim_Array__push(s.tmp_0, "grosz");
    r0 = pxsim_Array__push(s.tmp_0, "grots");
    r0 = pxsim_Array__push(s.tmp_0, "grouf");
    r0 = pxsim_Array__push(s.tmp_0, "group");
    r0 = pxsim_Array__push(s.tmp_0, "grout");
    r0 = pxsim_Array__push(s.tmp_0, "grove");
    r0 = pxsim_Array__push(s.tmp_0, "grovy");
    r0 = pxsim_Array__push(s.tmp_0, "growl");
    r0 = pxsim_Array__push(s.tmp_0, "grown");
    r0 = pxsim_Array__push(s.tmp_0, "grows");
    r0 = pxsim_Array__push(s.tmp_0, "grrls");
    r0 = pxsim_Array__push(s.tmp_0, "grrrl");
    r0 = pxsim_Array__push(s.tmp_0, "grubs");
    r0 = pxsim_Array__push(s.tmp_0, "grued");
    r0 = pxsim_Array__push(s.tmp_0, "gruel");
    r0 = pxsim_Array__push(s.tmp_0, "grues");
    r0 = pxsim_Array__push(s.tmp_0, "grufe");
    r0 = pxsim_Array__push(s.tmp_0, "gruff");
    r0 = pxsim_Array__push(s.tmp_0, "grume");
    r0 = pxsim_Array__push(s.tmp_0, "grump");
    r0 = pxsim_Array__push(s.tmp_0, "grund");
    r0 = pxsim_Array__push(s.tmp_0, "grunt");
    r0 = pxsim_Array__push(s.tmp_0, "gryce");
    r0 = pxsim_Array__push(s.tmp_0, "gryde");
    r0 = pxsim_Array__push(s.tmp_0, "gryke");
    r0 = pxsim_Array__push(s.tmp_0, "grype");
    r0 = pxsim_Array__push(s.tmp_0, "grypt");
    r0 = pxsim_Array__push(s.tmp_0, "guaco");
    r0 = pxsim_Array__push(s.tmp_0, "guana");
    r0 = pxsim_Array__push(s.tmp_0, "guano");
    r0 = pxsim_Array__push(s.tmp_0, "guans");
    r0 = pxsim_Array__push(s.tmp_0, "guard");
    r0 = pxsim_Array__push(s.tmp_0, "guars");
    r0 = pxsim_Array__push(s.tmp_0, "guava");
    r0 = pxsim_Array__push(s.tmp_0, "gubba");
    r0 = pxsim_Array__push(s.tmp_0, "gucks");
    r0 = pxsim_Array__push(s.tmp_0, "gucky");
    r0 = pxsim_Array__push(s.tmp_0, "gudes");
    r0 = pxsim_Array__push(s.tmp_0, "guess");
    r0 = pxsim_Array__push(s.tmp_0, "guest");
    r0 = pxsim_Array__push(s.tmp_0, "guffs");
    r0 = pxsim_Array__push(s.tmp_0, "gugas");
    r0 = pxsim_Array__push(s.tmp_0, "guggl");
    r0 = pxsim_Array__push(s.tmp_0, "guide");
    r0 = pxsim_Array__push(s.tmp_0, "guido");
    r0 = pxsim_Array__push(s.tmp_0, "guids");
    r0 = pxsim_Array__push(s.tmp_0, "guild");
    r0 = pxsim_Array__push(s.tmp_0, "guile");
    r0 = pxsim_Array__push(s.tmp_0, "guilt");
    r0 = pxsim_Array__push(s.tmp_0, "guimp");
    r0 = pxsim_Array__push(s.tmp_0, "guiro");
    r0 = pxsim_Array__push(s.tmp_0, "guise");
    r0 = pxsim_Array__push(s.tmp_0, "gulab");
    r0 = pxsim_Array__push(s.tmp_0, "gulag");
    r0 = pxsim_Array__push(s.tmp_0, "gular");
    r0 = pxsim_Array__push(s.tmp_0, "gulas");
    r0 = pxsim_Array__push(s.tmp_0, "gulch");
    r0 = pxsim_Array__push(s.tmp_0, "gules");
    r0 = pxsim_Array__push(s.tmp_0, "gulet");
    r0 = pxsim_Array__push(s.tmp_0, "gulfs");
    r0 = pxsim_Array__push(s.tmp_0, "gulfy");
    r0 = pxsim_Array__push(s.tmp_0, "gulls");
    r0 = pxsim_Array__push(s.tmp_0, "gully");
    r0 = pxsim_Array__push(s.tmp_0, "gulph");
    r0 = pxsim_Array__push(s.tmp_0, "gulps");
    r0 = pxsim_Array__push(s.tmp_0, "gulpy");
    r0 = pxsim_Array__push(s.tmp_0, "gumbo");
    r0 = pxsim_Array__push(s.tmp_0, "gumma");
    r0 = pxsim_Array__push(s.tmp_0, "gummi");
    r0 = pxsim_Array__push(s.tmp_0, "gummy");
    r0 = pxsim_Array__push(s.tmp_0, "gumps");
    r0 = pxsim_Array__push(s.tmp_0, "gunas");
    r0 = pxsim_Array__push(s.tmp_0, "gundi");
    r0 = pxsim_Array__push(s.tmp_0, "gundy");
    r0 = pxsim_Array__push(s.tmp_0, "gunge");
    r0 = pxsim_Array__push(s.tmp_0, "gungy");
    r0 = pxsim_Array__push(s.tmp_0, "gunks");
    r0 = pxsim_Array__push(s.tmp_0, "gunky");
    r0 = pxsim_Array__push(s.tmp_0, "gunny");
    r0 = pxsim_Array__push(s.tmp_0, "guppy");
    r0 = pxsim_Array__push(s.tmp_0, "guqin");
    r0 = pxsim_Array__push(s.tmp_0, "gurdy");
    r0 = pxsim_Array__push(s.tmp_0, "gurge");
    r0 = pxsim_Array__push(s.tmp_0, "gurks");
    r0 = pxsim_Array__push(s.tmp_0, "gurls");
    r0 = pxsim_Array__push(s.tmp_0, "gurly");
    r0 = pxsim_Array__push(s.tmp_0, "gurns");
    r0 = pxsim_Array__push(s.tmp_0, "gurry");
    r0 = pxsim_Array__push(s.tmp_0, "gursh");
    r0 = pxsim_Array__push(s.tmp_0, "gurus");
    r0 = pxsim_Array__push(s.tmp_0, "gushy");
    r0 = pxsim_Array__push(s.tmp_0, "gusla");
    r0 = pxsim_Array__push(s.tmp_0, "gusle");
    r0 = pxsim_Array__push(s.tmp_0, "gusli");
    r0 = pxsim_Array__push(s.tmp_0, "gussy");
    r0 = pxsim_Array__push(s.tmp_0, "gusto");
    r0 = pxsim_Array__push(s.tmp_0, "gusts");
    r0 = pxsim_Array__push(s.tmp_0, "gusty");
    r0 = pxsim_Array__push(s.tmp_0, "gutsy");
    r0 = pxsim_Array__push(s.tmp_0, "gutta");
    r0 = pxsim_Array__push(s.tmp_0, "gutty");
    r0 = pxsim_Array__push(s.tmp_0, "guyed");
    r0 = pxsim_Array__push(s.tmp_0, "guyle");
    r0 = pxsim_Array__push(s.tmp_0, "guyot");
    r0 = pxsim_Array__push(s.tmp_0, "guyse");
    r0 = pxsim_Array__push(s.tmp_0, "gwine");
    r0 = pxsim_Array__push(s.tmp_0, "gyals");
    r0 = pxsim_Array__push(s.tmp_0, "gyans");
    r0 = pxsim_Array__push(s.tmp_0, "gybed");
    r0 = pxsim_Array__push(s.tmp_0, "gybes");
    r0 = pxsim_Array__push(s.tmp_0, "gyeld");
    r0 = pxsim_Array__push(s.tmp_0, "gymps");
    r0 = pxsim_Array__push(s.tmp_0, "gynae");
    r0 = pxsim_Array__push(s.tmp_0, "gynie");
    r0 = pxsim_Array__push(s.tmp_0, "gynny");
    r0 = pxsim_Array__push(s.tmp_0, "gynos");
    r0 = pxsim_Array__push(s.tmp_0, "gyoza");
    r0 = pxsim_Array__push(s.tmp_0, "gypes");
    r0 = pxsim_Array__push(s.tmp_0, "gypos");
    r0 = pxsim_Array__push(s.tmp_0, "gyppo");
    r0 = pxsim_Array__push(s.tmp_0, "gyppy");
    r0 = pxsim_Array__push(s.tmp_0, "gypsy");
    r0 = pxsim_Array__push(s.tmp_0, "gyral");
    r0 = pxsim_Array__push(s.tmp_0, "gyred");
    r0 = pxsim_Array__push(s.tmp_0, "gyres");
    r0 = pxsim_Array__push(s.tmp_0, "gyron");
    r0 = pxsim_Array__push(s.tmp_0, "gyros");
    r0 = pxsim_Array__push(s.tmp_0, "gyrus");
    r0 = pxsim_Array__push(s.tmp_0, "gytes");
    r0 = pxsim_Array__push(s.tmp_0, "gyved");
    r0 = pxsim_Array__push(s.tmp_0, "gyver");
    r0 = pxsim_Array__push(s.tmp_0, "gyves");
    r0 = pxsim_Array__push(s.tmp_0, "haafs");
    r0 = pxsim_Array__push(s.tmp_0, "haars");
    r0 = pxsim_Array__push(s.tmp_0, "haats");
    r0 = pxsim_Array__push(s.tmp_0, "habit");
    r0 = pxsim_Array__push(s.tmp_0, "hable");
    r0 = pxsim_Array__push(s.tmp_0, "habus");
    r0 = pxsim_Array__push(s.tmp_0, "hacek");
    r0 = pxsim_Array__push(s.tmp_0, "hacks");
    r0 = pxsim_Array__push(s.tmp_0, "hacky");
    r0 = pxsim_Array__push(s.tmp_0, "hadal");
    r0 = pxsim_Array__push(s.tmp_0, "haded");
    r0 = pxsim_Array__push(s.tmp_0, "hades");
    r0 = pxsim_Array__push(s.tmp_0, "hadji");
    r0 = pxsim_Array__push(s.tmp_0, "hadst");
    r0 = pxsim_Array__push(s.tmp_0, "haems");
    r0 = pxsim_Array__push(s.tmp_0, "haere");
    r0 = pxsim_Array__push(s.tmp_0, "haets");
    r0 = pxsim_Array__push(s.tmp_0, "haffs");
    r0 = pxsim_Array__push(s.tmp_0, "hafiz");
    r0 = pxsim_Array__push(s.tmp_0, "hafta");
    r0 = pxsim_Array__push(s.tmp_0, "hafts");
    r0 = pxsim_Array__push(s.tmp_0, "haggs");
    r0 = pxsim_Array__push(s.tmp_0, "haham");
    r0 = pxsim_Array__push(s.tmp_0, "hahas");
    r0 = pxsim_Array__push(s.tmp_0, "haick");
    r0 = pxsim_Array__push(s.tmp_0, "haika");
    r0 = pxsim_Array__push(s.tmp_0, "haiks");
    r0 = pxsim_Array__push(s.tmp_0, "haiku");
    r0 = pxsim_Array__push(s.tmp_0, "hails");
    r0 = pxsim_Array__push(s.tmp_0, "haily");
    r0 = pxsim_Array__push(s.tmp_0, "hains");
    r0 = pxsim_Array__push(s.tmp_0, "haint");
    r0 = pxsim_Array__push(s.tmp_0, "hairs");
    r0 = pxsim_Array__push(s.tmp_0, "hairy");
    r0 = pxsim_Array__push(s.tmp_0, "haith");
    r0 = pxsim_Array__push(s.tmp_0, "hajes");
    r0 = pxsim_Array__push(s.tmp_0, "hajis");
    r0 = pxsim_Array__push(s.tmp_0, "hajji");
    r0 = pxsim_Array__push(s.tmp_0, "hakam");
    r0 = pxsim_Array__push(s.tmp_0, "hakas");
    r0 = pxsim_Array__push(s.tmp_0, "hakea");
    r0 = pxsim_Array__push(s.tmp_0, "hakes");
    r0 = pxsim_Array__push(s.tmp_0, "hakim");
    r0 = pxsim_Array__push(s.tmp_0, "hakus");
    r0 = pxsim_Array__push(s.tmp_0, "halal");
    r0 = pxsim_Array__push(s.tmp_0, "haldi");
    r0 = pxsim_Array__push(s.tmp_0, "haled");
    r0 = pxsim_Array__push(s.tmp_0, "haler");
    r0 = pxsim_Array__push(s.tmp_0, "hales");
    r0 = pxsim_Array__push(s.tmp_0, "halfa");
    r0 = pxsim_Array__push(s.tmp_0, "halfs");
    r0 = pxsim_Array__push(s.tmp_0, "halid");
    r0 = pxsim_Array__push(s.tmp_0, "hallo");
    r0 = pxsim_Array__push(s.tmp_0, "halls");
    r0 = pxsim_Array__push(s.tmp_0, "halma");
    r0 = pxsim_Array__push(s.tmp_0, "halms");
    r0 = pxsim_Array__push(s.tmp_0, "halon");
    r0 = pxsim_Array__push(s.tmp_0, "halos");
    r0 = pxsim_Array__push(s.tmp_0, "halse");
    r0 = pxsim_Array__push(s.tmp_0, "halsh");
    r0 = pxsim_Array__push(s.tmp_0, "halts");
    r0 = pxsim_Array__push(s.tmp_0, "halva");
    r0 = pxsim_Array__push(s.tmp_0, "halve");
    r0 = pxsim_Array__push(s.tmp_0, "halwa");
    r0 = pxsim_Array__push(s.tmp_0, "hamal");
    r0 = pxsim_Array__push(s.tmp_0, "hamba");
    r0 = pxsim_Array__push(s.tmp_0, "hamed");
    r0 = pxsim_Array__push(s.tmp_0, "hamel");
    r0 = pxsim_Array__push(s.tmp_0, "hames");
    r0 = pxsim_Array__push(s.tmp_0, "hammy");
    r0 = pxsim_Array__push(s.tmp_0, "hamza");
    r0 = pxsim_Array__push(s.tmp_0, "hanap");
    r0 = pxsim_Array__push(s.tmp_0, "hance");
    r0 = pxsim_Array__push(s.tmp_0, "hanch");
    r0 = pxsim_Array__push(s.tmp_0, "handi");
    r0 = pxsim_Array__push(s.tmp_0, "hands");
    r0 = pxsim_Array__push(s.tmp_0, "handy");
    r0 = pxsim_Array__push(s.tmp_0, "hangi");
    r0 = pxsim_Array__push(s.tmp_0, "hangs");
    r0 = pxsim_Array__push(s.tmp_0, "hanks");
    r0 = pxsim_Array__push(s.tmp_0, "hanky");
    r0 = pxsim_Array__push(s.tmp_0, "hansa");
    r0 = pxsim_Array__push(s.tmp_0, "hanse");
    r0 = pxsim_Array__push(s.tmp_0, "hants");
    r0 = pxsim_Array__push(s.tmp_0, "haole");
    r0 = pxsim_Array__push(s.tmp_0, "haoma");
    r0 = pxsim_Array__push(s.tmp_0, "hapas");
    r0 = pxsim_Array__push(s.tmp_0, "hapax");
    r0 = pxsim_Array__push(s.tmp_0, "haply");
    r0 = pxsim_Array__push(s.tmp_0, "happi");
    r0 = pxsim_Array__push(s.tmp_0, "happy");
    r0 = pxsim_Array__push(s.tmp_0, "hapus");
    r0 = pxsim_Array__push(s.tmp_0, "haram");
    r0 = pxsim_Array__push(s.tmp_0, "hards");
    r0 = pxsim_Array__push(s.tmp_0, "hardy");
    r0 = pxsim_Array__push(s.tmp_0, "hared");
    r0 = pxsim_Array__push(s.tmp_0, "harem");
    r0 = pxsim_Array__push(s.tmp_0, "hares");
    r0 = pxsim_Array__push(s.tmp_0, "harim");
    r0 = pxsim_Array__push(s.tmp_0, "harks");
    r0 = pxsim_Array__push(s.tmp_0, "harls");
    r0 = pxsim_Array__push(s.tmp_0, "harms");
    r0 = pxsim_Array__push(s.tmp_0, "harns");
    r0 = pxsim_Array__push(s.tmp_0, "haros");
    r0 = pxsim_Array__push(s.tmp_0, "harps");
    r0 = pxsim_Array__push(s.tmp_0, "harpy");
    r0 = pxsim_Array__push(s.tmp_0, "harry");
    r0 = pxsim_Array__push(s.tmp_0, "harsh");
    r0 = pxsim_Array__push(s.tmp_0, "harts");
    r0 = pxsim_Array__push(s.tmp_0, "hashy");
    r0 = pxsim_Array__push(s.tmp_0, "hasks");
    r0 = pxsim_Array__push(s.tmp_0, "hasps");
    r0 = pxsim_Array__push(s.tmp_0, "hasta");
    r0 = pxsim_Array__push(s.tmp_0, "haste");
    r0 = pxsim_Array__push(s.tmp_0, "hasty");
    r0 = pxsim_Array__push(s.tmp_0, "hatch");
    r0 = pxsim_Array__push(s.tmp_0, "hated");
    r0 = pxsim_Array__push(s.tmp_0, "hater");
    r0 = pxsim_Array__push(s.tmp_0, "hates");
    r0 = pxsim_Array__push(s.tmp_0, "hatha");
    r0 = pxsim_Array__push(s.tmp_0, "hathi");
    r0 = pxsim_Array__push(s.tmp_0, "hatty");
    r0 = pxsim_Array__push(s.tmp_0, "hauds");
    r0 = pxsim_Array__push(s.tmp_0, "haufs");
    r0 = pxsim_Array__push(s.tmp_0, "haugh");
    r0 = pxsim_Array__push(s.tmp_0, "haugo");
    r0 = pxsim_Array__push(s.tmp_0, "hauld");
    r0 = pxsim_Array__push(s.tmp_0, "haulm");
    r0 = pxsim_Array__push(s.tmp_0, "hauls");
    r0 = pxsim_Array__push(s.tmp_0, "hault");
    r0 = pxsim_Array__push(s.tmp_0, "hauns");
    r0 = pxsim_Array__push(s.tmp_0, "haunt");
    r0 = pxsim_Array__push(s.tmp_0, "hause");
    r0 = pxsim_Array__push(s.tmp_0, "haute");
    r0 = pxsim_Array__push(s.tmp_0, "havan");
    r0 = pxsim_Array__push(s.tmp_0, "havel");
    r0 = pxsim_Array__push(s.tmp_0, "haven");
    r0 = pxsim_Array__push(s.tmp_0, "haver");
    r0 = pxsim_Array__push(s.tmp_0, "haves");
    r0 = pxsim_Array__push(s.tmp_0, "havoc");
    r0 = pxsim_Array__push(s.tmp_0, "hawed");
    r0 = pxsim_Array__push(s.tmp_0, "hawks");
    r0 = pxsim_Array__push(s.tmp_0, "hawms");
    r0 = pxsim_Array__push(s.tmp_0, "hawse");
    r0 = pxsim_Array__push(s.tmp_0, "hayed");
    r0 = pxsim_Array__push(s.tmp_0, "hayer");
    r0 = pxsim_Array__push(s.tmp_0, "hayey");
    r0 = pxsim_Array__push(s.tmp_0, "hayle");
    r0 = pxsim_Array__push(s.tmp_0, "hazan");
    r0 = pxsim_Array__push(s.tmp_0, "hazed");
    r0 = pxsim_Array__push(s.tmp_0, "hazel");
    r0 = pxsim_Array__push(s.tmp_0, "hazer");
    r0 = pxsim_Array__push(s.tmp_0, "hazes");
    r0 = pxsim_Array__push(s.tmp_0, "hazle");
    r0 = pxsim_Array__push(s.tmp_0, "heads");
    r0 = pxsim_Array__push(s.tmp_0, "heady");
    r0 = pxsim_Array__push(s.tmp_0, "heald");
    r0 = pxsim_Array__push(s.tmp_0, "heals");
    r0 = pxsim_Array__push(s.tmp_0, "heame");
    r0 = pxsim_Array__push(s.tmp_0, "heaps");
    r0 = pxsim_Array__push(s.tmp_0, "heapy");
    r0 = pxsim_Array__push(s.tmp_0, "heard");
    r0 = pxsim_Array__push(s.tmp_0, "heare");
    r0 = pxsim_Array__push(s.tmp_0, "hears");
    r0 = pxsim_Array__push(s.tmp_0, "heart");
    r0 = pxsim_Array__push(s.tmp_0, "heast");
    r0 = pxsim_Array__push(s.tmp_0, "heath");
    r0 = pxsim_Array__push(s.tmp_0, "heats");
    r0 = pxsim_Array__push(s.tmp_0, "heaty");
    r0 = pxsim_Array__push(s.tmp_0, "heave");
    r0 = pxsim_Array__push(s.tmp_0, "heavy");
    r0 = pxsim_Array__push(s.tmp_0, "heben");
    r0 = pxsim_Array__push(s.tmp_0, "hebes");
    r0 = pxsim_Array__push(s.tmp_0, "hecht");
    r0 = pxsim_Array__push(s.tmp_0, "hecks");
    r0 = pxsim_Array__push(s.tmp_0, "heder");
    r0 = pxsim_Array__push(s.tmp_0, "hedge");
    r0 = pxsim_Array__push(s.tmp_0, "hedgy");
    r0 = pxsim_Array__push(s.tmp_0, "heeds");
    r0 = pxsim_Array__push(s.tmp_0, "heedy");
    r0 = pxsim_Array__push(s.tmp_0, "heels");
    r0 = pxsim_Array__push(s.tmp_0, "heeze");
    r0 = pxsim_Array__push(s.tmp_0, "hefte");
    r0 = pxsim_Array__push(s.tmp_0, "hefts");
    r0 = pxsim_Array__push(s.tmp_0, "hefty");
    r0 = pxsim_Array__push(s.tmp_0, "heiau");
    r0 = pxsim_Array__push(s.tmp_0, "heids");
    r0 = pxsim_Array__push(s.tmp_0, "heigh");
    r0 = pxsim_Array__push(s.tmp_0, "heils");
    r0 = pxsim_Array__push(s.tmp_0, "heirs");
    r0 = pxsim_Array__push(s.tmp_0, "heist");
    r0 = pxsim_Array__push(s.tmp_0, "hejab");
    r0 = pxsim_Array__push(s.tmp_0, "hejra");
    r0 = pxsim_Array__push(s.tmp_0, "heled");
    r0 = pxsim_Array__push(s.tmp_0, "heles");
    r0 = pxsim_Array__push(s.tmp_0, "helio");
    r0 = pxsim_Array__push(s.tmp_0, "helix");
    r0 = pxsim_Array__push(s.tmp_0, "hella");
    r0 = pxsim_Array__push(s.tmp_0, "hello");
    r0 = pxsim_Array__push(s.tmp_0, "hells");
    r0 = pxsim_Array__push(s.tmp_0, "helly");
    r0 = pxsim_Array__push(s.tmp_0, "helms");
    r0 = pxsim_Array__push(s.tmp_0, "helos");
    r0 = pxsim_Array__push(s.tmp_0, "helot");
    r0 = pxsim_Array__push(s.tmp_0, "helps");
    r0 = pxsim_Array__push(s.tmp_0, "helve");
    r0 = pxsim_Array__push(s.tmp_0, "hemal");
    r0 = pxsim_Array__push(s.tmp_0, "hemes");
    r0 = pxsim_Array__push(s.tmp_0, "hemic");
    r0 = pxsim_Array__push(s.tmp_0, "hemin");
    r0 = pxsim_Array__push(s.tmp_0, "hemps");
    r0 = pxsim_Array__push(s.tmp_0, "hempy");
    r0 = pxsim_Array__push(s.tmp_0, "hence");
    r0 = pxsim_Array__push(s.tmp_0, "hench");
    r0 = pxsim_Array__push(s.tmp_0, "hends");
    r0 = pxsim_Array__push(s.tmp_0, "henge");
    r0 = pxsim_Array__push(s.tmp_0, "henna");
    r0 = pxsim_Array__push(s.tmp_0, "henny");
    r0 = pxsim_Array__push(s.tmp_0, "henry");
    r0 = pxsim_Array__push(s.tmp_0, "hents");
    r0 = pxsim_Array__push(s.tmp_0, "hepar");
    r0 = pxsim_Array__push(s.tmp_0, "herbs");
    r0 = pxsim_Array__push(s.tmp_0, "herby");
    r0 = pxsim_Array__push(s.tmp_0, "herds");
    r0 = pxsim_Array__push(s.tmp_0, "heres");
    r0 = pxsim_Array__push(s.tmp_0, "herls");
    r0 = pxsim_Array__push(s.tmp_0, "herma");
    r0 = pxsim_Array__push(s.tmp_0, "herms");
    r0 = pxsim_Array__push(s.tmp_0, "herns");
    r0 = pxsim_Array__push(s.tmp_0, "heron");
    r0 = pxsim_Array__push(s.tmp_0, "heros");
    r0 = pxsim_Array__push(s.tmp_0, "herps");
    r0 = pxsim_Array__push(s.tmp_0, "herry");
    r0 = pxsim_Array__push(s.tmp_0, "herse");
    r0 = pxsim_Array__push(s.tmp_0, "hertz");
    r0 = pxsim_Array__push(s.tmp_0, "herye");
    r0 = pxsim_Array__push(s.tmp_0, "hesps");
    r0 = pxsim_Array__push(s.tmp_0, "hests");
    r0 = pxsim_Array__push(s.tmp_0, "hetes");
    r0 = pxsim_Array__push(s.tmp_0, "heths");
    r0 = pxsim_Array__push(s.tmp_0, "heuch");
    r0 = pxsim_Array__push(s.tmp_0, "heugh");
    r0 = pxsim_Array__push(s.tmp_0, "hevea");
    r0 = pxsim_Array__push(s.tmp_0, "hevel");
    r0 = pxsim_Array__push(s.tmp_0, "hewed");
    r0 = pxsim_Array__push(s.tmp_0, "hewer");
    r0 = pxsim_Array__push(s.tmp_0, "hewgh");
    r0 = pxsim_Array__push(s.tmp_0, "hexad");
    r0 = pxsim_Array__push(s.tmp_0, "hexed");
    r0 = pxsim_Array__push(s.tmp_0, "hexer");
    r0 = pxsim_Array__push(s.tmp_0, "hexes");
    r0 = pxsim_Array__push(s.tmp_0, "hexyl");
    r0 = pxsim_Array__push(s.tmp_0, "heyed");
    r0 = pxsim_Array__push(s.tmp_0, "hiant");
    r0 = pxsim_Array__push(s.tmp_0, "hibas");
    r0 = pxsim_Array__push(s.tmp_0, "hicks");
    r0 = pxsim_Array__push(s.tmp_0, "hided");
    r0 = pxsim_Array__push(s.tmp_0, "hider");
    r0 = pxsim_Array__push(s.tmp_0, "hides");
    r0 = pxsim_Array__push(s.tmp_0, "hiems");
    r0 = pxsim_Array__push(s.tmp_0, "hifis");
    r0 = pxsim_Array__push(s.tmp_0, "highs");
    r0 = pxsim_Array__push(s.tmp_0, "hight");
    r0 = pxsim_Array__push(s.tmp_0, "hijab");
    r0 = pxsim_Array__push(s.tmp_0, "hijra");
    r0 = pxsim_Array__push(s.tmp_0, "hiked");
    r0 = pxsim_Array__push(s.tmp_0, "hiker");
    r0 = pxsim_Array__push(s.tmp_0, "hikes");
    r0 = pxsim_Array__push(s.tmp_0, "hikoi");
    r0 = pxsim_Array__push(s.tmp_0, "hilar");
    r0 = pxsim_Array__push(s.tmp_0, "hilch");
    r0 = pxsim_Array__push(s.tmp_0, "hillo");
    r0 = pxsim_Array__push(s.tmp_0, "hills");
    r0 = pxsim_Array__push(s.tmp_0, "hilly");
    r0 = pxsim_Array__push(s.tmp_0, "hilsa");
    r0 = pxsim_Array__push(s.tmp_0, "hilts");
    r0 = pxsim_Array__push(s.tmp_0, "hilum");
    r0 = pxsim_Array__push(s.tmp_0, "hilus");
    r0 = pxsim_Array__push(s.tmp_0, "himbo");
    r0 = pxsim_Array__push(s.tmp_0, "hinau");
    r0 = pxsim_Array__push(s.tmp_0, "hinds");
    r0 = pxsim_Array__push(s.tmp_0, "hinge");
    r0 = pxsim_Array__push(s.tmp_0, "hings");
    r0 = pxsim_Array__push(s.tmp_0, "hinky");
    r0 = pxsim_Array__push(s.tmp_0, "hinny");
    r0 = pxsim_Array__push(s.tmp_0, "hints");
    r0 = pxsim_Array__push(s.tmp_0, "hiois");
    r0 = pxsim_Array__push(s.tmp_0, "hiped");
    r0 = pxsim_Array__push(s.tmp_0, "hiper");
    r0 = pxsim_Array__push(s.tmp_0, "hipes");
    r0 = pxsim_Array__push(s.tmp_0, "hiply");
    r0 = pxsim_Array__push(s.tmp_0, "hippo");
    r0 = pxsim_Array__push(s.tmp_0, "hippy");
    r0 = pxsim_Array__push(s.tmp_0, "hired");
    r0 = pxsim_Array__push(s.tmp_0, "hiree");
    r0 = pxsim_Array__push(s.tmp_0, "hirer");
    r0 = pxsim_Array__push(s.tmp_0, "hires");
    r0 = pxsim_Array__push(s.tmp_0, "hissy");
    r0 = pxsim_Array__push(s.tmp_0, "hists");
    r0 = pxsim_Array__push(s.tmp_0, "hitch");
    r0 = pxsim_Array__push(s.tmp_0, "hithe");
    r0 = pxsim_Array__push(s.tmp_0, "hived");
    r0 = pxsim_Array__push(s.tmp_0, "hiver");
    r0 = pxsim_Array__push(s.tmp_0, "hives");
    r0 = pxsim_Array__push(s.tmp_0, "hizen");
    r0 = pxsim_Array__push(s.tmp_0, "hoach");
    r0 = pxsim_Array__push(s.tmp_0, "hoaed");
    r0 = pxsim_Array__push(s.tmp_0, "hoagy");
    r0 = pxsim_Array__push(s.tmp_0, "hoard");
    r0 = pxsim_Array__push(s.tmp_0, "hoars");
    r0 = pxsim_Array__push(s.tmp_0, "hoary");
    r0 = pxsim_Array__push(s.tmp_0, "hoast");
    r0 = pxsim_Array__push(s.tmp_0, "hobby");
    r0 = pxsim_Array__push(s.tmp_0, "hobos");
    r0 = pxsim_Array__push(s.tmp_0, "hocks");
    r0 = pxsim_Array__push(s.tmp_0, "hocus");
    r0 = pxsim_Array__push(s.tmp_0, "hodad");
    r0 = pxsim_Array__push(s.tmp_0, "hodja");
    r0 = pxsim_Array__push(s.tmp_0, "hoers");
    r0 = pxsim_Array__push(s.tmp_0, "hogan");
    r0 = pxsim_Array__push(s.tmp_0, "hogen");
    r0 = pxsim_Array__push(s.tmp_0, "hoggs");
    r0 = pxsim_Array__push(s.tmp_0, "hoghs");
    r0 = pxsim_Array__push(s.tmp_0, "hogoh");
    r0 = pxsim_Array__push(s.tmp_0, "hogos");
    r0 = pxsim_Array__push(s.tmp_0, "hohed");
    r0 = pxsim_Array__push(s.tmp_0, "hoick");
    r0 = pxsim_Array__push(s.tmp_0, "hoied");
    r0 = pxsim_Array__push(s.tmp_0, "hoiks");
    r0 = pxsim_Array__push(s.tmp_0, "hoing");
    r0 = pxsim_Array__push(s.tmp_0, "hoise");
    r0 = pxsim_Array__push(s.tmp_0, "hoist");
    r0 = pxsim_Array__push(s.tmp_0, "hokas");
    r0 = pxsim_Array__push(s.tmp_0, "hoked");
    r0 = pxsim_Array__push(s.tmp_0, "hokes");
    r0 = pxsim_Array__push(s.tmp_0, "hokey");
    r0 = pxsim_Array__push(s.tmp_0, "hokis");
    r0 = pxsim_Array__push(s.tmp_0, "hokku");
    r0 = pxsim_Array__push(s.tmp_0, "hokum");
    r0 = pxsim_Array__push(s.tmp_0, "holds");
    r0 = pxsim_Array__push(s.tmp_0, "holed");
    r0 = pxsim_Array__push(s.tmp_0, "holes");
    r0 = pxsim_Array__push(s.tmp_0, "holey");
    r0 = pxsim_Array__push(s.tmp_0, "holks");
    r0 = pxsim_Array__push(s.tmp_0, "holla");
    r0 = pxsim_Array__push(s.tmp_0, "hollo");
    r0 = pxsim_Array__push(s.tmp_0, "holly");
    r0 = pxsim_Array__push(s.tmp_0, "holme");
    r0 = pxsim_Array__push(s.tmp_0, "holms");
    r0 = pxsim_Array__push(s.tmp_0, "holon");
    r0 = pxsim_Array__push(s.tmp_0, "holos");
    r0 = pxsim_Array__push(s.tmp_0, "holts");
    r0 = pxsim_Array__push(s.tmp_0, "homas");
    r0 = pxsim_Array__push(s.tmp_0, "homed");
    r0 = pxsim_Array__push(s.tmp_0, "homer");
    r0 = pxsim_Array__push(s.tmp_0, "homes");
    r0 = pxsim_Array__push(s.tmp_0, "homey");
    r0 = pxsim_Array__push(s.tmp_0, "homie");
    r0 = pxsim_Array__push(s.tmp_0, "homme");
    r0 = pxsim_Array__push(s.tmp_0, "homos");
    r0 = pxsim_Array__push(s.tmp_0, "honan");
    r0 = pxsim_Array__push(s.tmp_0, "honda");
    r0 = pxsim_Array__push(s.tmp_0, "honds");
    r0 = pxsim_Array__push(s.tmp_0, "honed");
    r0 = pxsim_Array__push(s.tmp_0, "honer");
    r0 = pxsim_Array__push(s.tmp_0, "hones");
    r0 = pxsim_Array__push(s.tmp_0, "honey");
    r0 = pxsim_Array__push(s.tmp_0, "hongi");
    r0 = pxsim_Array__push(s.tmp_0, "hongs");
    r0 = pxsim_Array__push(s.tmp_0, "honks");
    r0 = pxsim_Array__push(s.tmp_0, "honky");
    r0 = pxsim_Array__push(s.tmp_0, "honor");
    r0 = pxsim_Array__push(s.tmp_0, "hooch");
    r0 = pxsim_Array__push(s.tmp_0, "hoods");
    r0 = pxsim_Array__push(s.tmp_0, "hoody");
    r0 = pxsim_Array__push(s.tmp_0, "hooey");
    r0 = pxsim_Array__push(s.tmp_0, "hoofs");
    r0 = pxsim_Array__push(s.tmp_0, "hoogo");
    r0 = pxsim_Array__push(s.tmp_0, "hooha");
    r0 = pxsim_Array__push(s.tmp_0, "hooka");
    r0 = pxsim_Array__push(s.tmp_0, "hooks");
    r0 = pxsim_Array__push(s.tmp_0, "hooky");
    r0 = pxsim_Array__push(s.tmp_0, "hooly");
    r0 = pxsim_Array__push(s.tmp_0, "hoons");
    r0 = pxsim_Array__push(s.tmp_0, "hoops");
    r0 = pxsim_Array__push(s.tmp_0, "hoord");
    r0 = pxsim_Array__push(s.tmp_0, "hoors");
    r0 = pxsim_Array__push(s.tmp_0, "hoosh");
    r0 = pxsim_Array__push(s.tmp_0, "hoots");
    r0 = pxsim_Array__push(s.tmp_0, "hooty");
    r0 = pxsim_Array__push(s.tmp_0, "hoove");
    r0 = pxsim_Array__push(s.tmp_0, "hopak");
    r0 = pxsim_Array__push(s.tmp_0, "hoped");
    r0 = pxsim_Array__push(s.tmp_0, "hoper");
    r0 = pxsim_Array__push(s.tmp_0, "hopes");
    r0 = pxsim_Array__push(s.tmp_0, "hoppy");
    r0 = pxsim_Array__push(s.tmp_0, "horah");
    r0 = pxsim_Array__push(s.tmp_0, "horal");
    r0 = pxsim_Array__push(s.tmp_0, "horas");
    r0 = pxsim_Array__push(s.tmp_0, "horde");
    r0 = pxsim_Array__push(s.tmp_0, "horis");
    r0 = pxsim_Array__push(s.tmp_0, "horks");
    r0 = pxsim_Array__push(s.tmp_0, "horme");
    r0 = pxsim_Array__push(s.tmp_0, "horns");
    r0 = pxsim_Array__push(s.tmp_0, "horny");
    r0 = pxsim_Array__push(s.tmp_0, "horse");
    r0 = pxsim_Array__push(s.tmp_0, "horst");
    r0 = pxsim_Array__push(s.tmp_0, "horsy");
    r0 = pxsim_Array__push(s.tmp_0, "hosed");
    r0 = pxsim_Array__push(s.tmp_0, "hosel");
    r0 = pxsim_Array__push(s.tmp_0, "hosen");
    r0 = pxsim_Array__push(s.tmp_0, "hoser");
    r0 = pxsim_Array__push(s.tmp_0, "hoses");
    r0 = pxsim_Array__push(s.tmp_0, "hosey");
    r0 = pxsim_Array__push(s.tmp_0, "hosta");
    r0 = pxsim_Array__push(s.tmp_0, "hosts");
    r0 = pxsim_Array__push(s.tmp_0, "hotch");
    r0 = pxsim_Array__push(s.tmp_0, "hotel");
    r0 = pxsim_Array__push(s.tmp_0, "hoten");
    r0 = pxsim_Array__push(s.tmp_0, "hotis");
    r0 = pxsim_Array__push(s.tmp_0, "hotly");
    r0 = pxsim_Array__push(s.tmp_0, "hotte");
    r0 = pxsim_Array__push(s.tmp_0, "hotty");
    r0 = pxsim_Array__push(s.tmp_0, "houff");
    r0 = pxsim_Array__push(s.tmp_0, "houfs");
    r0 = pxsim_Array__push(s.tmp_0, "hough");
    r0 = pxsim_Array__push(s.tmp_0, "hound");
    r0 = pxsim_Array__push(s.tmp_0, "houri");
    r0 = pxsim_Array__push(s.tmp_0, "hours");
    r0 = pxsim_Array__push(s.tmp_0, "house");
    r0 = pxsim_Array__push(s.tmp_0, "houts");
    r0 = pxsim_Array__push(s.tmp_0, "hovea");
    r0 = pxsim_Array__push(s.tmp_0, "hoved");
    r0 = pxsim_Array__push(s.tmp_0, "hovel");
    r0 = pxsim_Array__push(s.tmp_0, "hoven");
    r0 = pxsim_Array__push(s.tmp_0, "hover");
    r0 = pxsim_Array__push(s.tmp_0, "hoves");
    r0 = pxsim_Array__push(s.tmp_0, "howay");
    r0 = pxsim_Array__push(s.tmp_0, "howbe");
    r0 = pxsim_Array__push(s.tmp_0, "howdy");
    r0 = pxsim_Array__push(s.tmp_0, "howes");
    r0 = pxsim_Array__push(s.tmp_0, "howff");
    r0 = pxsim_Array__push(s.tmp_0, "howfs");
    r0 = pxsim_Array__push(s.tmp_0, "howks");
    r0 = pxsim_Array__push(s.tmp_0, "howls");
    r0 = pxsim_Array__push(s.tmp_0, "howre");
    r0 = pxsim_Array__push(s.tmp_0, "howso");
    r0 = pxsim_Array__push(s.tmp_0, "howto");
    r0 = pxsim_Array__push(s.tmp_0, "hoxed");
    r0 = pxsim_Array__push(s.tmp_0, "hoxes");
    r0 = pxsim_Array__push(s.tmp_0, "hoyas");
    r0 = pxsim_Array__push(s.tmp_0, "hoyed");
    r0 = pxsim_Array__push(s.tmp_0, "hoyle");
    r0 = pxsim_Array__push(s.tmp_0, "hubba");
    r0 = pxsim_Array__push(s.tmp_0, "hubby");
    r0 = pxsim_Array__push(s.tmp_0, "hucks");
    r0 = pxsim_Array__push(s.tmp_0, "hudna");
    r0 = pxsim_Array__push(s.tmp_0, "hudud");
    r0 = pxsim_Array__push(s.tmp_0, "huers");
    r0 = pxsim_Array__push(s.tmp_0, "huffs");
    r0 = pxsim_Array__push(s.tmp_0, "huffy");
    r0 = pxsim_Array__push(s.tmp_0, "huger");
    r0 = pxsim_Array__push(s.tmp_0, "huggy");
    r0 = pxsim_Array__push(s.tmp_0, "huhus");
    r0 = pxsim_Array__push(s.tmp_0, "huias");
    r0 = pxsim_Array__push(s.tmp_0, "huies");
    r0 = pxsim_Array__push(s.tmp_0, "hukou");
    r0 = pxsim_Array__push(s.tmp_0, "hulas");
    r0 = pxsim_Array__push(s.tmp_0, "hules");
    r0 = pxsim_Array__push(s.tmp_0, "hulks");
    r0 = pxsim_Array__push(s.tmp_0, "hulky");
    r0 = pxsim_Array__push(s.tmp_0, "hullo");
    r0 = pxsim_Array__push(s.tmp_0, "hulls");
    r0 = pxsim_Array__push(s.tmp_0, "hully");
    r0 = pxsim_Array__push(s.tmp_0, "human");
    r0 = pxsim_Array__push(s.tmp_0, "humas");
    r0 = pxsim_Array__push(s.tmp_0, "humfs");
    r0 = pxsim_Array__push(s.tmp_0, "humic");
    r0 = pxsim_Array__push(s.tmp_0, "humid");
    r0 = pxsim_Array__push(s.tmp_0, "humor");
    r0 = pxsim_Array__push(s.tmp_0, "humph");
    r0 = pxsim_Array__push(s.tmp_0, "humps");
    r0 = pxsim_Array__push(s.tmp_0, "humpy");
    r0 = pxsim_Array__push(s.tmp_0, "humus");
    r0 = pxsim_Array__push(s.tmp_0, "hunch");
    r0 = pxsim_Array__push(s.tmp_0, "hundo");
    r0 = pxsim_Array__push(s.tmp_0, "hunks");
    r0 = pxsim_Array__push(s.tmp_0, "hunky");
    r0 = pxsim_Array__push(s.tmp_0, "hunts");
    r0 = pxsim_Array__push(s.tmp_0, "hurds");
    r0 = pxsim_Array__push(s.tmp_0, "hurls");
    r0 = pxsim_Array__push(s.tmp_0, "hurly");
    r0 = pxsim_Array__push(s.tmp_0, "hurra");
    r0 = pxsim_Array__push(s.tmp_0, "hurry");
    r0 = pxsim_Array__push(s.tmp_0, "hurst");
    r0 = pxsim_Array__push(s.tmp_0, "hurts");
    r0 = pxsim_Array__push(s.tmp_0, "hurty");
    r0 = pxsim_Array__push(s.tmp_0, "hushy");
    r0 = pxsim_Array__push(s.tmp_0, "husks");
    r0 = pxsim_Array__push(s.tmp_0, "husky");
    r0 = pxsim_Array__push(s.tmp_0, "husos");
    r0 = pxsim_Array__push(s.tmp_0, "hussy");
    r0 = pxsim_Array__push(s.tmp_0, "hutch");
    r0 = pxsim_Array__push(s.tmp_0, "hutia");
    r0 = pxsim_Array__push(s.tmp_0, "huzza");
    r0 = pxsim_Array__push(s.tmp_0, "huzzy");
    r0 = pxsim_Array__push(s.tmp_0, "hwyls");
    r0 = pxsim_Array__push(s.tmp_0, "hydel");
    r0 = pxsim_Array__push(s.tmp_0, "hydra");
    r0 = pxsim_Array__push(s.tmp_0, "hydro");
    r0 = pxsim_Array__push(s.tmp_0, "hyena");
    r0 = pxsim_Array__push(s.tmp_0, "hyens");
    r0 = pxsim_Array__push(s.tmp_0, "hygge");
    r0 = pxsim_Array__push(s.tmp_0, "hying");
    r0 = pxsim_Array__push(s.tmp_0, "hykes");
    r0 = pxsim_Array__push(s.tmp_0, "hylas");
    r0 = pxsim_Array__push(s.tmp_0, "hyleg");
    r0 = pxsim_Array__push(s.tmp_0, "hyles");
    r0 = pxsim_Array__push(s.tmp_0, "hylic");
    r0 = pxsim_Array__push(s.tmp_0, "hymen");
    r0 = pxsim_Array__push(s.tmp_0, "hymns");
    r0 = pxsim_Array__push(s.tmp_0, "hynde");
    r0 = pxsim_Array__push(s.tmp_0, "hyoid");
    r0 = pxsim_Array__push(s.tmp_0, "hyped");
    r0 = pxsim_Array__push(s.tmp_0, "hyper");
    r0 = pxsim_Array__push(s.tmp_0, "hypes");
    r0 = pxsim_Array__push(s.tmp_0, "hypha");
    r0 = pxsim_Array__push(s.tmp_0, "hyphy");
    r0 = pxsim_Array__push(s.tmp_0, "hypos");
    r0 = pxsim_Array__push(s.tmp_0, "hyrax");
    r0 = pxsim_Array__push(s.tmp_0, "hyson");
    r0 = pxsim_Array__push(s.tmp_0, "hythe");
    r0 = pxsim_Array__push(s.tmp_0, "iambi");
    r0 = pxsim_Array__push(s.tmp_0, "iambs");
    r0 = pxsim_Array__push(s.tmp_0, "ibrik");
    r0 = pxsim_Array__push(s.tmp_0, "icers");
    r0 = pxsim_Array__push(s.tmp_0, "iched");
    r0 = pxsim_Array__push(s.tmp_0, "iches");
    r0 = pxsim_Array__push(s.tmp_0, "ichor");
    r0 = pxsim_Array__push(s.tmp_0, "icier");
    r0 = pxsim_Array__push(s.tmp_0, "icily");
    r0 = pxsim_Array__push(s.tmp_0, "icing");
    r0 = pxsim_Array__push(s.tmp_0, "icker");
    r0 = pxsim_Array__push(s.tmp_0, "ickle");
    r0 = pxsim_Array__push(s.tmp_0, "icons");
    r0 = pxsim_Array__push(s.tmp_0, "ictal");
    r0 = pxsim_Array__push(s.tmp_0, "ictic");
    r0 = pxsim_Array__push(s.tmp_0, "ictus");
    r0 = pxsim_Array__push(s.tmp_0, "idant");
    r0 = pxsim_Array__push(s.tmp_0, "iddah");
    r0 = pxsim_Array__push(s.tmp_0, "iddat");
    r0 = pxsim_Array__push(s.tmp_0, "iddut");
    r0 = pxsim_Array__push(s.tmp_0, "ideal");
    r0 = pxsim_Array__push(s.tmp_0, "ideas");
    r0 = pxsim_Array__push(s.tmp_0, "idees");
    r0 = pxsim_Array__push(s.tmp_0, "ident");
    r0 = pxsim_Array__push(s.tmp_0, "idiom");
    r0 = pxsim_Array__push(s.tmp_0, "idiot");
    r0 = pxsim_Array__push(s.tmp_0, "idled");
    r0 = pxsim_Array__push(s.tmp_0, "idler");
    r0 = pxsim_Array__push(s.tmp_0, "idles");
    r0 = pxsim_Array__push(s.tmp_0, "idlis");
    r0 = pxsim_Array__push(s.tmp_0, "idola");
    r0 = pxsim_Array__push(s.tmp_0, "idols");
    r0 = pxsim_Array__push(s.tmp_0, "idyll");
    r0 = pxsim_Array__push(s.tmp_0, "idyls");
    r0 = pxsim_Array__push(s.tmp_0, "iftar");
    r0 = pxsim_Array__push(s.tmp_0, "igapo");
    r0 = pxsim_Array__push(s.tmp_0, "igged");
    r0 = pxsim_Array__push(s.tmp_0, "igloo");
    r0 = pxsim_Array__push(s.tmp_0, "iglus");
    r0 = pxsim_Array__push(s.tmp_0, "ignis");
    r0 = pxsim_Array__push(s.tmp_0, "ihram");
    r0 = pxsim_Array__push(s.tmp_0, "iiwis");
    r0 = pxsim_Array__push(s.tmp_0, "ikans");
    r0 = pxsim_Array__push(s.tmp_0, "ikats");
    r0 = pxsim_Array__push(s.tmp_0, "ikons");
    r0 = pxsim_Array__push(s.tmp_0, "ileac");
    r0 = pxsim_Array__push(s.tmp_0, "ileal");
    r0 = pxsim_Array__push(s.tmp_0, "ileum");
    r0 = pxsim_Array__push(s.tmp_0, "ileus");
    r0 = pxsim_Array__push(s.tmp_0, "iliac");
    r0 = pxsim_Array__push(s.tmp_0, "iliad");
    r0 = pxsim_Array__push(s.tmp_0, "ilial");
    r0 = pxsim_Array__push(s.tmp_0, "ilium");
    r0 = pxsim_Array__push(s.tmp_0, "iller");
    r0 = pxsim_Array__push(s.tmp_0, "illth");
    r0 = pxsim_Array__push(s.tmp_0, "image");
    r0 = pxsim_Array__push(s.tmp_0, "imago");
    r0 = pxsim_Array__push(s.tmp_0, "imagy");
    r0 = pxsim_Array__push(s.tmp_0, "imams");
    r0 = pxsim_Array__push(s.tmp_0, "imari");
    r0 = pxsim_Array__push(s.tmp_0, "imaum");
    r0 = pxsim_Array__push(s.tmp_0, "imbar");
    r0 = pxsim_Array__push(s.tmp_0, "imbed");
    r0 = pxsim_Array__push(s.tmp_0, "imbos");
    r0 = pxsim_Array__push(s.tmp_0, "imbue");
    r0 = pxsim_Array__push(s.tmp_0, "imide");
    r0 = pxsim_Array__push(s.tmp_0, "imido");
    r0 = pxsim_Array__push(s.tmp_0, "imids");
    r0 = pxsim_Array__push(s.tmp_0, "imine");
    r0 = pxsim_Array__push(s.tmp_0, "imino");
    r0 = pxsim_Array__push(s.tmp_0, "imlis");
    r0 = pxsim_Array__push(s.tmp_0, "immew");
    r0 = pxsim_Array__push(s.tmp_0, "immit");
    r0 = pxsim_Array__push(s.tmp_0, "immix");
    r0 = pxsim_Array__push(s.tmp_0, "imped");
    r0 = pxsim_Array__push(s.tmp_0, "impel");
    r0 = pxsim_Array__push(s.tmp_0, "impis");
    r0 = pxsim_Array__push(s.tmp_0, "imply");
    r0 = pxsim_Array__push(s.tmp_0, "impot");
    r0 = pxsim_Array__push(s.tmp_0, "impro");
    r0 = pxsim_Array__push(s.tmp_0, "imshi");
    r0 = pxsim_Array__push(s.tmp_0, "imshy");
    r0 = pxsim_Array__push(s.tmp_0, "inane");
    r0 = pxsim_Array__push(s.tmp_0, "inapt");
    r0 = pxsim_Array__push(s.tmp_0, "inarm");
    r0 = pxsim_Array__push(s.tmp_0, "inbox");
    r0 = pxsim_Array__push(s.tmp_0, "inbye");
    r0 = pxsim_Array__push(s.tmp_0, "incas");
    r0 = pxsim_Array__push(s.tmp_0, "incel");
    r0 = pxsim_Array__push(s.tmp_0, "incle");
    r0 = pxsim_Array__push(s.tmp_0, "incog");
    r0 = pxsim_Array__push(s.tmp_0, "incur");
    r0 = pxsim_Array__push(s.tmp_0, "incus");
    r0 = pxsim_Array__push(s.tmp_0, "incut");
    r0 = pxsim_Array__push(s.tmp_0, "indew");
    r0 = pxsim_Array__push(s.tmp_0, "index");
    r0 = pxsim_Array__push(s.tmp_0, "india");
    r0 = pxsim_Array__push(s.tmp_0, "indie");
    r0 = pxsim_Array__push(s.tmp_0, "indol");
    r0 = pxsim_Array__push(s.tmp_0, "indow");
    r0 = pxsim_Array__push(s.tmp_0, "indri");
    r0 = pxsim_Array__push(s.tmp_0, "indue");
    r0 = pxsim_Array__push(s.tmp_0, "inept");
    r0 = pxsim_Array__push(s.tmp_0, "inerm");
    r0 = pxsim_Array__push(s.tmp_0, "inert");
    r0 = pxsim_Array__push(s.tmp_0, "infer");
    r0 = pxsim_Array__push(s.tmp_0, "infix");
    r0 = pxsim_Array__push(s.tmp_0, "infos");
    r0 = pxsim_Array__push(s.tmp_0, "infra");
    r0 = pxsim_Array__push(s.tmp_0, "ingan");
    r0 = pxsim_Array__push(s.tmp_0, "ingle");
    r0 = pxsim_Array__push(s.tmp_0, "ingot");
    r0 = pxsim_Array__push(s.tmp_0, "inion");
    r0 = pxsim_Array__push(s.tmp_0, "inked");
    r0 = pxsim_Array__push(s.tmp_0, "inker");
    r0 = pxsim_Array__push(s.tmp_0, "inkle");
    r0 = pxsim_Array__push(s.tmp_0, "inlay");
    r0 = pxsim_Array__push(s.tmp_0, "inlet");
    r0 = pxsim_Array__push(s.tmp_0, "inned");
    r0 = pxsim_Array__push(s.tmp_0, "inner");
    r0 = pxsim_Array__push(s.tmp_0, "innie");
    r0 = pxsim_Array__push(s.tmp_0, "innit");
    r0 = pxsim_Array__push(s.tmp_0, "inorb");
    r0 = pxsim_Array__push(s.tmp_0, "input");
    r0 = pxsim_Array__push(s.tmp_0, "inros");
    r0 = pxsim_Array__push(s.tmp_0, "inrun");
    r0 = pxsim_Array__push(s.tmp_0, "insee");
    r0 = pxsim_Array__push(s.tmp_0, "inset");
    r0 = pxsim_Array__push(s.tmp_0, "inspo");
    r0 = pxsim_Array__push(s.tmp_0, "intel");
    r0 = pxsim_Array__push(s.tmp_0, "inter");
    r0 = pxsim_Array__push(s.tmp_0, "intil");
    r0 = pxsim_Array__push(s.tmp_0, "intis");
    r0 = pxsim_Array__push(s.tmp_0, "intra");
    r0 = pxsim_Array__push(s.tmp_0, "intro");
    r0 = pxsim_Array__push(s.tmp_0, "inula");
    r0 = pxsim_Array__push(s.tmp_0, "inure");
    r0 = pxsim_Array__push(s.tmp_0, "inurn");
    r0 = pxsim_Array__push(s.tmp_0, "inust");
    r0 = pxsim_Array__push(s.tmp_0, "invar");
    r0 = pxsim_Array__push(s.tmp_0, "inver");
    r0 = pxsim_Array__push(s.tmp_0, "inwit");
    r0 = pxsim_Array__push(s.tmp_0, "iodic");
    r0 = pxsim_Array__push(s.tmp_0, "iodid");
    r0 = pxsim_Array__push(s.tmp_0, "iodin");
    r0 = pxsim_Array__push(s.tmp_0, "ionic");
    r0 = pxsim_Array__push(s.tmp_0, "ioras");
    r0 = pxsim_Array__push(s.tmp_0, "iotas");
    r0 = pxsim_Array__push(s.tmp_0, "ippon");
    r0 = pxsim_Array__push(s.tmp_0, "irade");
    r0 = pxsim_Array__push(s.tmp_0, "irate");
    r0 = pxsim_Array__push(s.tmp_0, "irids");
    r0 = pxsim_Array__push(s.tmp_0, "iring");
    r0 = pxsim_Array__push(s.tmp_0, "irked");
    r0 = pxsim_Array__push(s.tmp_0, "iroko");
    r0 = pxsim_Array__push(s.tmp_0, "irone");
    r0 = pxsim_Array__push(s.tmp_0, "irons");
    r0 = pxsim_Array__push(s.tmp_0, "irony");
    r0 = pxsim_Array__push(s.tmp_0, "isbas");
    r0 = pxsim_Array__push(s.tmp_0, "ishes");
    r0 = pxsim_Array__push(s.tmp_0, "isled");
    r0 = pxsim_Array__push(s.tmp_0, "isles");
    r0 = pxsim_Array__push(s.tmp_0, "islet");
    r0 = pxsim_Array__push(s.tmp_0, "isnae");
    r0 = pxsim_Array__push(s.tmp_0, "issei");
    r0 = pxsim_Array__push(s.tmp_0, "issue");
    r0 = pxsim_Array__push(s.tmp_0, "istle");
    r0 = pxsim_Array__push(s.tmp_0, "itchy");
    r0 = pxsim_Array__push(s.tmp_0, "items");
    r0 = pxsim_Array__push(s.tmp_0, "ither");
    r0 = pxsim_Array__push(s.tmp_0, "ivied");
    r0 = pxsim_Array__push(s.tmp_0, "ivies");
    r0 = pxsim_Array__push(s.tmp_0, "ivory");
    r0 = pxsim_Array__push(s.tmp_0, "ixias");
    r0 = pxsim_Array__push(s.tmp_0, "ixnay");
    r0 = pxsim_Array__push(s.tmp_0, "ixora");
    r0 = pxsim_Array__push(s.tmp_0, "ixtle");
    r0 = pxsim_Array__push(s.tmp_0, "izard");
    r0 = pxsim_Array__push(s.tmp_0, "izars");
    r0 = pxsim_Array__push(s.tmp_0, "izzat");
    r0 = pxsim_Array__push(s.tmp_0, "jaaps");
    r0 = pxsim_Array__push(s.tmp_0, "jabot");
    r0 = pxsim_Array__push(s.tmp_0, "jacal");
    r0 = pxsim_Array__push(s.tmp_0, "jacet");
    r0 = pxsim_Array__push(s.tmp_0, "jacks");
    r0 = pxsim_Array__push(s.tmp_0, "jacky");
    r0 = pxsim_Array__push(s.tmp_0, "jaded");
    r0 = pxsim_Array__push(s.tmp_0, "jades");
    r0 = pxsim_Array__push(s.tmp_0, "jafas");
    r0 = pxsim_Array__push(s.tmp_0, "jaffa");
    r0 = pxsim_Array__push(s.tmp_0, "jagas");
    r0 = pxsim_Array__push(s.tmp_0, "jager");
    r0 = pxsim_Array__push(s.tmp_0, "jaggs");
    r0 = pxsim_Array__push(s.tmp_0, "jaggy");
    r0 = pxsim_Array__push(s.tmp_0, "jagir");
    r0 = pxsim_Array__push(s.tmp_0, "jagra");
    r0 = pxsim_Array__push(s.tmp_0, "jails");
    r0 = pxsim_Array__push(s.tmp_0, "jaker");
    r0 = pxsim_Array__push(s.tmp_0, "jakes");
    r0 = pxsim_Array__push(s.tmp_0, "jakey");
    r0 = pxsim_Array__push(s.tmp_0, "jakie");
    r0 = pxsim_Array__push(s.tmp_0, "jalap");
    r0 = pxsim_Array__push(s.tmp_0, "jaleo");
    r0 = pxsim_Array__push(s.tmp_0, "jalop");
    r0 = pxsim_Array__push(s.tmp_0, "jambe");
    r0 = pxsim_Array__push(s.tmp_0, "jambo");
    r0 = pxsim_Array__push(s.tmp_0, "jambs");
    r0 = pxsim_Array__push(s.tmp_0, "jambu");
    r0 = pxsim_Array__push(s.tmp_0, "james");
    r0 = pxsim_Array__push(s.tmp_0, "jammy");
    r0 = pxsim_Array__push(s.tmp_0, "jamon");
    r0 = pxsim_Array__push(s.tmp_0, "jamun");
    r0 = pxsim_Array__push(s.tmp_0, "janes");
    r0 = pxsim_Array__push(s.tmp_0, "janky");
    r0 = pxsim_Array__push(s.tmp_0, "janns");
    r0 = pxsim_Array__push(s.tmp_0, "janny");
    r0 = pxsim_Array__push(s.tmp_0, "janty");
    r0 = pxsim_Array__push(s.tmp_0, "japan");
    r0 = pxsim_Array__push(s.tmp_0, "japed");
    r0 = pxsim_Array__push(s.tmp_0, "japer");
    r0 = pxsim_Array__push(s.tmp_0, "japes");
    r0 = pxsim_Array__push(s.tmp_0, "jarks");
    r0 = pxsim_Array__push(s.tmp_0, "jarls");
    r0 = pxsim_Array__push(s.tmp_0, "jarps");
    r0 = pxsim_Array__push(s.tmp_0, "jarta");
    r0 = pxsim_Array__push(s.tmp_0, "jarul");
    r0 = pxsim_Array__push(s.tmp_0, "jasey");
    r0 = pxsim_Array__push(s.tmp_0, "jaspe");
    r0 = pxsim_Array__push(s.tmp_0, "jasps");
    r0 = pxsim_Array__push(s.tmp_0, "jatha");
    r0 = pxsim_Array__push(s.tmp_0, "jatis");
    r0 = pxsim_Array__push(s.tmp_0, "jatos");
    r0 = pxsim_Array__push(s.tmp_0, "jauks");
    r0 = pxsim_Array__push(s.tmp_0, "jaune");
    r0 = pxsim_Array__push(s.tmp_0, "jaunt");
    r0 = pxsim_Array__push(s.tmp_0, "jaups");
    r0 = pxsim_Array__push(s.tmp_0, "javas");
    r0 = pxsim_Array__push(s.tmp_0, "javel");
    r0 = pxsim_Array__push(s.tmp_0, "jawan");
    r0 = pxsim_Array__push(s.tmp_0, "jawed");
    r0 = pxsim_Array__push(s.tmp_0, "jawns");
    r0 = pxsim_Array__push(s.tmp_0, "jaxie");
    r0 = pxsim_Array__push(s.tmp_0, "jazzy");
    r0 = pxsim_Array__push(s.tmp_0, "jeans");
    r0 = pxsim_Array__push(s.tmp_0, "jeats");
    r0 = pxsim_Array__push(s.tmp_0, "jebel");
    r0 = pxsim_Array__push(s.tmp_0, "jedis");
    r0 = pxsim_Array__push(s.tmp_0, "jeels");
    r0 = pxsim_Array__push(s.tmp_0, "jeely");
    r0 = pxsim_Array__push(s.tmp_0, "jeeps");
    r0 = pxsim_Array__push(s.tmp_0, "jeera");
    r0 = pxsim_Array__push(s.tmp_0, "jeers");
    r0 = pxsim_Array__push(s.tmp_0, "jeeze");
    r0 = pxsim_Array__push(s.tmp_0, "jefes");
    r0 = pxsim_Array__push(s.tmp_0, "jeffs");
    r0 = pxsim_Array__push(s.tmp_0, "jehad");
    r0 = pxsim_Array__push(s.tmp_0, "jehus");
    r0 = pxsim_Array__push(s.tmp_0, "jelab");
    r0 = pxsim_Array__push(s.tmp_0, "jello");
    r0 = pxsim_Array__push(s.tmp_0, "jells");
    r0 = pxsim_Array__push(s.tmp_0, "jelly");
    r0 = pxsim_Array__push(s.tmp_0, "jembe");
    r0 = pxsim_Array__push(s.tmp_0, "jemmy");
    r0 = pxsim_Array__push(s.tmp_0, "jenny");
    r0 = pxsim_Array__push(s.tmp_0, "jeons");
    r0 = pxsim_Array__push(s.tmp_0, "jerid");
    r0 = pxsim_Array__push(s.tmp_0, "jerks");
    r0 = pxsim_Array__push(s.tmp_0, "jerky");
    r0 = pxsim_Array__push(s.tmp_0, "jerry");
    r0 = pxsim_Array__push(s.tmp_0, "jesse");
    r0 = pxsim_Array__push(s.tmp_0, "jessy");
    r0 = pxsim_Array__push(s.tmp_0, "jests");
    r0 = pxsim_Array__push(s.tmp_0, "jesus");
    r0 = pxsim_Array__push(s.tmp_0, "jetee");
    r0 = pxsim_Array__push(s.tmp_0, "jetes");
    r0 = pxsim_Array__push(s.tmp_0, "jeton");
    r0 = pxsim_Array__push(s.tmp_0, "jetty");
    r0 = pxsim_Array__push(s.tmp_0, "jeune");
    r0 = pxsim_Array__push(s.tmp_0, "jewed");
    r0 = pxsim_Array__push(s.tmp_0, "jewel");
    r0 = pxsim_Array__push(s.tmp_0, "jewie");
    r0 = pxsim_Array__push(s.tmp_0, "jhala");
    r0 = pxsim_Array__push(s.tmp_0, "jheel");
    r0 = pxsim_Array__push(s.tmp_0, "jhils");
    r0 = pxsim_Array__push(s.tmp_0, "jiaos");
    r0 = pxsim_Array__push(s.tmp_0, "jibba");
    r0 = pxsim_Array__push(s.tmp_0, "jibbs");
    r0 = pxsim_Array__push(s.tmp_0, "jibed");
    r0 = pxsim_Array__push(s.tmp_0, "jiber");
    r0 = pxsim_Array__push(s.tmp_0, "jibes");
    r0 = pxsim_Array__push(s.tmp_0, "jiffs");
    r0 = pxsim_Array__push(s.tmp_0, "jiffy");
    r0 = pxsim_Array__push(s.tmp_0, "jiggy");
    r0 = pxsim_Array__push(s.tmp_0, "jigot");
    r0 = pxsim_Array__push(s.tmp_0, "jihad");
    r0 = pxsim_Array__push(s.tmp_0, "jills");
    r0 = pxsim_Array__push(s.tmp_0, "jilts");
    r0 = pxsim_Array__push(s.tmp_0, "jimmy");
    r0 = pxsim_Array__push(s.tmp_0, "jimpy");
    r0 = pxsim_Array__push(s.tmp_0, "jingo");
    r0 = pxsim_Array__push(s.tmp_0, "jings");
    r0 = pxsim_Array__push(s.tmp_0, "jinks");
    r0 = pxsim_Array__push(s.tmp_0, "jinne");
    r0 = pxsim_Array__push(s.tmp_0, "jinni");
    r0 = pxsim_Array__push(s.tmp_0, "jinns");
    r0 = pxsim_Array__push(s.tmp_0, "jirds");
    r0 = pxsim_Array__push(s.tmp_0, "jirga");
    r0 = pxsim_Array__push(s.tmp_0, "jirre");
    r0 = pxsim_Array__push(s.tmp_0, "jisms");
    r0 = pxsim_Array__push(s.tmp_0, "jitis");
    r0 = pxsim_Array__push(s.tmp_0, "jitty");
    r0 = pxsim_Array__push(s.tmp_0, "jived");
    r0 = pxsim_Array__push(s.tmp_0, "jiver");
    r0 = pxsim_Array__push(s.tmp_0, "jives");
    r0 = pxsim_Array__push(s.tmp_0, "jivey");
    r0 = pxsim_Array__push(s.tmp_0, "jnana");
    r0 = pxsim_Array__push(s.tmp_0, "jobed");
    r0 = pxsim_Array__push(s.tmp_0, "jobes");
    r0 = pxsim_Array__push(s.tmp_0, "jocko");
    r0 = pxsim_Array__push(s.tmp_0, "jocks");
    r0 = pxsim_Array__push(s.tmp_0, "jocky");
    r0 = pxsim_Array__push(s.tmp_0, "jocos");
    r0 = pxsim_Array__push(s.tmp_0, "jodel");
    r0 = pxsim_Array__push(s.tmp_0, "joeys");
    r0 = pxsim_Array__push(s.tmp_0, "johns");
    r0 = pxsim_Array__push(s.tmp_0, "joins");
    r0 = pxsim_Array__push(s.tmp_0, "joint");
    r0 = pxsim_Array__push(s.tmp_0, "joist");
    r0 = pxsim_Array__push(s.tmp_0, "joked");
    r0 = pxsim_Array__push(s.tmp_0, "joker");
    r0 = pxsim_Array__push(s.tmp_0, "jokes");
    r0 = pxsim_Array__push(s.tmp_0, "jokey");
    r0 = pxsim_Array__push(s.tmp_0, "jokol");
    r0 = pxsim_Array__push(s.tmp_0, "joled");
    r0 = pxsim_Array__push(s.tmp_0, "joles");
    r0 = pxsim_Array__push(s.tmp_0, "jolie");
    r0 = pxsim_Array__push(s.tmp_0, "jollo");
    r0 = pxsim_Array__push(s.tmp_0, "jolls");
    r0 = pxsim_Array__push(s.tmp_0, "jolly");
    r0 = pxsim_Array__push(s.tmp_0, "jolts");
    r0 = pxsim_Array__push(s.tmp_0, "jolty");
    r0 = pxsim_Array__push(s.tmp_0, "jomon");
    r0 = pxsim_Array__push(s.tmp_0, "jomos");
    r0 = pxsim_Array__push(s.tmp_0, "jones");
    r0 = pxsim_Array__push(s.tmp_0, "jongs");
    r0 = pxsim_Array__push(s.tmp_0, "jonty");
    r0 = pxsim_Array__push(s.tmp_0, "jooks");
    r0 = pxsim_Array__push(s.tmp_0, "joram");
    r0 = pxsim_Array__push(s.tmp_0, "jorts");
    r0 = pxsim_Array__push(s.tmp_0, "jorum");
    r0 = pxsim_Array__push(s.tmp_0, "jotas");
    r0 = pxsim_Array__push(s.tmp_0, "jotty");
    r0 = pxsim_Array__push(s.tmp_0, "jotun");
    r0 = pxsim_Array__push(s.tmp_0, "joual");
    r0 = pxsim_Array__push(s.tmp_0, "jougs");
    r0 = pxsim_Array__push(s.tmp_0, "jouks");
    r0 = pxsim_Array__push(s.tmp_0, "joule");
    r0 = pxsim_Array__push(s.tmp_0, "jours");
    r0 = pxsim_Array__push(s.tmp_0, "joust");
    r0 = pxsim_Array__push(s.tmp_0, "jowar");
    r0 = pxsim_Array__push(s.tmp_0, "jowed");
    r0 = pxsim_Array__push(s.tmp_0, "jowls");
    r0 = pxsim_Array__push(s.tmp_0, "jowly");
    r0 = pxsim_Array__push(s.tmp_0, "joyed");
    r0 = pxsim_Array__push(s.tmp_0, "jubas");
    r0 = pxsim_Array__push(s.tmp_0, "jubes");
    r0 = pxsim_Array__push(s.tmp_0, "jucos");
    r0 = pxsim_Array__push(s.tmp_0, "judas");
    r0 = pxsim_Array__push(s.tmp_0, "judge");
    r0 = pxsim_Array__push(s.tmp_0, "judgy");
    r0 = pxsim_Array__push(s.tmp_0, "judos");
    r0 = pxsim_Array__push(s.tmp_0, "jugal");
    r0 = pxsim_Array__push(s.tmp_0, "jugum");
    r0 = pxsim_Array__push(s.tmp_0, "juice");
    r0 = pxsim_Array__push(s.tmp_0, "juicy");
    r0 = pxsim_Array__push(s.tmp_0, "jujus");
    r0 = pxsim_Array__push(s.tmp_0, "juked");
    r0 = pxsim_Array__push(s.tmp_0, "jukes");
    r0 = pxsim_Array__push(s.tmp_0, "jukus");
    r0 = pxsim_Array__push(s.tmp_0, "julep");
    r0 = pxsim_Array__push(s.tmp_0, "julia");
    r0 = pxsim_Array__push(s.tmp_0, "jumar");
    r0 = pxsim_Array__push(s.tmp_0, "jumbo");
    r0 = pxsim_Array__push(s.tmp_0, "jumby");
    r0 = pxsim_Array__push(s.tmp_0, "jumps");
    r0 = pxsim_Array__push(s.tmp_0, "jumpy");
    r0 = pxsim_Array__push(s.tmp_0, "junco");
    r0 = pxsim_Array__push(s.tmp_0, "junks");
    r0 = pxsim_Array__push(s.tmp_0, "junky");
    r0 = pxsim_Array__push(s.tmp_0, "junta");
    r0 = pxsim_Array__push(s.tmp_0, "junto");
    r0 = pxsim_Array__push(s.tmp_0, "jupes");
    r0 = pxsim_Array__push(s.tmp_0, "jupon");
    r0 = pxsim_Array__push(s.tmp_0, "jural");
    r0 = pxsim_Array__push(s.tmp_0, "jurat");
    r0 = pxsim_Array__push(s.tmp_0, "jurel");
    r0 = pxsim_Array__push(s.tmp_0, "jures");
    r0 = pxsim_Array__push(s.tmp_0, "juris");
    r0 = pxsim_Array__push(s.tmp_0, "juror");
    r0 = pxsim_Array__push(s.tmp_0, "juste");
    r0 = pxsim_Array__push(s.tmp_0, "justs");
    r0 = pxsim_Array__push(s.tmp_0, "jutes");
    r0 = pxsim_Array__push(s.tmp_0, "jutty");
    r0 = pxsim_Array__push(s.tmp_0, "juves");
    r0 = pxsim_Array__push(s.tmp_0, "juvie");
    r0 = pxsim_Array__push(s.tmp_0, "kaama");
    r0 = pxsim_Array__push(s.tmp_0, "kabab");
    r0 = pxsim_Array__push(s.tmp_0, "kabar");
    r0 = pxsim_Array__push(s.tmp_0, "kabob");
    r0 = pxsim_Array__push(s.tmp_0, "kacha");
    r0 = pxsim_Array__push(s.tmp_0, "kacks");
    r0 = pxsim_Array__push(s.tmp_0, "kadai");
    r0 = pxsim_Array__push(s.tmp_0, "kades");
    r0 = pxsim_Array__push(s.tmp_0, "kadis");
    r0 = pxsim_Array__push(s.tmp_0, "kafir");
    r0 = pxsim_Array__push(s.tmp_0, "kagos");
    r0 = pxsim_Array__push(s.tmp_0, "kagus");
    r0 = pxsim_Array__push(s.tmp_0, "kahal");
    r0 = pxsim_Array__push(s.tmp_0, "kaiak");
    r0 = pxsim_Array__push(s.tmp_0, "kaids");
    r0 = pxsim_Array__push(s.tmp_0, "kaies");
    r0 = pxsim_Array__push(s.tmp_0, "kaifs");
    r0 = pxsim_Array__push(s.tmp_0, "kaika");
    r0 = pxsim_Array__push(s.tmp_0, "kaiks");
    r0 = pxsim_Array__push(s.tmp_0, "kails");
    r0 = pxsim_Array__push(s.tmp_0, "kaims");
    r0 = pxsim_Array__push(s.tmp_0, "kaing");
    r0 = pxsim_Array__push(s.tmp_0, "kains");
    r0 = pxsim_Array__push(s.tmp_0, "kajal");
    r0 = pxsim_Array__push(s.tmp_0, "kakas");
    r0 = pxsim_Array__push(s.tmp_0, "kakis");
    r0 = pxsim_Array__push(s.tmp_0, "kalam");
    r0 = pxsim_Array__push(s.tmp_0, "kalas");
    r0 = pxsim_Array__push(s.tmp_0, "kales");
    r0 = pxsim_Array__push(s.tmp_0, "kalif");
    r0 = pxsim_Array__push(s.tmp_0, "kalis");
    r0 = pxsim_Array__push(s.tmp_0, "kalpa");
    r0 = pxsim_Array__push(s.tmp_0, "kalua");
    r0 = pxsim_Array__push(s.tmp_0, "kamas");
    r0 = pxsim_Array__push(s.tmp_0, "kames");
    r0 = pxsim_Array__push(s.tmp_0, "kamik");
    r0 = pxsim_Array__push(s.tmp_0, "kamis");
    r0 = pxsim_Array__push(s.tmp_0, "kamme");
    r0 = pxsim_Array__push(s.tmp_0, "kanae");
    r0 = pxsim_Array__push(s.tmp_0, "kanal");
    r0 = pxsim_Array__push(s.tmp_0, "kanas");
    r0 = pxsim_Array__push(s.tmp_0, "kanat");
    r0 = pxsim_Array__push(s.tmp_0, "kandy");
    r0 = pxsim_Array__push(s.tmp_0, "kaneh");
    r0 = pxsim_Array__push(s.tmp_0, "kanes");
    r0 = pxsim_Array__push(s.tmp_0, "kanga");
    r0 = pxsim_Array__push(s.tmp_0, "kangs");
    r0 = pxsim_Array__push(s.tmp_0, "kanji");
    r0 = pxsim_Array__push(s.tmp_0, "kants");
    r0 = pxsim_Array__push(s.tmp_0, "kanzu");
    r0 = pxsim_Array__push(s.tmp_0, "kaons");
    r0 = pxsim_Array__push(s.tmp_0, "kapai");
    r0 = pxsim_Array__push(s.tmp_0, "kapas");
    r0 = pxsim_Array__push(s.tmp_0, "kapha");
    r0 = pxsim_Array__push(s.tmp_0, "kaphs");
    r0 = pxsim_Array__push(s.tmp_0, "kapok");
    r0 = pxsim_Array__push(s.tmp_0, "kapow");
    r0 = pxsim_Array__push(s.tmp_0, "kappa");
    r0 = pxsim_Array__push(s.tmp_0, "kapur");
    r0 = pxsim_Array__push(s.tmp_0, "kapus");
    r0 = pxsim_Array__push(s.tmp_0, "kaput");
    r0 = pxsim_Array__push(s.tmp_0, "karai");
    r0 = pxsim_Array__push(s.tmp_0, "karas");
    r0 = pxsim_Array__push(s.tmp_0, "karat");
    r0 = pxsim_Array__push(s.tmp_0, "karee");
    r0 = pxsim_Array__push(s.tmp_0, "karez");
    r0 = pxsim_Array__push(s.tmp_0, "karks");
    r0 = pxsim_Array__push(s.tmp_0, "karma");
    r0 = pxsim_Array__push(s.tmp_0, "karns");
    r0 = pxsim_Array__push(s.tmp_0, "karoo");
    r0 = pxsim_Array__push(s.tmp_0, "karos");
    r0 = pxsim_Array__push(s.tmp_0, "karri");
    r0 = pxsim_Array__push(s.tmp_0, "karst");
    r0 = pxsim_Array__push(s.tmp_0, "karsy");
    r0 = pxsim_Array__push(s.tmp_0, "karts");
    r0 = pxsim_Array__push(s.tmp_0, "karzy");
    r0 = pxsim_Array__push(s.tmp_0, "kasha");
    r0 = pxsim_Array__push(s.tmp_0, "kasme");
    r0 = pxsim_Array__push(s.tmp_0, "katal");
    r0 = pxsim_Array__push(s.tmp_0, "katas");
    r0 = pxsim_Array__push(s.tmp_0, "katis");
    r0 = pxsim_Array__push(s.tmp_0, "katti");
    r0 = pxsim_Array__push(s.tmp_0, "kaugh");
    r0 = pxsim_Array__push(s.tmp_0, "kauri");
    r0 = pxsim_Array__push(s.tmp_0, "kauru");
    r0 = pxsim_Array__push(s.tmp_0, "kaury");
    r0 = pxsim_Array__push(s.tmp_0, "kaval");
    r0 = pxsim_Array__push(s.tmp_0, "kavas");
    r0 = pxsim_Array__push(s.tmp_0, "kawas");
    r0 = pxsim_Array__push(s.tmp_0, "kawau");
    r0 = pxsim_Array__push(s.tmp_0, "kawed");
    r0 = pxsim_Array__push(s.tmp_0, "kayak");
    r0 = pxsim_Array__push(s.tmp_0, "kayle");
    r0 = pxsim_Array__push(s.tmp_0, "kayos");
    r0 = pxsim_Array__push(s.tmp_0, "kazis");
    r0 = pxsim_Array__push(s.tmp_0, "kazoo");
    r0 = pxsim_Array__push(s.tmp_0, "kbars");
    r0 = pxsim_Array__push(s.tmp_0, "kcals");
    r0 = pxsim_Array__push(s.tmp_0, "keaki");
    r0 = pxsim_Array__push(s.tmp_0, "kebab");
    r0 = pxsim_Array__push(s.tmp_0, "kebar");
    r0 = pxsim_Array__push(s.tmp_0, "kebob");
    r0 = pxsim_Array__push(s.tmp_0, "kecks");
    r0 = pxsim_Array__push(s.tmp_0, "kedge");
    r0 = pxsim_Array__push(s.tmp_0, "kedgy");
    r0 = pxsim_Array__push(s.tmp_0, "keech");
    r0 = pxsim_Array__push(s.tmp_0, "keefs");
    r0 = pxsim_Array__push(s.tmp_0, "keeks");
    r0 = pxsim_Array__push(s.tmp_0, "keels");
    r0 = pxsim_Array__push(s.tmp_0, "keema");
    r0 = pxsim_Array__push(s.tmp_0, "keeno");
    r0 = pxsim_Array__push(s.tmp_0, "keens");
    r0 = pxsim_Array__push(s.tmp_0, "keeps");
    r0 = pxsim_Array__push(s.tmp_0, "keets");
    r0 = pxsim_Array__push(s.tmp_0, "keeve");
    r0 = pxsim_Array__push(s.tmp_0, "kefir");
    r0 = pxsim_Array__push(s.tmp_0, "kehua");
    r0 = pxsim_Array__push(s.tmp_0, "keirs");
    r0 = pxsim_Array__push(s.tmp_0, "kelep");
    r0 = pxsim_Array__push(s.tmp_0, "kelim");
    r0 = pxsim_Array__push(s.tmp_0, "kells");
    r0 = pxsim_Array__push(s.tmp_0, "kelly");
    r0 = pxsim_Array__push(s.tmp_0, "kelps");
    r0 = pxsim_Array__push(s.tmp_0, "kelpy");
    r0 = pxsim_Array__push(s.tmp_0, "kelts");
    r0 = pxsim_Array__push(s.tmp_0, "kelty");
    r0 = pxsim_Array__push(s.tmp_0, "kembo");
    r0 = pxsim_Array__push(s.tmp_0, "kembs");
    r0 = pxsim_Array__push(s.tmp_0, "kemps");
    r0 = pxsim_Array__push(s.tmp_0, "kempt");
    r0 = pxsim_Array__push(s.tmp_0, "kempy");
    r0 = pxsim_Array__push(s.tmp_0, "kenaf");
    r0 = pxsim_Array__push(s.tmp_0, "kench");
    r0 = pxsim_Array__push(s.tmp_0, "kendo");
    r0 = pxsim_Array__push(s.tmp_0, "kenos");
    r0 = pxsim_Array__push(s.tmp_0, "kente");
    r0 = pxsim_Array__push(s.tmp_0, "kents");
    r0 = pxsim_Array__push(s.tmp_0, "kepis");
    r0 = pxsim_Array__push(s.tmp_0, "kerbs");
    r0 = pxsim_Array__push(s.tmp_0, "kerel");
    r0 = pxsim_Array__push(s.tmp_0, "kerfs");
    r0 = pxsim_Array__push(s.tmp_0, "kerky");
    r0 = pxsim_Array__push(s.tmp_0, "kerma");
    r0 = pxsim_Array__push(s.tmp_0, "kerne");
    r0 = pxsim_Array__push(s.tmp_0, "kerns");
    r0 = pxsim_Array__push(s.tmp_0, "keros");
    r0 = pxsim_Array__push(s.tmp_0, "kerry");
    r0 = pxsim_Array__push(s.tmp_0, "kerve");
    r0 = pxsim_Array__push(s.tmp_0, "kesar");
    r0 = pxsim_Array__push(s.tmp_0, "kests");
    r0 = pxsim_Array__push(s.tmp_0, "ketas");
    r0 = pxsim_Array__push(s.tmp_0, "ketch");
    r0 = pxsim_Array__push(s.tmp_0, "ketes");
    r0 = pxsim_Array__push(s.tmp_0, "ketol");
    r0 = pxsim_Array__push(s.tmp_0, "kevel");
    r0 = pxsim_Array__push(s.tmp_0, "kevil");
    r0 = pxsim_Array__push(s.tmp_0, "kexes");
    r0 = pxsim_Array__push(s.tmp_0, "keyed");
    r0 = pxsim_Array__push(s.tmp_0, "keyer");
    r0 = pxsim_Array__push(s.tmp_0, "khadi");
    r0 = pxsim_Array__push(s.tmp_0, "khads");
    r0 = pxsim_Array__push(s.tmp_0, "khafs");
    r0 = pxsim_Array__push(s.tmp_0, "khaki");
    r0 = pxsim_Array__push(s.tmp_0, "khana");
    r0 = pxsim_Array__push(s.tmp_0, "khans");
    r0 = pxsim_Array__push(s.tmp_0, "khaph");
    r0 = pxsim_Array__push(s.tmp_0, "khats");
    r0 = pxsim_Array__push(s.tmp_0, "khaya");
    r0 = pxsim_Array__push(s.tmp_0, "khazi");
    r0 = pxsim_Array__push(s.tmp_0, "kheda");
    r0 = pxsim_Array__push(s.tmp_0, "kheer");
    r0 = pxsim_Array__push(s.tmp_0, "kheth");
    r0 = pxsim_Array__push(s.tmp_0, "khets");
    r0 = pxsim_Array__push(s.tmp_0, "khirs");
    r0 = pxsim_Array__push(s.tmp_0, "khoja");
    r0 = pxsim_Array__push(s.tmp_0, "khors");
    r0 = pxsim_Array__push(s.tmp_0, "khoum");
    r0 = pxsim_Array__push(s.tmp_0, "khuds");
    r0 = pxsim_Array__push(s.tmp_0, "khula");
    r0 = pxsim_Array__push(s.tmp_0, "khyal");
    r0 = pxsim_Array__push(s.tmp_0, "kiaat");
    r0 = pxsim_Array__push(s.tmp_0, "kiack");
    r0 = pxsim_Array__push(s.tmp_0, "kiaki");
    r0 = pxsim_Array__push(s.tmp_0, "kiang");
    r0 = pxsim_Array__push(s.tmp_0, "kiasu");
    r0 = pxsim_Array__push(s.tmp_0, "kibbe");
    r0 = pxsim_Array__push(s.tmp_0, "kibbi");
    r0 = pxsim_Array__push(s.tmp_0, "kibei");
    r0 = pxsim_Array__push(s.tmp_0, "kibes");
    r0 = pxsim_Array__push(s.tmp_0, "kibla");
    r0 = pxsim_Array__push(s.tmp_0, "kicks");
    r0 = pxsim_Array__push(s.tmp_0, "kicky");
    r0 = pxsim_Array__push(s.tmp_0, "kiddo");
    r0 = pxsim_Array__push(s.tmp_0, "kiddy");
    r0 = pxsim_Array__push(s.tmp_0, "kidel");
    r0 = pxsim_Array__push(s.tmp_0, "kideo");
    r0 = pxsim_Array__push(s.tmp_0, "kidge");
    r0 = pxsim_Array__push(s.tmp_0, "kiefs");
    r0 = pxsim_Array__push(s.tmp_0, "kiers");
    r0 = pxsim_Array__push(s.tmp_0, "kieve");
    r0 = pxsim_Array__push(s.tmp_0, "kievs");
    r0 = pxsim_Array__push(s.tmp_0, "kight");
    r0 = pxsim_Array__push(s.tmp_0, "kikay");
    r0 = pxsim_Array__push(s.tmp_0, "kikes");
    r0 = pxsim_Array__push(s.tmp_0, "kikoi");
    r0 = pxsim_Array__push(s.tmp_0, "kiley");
    r0 = pxsim_Array__push(s.tmp_0, "kilig");
    r0 = pxsim_Array__push(s.tmp_0, "kilim");
    r0 = pxsim_Array__push(s.tmp_0, "kills");
    r0 = pxsim_Array__push(s.tmp_0, "kilns");
    r0 = pxsim_Array__push(s.tmp_0, "kilos");
    r0 = pxsim_Array__push(s.tmp_0, "kilps");
    r0 = pxsim_Array__push(s.tmp_0, "kilts");
    r0 = pxsim_Array__push(s.tmp_0, "kilty");
    r0 = pxsim_Array__push(s.tmp_0, "kimbo");
    r0 = pxsim_Array__push(s.tmp_0, "kimet");
    r0 = pxsim_Array__push(s.tmp_0, "kinas");
    r0 = pxsim_Array__push(s.tmp_0, "kinda");
    r0 = pxsim_Array__push(s.tmp_0, "kinds");
    r0 = pxsim_Array__push(s.tmp_0, "kindy");
    r0 = pxsim_Array__push(s.tmp_0, "kines");
    r0 = pxsim_Array__push(s.tmp_0, "kings");
    r0 = pxsim_Array__push(s.tmp_0, "kingy");
    r0 = pxsim_Array__push(s.tmp_0, "kinin");
    r0 = pxsim_Array__push(s.tmp_0, "kinks");
    r0 = pxsim_Array__push(s.tmp_0, "kinky");
    r0 = pxsim_Array__push(s.tmp_0, "kinos");
    r0 = pxsim_Array__push(s.tmp_0, "kiore");
    r0 = pxsim_Array__push(s.tmp_0, "kiosk");
    r0 = pxsim_Array__push(s.tmp_0, "kipah");
    r0 = pxsim_Array__push(s.tmp_0, "kipas");
    r0 = pxsim_Array__push(s.tmp_0, "kipes");
    r0 = pxsim_Array__push(s.tmp_0, "kippa");
    r0 = pxsim_Array__push(s.tmp_0, "kipps");
    r0 = pxsim_Array__push(s.tmp_0, "kipsy");
    r0 = pxsim_Array__push(s.tmp_0, "kirby");
    r0 = pxsim_Array__push(s.tmp_0, "kirks");
    r0 = pxsim_Array__push(s.tmp_0, "kirns");
    r0 = pxsim_Array__push(s.tmp_0, "kirri");
    r0 = pxsim_Array__push(s.tmp_0, "kisan");
    r0 = pxsim_Array__push(s.tmp_0, "kissy");
    r0 = pxsim_Array__push(s.tmp_0, "kists");
    r0 = pxsim_Array__push(s.tmp_0, "kitab");
    r0 = pxsim_Array__push(s.tmp_0, "kited");
    r0 = pxsim_Array__push(s.tmp_0, "kiter");
    r0 = pxsim_Array__push(s.tmp_0, "kites");
    r0 = pxsim_Array__push(s.tmp_0, "kithe");
    r0 = pxsim_Array__push(s.tmp_0, "kiths");
    r0 = pxsim_Array__push(s.tmp_0, "kitke");
    r0 = pxsim_Array__push(s.tmp_0, "kitty");
    r0 = pxsim_Array__push(s.tmp_0, "kitul");
    r0 = pxsim_Array__push(s.tmp_0, "kivas");
    r0 = pxsim_Array__push(s.tmp_0, "kiwis");
    r0 = pxsim_Array__push(s.tmp_0, "klang");
    r0 = pxsim_Array__push(s.tmp_0, "klaps");
    r0 = pxsim_Array__push(s.tmp_0, "klett");
    r0 = pxsim_Array__push(s.tmp_0, "klick");
    r0 = pxsim_Array__push(s.tmp_0, "klieg");
    r0 = pxsim_Array__push(s.tmp_0, "kliks");
    r0 = pxsim_Array__push(s.tmp_0, "klong");
    r0 = pxsim_Array__push(s.tmp_0, "kloof");
    r0 = pxsim_Array__push(s.tmp_0, "kluge");
    r0 = pxsim_Array__push(s.tmp_0, "klutz");
    r0 = pxsim_Array__push(s.tmp_0, "knack");
    r0 = pxsim_Array__push(s.tmp_0, "knags");
    r0 = pxsim_Array__push(s.tmp_0, "knaps");
    r0 = pxsim_Array__push(s.tmp_0, "knarl");
    r0 = pxsim_Array__push(s.tmp_0, "knars");
    r0 = pxsim_Array__push(s.tmp_0, "knaur");
    r0 = pxsim_Array__push(s.tmp_0, "knave");
    r0 = pxsim_Array__push(s.tmp_0, "knawe");
    r0 = pxsim_Array__push(s.tmp_0, "knead");
    r0 = pxsim_Array__push(s.tmp_0, "kneed");
    r0 = pxsim_Array__push(s.tmp_0, "kneel");
    r0 = pxsim_Array__push(s.tmp_0, "knees");
    r0 = pxsim_Array__push(s.tmp_0, "knell");
    r0 = pxsim_Array__push(s.tmp_0, "knelt");
    r0 = pxsim_Array__push(s.tmp_0, "knick");
    r0 = pxsim_Array__push(s.tmp_0, "knife");
    r0 = pxsim_Array__push(s.tmp_0, "knish");
    r0 = pxsim_Array__push(s.tmp_0, "knits");
    r0 = pxsim_Array__push(s.tmp_0, "knive");
    r0 = pxsim_Array__push(s.tmp_0, "knobs");
    r0 = pxsim_Array__push(s.tmp_0, "knock");
    r0 = pxsim_Array__push(s.tmp_0, "knoll");
    r0 = pxsim_Array__push(s.tmp_0, "knoop");
    r0 = pxsim_Array__push(s.tmp_0, "knops");
    r0 = pxsim_Array__push(s.tmp_0, "knosp");
    r0 = pxsim_Array__push(s.tmp_0, "knots");
    r0 = pxsim_Array__push(s.tmp_0, "knoud");
    r0 = pxsim_Array__push(s.tmp_0, "knout");
    r0 = pxsim_Array__push(s.tmp_0, "knowd");
    r0 = pxsim_Array__push(s.tmp_0, "knowe");
    r0 = pxsim_Array__push(s.tmp_0, "known");
    r0 = pxsim_Array__push(s.tmp_0, "knows");
    r0 = pxsim_Array__push(s.tmp_0, "knubs");
    r0 = pxsim_Array__push(s.tmp_0, "knule");
    r0 = pxsim_Array__push(s.tmp_0, "knurl");
    r0 = pxsim_Array__push(s.tmp_0, "knurr");
    r0 = pxsim_Array__push(s.tmp_0, "knurs");
    r0 = pxsim_Array__push(s.tmp_0, "knuts");
    r0 = pxsim_Array__push(s.tmp_0, "koala");
    r0 = pxsim_Array__push(s.tmp_0, "koans");
    r0 = pxsim_Array__push(s.tmp_0, "koaps");
    r0 = pxsim_Array__push(s.tmp_0, "koban");
    r0 = pxsim_Array__push(s.tmp_0, "kobos");
    r0 = pxsim_Array__push(s.tmp_0, "koels");
    r0 = pxsim_Array__push(s.tmp_0, "koffs");
    r0 = pxsim_Array__push(s.tmp_0, "kofta");
    r0 = pxsim_Array__push(s.tmp_0, "kogal");
    r0 = pxsim_Array__push(s.tmp_0, "kohas");
    r0 = pxsim_Array__push(s.tmp_0, "kohen");
    r0 = pxsim_Array__push(s.tmp_0, "kohls");
    r0 = pxsim_Array__push(s.tmp_0, "koine");
    r0 = pxsim_Array__push(s.tmp_0, "koiwi");
    r0 = pxsim_Array__push(s.tmp_0, "kojis");
    r0 = pxsim_Array__push(s.tmp_0, "kokam");
    r0 = pxsim_Array__push(s.tmp_0, "kokas");
    r0 = pxsim_Array__push(s.tmp_0, "koker");
    r0 = pxsim_Array__push(s.tmp_0, "kokra");
    r0 = pxsim_Array__push(s.tmp_0, "kokum");
    r0 = pxsim_Array__push(s.tmp_0, "kolas");
    r0 = pxsim_Array__push(s.tmp_0, "kolos");
    r0 = pxsim_Array__push(s.tmp_0, "kombi");
    r0 = pxsim_Array__push(s.tmp_0, "kombu");
    r0 = pxsim_Array__push(s.tmp_0, "konbu");
    r0 = pxsim_Array__push(s.tmp_0, "kondo");
    r0 = pxsim_Array__push(s.tmp_0, "konks");
    r0 = pxsim_Array__push(s.tmp_0, "kooks");
    r0 = pxsim_Array__push(s.tmp_0, "kooky");
    r0 = pxsim_Array__push(s.tmp_0, "koori");
    r0 = pxsim_Array__push(s.tmp_0, "kopek");
    r0 = pxsim_Array__push(s.tmp_0, "kophs");
    r0 = pxsim_Array__push(s.tmp_0, "kopje");
    r0 = pxsim_Array__push(s.tmp_0, "koppa");
    r0 = pxsim_Array__push(s.tmp_0, "korai");
    r0 = pxsim_Array__push(s.tmp_0, "koran");
    r0 = pxsim_Array__push(s.tmp_0, "koras");
    r0 = pxsim_Array__push(s.tmp_0, "korat");
    r0 = pxsim_Array__push(s.tmp_0, "kores");
    r0 = pxsim_Array__push(s.tmp_0, "koris");
    r0 = pxsim_Array__push(s.tmp_0, "korma");
    r0 = pxsim_Array__push(s.tmp_0, "koros");
    r0 = pxsim_Array__push(s.tmp_0, "korun");
    r0 = pxsim_Array__push(s.tmp_0, "korus");
    r0 = pxsim_Array__push(s.tmp_0, "koses");
    r0 = pxsim_Array__push(s.tmp_0, "kotch");
    r0 = pxsim_Array__push(s.tmp_0, "kotos");
    r0 = pxsim_Array__push(s.tmp_0, "kotow");
    r0 = pxsim_Array__push(s.tmp_0, "koura");
    r0 = pxsim_Array__push(s.tmp_0, "kraal");
    r0 = pxsim_Array__push(s.tmp_0, "krabs");
    r0 = pxsim_Array__push(s.tmp_0, "kraft");
    r0 = pxsim_Array__push(s.tmp_0, "krais");
    r0 = pxsim_Array__push(s.tmp_0, "krait");
    r0 = pxsim_Array__push(s.tmp_0, "krang");
    r0 = pxsim_Array__push(s.tmp_0, "krans");
    r0 = pxsim_Array__push(s.tmp_0, "kranz");
    r0 = pxsim_Array__push(s.tmp_0, "kraut");
    r0 = pxsim_Array__push(s.tmp_0, "krays");
    r0 = pxsim_Array__push(s.tmp_0, "kreef");
    r0 = pxsim_Array__push(s.tmp_0, "kreen");
    r0 = pxsim_Array__push(s.tmp_0, "kreep");
    r0 = pxsim_Array__push(s.tmp_0, "kreng");
    r0 = pxsim_Array__push(s.tmp_0, "krewe");
    r0 = pxsim_Array__push(s.tmp_0, "krill");
    r0 = pxsim_Array__push(s.tmp_0, "kriol");
    r0 = pxsim_Array__push(s.tmp_0, "krona");
    r0 = pxsim_Array__push(s.tmp_0, "krone");
    r0 = pxsim_Array__push(s.tmp_0, "kroon");
    r0 = pxsim_Array__push(s.tmp_0, "krubi");
    r0 = pxsim_Array__push(s.tmp_0, "krump");
    r0 = pxsim_Array__push(s.tmp_0, "krunk");
    r0 = pxsim_Array__push(s.tmp_0, "ksars");
    r0 = pxsim_Array__push(s.tmp_0, "kubie");
    r0 = pxsim_Array__push(s.tmp_0, "kudos");
    r0 = pxsim_Array__push(s.tmp_0, "kudus");
    r0 = pxsim_Array__push(s.tmp_0, "kudzu");
    r0 = pxsim_Array__push(s.tmp_0, "kufis");
    r0 = pxsim_Array__push(s.tmp_0, "kugel");
    r0 = pxsim_Array__push(s.tmp_0, "kuias");
    r0 = pxsim_Array__push(s.tmp_0, "kukri");
    r0 = pxsim_Array__push(s.tmp_0, "kukus");
    r0 = pxsim_Array__push(s.tmp_0, "kulak");
    r0 = pxsim_Array__push(s.tmp_0, "kulan");
    r0 = pxsim_Array__push(s.tmp_0, "kulas");
    r0 = pxsim_Array__push(s.tmp_0, "kulfi");
    r0 = pxsim_Array__push(s.tmp_0, "kumis");
    r0 = pxsim_Array__push(s.tmp_0, "kumys");
    r0 = pxsim_Array__push(s.tmp_0, "kunas");
    r0 = pxsim_Array__push(s.tmp_0, "kunds");
    r0 = pxsim_Array__push(s.tmp_0, "kuris");
    r0 = pxsim_Array__push(s.tmp_0, "kurre");
    r0 = pxsim_Array__push(s.tmp_0, "kurta");
    r0 = pxsim_Array__push(s.tmp_0, "kurus");
    r0 = pxsim_Array__push(s.tmp_0, "kusso");
    r0 = pxsim_Array__push(s.tmp_0, "kusti");
    r0 = pxsim_Array__push(s.tmp_0, "kutai");
    r0 = pxsim_Array__push(s.tmp_0, "kutas");
    r0 = pxsim_Array__push(s.tmp_0, "kutch");
    r0 = pxsim_Array__push(s.tmp_0, "kutis");
    r0 = pxsim_Array__push(s.tmp_0, "kutus");
    r0 = pxsim_Array__push(s.tmp_0, "kuyas");
    r0 = pxsim_Array__push(s.tmp_0, "kuzus");
    r0 = pxsim_Array__push(s.tmp_0, "kvass");
    r0 = pxsim_Array__push(s.tmp_0, "kvell");
    r0 = pxsim_Array__push(s.tmp_0, "kwaai");
    r0 = pxsim_Array__push(s.tmp_0, "kwela");
    r0 = pxsim_Array__push(s.tmp_0, "kwink");
    r0 = pxsim_Array__push(s.tmp_0, "kwirl");
    r0 = pxsim_Array__push(s.tmp_0, "kyack");
    r0 = pxsim_Array__push(s.tmp_0, "kyaks");
    r0 = pxsim_Array__push(s.tmp_0, "kyang");
    r0 = pxsim_Array__push(s.tmp_0, "kyars");
    r0 = pxsim_Array__push(s.tmp_0, "kyats");
    r0 = pxsim_Array__push(s.tmp_0, "kybos");
    r0 = pxsim_Array__push(s.tmp_0, "kydst");
    r0 = pxsim_Array__push(s.tmp_0, "kyles");
    r0 = pxsim_Array__push(s.tmp_0, "kylie");
    r0 = pxsim_Array__push(s.tmp_0, "kylin");
    r0 = pxsim_Array__push(s.tmp_0, "kylix");
    r0 = pxsim_Array__push(s.tmp_0, "kyloe");
    r0 = pxsim_Array__push(s.tmp_0, "kynde");
    r0 = pxsim_Array__push(s.tmp_0, "kynds");
    r0 = pxsim_Array__push(s.tmp_0, "kypes");
    r0 = pxsim_Array__push(s.tmp_0, "kyrie");
    r0 = pxsim_Array__push(s.tmp_0, "kytes");
    r0 = pxsim_Array__push(s.tmp_0, "kythe");
    r0 = pxsim_Array__push(s.tmp_0, "kyudo");
    r0 = pxsim_Array__push(s.tmp_0, "laarf");
    r0 = pxsim_Array__push(s.tmp_0, "laari");
    r0 = pxsim_Array__push(s.tmp_0, "labda");
    r0 = pxsim_Array__push(s.tmp_0, "label");
    r0 = pxsim_Array__push(s.tmp_0, "labia");
    r0 = pxsim_Array__push(s.tmp_0, "labis");
    r0 = pxsim_Array__push(s.tmp_0, "labne");
    r0 = pxsim_Array__push(s.tmp_0, "labor");
    r0 = pxsim_Array__push(s.tmp_0, "labra");
    r0 = pxsim_Array__push(s.tmp_0, "laccy");
    r0 = pxsim_Array__push(s.tmp_0, "laced");
    r0 = pxsim_Array__push(s.tmp_0, "lacer");
    r0 = pxsim_Array__push(s.tmp_0, "laces");
    r0 = pxsim_Array__push(s.tmp_0, "lacet");
    r0 = pxsim_Array__push(s.tmp_0, "lacey");
    r0 = pxsim_Array__push(s.tmp_0, "lacis");
    r0 = pxsim_Array__push(s.tmp_0, "lacka");
    r0 = pxsim_Array__push(s.tmp_0, "lacks");
    r0 = pxsim_Array__push(s.tmp_0, "lacky");
    r0 = pxsim_Array__push(s.tmp_0, "laddu");
    r0 = pxsim_Array__push(s.tmp_0, "laddy");
    r0 = pxsim_Array__push(s.tmp_0, "laded");
    r0 = pxsim_Array__push(s.tmp_0, "ladee");
    r0 = pxsim_Array__push(s.tmp_0, "laden");
    r0 = pxsim_Array__push(s.tmp_0, "lader");
    r0 = pxsim_Array__push(s.tmp_0, "lades");
    r0 = pxsim_Array__push(s.tmp_0, "ladle");
    r0 = pxsim_Array__push(s.tmp_0, "ladoo");
    r0 = pxsim_Array__push(s.tmp_0, "laers");
    r0 = pxsim_Array__push(s.tmp_0, "laevo");
    r0 = pxsim_Array__push(s.tmp_0, "lagan");
    r0 = pxsim_Array__push(s.tmp_0, "lagar");
    r0 = pxsim_Array__push(s.tmp_0, "lager");
    r0 = pxsim_Array__push(s.tmp_0, "laggy");
    r0 = pxsim_Array__push(s.tmp_0, "lahal");
    r0 = pxsim_Array__push(s.tmp_0, "lahar");
    r0 = pxsim_Array__push(s.tmp_0, "laich");
    r0 = pxsim_Array__push(s.tmp_0, "laics");
    r0 = pxsim_Array__push(s.tmp_0, "laide");
    r0 = pxsim_Array__push(s.tmp_0, "laids");
    r0 = pxsim_Array__push(s.tmp_0, "laigh");
    r0 = pxsim_Array__push(s.tmp_0, "laika");
    r0 = pxsim_Array__push(s.tmp_0, "laiks");
    r0 = pxsim_Array__push(s.tmp_0, "laird");
    r0 = pxsim_Array__push(s.tmp_0, "lairs");
    r0 = pxsim_Array__push(s.tmp_0, "lairy");
    r0 = pxsim_Array__push(s.tmp_0, "laith");
    r0 = pxsim_Array__push(s.tmp_0, "laity");
    r0 = pxsim_Array__push(s.tmp_0, "laked");
    r0 = pxsim_Array__push(s.tmp_0, "laker");
    r0 = pxsim_Array__push(s.tmp_0, "lakes");
    r0 = pxsim_Array__push(s.tmp_0, "lakhs");
    r0 = pxsim_Array__push(s.tmp_0, "lakin");
    r0 = pxsim_Array__push(s.tmp_0, "laksa");
    r0 = pxsim_Array__push(s.tmp_0, "laldy");
    r0 = pxsim_Array__push(s.tmp_0, "lalls");
    r0 = pxsim_Array__push(s.tmp_0, "lamas");
    r0 = pxsim_Array__push(s.tmp_0, "lambs");
    r0 = pxsim_Array__push(s.tmp_0, "lamby");
    r0 = pxsim_Array__push(s.tmp_0, "lamed");
    r0 = pxsim_Array__push(s.tmp_0, "lamer");
    r0 = pxsim_Array__push(s.tmp_0, "lames");
    r0 = pxsim_Array__push(s.tmp_0, "lamia");
    r0 = pxsim_Array__push(s.tmp_0, "lammy");
    r0 = pxsim_Array__push(s.tmp_0, "lamps");
    r0 = pxsim_Array__push(s.tmp_0, "lanai");
    r0 = pxsim_Array__push(s.tmp_0, "lanas");
    r0 = pxsim_Array__push(s.tmp_0, "lance");
    r0 = pxsim_Array__push(s.tmp_0, "lanch");
    r0 = pxsim_Array__push(s.tmp_0, "lande");
    r0 = pxsim_Array__push(s.tmp_0, "lands");
    r0 = pxsim_Array__push(s.tmp_0, "laned");
    r0 = pxsim_Array__push(s.tmp_0, "lanes");
    r0 = pxsim_Array__push(s.tmp_0, "lanks");
    r0 = pxsim_Array__push(s.tmp_0, "lanky");
    r0 = pxsim_Array__push(s.tmp_0, "lants");
    r0 = pxsim_Array__push(s.tmp_0, "lapas");
    r0 = pxsim_Array__push(s.tmp_0, "lapel");
    r0 = pxsim_Array__push(s.tmp_0, "lapin");
    r0 = pxsim_Array__push(s.tmp_0, "lapis");
    r0 = pxsim_Array__push(s.tmp_0, "lapje");
    r0 = pxsim_Array__push(s.tmp_0, "lappa");
    r0 = pxsim_Array__push(s.tmp_0, "lappy");
    r0 = pxsim_Array__push(s.tmp_0, "lapse");
    r0 = pxsim_Array__push(s.tmp_0, "larch");
    r0 = pxsim_Array__push(s.tmp_0, "lards");
    r0 = pxsim_Array__push(s.tmp_0, "lardy");
    r0 = pxsim_Array__push(s.tmp_0, "laree");
    r0 = pxsim_Array__push(s.tmp_0, "lares");
    r0 = pxsim_Array__push(s.tmp_0, "larfs");
    r0 = pxsim_Array__push(s.tmp_0, "larga");
    r0 = pxsim_Array__push(s.tmp_0, "large");
    r0 = pxsim_Array__push(s.tmp_0, "largo");
    r0 = pxsim_Array__push(s.tmp_0, "laris");
    r0 = pxsim_Array__push(s.tmp_0, "larks");
    r0 = pxsim_Array__push(s.tmp_0, "larky");
    r0 = pxsim_Array__push(s.tmp_0, "larns");
    r0 = pxsim_Array__push(s.tmp_0, "larnt");
    r0 = pxsim_Array__push(s.tmp_0, "larum");
    r0 = pxsim_Array__push(s.tmp_0, "larva");
    r0 = pxsim_Array__push(s.tmp_0, "lased");
    r0 = pxsim_Array__push(s.tmp_0, "laser");
    r0 = pxsim_Array__push(s.tmp_0, "lases");
    r0 = pxsim_Array__push(s.tmp_0, "lassi");
    r0 = pxsim_Array__push(s.tmp_0, "lasso");
    r0 = pxsim_Array__push(s.tmp_0, "lassu");
    r0 = pxsim_Array__push(s.tmp_0, "lassy");
    r0 = pxsim_Array__push(s.tmp_0, "lasts");
    r0 = pxsim_Array__push(s.tmp_0, "latah");
    r0 = pxsim_Array__push(s.tmp_0, "latch");
    r0 = pxsim_Array__push(s.tmp_0, "lated");
    r0 = pxsim_Array__push(s.tmp_0, "laten");
    r0 = pxsim_Array__push(s.tmp_0, "later");
    r0 = pxsim_Array__push(s.tmp_0, "latex");
    r0 = pxsim_Array__push(s.tmp_0, "lathe");
    r0 = pxsim_Array__push(s.tmp_0, "lathi");
    r0 = pxsim_Array__push(s.tmp_0, "laths");
    r0 = pxsim_Array__push(s.tmp_0, "lathy");
    r0 = pxsim_Array__push(s.tmp_0, "latke");
    r0 = pxsim_Array__push(s.tmp_0, "latte");
    r0 = pxsim_Array__push(s.tmp_0, "latus");
    r0 = pxsim_Array__push(s.tmp_0, "lauan");
    r0 = pxsim_Array__push(s.tmp_0, "lauch");
    r0 = pxsim_Array__push(s.tmp_0, "laude");
    r0 = pxsim_Array__push(s.tmp_0, "lauds");
    r0 = pxsim_Array__push(s.tmp_0, "laufs");
    r0 = pxsim_Array__push(s.tmp_0, "laugh");
    r0 = pxsim_Array__push(s.tmp_0, "laund");
    r0 = pxsim_Array__push(s.tmp_0, "laura");
    r0 = pxsim_Array__push(s.tmp_0, "laval");
    r0 = pxsim_Array__push(s.tmp_0, "lavas");
    r0 = pxsim_Array__push(s.tmp_0, "laved");
    r0 = pxsim_Array__push(s.tmp_0, "laver");
    r0 = pxsim_Array__push(s.tmp_0, "laves");
    r0 = pxsim_Array__push(s.tmp_0, "lavra");
    r0 = pxsim_Array__push(s.tmp_0, "lavvy");
    r0 = pxsim_Array__push(s.tmp_0, "lawed");
    r0 = pxsim_Array__push(s.tmp_0, "lawer");
    r0 = pxsim_Array__push(s.tmp_0, "lawin");
    r0 = pxsim_Array__push(s.tmp_0, "lawks");
    r0 = pxsim_Array__push(s.tmp_0, "lawns");
    r0 = pxsim_Array__push(s.tmp_0, "lawny");
    r0 = pxsim_Array__push(s.tmp_0, "lawsy");
    r0 = pxsim_Array__push(s.tmp_0, "laxed");
    r0 = pxsim_Array__push(s.tmp_0, "laxer");
    r0 = pxsim_Array__push(s.tmp_0, "laxes");
    r0 = pxsim_Array__push(s.tmp_0, "laxly");
    r0 = pxsim_Array__push(s.tmp_0, "layby");
    r0 = pxsim_Array__push(s.tmp_0, "layed");
    r0 = pxsim_Array__push(s.tmp_0, "layer");
    r0 = pxsim_Array__push(s.tmp_0, "layin");
    r0 = pxsim_Array__push(s.tmp_0, "layup");
    r0 = pxsim_Array__push(s.tmp_0, "lazar");
    r0 = pxsim_Array__push(s.tmp_0, "lazed");
    r0 = pxsim_Array__push(s.tmp_0, "lazes");
    r0 = pxsim_Array__push(s.tmp_0, "lazos");
    r0 = pxsim_Array__push(s.tmp_0, "lazzi");
    r0 = pxsim_Array__push(s.tmp_0, "lazzo");
    r0 = pxsim_Array__push(s.tmp_0, "leach");
    r0 = pxsim_Array__push(s.tmp_0, "leads");
    r0 = pxsim_Array__push(s.tmp_0, "leady");
    r0 = pxsim_Array__push(s.tmp_0, "leafs");
    r0 = pxsim_Array__push(s.tmp_0, "leafy");
    r0 = pxsim_Array__push(s.tmp_0, "leaks");
    r0 = pxsim_Array__push(s.tmp_0, "leaky");
    r0 = pxsim_Array__push(s.tmp_0, "leams");
    r0 = pxsim_Array__push(s.tmp_0, "leans");
    r0 = pxsim_Array__push(s.tmp_0, "leant");
    r0 = pxsim_Array__push(s.tmp_0, "leany");
    r0 = pxsim_Array__push(s.tmp_0, "leaps");
    r0 = pxsim_Array__push(s.tmp_0, "leapt");
    r0 = pxsim_Array__push(s.tmp_0, "leare");
    r0 = pxsim_Array__push(s.tmp_0, "learn");
    r0 = pxsim_Array__push(s.tmp_0, "lears");
    r0 = pxsim_Array__push(s.tmp_0, "leary");
    r0 = pxsim_Array__push(s.tmp_0, "lease");
    r0 = pxsim_Array__push(s.tmp_0, "leash");
    r0 = pxsim_Array__push(s.tmp_0, "least");
    r0 = pxsim_Array__push(s.tmp_0, "leats");
    r0 = pxsim_Array__push(s.tmp_0, "leave");
    r0 = pxsim_Array__push(s.tmp_0, "leavy");
    r0 = pxsim_Array__push(s.tmp_0, "leaze");
    r0 = pxsim_Array__push(s.tmp_0, "leben");
    r0 = pxsim_Array__push(s.tmp_0, "leccy");
    r0 = pxsim_Array__push(s.tmp_0, "leche");
    r0 = pxsim_Array__push(s.tmp_0, "ledes");
    r0 = pxsim_Array__push(s.tmp_0, "ledge");
    r0 = pxsim_Array__push(s.tmp_0, "ledgy");
    r0 = pxsim_Array__push(s.tmp_0, "ledum");
    r0 = pxsim_Array__push(s.tmp_0, "leear");
    r0 = pxsim_Array__push(s.tmp_0, "leech");
    r0 = pxsim_Array__push(s.tmp_0, "leeks");
    r0 = pxsim_Array__push(s.tmp_0, "leeps");
    r0 = pxsim_Array__push(s.tmp_0, "leers");
    r0 = pxsim_Array__push(s.tmp_0, "leery");
    r0 = pxsim_Array__push(s.tmp_0, "leese");
    r0 = pxsim_Array__push(s.tmp_0, "leets");
    r0 = pxsim_Array__push(s.tmp_0, "leeze");
    r0 = pxsim_Array__push(s.tmp_0, "lefte");
    r0 = pxsim_Array__push(s.tmp_0, "lefts");
    r0 = pxsim_Array__push(s.tmp_0, "lefty");
    r0 = pxsim_Array__push(s.tmp_0, "legal");
    r0 = pxsim_Array__push(s.tmp_0, "leger");
    r0 = pxsim_Array__push(s.tmp_0, "leges");
    r0 = pxsim_Array__push(s.tmp_0, "legge");
    r0 = pxsim_Array__push(s.tmp_0, "leggo");
    r0 = pxsim_Array__push(s.tmp_0, "leggy");
    r0 = pxsim_Array__push(s.tmp_0, "legit");
    r0 = pxsim_Array__push(s.tmp_0, "legno");
    r0 = pxsim_Array__push(s.tmp_0, "lehrs");
    r0 = pxsim_Array__push(s.tmp_0, "lehua");
    r0 = pxsim_Array__push(s.tmp_0, "leirs");
    r0 = pxsim_Array__push(s.tmp_0, "leish");
    r0 = pxsim_Array__push(s.tmp_0, "leman");
    r0 = pxsim_Array__push(s.tmp_0, "lemed");
    r0 = pxsim_Array__push(s.tmp_0, "lemel");
    r0 = pxsim_Array__push(s.tmp_0, "lemes");
    r0 = pxsim_Array__push(s.tmp_0, "lemma");
    r0 = pxsim_Array__push(s.tmp_0, "lemme");
    r0 = pxsim_Array__push(s.tmp_0, "lemon");
    r0 = pxsim_Array__push(s.tmp_0, "lemur");
    r0 = pxsim_Array__push(s.tmp_0, "lends");
    r0 = pxsim_Array__push(s.tmp_0, "lenes");
    r0 = pxsim_Array__push(s.tmp_0, "lengs");
    r0 = pxsim_Array__push(s.tmp_0, "lenis");
    r0 = pxsim_Array__push(s.tmp_0, "lenos");
    r0 = pxsim_Array__push(s.tmp_0, "lense");
    r0 = pxsim_Array__push(s.tmp_0, "lenti");
    r0 = pxsim_Array__push(s.tmp_0, "lento");
    r0 = pxsim_Array__push(s.tmp_0, "leone");
    r0 = pxsim_Array__push(s.tmp_0, "lepak");
    r0 = pxsim_Array__push(s.tmp_0, "leper");
    r0 = pxsim_Array__push(s.tmp_0, "lepid");
    r0 = pxsim_Array__push(s.tmp_0, "lepra");
    r0 = pxsim_Array__push(s.tmp_0, "lepta");
    r0 = pxsim_Array__push(s.tmp_0, "lered");
    r0 = pxsim_Array__push(s.tmp_0, "leres");
    r0 = pxsim_Array__push(s.tmp_0, "lerps");
    r0 = pxsim_Array__push(s.tmp_0, "lesbo");
    r0 = pxsim_Array__push(s.tmp_0, "leses");
    r0 = pxsim_Array__push(s.tmp_0, "lesos");
    r0 = pxsim_Array__push(s.tmp_0, "lests");
    r0 = pxsim_Array__push(s.tmp_0, "letch");
    r0 = pxsim_Array__push(s.tmp_0, "lethe");
    r0 = pxsim_Array__push(s.tmp_0, "letty");
    r0 = pxsim_Array__push(s.tmp_0, "letup");
    r0 = pxsim_Array__push(s.tmp_0, "leuch");
    r0 = pxsim_Array__push(s.tmp_0, "leuco");
    r0 = pxsim_Array__push(s.tmp_0, "leuds");
    r0 = pxsim_Array__push(s.tmp_0, "leugh");
    r0 = pxsim_Array__push(s.tmp_0, "levas");
    r0 = pxsim_Array__push(s.tmp_0, "levee");
    r0 = pxsim_Array__push(s.tmp_0, "level");
    r0 = pxsim_Array__push(s.tmp_0, "lever");
    r0 = pxsim_Array__push(s.tmp_0, "leves");
    r0 = pxsim_Array__push(s.tmp_0, "levin");
    r0 = pxsim_Array__push(s.tmp_0, "levis");
    r0 = pxsim_Array__push(s.tmp_0, "lewis");
    r0 = pxsim_Array__push(s.tmp_0, "lexes");
    r0 = pxsim_Array__push(s.tmp_0, "lexis");
    r0 = pxsim_Array__push(s.tmp_0, "lezes");
    r0 = pxsim_Array__push(s.tmp_0, "lezza");
    r0 = pxsim_Array__push(s.tmp_0, "lezzo");
    r0 = pxsim_Array__push(s.tmp_0, "lezzy");
    r0 = pxsim_Array__push(s.tmp_0, "liana");
    r0 = pxsim_Array__push(s.tmp_0, "liane");
    r0 = pxsim_Array__push(s.tmp_0, "liang");
    r0 = pxsim_Array__push(s.tmp_0, "liard");
    r0 = pxsim_Array__push(s.tmp_0, "liars");
    r0 = pxsim_Array__push(s.tmp_0, "liart");
    r0 = pxsim_Array__push(s.tmp_0, "libel");
    r0 = pxsim_Array__push(s.tmp_0, "liber");
    r0 = pxsim_Array__push(s.tmp_0, "libor");
    r0 = pxsim_Array__push(s.tmp_0, "libra");
    r0 = pxsim_Array__push(s.tmp_0, "libre");
    r0 = pxsim_Array__push(s.tmp_0, "libri");
    r0 = pxsim_Array__push(s.tmp_0, "licet");
    r0 = pxsim_Array__push(s.tmp_0, "lichi");
    r0 = pxsim_Array__push(s.tmp_0, "licht");
    r0 = pxsim_Array__push(s.tmp_0, "licit");
    r0 = pxsim_Array__push(s.tmp_0, "licks");
    r0 = pxsim_Array__push(s.tmp_0, "lidar");
    r0 = pxsim_Array__push(s.tmp_0, "lidos");
    r0 = pxsim_Array__push(s.tmp_0, "liefs");
    r0 = pxsim_Array__push(s.tmp_0, "liege");
    r0 = pxsim_Array__push(s.tmp_0, "liens");
    r0 = pxsim_Array__push(s.tmp_0, "liers");
    r0 = pxsim_Array__push(s.tmp_0, "lieus");
    r0 = pxsim_Array__push(s.tmp_0, "lieve");
    r0 = pxsim_Array__push(s.tmp_0, "lifer");
    r0 = pxsim_Array__push(s.tmp_0, "lifes");
    r0 = pxsim_Array__push(s.tmp_0, "lifey");
    r0 = pxsim_Array__push(s.tmp_0, "lifts");
    r0 = pxsim_Array__push(s.tmp_0, "ligan");
    r0 = pxsim_Array__push(s.tmp_0, "liger");
    r0 = pxsim_Array__push(s.tmp_0, "ligge");
    r0 = pxsim_Array__push(s.tmp_0, "light");
    r0 = pxsim_Array__push(s.tmp_0, "ligne");
    r0 = pxsim_Array__push(s.tmp_0, "liked");
    r0 = pxsim_Array__push(s.tmp_0, "liken");
    r0 = pxsim_Array__push(s.tmp_0, "liker");
    r0 = pxsim_Array__push(s.tmp_0, "likes");
    r0 = pxsim_Array__push(s.tmp_0, "likin");
    r0 = pxsim_Array__push(s.tmp_0, "lilac");
    r0 = pxsim_Array__push(s.tmp_0, "lills");
    r0 = pxsim_Array__push(s.tmp_0, "lilos");
    r0 = pxsim_Array__push(s.tmp_0, "lilts");
    r0 = pxsim_Array__push(s.tmp_0, "lilty");
    r0 = pxsim_Array__push(s.tmp_0, "liman");
    r0 = pxsim_Array__push(s.tmp_0, "limas");
    r0 = pxsim_Array__push(s.tmp_0, "limax");
    r0 = pxsim_Array__push(s.tmp_0, "limba");
    r0 = pxsim_Array__push(s.tmp_0, "limbi");
    r0 = pxsim_Array__push(s.tmp_0, "limbo");
    r0 = pxsim_Array__push(s.tmp_0, "limbs");
    r0 = pxsim_Array__push(s.tmp_0, "limby");
    r0 = pxsim_Array__push(s.tmp_0, "limed");
    r0 = pxsim_Array__push(s.tmp_0, "limen");
    r0 = pxsim_Array__push(s.tmp_0, "limes");
    r0 = pxsim_Array__push(s.tmp_0, "limey");
    r0 = pxsim_Array__push(s.tmp_0, "limit");
    r0 = pxsim_Array__push(s.tmp_0, "limma");
    r0 = pxsim_Array__push(s.tmp_0, "limns");
    r0 = pxsim_Array__push(s.tmp_0, "limos");
    r0 = pxsim_Array__push(s.tmp_0, "limpa");
    r0 = pxsim_Array__push(s.tmp_0, "limps");
    r0 = pxsim_Array__push(s.tmp_0, "linac");
    r0 = pxsim_Array__push(s.tmp_0, "linch");
    r0 = pxsim_Array__push(s.tmp_0, "linds");
    r0 = pxsim_Array__push(s.tmp_0, "lindy");
    r0 = pxsim_Array__push(s.tmp_0, "lined");
    r0 = pxsim_Array__push(s.tmp_0, "linen");
    r0 = pxsim_Array__push(s.tmp_0, "liner");
    r0 = pxsim_Array__push(s.tmp_0, "lines");
    r0 = pxsim_Array__push(s.tmp_0, "liney");
    r0 = pxsim_Array__push(s.tmp_0, "linga");
    r0 = pxsim_Array__push(s.tmp_0, "lingo");
    r0 = pxsim_Array__push(s.tmp_0, "lings");
    r0 = pxsim_Array__push(s.tmp_0, "lingy");
    r0 = pxsim_Array__push(s.tmp_0, "linin");
    r0 = pxsim_Array__push(s.tmp_0, "links");
    r0 = pxsim_Array__push(s.tmp_0, "linky");
    r0 = pxsim_Array__push(s.tmp_0, "linns");
    r0 = pxsim_Array__push(s.tmp_0, "linny");
    r0 = pxsim_Array__push(s.tmp_0, "linos");
    r0 = pxsim_Array__push(s.tmp_0, "lints");
    r0 = pxsim_Array__push(s.tmp_0, "linty");
    r0 = pxsim_Array__push(s.tmp_0, "linum");
    r0 = pxsim_Array__push(s.tmp_0, "linux");
    r0 = pxsim_Array__push(s.tmp_0, "lions");
    r0 = pxsim_Array__push(s.tmp_0, "lipas");
    r0 = pxsim_Array__push(s.tmp_0, "lipes");
    r0 = pxsim_Array__push(s.tmp_0, "lipid");
    r0 = pxsim_Array__push(s.tmp_0, "lipin");
    r0 = pxsim_Array__push(s.tmp_0, "lipos");
    r0 = pxsim_Array__push(s.tmp_0, "lippy");
    r0 = pxsim_Array__push(s.tmp_0, "liras");
    r0 = pxsim_Array__push(s.tmp_0, "lirks");
    r0 = pxsim_Array__push(s.tmp_0, "lirot");
    r0 = pxsim_Array__push(s.tmp_0, "lises");
    r0 = pxsim_Array__push(s.tmp_0, "lisks");
    r0 = pxsim_Array__push(s.tmp_0, "lisle");
    r0 = pxsim_Array__push(s.tmp_0, "lisps");
    r0 = pxsim_Array__push(s.tmp_0, "lists");
    r0 = pxsim_Array__push(s.tmp_0, "litai");
    r0 = pxsim_Array__push(s.tmp_0, "litas");
    r0 = pxsim_Array__push(s.tmp_0, "lited");
    r0 = pxsim_Array__push(s.tmp_0, "litem");
    r0 = pxsim_Array__push(s.tmp_0, "liter");
    r0 = pxsim_Array__push(s.tmp_0, "lites");
    r0 = pxsim_Array__push(s.tmp_0, "lithe");
    r0 = pxsim_Array__push(s.tmp_0, "litho");
    r0 = pxsim_Array__push(s.tmp_0, "liths");
    r0 = pxsim_Array__push(s.tmp_0, "litie");
    r0 = pxsim_Array__push(s.tmp_0, "litre");
    r0 = pxsim_Array__push(s.tmp_0, "lived");
    r0 = pxsim_Array__push(s.tmp_0, "liven");
    r0 = pxsim_Array__push(s.tmp_0, "liver");
    r0 = pxsim_Array__push(s.tmp_0, "lives");
    r0 = pxsim_Array__push(s.tmp_0, "livid");
    r0 = pxsim_Array__push(s.tmp_0, "livor");
    r0 = pxsim_Array__push(s.tmp_0, "livre");
    r0 = pxsim_Array__push(s.tmp_0, "liwaa");
    r0 = pxsim_Array__push(s.tmp_0, "liwas");
    r0 = pxsim_Array__push(s.tmp_0, "llama");
    r0 = pxsim_Array__push(s.tmp_0, "llano");
    r0 = pxsim_Array__push(s.tmp_0, "loach");
    r0 = pxsim_Array__push(s.tmp_0, "loads");
    r0 = pxsim_Array__push(s.tmp_0, "loafs");
    r0 = pxsim_Array__push(s.tmp_0, "loams");
    r0 = pxsim_Array__push(s.tmp_0, "loamy");
    r0 = pxsim_Array__push(s.tmp_0, "loans");
    r0 = pxsim_Array__push(s.tmp_0, "loast");
    r0 = pxsim_Array__push(s.tmp_0, "loath");
    r0 = pxsim_Array__push(s.tmp_0, "loave");
    r0 = pxsim_Array__push(s.tmp_0, "lobar");
    r0 = pxsim_Array__push(s.tmp_0, "lobby");
    r0 = pxsim_Array__push(s.tmp_0, "lobed");
    r0 = pxsim_Array__push(s.tmp_0, "lobes");
    r0 = pxsim_Array__push(s.tmp_0, "lobos");
    r0 = pxsim_Array__push(s.tmp_0, "lobus");
    r0 = pxsim_Array__push(s.tmp_0, "local");
    r0 = pxsim_Array__push(s.tmp_0, "loche");
    r0 = pxsim_Array__push(s.tmp_0, "lochs");
    r0 = pxsim_Array__push(s.tmp_0, "lochy");
    r0 = pxsim_Array__push(s.tmp_0, "locie");
    r0 = pxsim_Array__push(s.tmp_0, "locis");
    r0 = pxsim_Array__push(s.tmp_0, "locks");
    r0 = pxsim_Array__push(s.tmp_0, "locky");
    r0 = pxsim_Array__push(s.tmp_0, "locos");
    r0 = pxsim_Array__push(s.tmp_0, "locum");
    r0 = pxsim_Array__push(s.tmp_0, "locus");
    r0 = pxsim_Array__push(s.tmp_0, "loden");
    r0 = pxsim_Array__push(s.tmp_0, "lodes");
    r0 = pxsim_Array__push(s.tmp_0, "lodge");
    r0 = pxsim_Array__push(s.tmp_0, "loess");
    r0 = pxsim_Array__push(s.tmp_0, "lofts");
    r0 = pxsim_Array__push(s.tmp_0, "lofty");
    r0 = pxsim_Array__push(s.tmp_0, "logan");
    r0 = pxsim_Array__push(s.tmp_0, "loges");
    r0 = pxsim_Array__push(s.tmp_0, "loggy");
    r0 = pxsim_Array__push(s.tmp_0, "logia");
    r0 = pxsim_Array__push(s.tmp_0, "logic");
    r0 = pxsim_Array__push(s.tmp_0, "logie");
    r0 = pxsim_Array__push(s.tmp_0, "login");
    r0 = pxsim_Array__push(s.tmp_0, "logoi");
    r0 = pxsim_Array__push(s.tmp_0, "logon");
    r0 = pxsim_Array__push(s.tmp_0, "logos");
    r0 = pxsim_Array__push(s.tmp_0, "lohan");
    r0 = pxsim_Array__push(s.tmp_0, "loids");
    r0 = pxsim_Array__push(s.tmp_0, "loins");
    r0 = pxsim_Array__push(s.tmp_0, "loipe");
    r0 = pxsim_Array__push(s.tmp_0, "loirs");
    r0 = pxsim_Array__push(s.tmp_0, "lokes");
    r0 = pxsim_Array__push(s.tmp_0, "lokey");
    r0 = pxsim_Array__push(s.tmp_0, "lokum");
    r0 = pxsim_Array__push(s.tmp_0, "lolas");
    r0 = pxsim_Array__push(s.tmp_0, "loled");
    r0 = pxsim_Array__push(s.tmp_0, "lollo");
    r0 = pxsim_Array__push(s.tmp_0, "lolls");
    r0 = pxsim_Array__push(s.tmp_0, "lolly");
    r0 = pxsim_Array__push(s.tmp_0, "lolog");
    r0 = pxsim_Array__push(s.tmp_0, "lolos");
    r0 = pxsim_Array__push(s.tmp_0, "lomas");
    r0 = pxsim_Array__push(s.tmp_0, "lomed");
    r0 = pxsim_Array__push(s.tmp_0, "lomes");
    r0 = pxsim_Array__push(s.tmp_0, "loner");
    r0 = pxsim_Array__push(s.tmp_0, "longa");
    r0 = pxsim_Array__push(s.tmp_0, "longe");
    r0 = pxsim_Array__push(s.tmp_0, "longs");
    r0 = pxsim_Array__push(s.tmp_0, "looby");
    r0 = pxsim_Array__push(s.tmp_0, "looed");
    r0 = pxsim_Array__push(s.tmp_0, "looey");
    r0 = pxsim_Array__push(s.tmp_0, "loofa");
    r0 = pxsim_Array__push(s.tmp_0, "loofs");
    r0 = pxsim_Array__push(s.tmp_0, "looie");
    r0 = pxsim_Array__push(s.tmp_0, "looks");
    r0 = pxsim_Array__push(s.tmp_0, "looky");
    r0 = pxsim_Array__push(s.tmp_0, "looms");
    r0 = pxsim_Array__push(s.tmp_0, "loons");
    r0 = pxsim_Array__push(s.tmp_0, "loony");
    r0 = pxsim_Array__push(s.tmp_0, "loops");
    r0 = pxsim_Array__push(s.tmp_0, "loopy");
    r0 = pxsim_Array__push(s.tmp_0, "loord");
    r0 = pxsim_Array__push(s.tmp_0, "loose");
    r0 = pxsim_Array__push(s.tmp_0, "loots");
    r0 = pxsim_Array__push(s.tmp_0, "loped");
    r0 = pxsim_Array__push(s.tmp_0, "loper");
    r0 = pxsim_Array__push(s.tmp_0, "lopes");
    r0 = pxsim_Array__push(s.tmp_0, "loppy");
    r0 = pxsim_Array__push(s.tmp_0, "loral");
    r0 = pxsim_Array__push(s.tmp_0, "loran");
    r0 = pxsim_Array__push(s.tmp_0, "lords");
    r0 = pxsim_Array__push(s.tmp_0, "lordy");
    r0 = pxsim_Array__push(s.tmp_0, "lorel");
    r0 = pxsim_Array__push(s.tmp_0, "lores");
    r0 = pxsim_Array__push(s.tmp_0, "loric");
    r0 = pxsim_Array__push(s.tmp_0, "loris");
    r0 = pxsim_Array__push(s.tmp_0, "lorry");
    r0 = pxsim_Array__push(s.tmp_0, "losed");
    r0 = pxsim_Array__push(s.tmp_0, "losel");
    r0 = pxsim_Array__push(s.tmp_0, "losen");
    r0 = pxsim_Array__push(s.tmp_0, "loser");
    r0 = pxsim_Array__push(s.tmp_0, "loses");
    r0 = pxsim_Array__push(s.tmp_0, "lossy");
    r0 = pxsim_Array__push(s.tmp_0, "lotah");
    r0 = pxsim_Array__push(s.tmp_0, "lotas");
    r0 = pxsim_Array__push(s.tmp_0, "lotes");
    r0 = pxsim_Array__push(s.tmp_0, "lotic");
    r0 = pxsim_Array__push(s.tmp_0, "lotos");
    r0 = pxsim_Array__push(s.tmp_0, "lotsa");
    r0 = pxsim_Array__push(s.tmp_0, "lotta");
    r0 = pxsim_Array__push(s.tmp_0, "lotte");
    r0 = pxsim_Array__push(s.tmp_0, "lotto");
    r0 = pxsim_Array__push(s.tmp_0, "lotus");
    r0 = pxsim_Array__push(s.tmp_0, "loued");
    r0 = pxsim_Array__push(s.tmp_0, "lough");
    r0 = pxsim_Array__push(s.tmp_0, "louie");
    r0 = pxsim_Array__push(s.tmp_0, "louis");
    r0 = pxsim_Array__push(s.tmp_0, "louma");
    r0 = pxsim_Array__push(s.tmp_0, "lound");
    r0 = pxsim_Array__push(s.tmp_0, "louns");
    r0 = pxsim_Array__push(s.tmp_0, "loupe");
    r0 = pxsim_Array__push(s.tmp_0, "loups");
    r0 = pxsim_Array__push(s.tmp_0, "loure");
    r0 = pxsim_Array__push(s.tmp_0, "lours");
    r0 = pxsim_Array__push(s.tmp_0, "loury");
    r0 = pxsim_Array__push(s.tmp_0, "louse");
    r0 = pxsim_Array__push(s.tmp_0, "lousy");
    r0 = pxsim_Array__push(s.tmp_0, "louts");
    r0 = pxsim_Array__push(s.tmp_0, "lovat");
    r0 = pxsim_Array__push(s.tmp_0, "loved");
    r0 = pxsim_Array__push(s.tmp_0, "lovee");
    r0 = pxsim_Array__push(s.tmp_0, "lover");
    r0 = pxsim_Array__push(s.tmp_0, "loves");
    r0 = pxsim_Array__push(s.tmp_0, "lovey");
    r0 = pxsim_Array__push(s.tmp_0, "lovie");
    r0 = pxsim_Array__push(s.tmp_0, "lowan");
    r0 = pxsim_Array__push(s.tmp_0, "lowed");
    r0 = pxsim_Array__push(s.tmp_0, "lowen");
    r0 = pxsim_Array__push(s.tmp_0, "lower");
    r0 = pxsim_Array__push(s.tmp_0, "lowes");
    r0 = pxsim_Array__push(s.tmp_0, "lowly");
    r0 = pxsim_Array__push(s.tmp_0, "lownd");
    r0 = pxsim_Array__push(s.tmp_0, "lowne");
    r0 = pxsim_Array__push(s.tmp_0, "lowns");
    r0 = pxsim_Array__push(s.tmp_0, "lowps");
    r0 = pxsim_Array__push(s.tmp_0, "lowry");
    r0 = pxsim_Array__push(s.tmp_0, "lowse");
    r0 = pxsim_Array__push(s.tmp_0, "lowth");
    r0 = pxsim_Array__push(s.tmp_0, "lowts");
    r0 = pxsim_Array__push(s.tmp_0, "loxed");
    r0 = pxsim_Array__push(s.tmp_0, "loxes");
    r0 = pxsim_Array__push(s.tmp_0, "loyal");
    r0 = pxsim_Array__push(s.tmp_0, "lozen");
    r0 = pxsim_Array__push(s.tmp_0, "luach");
    r0 = pxsim_Array__push(s.tmp_0, "luaus");
    r0 = pxsim_Array__push(s.tmp_0, "lubed");
    r0 = pxsim_Array__push(s.tmp_0, "lubes");
    r0 = pxsim_Array__push(s.tmp_0, "lubra");
    r0 = pxsim_Array__push(s.tmp_0, "luces");
    r0 = pxsim_Array__push(s.tmp_0, "lucid");
    r0 = pxsim_Array__push(s.tmp_0, "lucks");
    r0 = pxsim_Array__push(s.tmp_0, "lucky");
    r0 = pxsim_Array__push(s.tmp_0, "lucre");
    r0 = pxsim_Array__push(s.tmp_0, "ludes");
    r0 = pxsim_Array__push(s.tmp_0, "ludic");
    r0 = pxsim_Array__push(s.tmp_0, "ludos");
    r0 = pxsim_Array__push(s.tmp_0, "luffa");
    r0 = pxsim_Array__push(s.tmp_0, "luffs");
    r0 = pxsim_Array__push(s.tmp_0, "luged");
    r0 = pxsim_Array__push(s.tmp_0, "luger");
    r0 = pxsim_Array__push(s.tmp_0, "luges");
    r0 = pxsim_Array__push(s.tmp_0, "lulls");
    r0 = pxsim_Array__push(s.tmp_0, "lulus");
    r0 = pxsim_Array__push(s.tmp_0, "lumas");
    r0 = pxsim_Array__push(s.tmp_0, "lumbi");
    r0 = pxsim_Array__push(s.tmp_0, "lumen");
    r0 = pxsim_Array__push(s.tmp_0, "lumme");
    r0 = pxsim_Array__push(s.tmp_0, "lummy");
    r0 = pxsim_Array__push(s.tmp_0, "lumps");
    r0 = pxsim_Array__push(s.tmp_0, "lumpy");
    r0 = pxsim_Array__push(s.tmp_0, "lunar");
    r0 = pxsim_Array__push(s.tmp_0, "lunas");
    r0 = pxsim_Array__push(s.tmp_0, "lunch");
    r0 = pxsim_Array__push(s.tmp_0, "lunes");
    r0 = pxsim_Array__push(s.tmp_0, "lunet");
    r0 = pxsim_Array__push(s.tmp_0, "lunge");
    r0 = pxsim_Array__push(s.tmp_0, "lungi");
    r0 = pxsim_Array__push(s.tmp_0, "lungs");
    r0 = pxsim_Array__push(s.tmp_0, "lunks");
    r0 = pxsim_Array__push(s.tmp_0, "lunts");
    r0 = pxsim_Array__push(s.tmp_0, "lupin");
    r0 = pxsim_Array__push(s.tmp_0, "lupus");
    r0 = pxsim_Array__push(s.tmp_0, "lurch");
    r0 = pxsim_Array__push(s.tmp_0, "lured");
    r0 = pxsim_Array__push(s.tmp_0, "lurer");
    r0 = pxsim_Array__push(s.tmp_0, "lures");
    r0 = pxsim_Array__push(s.tmp_0, "lurex");
    r0 = pxsim_Array__push(s.tmp_0, "lurgi");
    r0 = pxsim_Array__push(s.tmp_0, "lurgy");
    r0 = pxsim_Array__push(s.tmp_0, "lurid");
    r0 = pxsim_Array__push(s.tmp_0, "lurks");
    r0 = pxsim_Array__push(s.tmp_0, "lurry");
    r0 = pxsim_Array__push(s.tmp_0, "lurve");
    r0 = pxsim_Array__push(s.tmp_0, "luser");
    r0 = pxsim_Array__push(s.tmp_0, "lushy");
    r0 = pxsim_Array__push(s.tmp_0, "lusks");
    r0 = pxsim_Array__push(s.tmp_0, "lusts");
    r0 = pxsim_Array__push(s.tmp_0, "lusty");
    r0 = pxsim_Array__push(s.tmp_0, "lusus");
    r0 = pxsim_Array__push(s.tmp_0, "lutea");
    r0 = pxsim_Array__push(s.tmp_0, "luted");
    r0 = pxsim_Array__push(s.tmp_0, "luter");
    r0 = pxsim_Array__push(s.tmp_0, "lutes");
    r0 = pxsim_Array__push(s.tmp_0, "luvvy");
    r0 = pxsim_Array__push(s.tmp_0, "luxed");
    r0 = pxsim_Array__push(s.tmp_0, "luxer");
    r0 = pxsim_Array__push(s.tmp_0, "luxes");
    r0 = pxsim_Array__push(s.tmp_0, "lweis");
    r0 = pxsim_Array__push(s.tmp_0, "lyams");
    r0 = pxsim_Array__push(s.tmp_0, "lyard");
    r0 = pxsim_Array__push(s.tmp_0, "lyart");
    r0 = pxsim_Array__push(s.tmp_0, "lyase");
    r0 = pxsim_Array__push(s.tmp_0, "lycea");
    r0 = pxsim_Array__push(s.tmp_0, "lycee");
    r0 = pxsim_Array__push(s.tmp_0, "lycra");
    r0 = pxsim_Array__push(s.tmp_0, "lying");
    r0 = pxsim_Array__push(s.tmp_0, "lymes");
    r0 = pxsim_Array__push(s.tmp_0, "lymph");
    r0 = pxsim_Array__push(s.tmp_0, "lynch");
    r0 = pxsim_Array__push(s.tmp_0, "lynes");
    r0 = pxsim_Array__push(s.tmp_0, "lyres");
    r0 = pxsim_Array__push(s.tmp_0, "lyric");
    r0 = pxsim_Array__push(s.tmp_0, "lysed");
    r0 = pxsim_Array__push(s.tmp_0, "lyses");
    r0 = pxsim_Array__push(s.tmp_0, "lysin");
    r0 = pxsim_Array__push(s.tmp_0, "lysis");
    r0 = pxsim_Array__push(s.tmp_0, "lysol");
    r0 = pxsim_Array__push(s.tmp_0, "lyssa");
    r0 = pxsim_Array__push(s.tmp_0, "lyted");
    r0 = pxsim_Array__push(s.tmp_0, "lytes");
    r0 = pxsim_Array__push(s.tmp_0, "lythe");
    r0 = pxsim_Array__push(s.tmp_0, "lytic");
    r0 = pxsim_Array__push(s.tmp_0, "lytta");
    r0 = pxsim_Array__push(s.tmp_0, "maaed");
    r0 = pxsim_Array__push(s.tmp_0, "maare");
    r0 = pxsim_Array__push(s.tmp_0, "maars");
    r0 = pxsim_Array__push(s.tmp_0, "maban");
    r0 = pxsim_Array__push(s.tmp_0, "mabes");
    r0 = pxsim_Array__push(s.tmp_0, "macas");
    r0 = pxsim_Array__push(s.tmp_0, "macaw");
    r0 = pxsim_Array__push(s.tmp_0, "macca");
    r0 = pxsim_Array__push(s.tmp_0, "maced");
    r0 = pxsim_Array__push(s.tmp_0, "macer");
    r0 = pxsim_Array__push(s.tmp_0, "maces");
    r0 = pxsim_Array__push(s.tmp_0, "mache");
    r0 = pxsim_Array__push(s.tmp_0, "machi");
    r0 = pxsim_Array__push(s.tmp_0, "macho");
    r0 = pxsim_Array__push(s.tmp_0, "machs");
    r0 = pxsim_Array__push(s.tmp_0, "macka");
    r0 = pxsim_Array__push(s.tmp_0, "macks");
    r0 = pxsim_Array__push(s.tmp_0, "macle");
    r0 = pxsim_Array__push(s.tmp_0, "macon");
    r0 = pxsim_Array__push(s.tmp_0, "macro");
    r0 = pxsim_Array__push(s.tmp_0, "macte");
    r0 = pxsim_Array__push(s.tmp_0, "madal");
    r0 = pxsim_Array__push(s.tmp_0, "madam");
    r0 = pxsim_Array__push(s.tmp_0, "madar");
    r0 = pxsim_Array__push(s.tmp_0, "maddy");
    r0 = pxsim_Array__push(s.tmp_0, "madge");
    r0 = pxsim_Array__push(s.tmp_0, "madid");
    r0 = pxsim_Array__push(s.tmp_0, "madly");
    r0 = pxsim_Array__push(s.tmp_0, "mados");
    r0 = pxsim_Array__push(s.tmp_0, "madre");
    r0 = pxsim_Array__push(s.tmp_0, "maedi");
    r0 = pxsim_Array__push(s.tmp_0, "maerl");
    r0 = pxsim_Array__push(s.tmp_0, "mafia");
    r0 = pxsim_Array__push(s.tmp_0, "mafic");
    r0 = pxsim_Array__push(s.tmp_0, "mafts");
    r0 = pxsim_Array__push(s.tmp_0, "magas");
    r0 = pxsim_Array__push(s.tmp_0, "mages");
    r0 = pxsim_Array__push(s.tmp_0, "maggs");
    r0 = pxsim_Array__push(s.tmp_0, "magic");
    r0 = pxsim_Array__push(s.tmp_0, "magma");
    r0 = pxsim_Array__push(s.tmp_0, "magna");
    r0 = pxsim_Array__push(s.tmp_0, "magot");
    r0 = pxsim_Array__push(s.tmp_0, "magus");
    r0 = pxsim_Array__push(s.tmp_0, "mahal");
    r0 = pxsim_Array__push(s.tmp_0, "mahem");
    r0 = pxsim_Array__push(s.tmp_0, "mahis");
    r0 = pxsim_Array__push(s.tmp_0, "mahoe");
    r0 = pxsim_Array__push(s.tmp_0, "mahrs");
    r0 = pxsim_Array__push(s.tmp_0, "mahua");
    r0 = pxsim_Array__push(s.tmp_0, "mahwa");
    r0 = pxsim_Array__push(s.tmp_0, "maids");
    r0 = pxsim_Array__push(s.tmp_0, "maiko");
    r0 = pxsim_Array__push(s.tmp_0, "maiks");
    r0 = pxsim_Array__push(s.tmp_0, "maile");
    r0 = pxsim_Array__push(s.tmp_0, "maill");
    r0 = pxsim_Array__push(s.tmp_0, "mailo");
    r0 = pxsim_Array__push(s.tmp_0, "mails");
    r0 = pxsim_Array__push(s.tmp_0, "maims");
    r0 = pxsim_Array__push(s.tmp_0, "mains");
    r0 = pxsim_Array__push(s.tmp_0, "maire");
    r0 = pxsim_Array__push(s.tmp_0, "mairs");
    r0 = pxsim_Array__push(s.tmp_0, "maise");
    r0 = pxsim_Array__push(s.tmp_0, "maist");
    r0 = pxsim_Array__push(s.tmp_0, "maize");
    r0 = pxsim_Array__push(s.tmp_0, "majas");
    r0 = pxsim_Array__push(s.tmp_0, "majat");
    r0 = pxsim_Array__push(s.tmp_0, "majoe");
    r0 = pxsim_Array__push(s.tmp_0, "major");
    r0 = pxsim_Array__push(s.tmp_0, "majos");
    r0 = pxsim_Array__push(s.tmp_0, "makaf");
    r0 = pxsim_Array__push(s.tmp_0, "makai");
    r0 = pxsim_Array__push(s.tmp_0, "makan");
    r0 = pxsim_Array__push(s.tmp_0, "makar");
    r0 = pxsim_Array__push(s.tmp_0, "makee");
    r0 = pxsim_Array__push(s.tmp_0, "maker");
    r0 = pxsim_Array__push(s.tmp_0, "makes");
    r0 = pxsim_Array__push(s.tmp_0, "makie");
    r0 = pxsim_Array__push(s.tmp_0, "makis");
    r0 = pxsim_Array__push(s.tmp_0, "makos");
    r0 = pxsim_Array__push(s.tmp_0, "malae");
    r0 = pxsim_Array__push(s.tmp_0, "malai");
    r0 = pxsim_Array__push(s.tmp_0, "malam");
    r0 = pxsim_Array__push(s.tmp_0, "malar");
    r0 = pxsim_Array__push(s.tmp_0, "malas");
    r0 = pxsim_Array__push(s.tmp_0, "malax");
    r0 = pxsim_Array__push(s.tmp_0, "maleo");
    r0 = pxsim_Array__push(s.tmp_0, "males");
    r0 = pxsim_Array__push(s.tmp_0, "malic");
    r0 = pxsim_Array__push(s.tmp_0, "malik");
    r0 = pxsim_Array__push(s.tmp_0, "malis");
    r0 = pxsim_Array__push(s.tmp_0, "malky");
    r0 = pxsim_Array__push(s.tmp_0, "malls");
    r0 = pxsim_Array__push(s.tmp_0, "malms");
    r0 = pxsim_Array__push(s.tmp_0, "malmy");
    r0 = pxsim_Array__push(s.tmp_0, "malts");
    r0 = pxsim_Array__push(s.tmp_0, "malty");
    r0 = pxsim_Array__push(s.tmp_0, "malus");
    r0 = pxsim_Array__push(s.tmp_0, "malva");
    r0 = pxsim_Array__push(s.tmp_0, "malwa");
    r0 = pxsim_Array__push(s.tmp_0, "mamak");
    r0 = pxsim_Array__push(s.tmp_0, "mamas");
    r0 = pxsim_Array__push(s.tmp_0, "mamba");
    r0 = pxsim_Array__push(s.tmp_0, "mambo");
    r0 = pxsim_Array__push(s.tmp_0, "mambu");
    r0 = pxsim_Array__push(s.tmp_0, "mamee");
    r0 = pxsim_Array__push(s.tmp_0, "mamey");
    r0 = pxsim_Array__push(s.tmp_0, "mamie");
    r0 = pxsim_Array__push(s.tmp_0, "mamil");
    r0 = pxsim_Array__push(s.tmp_0, "mamma");
    r0 = pxsim_Array__push(s.tmp_0, "mammy");
    r0 = pxsim_Array__push(s.tmp_0, "manas");
    r0 = pxsim_Array__push(s.tmp_0, "manat");
    r0 = pxsim_Array__push(s.tmp_0, "mandi");
    r0 = pxsim_Array__push(s.tmp_0, "mands");
    r0 = pxsim_Array__push(s.tmp_0, "mandy");
    r0 = pxsim_Array__push(s.tmp_0, "maneb");
    r0 = pxsim_Array__push(s.tmp_0, "maned");
    r0 = pxsim_Array__push(s.tmp_0, "maneh");
    r0 = pxsim_Array__push(s.tmp_0, "manes");
    r0 = pxsim_Array__push(s.tmp_0, "manet");
    r0 = pxsim_Array__push(s.tmp_0, "manga");
    r0 = pxsim_Array__push(s.tmp_0, "mange");
    r0 = pxsim_Array__push(s.tmp_0, "mangi");
    r0 = pxsim_Array__push(s.tmp_0, "mango");
    r0 = pxsim_Array__push(s.tmp_0, "mangs");
    r0 = pxsim_Array__push(s.tmp_0, "mangy");
    r0 = pxsim_Array__push(s.tmp_0, "mania");
    r0 = pxsim_Array__push(s.tmp_0, "manic");
    r0 = pxsim_Array__push(s.tmp_0, "manie");
    r0 = pxsim_Array__push(s.tmp_0, "manis");
    r0 = pxsim_Array__push(s.tmp_0, "manks");
    r0 = pxsim_Array__push(s.tmp_0, "manky");
    r0 = pxsim_Array__push(s.tmp_0, "manly");
    r0 = pxsim_Array__push(s.tmp_0, "manna");
    r0 = pxsim_Array__push(s.tmp_0, "manny");
    r0 = pxsim_Array__push(s.tmp_0, "manoa");
    r0 = pxsim_Array__push(s.tmp_0, "manor");
    r0 = pxsim_Array__push(s.tmp_0, "manos");
    r0 = pxsim_Array__push(s.tmp_0, "manse");
    r0 = pxsim_Array__push(s.tmp_0, "manso");
    r0 = pxsim_Array__push(s.tmp_0, "manta");
    r0 = pxsim_Array__push(s.tmp_0, "mante");
    r0 = pxsim_Array__push(s.tmp_0, "manto");
    r0 = pxsim_Array__push(s.tmp_0, "mants");
    r0 = pxsim_Array__push(s.tmp_0, "manty");
    r0 = pxsim_Array__push(s.tmp_0, "manul");
    r0 = pxsim_Array__push(s.tmp_0, "manus");
    r0 = pxsim_Array__push(s.tmp_0, "manzo");
    r0 = pxsim_Array__push(s.tmp_0, "mapau");
    r0 = pxsim_Array__push(s.tmp_0, "mapes");
    r0 = pxsim_Array__push(s.tmp_0, "maple");
    r0 = pxsim_Array__push(s.tmp_0, "mapou");
    r0 = pxsim_Array__push(s.tmp_0, "mappy");
    r0 = pxsim_Array__push(s.tmp_0, "maqam");
    r0 = pxsim_Array__push(s.tmp_0, "maqui");
    r0 = pxsim_Array__push(s.tmp_0, "marae");
    r0 = pxsim_Array__push(s.tmp_0, "marah");
    r0 = pxsim_Array__push(s.tmp_0, "maral");
    r0 = pxsim_Array__push(s.tmp_0, "maran");
    r0 = pxsim_Array__push(s.tmp_0, "maras");
    r0 = pxsim_Array__push(s.tmp_0, "maray");
    r0 = pxsim_Array__push(s.tmp_0, "march");
    r0 = pxsim_Array__push(s.tmp_0, "marcs");
    r0 = pxsim_Array__push(s.tmp_0, "mards");
    r0 = pxsim_Array__push(s.tmp_0, "mardy");
    r0 = pxsim_Array__push(s.tmp_0, "mares");
    r0 = pxsim_Array__push(s.tmp_0, "marga");
    r0 = pxsim_Array__push(s.tmp_0, "marge");
    r0 = pxsim_Array__push(s.tmp_0, "margo");
    r0 = pxsim_Array__push(s.tmp_0, "margs");
    r0 = pxsim_Array__push(s.tmp_0, "maria");
    r0 = pxsim_Array__push(s.tmp_0, "marid");
    r0 = pxsim_Array__push(s.tmp_0, "maril");
    r0 = pxsim_Array__push(s.tmp_0, "marka");
    r0 = pxsim_Array__push(s.tmp_0, "marks");
    r0 = pxsim_Array__push(s.tmp_0, "marle");
    r0 = pxsim_Array__push(s.tmp_0, "marls");
    r0 = pxsim_Array__push(s.tmp_0, "marly");
    r0 = pxsim_Array__push(s.tmp_0, "marma");
    r0 = pxsim_Array__push(s.tmp_0, "marms");
    r0 = pxsim_Array__push(s.tmp_0, "maron");
    r0 = pxsim_Array__push(s.tmp_0, "maror");
    r0 = pxsim_Array__push(s.tmp_0, "marra");
    r0 = pxsim_Array__push(s.tmp_0, "marri");
    r0 = pxsim_Array__push(s.tmp_0, "marry");
    r0 = pxsim_Array__push(s.tmp_0, "marse");
    r0 = pxsim_Array__push(s.tmp_0, "marsh");
    r0 = pxsim_Array__push(s.tmp_0, "marts");
    r0 = pxsim_Array__push(s.tmp_0, "marua");
    r0 = pxsim_Array__push(s.tmp_0, "marvy");
    r0 = pxsim_Array__push(s.tmp_0, "masas");
    r0 = pxsim_Array__push(s.tmp_0, "mased");
    r0 = pxsim_Array__push(s.tmp_0, "maser");
    r0 = pxsim_Array__push(s.tmp_0, "mases");
    r0 = pxsim_Array__push(s.tmp_0, "masha");
    r0 = pxsim_Array__push(s.tmp_0, "mashy");
    r0 = pxsim_Array__push(s.tmp_0, "masks");
    r0 = pxsim_Array__push(s.tmp_0, "mason");
    r0 = pxsim_Array__push(s.tmp_0, "massa");
    r0 = pxsim_Array__push(s.tmp_0, "masse");
    r0 = pxsim_Array__push(s.tmp_0, "massy");
    r0 = pxsim_Array__push(s.tmp_0, "masts");
    r0 = pxsim_Array__push(s.tmp_0, "masty");
    r0 = pxsim_Array__push(s.tmp_0, "masur");
    r0 = pxsim_Array__push(s.tmp_0, "masus");
    r0 = pxsim_Array__push(s.tmp_0, "masut");
    r0 = pxsim_Array__push(s.tmp_0, "matai");
    r0 = pxsim_Array__push(s.tmp_0, "match");
    r0 = pxsim_Array__push(s.tmp_0, "mated");
    r0 = pxsim_Array__push(s.tmp_0, "mater");
    r0 = pxsim_Array__push(s.tmp_0, "mates");
    r0 = pxsim_Array__push(s.tmp_0, "matey");
    r0 = pxsim_Array__push(s.tmp_0, "mathe");
    r0 = pxsim_Array__push(s.tmp_0, "maths");
    r0 = pxsim_Array__push(s.tmp_0, "matin");
    r0 = pxsim_Array__push(s.tmp_0, "matlo");
    r0 = pxsim_Array__push(s.tmp_0, "matra");
    r0 = pxsim_Array__push(s.tmp_0, "matsu");
    r0 = pxsim_Array__push(s.tmp_0, "matte");
    r0 = pxsim_Array__push(s.tmp_0, "matts");
    r0 = pxsim_Array__push(s.tmp_0, "matty");
    r0 = pxsim_Array__push(s.tmp_0, "matza");
    r0 = pxsim_Array__push(s.tmp_0, "matzo");
    r0 = pxsim_Array__push(s.tmp_0, "mauby");
    r0 = pxsim_Array__push(s.tmp_0, "mauds");
    r0 = pxsim_Array__push(s.tmp_0, "mauka");
    r0 = pxsim_Array__push(s.tmp_0, "maula");
    r0 = pxsim_Array__push(s.tmp_0, "mauls");
    r0 = pxsim_Array__push(s.tmp_0, "maums");
    r0 = pxsim_Array__push(s.tmp_0, "maumy");
    r0 = pxsim_Array__push(s.tmp_0, "maund");
    r0 = pxsim_Array__push(s.tmp_0, "maunt");
    r0 = pxsim_Array__push(s.tmp_0, "mauri");
    r0 = pxsim_Array__push(s.tmp_0, "mausy");
    r0 = pxsim_Array__push(s.tmp_0, "mauts");
    r0 = pxsim_Array__push(s.tmp_0, "mauve");
    r0 = pxsim_Array__push(s.tmp_0, "mauvy");
    r0 = pxsim_Array__push(s.tmp_0, "mauzy");
    r0 = pxsim_Array__push(s.tmp_0, "maven");
    r0 = pxsim_Array__push(s.tmp_0, "mavie");
    r0 = pxsim_Array__push(s.tmp_0, "mavin");
    r0 = pxsim_Array__push(s.tmp_0, "mavis");
    r0 = pxsim_Array__push(s.tmp_0, "mawed");
    r0 = pxsim_Array__push(s.tmp_0, "mawks");
    r0 = pxsim_Array__push(s.tmp_0, "mawky");
    r0 = pxsim_Array__push(s.tmp_0, "mawla");
    r0 = pxsim_Array__push(s.tmp_0, "mawns");
    r0 = pxsim_Array__push(s.tmp_0, "mawps");
    r0 = pxsim_Array__push(s.tmp_0, "mawrs");
    r0 = pxsim_Array__push(s.tmp_0, "maxed");
    r0 = pxsim_Array__push(s.tmp_0, "maxes");
    r0 = pxsim_Array__push(s.tmp_0, "maxim");
    r0 = pxsim_Array__push(s.tmp_0, "maxis");
    r0 = pxsim_Array__push(s.tmp_0, "mayan");
    r0 = pxsim_Array__push(s.tmp_0, "mayas");
    r0 = pxsim_Array__push(s.tmp_0, "maybe");
    r0 = pxsim_Array__push(s.tmp_0, "mayed");
    r0 = pxsim_Array__push(s.tmp_0, "mayor");
    r0 = pxsim_Array__push(s.tmp_0, "mayos");
    r0 = pxsim_Array__push(s.tmp_0, "mayst");
    r0 = pxsim_Array__push(s.tmp_0, "mazac");
    r0 = pxsim_Array__push(s.tmp_0, "mazak");
    r0 = pxsim_Array__push(s.tmp_0, "mazar");
    r0 = pxsim_Array__push(s.tmp_0, "mazas");
    r0 = pxsim_Array__push(s.tmp_0, "mazed");
    r0 = pxsim_Array__push(s.tmp_0, "mazel");
    r0 = pxsim_Array__push(s.tmp_0, "mazer");
    r0 = pxsim_Array__push(s.tmp_0, "mazes");
    r0 = pxsim_Array__push(s.tmp_0, "mazet");
    r0 = pxsim_Array__push(s.tmp_0, "mazey");
    r0 = pxsim_Array__push(s.tmp_0, "mazut");
    r0 = pxsim_Array__push(s.tmp_0, "mbari");
    r0 = pxsim_Array__push(s.tmp_0, "mbars");
    r0 = pxsim_Array__push(s.tmp_0, "mbila");
    r0 = pxsim_Array__push(s.tmp_0, "mbira");
    r0 = pxsim_Array__push(s.tmp_0, "mbret");
    r0 = pxsim_Array__push(s.tmp_0, "mbube");
    r0 = pxsim_Array__push(s.tmp_0, "mbuga");
    r0 = pxsim_Array__push(s.tmp_0, "meads");
    r0 = pxsim_Array__push(s.tmp_0, "meake");
    r0 = pxsim_Array__push(s.tmp_0, "meaks");
    r0 = pxsim_Array__push(s.tmp_0, "meals");
    r0 = pxsim_Array__push(s.tmp_0, "mealy");
    r0 = pxsim_Array__push(s.tmp_0, "meane");
    r0 = pxsim_Array__push(s.tmp_0, "means");
    r0 = pxsim_Array__push(s.tmp_0, "meant");
    r0 = pxsim_Array__push(s.tmp_0, "meany");
    r0 = pxsim_Array__push(s.tmp_0, "meare");
    r0 = pxsim_Array__push(s.tmp_0, "mease");
    r0 = pxsim_Array__push(s.tmp_0, "meath");
    r0 = pxsim_Array__push(s.tmp_0, "meats");
    r0 = pxsim_Array__push(s.tmp_0, "meaty");
    r0 = pxsim_Array__push(s.tmp_0, "mebbe");
    r0 = pxsim_Array__push(s.tmp_0, "mebos");
    r0 = pxsim_Array__push(s.tmp_0, "mecca");
    r0 = pxsim_Array__push(s.tmp_0, "mecha");
    r0 = pxsim_Array__push(s.tmp_0, "mechs");
    r0 = pxsim_Array__push(s.tmp_0, "mecks");
    r0 = pxsim_Array__push(s.tmp_0, "mecum");
    r0 = pxsim_Array__push(s.tmp_0, "medal");
    r0 = pxsim_Array__push(s.tmp_0, "media");
    r0 = pxsim_Array__push(s.tmp_0, "medic");
    r0 = pxsim_Array__push(s.tmp_0, "medii");
    r0 = pxsim_Array__push(s.tmp_0, "medin");
    r0 = pxsim_Array__push(s.tmp_0, "medle");
    r0 = pxsim_Array__push(s.tmp_0, "meech");
    r0 = pxsim_Array__push(s.tmp_0, "meeds");
    r0 = pxsim_Array__push(s.tmp_0, "meeja");
    r0 = pxsim_Array__push(s.tmp_0, "meeps");
    r0 = pxsim_Array__push(s.tmp_0, "meers");
    r0 = pxsim_Array__push(s.tmp_0, "meets");
    r0 = pxsim_Array__push(s.tmp_0, "meffs");
    r0 = pxsim_Array__push(s.tmp_0, "meids");
    r0 = pxsim_Array__push(s.tmp_0, "meiko");
    r0 = pxsim_Array__push(s.tmp_0, "meils");
    r0 = pxsim_Array__push(s.tmp_0, "meins");
    r0 = pxsim_Array__push(s.tmp_0, "meint");
    r0 = pxsim_Array__push(s.tmp_0, "meiny");
    r0 = pxsim_Array__push(s.tmp_0, "meism");
    r0 = pxsim_Array__push(s.tmp_0, "meith");
    r0 = pxsim_Array__push(s.tmp_0, "mekka");
    r0 = pxsim_Array__push(s.tmp_0, "melam");
    r0 = pxsim_Array__push(s.tmp_0, "melas");
    r0 = pxsim_Array__push(s.tmp_0, "melba");
    r0 = pxsim_Array__push(s.tmp_0, "melch");
    r0 = pxsim_Array__push(s.tmp_0, "melds");
    r0 = pxsim_Array__push(s.tmp_0, "melee");
    r0 = pxsim_Array__push(s.tmp_0, "meles");
    r0 = pxsim_Array__push(s.tmp_0, "melic");
    r0 = pxsim_Array__push(s.tmp_0, "melik");
    r0 = pxsim_Array__push(s.tmp_0, "mells");
    r0 = pxsim_Array__push(s.tmp_0, "meloe");
    r0 = pxsim_Array__push(s.tmp_0, "melon");
    r0 = pxsim_Array__push(s.tmp_0, "melos");
    r0 = pxsim_Array__push(s.tmp_0, "melts");
    r0 = pxsim_Array__push(s.tmp_0, "melty");
    r0 = pxsim_Array__push(s.tmp_0, "memes");
    r0 = pxsim_Array__push(s.tmp_0, "memic");
    r0 = pxsim_Array__push(s.tmp_0, "memos");
    r0 = pxsim_Array__push(s.tmp_0, "menad");
    r0 = pxsim_Array__push(s.tmp_0, "mence");
    r0 = pxsim_Array__push(s.tmp_0, "mends");
    r0 = pxsim_Array__push(s.tmp_0, "mened");
    r0 = pxsim_Array__push(s.tmp_0, "menes");
    r0 = pxsim_Array__push(s.tmp_0, "menge");
    r0 = pxsim_Array__push(s.tmp_0, "mengs");
    r0 = pxsim_Array__push(s.tmp_0, "menil");
    r0 = pxsim_Array__push(s.tmp_0, "mensa");
    r0 = pxsim_Array__push(s.tmp_0, "mense");
    r0 = pxsim_Array__push(s.tmp_0, "mensh");
    r0 = pxsim_Array__push(s.tmp_0, "menta");
    r0 = pxsim_Array__push(s.tmp_0, "mento");
    r0 = pxsim_Array__push(s.tmp_0, "ments");
    r0 = pxsim_Array__push(s.tmp_0, "menus");
    r0 = pxsim_Array__push(s.tmp_0, "meous");
    r0 = pxsim_Array__push(s.tmp_0, "meows");
    r0 = pxsim_Array__push(s.tmp_0, "merch");
    r0 = pxsim_Array__push(s.tmp_0, "mercs");
    r0 = pxsim_Array__push(s.tmp_0, "mercy");
    r0 = pxsim_Array__push(s.tmp_0, "merde");
    r0 = pxsim_Array__push(s.tmp_0, "merds");
    r0 = pxsim_Array__push(s.tmp_0, "mered");
    r0 = pxsim_Array__push(s.tmp_0, "merel");
    r0 = pxsim_Array__push(s.tmp_0, "merer");
    r0 = pxsim_Array__push(s.tmp_0, "meres");
    r0 = pxsim_Array__push(s.tmp_0, "merge");
    r0 = pxsim_Array__push(s.tmp_0, "meril");
    r0 = pxsim_Array__push(s.tmp_0, "meris");
    r0 = pxsim_Array__push(s.tmp_0, "merit");
    r0 = pxsim_Array__push(s.tmp_0, "merks");
    r0 = pxsim_Array__push(s.tmp_0, "merle");
    r0 = pxsim_Array__push(s.tmp_0, "merls");
    r0 = pxsim_Array__push(s.tmp_0, "merry");
    r0 = pxsim_Array__push(s.tmp_0, "merse");
    r0 = pxsim_Array__push(s.tmp_0, "mersk");
    r0 = pxsim_Array__push(s.tmp_0, "mesad");
    r0 = pxsim_Array__push(s.tmp_0, "mesal");
    r0 = pxsim_Array__push(s.tmp_0, "mesas");
    r0 = pxsim_Array__push(s.tmp_0, "mesca");
    r0 = pxsim_Array__push(s.tmp_0, "mesel");
    r0 = pxsim_Array__push(s.tmp_0, "mesem");
    r0 = pxsim_Array__push(s.tmp_0, "meses");
    r0 = pxsim_Array__push(s.tmp_0, "meshy");
    r0 = pxsim_Array__push(s.tmp_0, "mesia");
    r0 = pxsim_Array__push(s.tmp_0, "mesic");
    r0 = pxsim_Array__push(s.tmp_0, "mesne");
    r0 = pxsim_Array__push(s.tmp_0, "meson");
    r0 = pxsim_Array__push(s.tmp_0, "messy");
    r0 = pxsim_Array__push(s.tmp_0, "mesto");
    r0 = pxsim_Array__push(s.tmp_0, "mesyl");
    r0 = pxsim_Array__push(s.tmp_0, "metal");
    r0 = pxsim_Array__push(s.tmp_0, "metas");
    r0 = pxsim_Array__push(s.tmp_0, "meted");
    r0 = pxsim_Array__push(s.tmp_0, "meteg");
    r0 = pxsim_Array__push(s.tmp_0, "metel");
    r0 = pxsim_Array__push(s.tmp_0, "meter");
    r0 = pxsim_Array__push(s.tmp_0, "metes");
    r0 = pxsim_Array__push(s.tmp_0, "methi");
    r0 = pxsim_Array__push(s.tmp_0, "metho");
    r0 = pxsim_Array__push(s.tmp_0, "meths");
    r0 = pxsim_Array__push(s.tmp_0, "methy");
    r0 = pxsim_Array__push(s.tmp_0, "metic");
    r0 = pxsim_Array__push(s.tmp_0, "metif");
    r0 = pxsim_Array__push(s.tmp_0, "metis");
    r0 = pxsim_Array__push(s.tmp_0, "metol");
    r0 = pxsim_Array__push(s.tmp_0, "metre");
    r0 = pxsim_Array__push(s.tmp_0, "metro");
    r0 = pxsim_Array__push(s.tmp_0, "metta");
    r0 = pxsim_Array__push(s.tmp_0, "meums");
    r0 = pxsim_Array__push(s.tmp_0, "meuse");
    r0 = pxsim_Array__push(s.tmp_0, "meved");
    r0 = pxsim_Array__push(s.tmp_0, "meves");
    r0 = pxsim_Array__push(s.tmp_0, "mewed");
    r0 = pxsim_Array__push(s.tmp_0, "mewls");
    r0 = pxsim_Array__push(s.tmp_0, "meynt");
    r0 = pxsim_Array__push(s.tmp_0, "mezes");
    r0 = pxsim_Array__push(s.tmp_0, "mezza");
    r0 = pxsim_Array__push(s.tmp_0, "mezze");
    r0 = pxsim_Array__push(s.tmp_0, "mezzo");
    r0 = pxsim_Array__push(s.tmp_0, "mgals");
    r0 = pxsim_Array__push(s.tmp_0, "mhorr");
    r0 = pxsim_Array__push(s.tmp_0, "miais");
    r0 = pxsim_Array__push(s.tmp_0, "miaou");
    r0 = pxsim_Array__push(s.tmp_0, "miaow");
    r0 = pxsim_Array__push(s.tmp_0, "miasm");
    r0 = pxsim_Array__push(s.tmp_0, "miaul");
    r0 = pxsim_Array__push(s.tmp_0, "micas");
    r0 = pxsim_Array__push(s.tmp_0, "miche");
    r0 = pxsim_Array__push(s.tmp_0, "michi");
    r0 = pxsim_Array__push(s.tmp_0, "micht");
    r0 = pxsim_Array__push(s.tmp_0, "micks");
    r0 = pxsim_Array__push(s.tmp_0, "micky");
    r0 = pxsim_Array__push(s.tmp_0, "micos");
    r0 = pxsim_Array__push(s.tmp_0, "micra");
    r0 = pxsim_Array__push(s.tmp_0, "micro");
    r0 = pxsim_Array__push(s.tmp_0, "middy");
    r0 = pxsim_Array__push(s.tmp_0, "midge");
    r0 = pxsim_Array__push(s.tmp_0, "midgy");
    r0 = pxsim_Array__push(s.tmp_0, "midis");
    r0 = pxsim_Array__push(s.tmp_0, "midst");
    r0 = pxsim_Array__push(s.tmp_0, "miens");
    r0 = pxsim_Array__push(s.tmp_0, "mieux");
    r0 = pxsim_Array__push(s.tmp_0, "mieve");
    r0 = pxsim_Array__push(s.tmp_0, "miffs");
    r0 = pxsim_Array__push(s.tmp_0, "miffy");
    r0 = pxsim_Array__push(s.tmp_0, "mifty");
    r0 = pxsim_Array__push(s.tmp_0, "miggs");
    r0 = pxsim_Array__push(s.tmp_0, "might");
    r0 = pxsim_Array__push(s.tmp_0, "migma");
    r0 = pxsim_Array__push(s.tmp_0, "migod");
    r0 = pxsim_Array__push(s.tmp_0, "mihas");
    r0 = pxsim_Array__push(s.tmp_0, "mihis");
    r0 = pxsim_Array__push(s.tmp_0, "mikan");
    r0 = pxsim_Array__push(s.tmp_0, "miked");
    r0 = pxsim_Array__push(s.tmp_0, "mikes");
    r0 = pxsim_Array__push(s.tmp_0, "mikos");
    r0 = pxsim_Array__push(s.tmp_0, "mikra");
    r0 = pxsim_Array__push(s.tmp_0, "mikva");
    r0 = pxsim_Array__push(s.tmp_0, "milch");
    r0 = pxsim_Array__push(s.tmp_0, "milds");
    r0 = pxsim_Array__push(s.tmp_0, "miler");
    r0 = pxsim_Array__push(s.tmp_0, "miles");
    r0 = pxsim_Array__push(s.tmp_0, "milfs");
    r0 = pxsim_Array__push(s.tmp_0, "milia");
    r0 = pxsim_Array__push(s.tmp_0, "milko");
    r0 = pxsim_Array__push(s.tmp_0, "milks");
    r0 = pxsim_Array__push(s.tmp_0, "milky");
    r0 = pxsim_Array__push(s.tmp_0, "mille");
    r0 = pxsim_Array__push(s.tmp_0, "mills");
    r0 = pxsim_Array__push(s.tmp_0, "milly");
    r0 = pxsim_Array__push(s.tmp_0, "milor");
    r0 = pxsim_Array__push(s.tmp_0, "milos");
    r0 = pxsim_Array__push(s.tmp_0, "milpa");
    r0 = pxsim_Array__push(s.tmp_0, "milts");
    r0 = pxsim_Array__push(s.tmp_0, "milty");
    r0 = pxsim_Array__push(s.tmp_0, "miltz");
    r0 = pxsim_Array__push(s.tmp_0, "mimed");
    r0 = pxsim_Array__push(s.tmp_0, "mimeo");
    r0 = pxsim_Array__push(s.tmp_0, "mimer");
    r0 = pxsim_Array__push(s.tmp_0, "mimes");
    r0 = pxsim_Array__push(s.tmp_0, "mimic");
    r0 = pxsim_Array__push(s.tmp_0, "mimis");
    r0 = pxsim_Array__push(s.tmp_0, "mimsy");
    r0 = pxsim_Array__push(s.tmp_0, "minae");
    r0 = pxsim_Array__push(s.tmp_0, "minar");
    r0 = pxsim_Array__push(s.tmp_0, "minas");
    r0 = pxsim_Array__push(s.tmp_0, "mince");
    r0 = pxsim_Array__push(s.tmp_0, "mincy");
    r0 = pxsim_Array__push(s.tmp_0, "mindi");
    r0 = pxsim_Array__push(s.tmp_0, "minds");
    r0 = pxsim_Array__push(s.tmp_0, "mined");
    r0 = pxsim_Array__push(s.tmp_0, "miner");
    r0 = pxsim_Array__push(s.tmp_0, "mines");
    r0 = pxsim_Array__push(s.tmp_0, "minge");
    r0 = pxsim_Array__push(s.tmp_0, "mingi");
    r0 = pxsim_Array__push(s.tmp_0, "mings");
    r0 = pxsim_Array__push(s.tmp_0, "mingy");
    r0 = pxsim_Array__push(s.tmp_0, "minim");
    r0 = pxsim_Array__push(s.tmp_0, "minis");
    r0 = pxsim_Array__push(s.tmp_0, "minke");
    r0 = pxsim_Array__push(s.tmp_0, "minks");
    r0 = pxsim_Array__push(s.tmp_0, "minny");
    r0 = pxsim_Array__push(s.tmp_0, "minor");
    r0 = pxsim_Array__push(s.tmp_0, "minos");
    r0 = pxsim_Array__push(s.tmp_0, "minse");
    r0 = pxsim_Array__push(s.tmp_0, "mints");
    r0 = pxsim_Array__push(s.tmp_0, "minty");
    r0 = pxsim_Array__push(s.tmp_0, "minus");
    r0 = pxsim_Array__push(s.tmp_0, "minxy");
    r0 = pxsim_Array__push(s.tmp_0, "miraa");
    r0 = pxsim_Array__push(s.tmp_0, "mirah");
    r0 = pxsim_Array__push(s.tmp_0, "mirch");
    r0 = pxsim_Array__push(s.tmp_0, "mired");
    r0 = pxsim_Array__push(s.tmp_0, "mires");
    r0 = pxsim_Array__push(s.tmp_0, "mirex");
    r0 = pxsim_Array__push(s.tmp_0, "mirid");
    r0 = pxsim_Array__push(s.tmp_0, "mirin");
    r0 = pxsim_Array__push(s.tmp_0, "mirkn");
    r0 = pxsim_Array__push(s.tmp_0, "mirks");
    r0 = pxsim_Array__push(s.tmp_0, "mirky");
    r0 = pxsim_Array__push(s.tmp_0, "mirls");
    r0 = pxsim_Array__push(s.tmp_0, "mirly");
    r0 = pxsim_Array__push(s.tmp_0, "miros");
    r0 = pxsim_Array__push(s.tmp_0, "mirrl");
    r0 = pxsim_Array__push(s.tmp_0, "mirrs");
    r0 = pxsim_Array__push(s.tmp_0, "mirth");
    r0 = pxsim_Array__push(s.tmp_0, "mirvs");
    r0 = pxsim_Array__push(s.tmp_0, "mirza");
    r0 = pxsim_Array__push(s.tmp_0, "misal");
    r0 = pxsim_Array__push(s.tmp_0, "misch");
    r0 = pxsim_Array__push(s.tmp_0, "misdo");
    r0 = pxsim_Array__push(s.tmp_0, "miser");
    r0 = pxsim_Array__push(s.tmp_0, "mises");
    r0 = pxsim_Array__push(s.tmp_0, "misgo");
    r0 = pxsim_Array__push(s.tmp_0, "misky");
    r0 = pxsim_Array__push(s.tmp_0, "misls");
    r0 = pxsim_Array__push(s.tmp_0, "misos");
    r0 = pxsim_Array__push(s.tmp_0, "missa");
    r0 = pxsim_Array__push(s.tmp_0, "missy");
    r0 = pxsim_Array__push(s.tmp_0, "misto");
    r0 = pxsim_Array__push(s.tmp_0, "mists");
    r0 = pxsim_Array__push(s.tmp_0, "misty");
    r0 = pxsim_Array__push(s.tmp_0, "mitas");
    r0 = pxsim_Array__push(s.tmp_0, "mitch");
    r0 = pxsim_Array__push(s.tmp_0, "miter");
    r0 = pxsim_Array__push(s.tmp_0, "mites");
    r0 = pxsim_Array__push(s.tmp_0, "mitey");
    r0 = pxsim_Array__push(s.tmp_0, "mitie");
    r0 = pxsim_Array__push(s.tmp_0, "mitis");
    r0 = pxsim_Array__push(s.tmp_0, "mitre");
    r0 = pxsim_Array__push(s.tmp_0, "mitry");
    r0 = pxsim_Array__push(s.tmp_0, "mitta");
    r0 = pxsim_Array__push(s.tmp_0, "mitts");
    r0 = pxsim_Array__push(s.tmp_0, "mivey");
    r0 = pxsim_Array__push(s.tmp_0, "mivvy");
    r0 = pxsim_Array__push(s.tmp_0, "mixed");
    r0 = pxsim_Array__push(s.tmp_0, "mixen");
    r0 = pxsim_Array__push(s.tmp_0, "mixer");
    r0 = pxsim_Array__push(s.tmp_0, "mixes");
    r0 = pxsim_Array__push(s.tmp_0, "mixie");
    r0 = pxsim_Array__push(s.tmp_0, "mixis");
    r0 = pxsim_Array__push(s.tmp_0, "mixte");
    r0 = pxsim_Array__push(s.tmp_0, "mixup");
    r0 = pxsim_Array__push(s.tmp_0, "miyas");
    r0 = pxsim_Array__push(s.tmp_0, "mizen");
    r0 = pxsim_Array__push(s.tmp_0, "mizes");
    r0 = pxsim_Array__push(s.tmp_0, "mizzy");
    r0 = pxsim_Array__push(s.tmp_0, "mmkay");
    r0 = pxsim_Array__push(s.tmp_0, "mneme");
    r0 = pxsim_Array__push(s.tmp_0, "moais");
    r0 = pxsim_Array__push(s.tmp_0, "moaky");
    r0 = pxsim_Array__push(s.tmp_0, "moals");
    r0 = pxsim_Array__push(s.tmp_0, "moana");
    r0 = pxsim_Array__push(s.tmp_0, "moans");
    r0 = pxsim_Array__push(s.tmp_0, "moany");
    r0 = pxsim_Array__push(s.tmp_0, "moars");
    r0 = pxsim_Array__push(s.tmp_0, "moats");
    r0 = pxsim_Array__push(s.tmp_0, "mobby");
    r0 = pxsim_Array__push(s.tmp_0, "mobed");
    r0 = pxsim_Array__push(s.tmp_0, "mobee");
    r0 = pxsim_Array__push(s.tmp_0, "mobes");
    r0 = pxsim_Array__push(s.tmp_0, "mobey");
    r0 = pxsim_Array__push(s.tmp_0, "mobie");
    r0 = pxsim_Array__push(s.tmp_0, "moble");
    r0 = pxsim_Array__push(s.tmp_0, "mobos");
    r0 = pxsim_Array__push(s.tmp_0, "mocap");
    r0 = pxsim_Array__push(s.tmp_0, "mocha");
    r0 = pxsim_Array__push(s.tmp_0, "mochi");
    r0 = pxsim_Array__push(s.tmp_0, "mochs");
    r0 = pxsim_Array__push(s.tmp_0, "mochy");
    r0 = pxsim_Array__push(s.tmp_0, "mocks");
    r0 = pxsim_Array__push(s.tmp_0, "mocky");
    r0 = pxsim_Array__push(s.tmp_0, "mocos");
    r0 = pxsim_Array__push(s.tmp_0, "mocus");
    r0 = pxsim_Array__push(s.tmp_0, "modal");
    r0 = pxsim_Array__push(s.tmp_0, "model");
    r0 = pxsim_Array__push(s.tmp_0, "modem");
    r0 = pxsim_Array__push(s.tmp_0, "moder");
    r0 = pxsim_Array__push(s.tmp_0, "modes");
    r0 = pxsim_Array__push(s.tmp_0, "modge");
    r0 = pxsim_Array__push(s.tmp_0, "modii");
    r0 = pxsim_Array__push(s.tmp_0, "modin");
    r0 = pxsim_Array__push(s.tmp_0, "modoc");
    r0 = pxsim_Array__push(s.tmp_0, "modom");
    r0 = pxsim_Array__push(s.tmp_0, "modus");
    r0 = pxsim_Array__push(s.tmp_0, "moeni");
    r0 = pxsim_Array__push(s.tmp_0, "moers");
    r0 = pxsim_Array__push(s.tmp_0, "mofos");
    r0 = pxsim_Array__push(s.tmp_0, "mogar");
    r0 = pxsim_Array__push(s.tmp_0, "mogas");
    r0 = pxsim_Array__push(s.tmp_0, "moggy");
    r0 = pxsim_Array__push(s.tmp_0, "mogos");
    r0 = pxsim_Array__push(s.tmp_0, "mogra");
    r0 = pxsim_Array__push(s.tmp_0, "mogue");
    r0 = pxsim_Array__push(s.tmp_0, "mogul");
    r0 = pxsim_Array__push(s.tmp_0, "mohar");
    r0 = pxsim_Array__push(s.tmp_0, "mohel");
    r0 = pxsim_Array__push(s.tmp_0, "mohos");
    r0 = pxsim_Array__push(s.tmp_0, "mohrs");
    r0 = pxsim_Array__push(s.tmp_0, "mohua");
    r0 = pxsim_Array__push(s.tmp_0, "mohur");
    r0 = pxsim_Array__push(s.tmp_0, "moile");
    r0 = pxsim_Array__push(s.tmp_0, "moils");
    r0 = pxsim_Array__push(s.tmp_0, "moira");
    r0 = pxsim_Array__push(s.tmp_0, "moire");
    r0 = pxsim_Array__push(s.tmp_0, "moist");
    r0 = pxsim_Array__push(s.tmp_0, "moits");
    r0 = pxsim_Array__push(s.tmp_0, "moity");
    r0 = pxsim_Array__push(s.tmp_0, "mojos");
    r0 = pxsim_Array__push(s.tmp_0, "moker");
    r0 = pxsim_Array__push(s.tmp_0, "mokes");
    r0 = pxsim_Array__push(s.tmp_0, "mokey");
    r0 = pxsim_Array__push(s.tmp_0, "mokis");
    r0 = pxsim_Array__push(s.tmp_0, "mokky");
    r0 = pxsim_Array__push(s.tmp_0, "mokos");
    r0 = pxsim_Array__push(s.tmp_0, "mokus");
    r0 = pxsim_Array__push(s.tmp_0, "molal");
    r0 = pxsim_Array__push(s.tmp_0, "molar");
    r0 = pxsim_Array__push(s.tmp_0, "molas");
    r0 = pxsim_Array__push(s.tmp_0, "molds");
    r0 = pxsim_Array__push(s.tmp_0, "moldy");
    r0 = pxsim_Array__push(s.tmp_0, "moled");
    r0 = pxsim_Array__push(s.tmp_0, "moler");
    r0 = pxsim_Array__push(s.tmp_0, "moles");
    r0 = pxsim_Array__push(s.tmp_0, "moley");
    r0 = pxsim_Array__push(s.tmp_0, "molie");
    r0 = pxsim_Array__push(s.tmp_0, "molla");
    r0 = pxsim_Array__push(s.tmp_0, "molle");
    r0 = pxsim_Array__push(s.tmp_0, "mollo");
    r0 = pxsim_Array__push(s.tmp_0, "molls");
    r0 = pxsim_Array__push(s.tmp_0, "molly");
    r0 = pxsim_Array__push(s.tmp_0, "moloi");
    r0 = pxsim_Array__push(s.tmp_0, "molos");
    r0 = pxsim_Array__push(s.tmp_0, "molto");
    r0 = pxsim_Array__push(s.tmp_0, "molts");
    r0 = pxsim_Array__push(s.tmp_0, "molue");
    r0 = pxsim_Array__push(s.tmp_0, "molvi");
    r0 = pxsim_Array__push(s.tmp_0, "molys");
    r0 = pxsim_Array__push(s.tmp_0, "momes");
    r0 = pxsim_Array__push(s.tmp_0, "momie");
    r0 = pxsim_Array__push(s.tmp_0, "momma");
    r0 = pxsim_Array__push(s.tmp_0, "momme");
    r0 = pxsim_Array__push(s.tmp_0, "mommy");
    r0 = pxsim_Array__push(s.tmp_0, "momos");
    r0 = pxsim_Array__push(s.tmp_0, "mompe");
    r0 = pxsim_Array__push(s.tmp_0, "momus");
    r0 = pxsim_Array__push(s.tmp_0, "monad");
    r0 = pxsim_Array__push(s.tmp_0, "monal");
    r0 = pxsim_Array__push(s.tmp_0, "monas");
    r0 = pxsim_Array__push(s.tmp_0, "monde");
    r0 = pxsim_Array__push(s.tmp_0, "mondo");
    r0 = pxsim_Array__push(s.tmp_0, "moner");
    r0 = pxsim_Array__push(s.tmp_0, "money");
    r0 = pxsim_Array__push(s.tmp_0, "mongo");
    r0 = pxsim_Array__push(s.tmp_0, "mongs");
    r0 = pxsim_Array__push(s.tmp_0, "monic");
    r0 = pxsim_Array__push(s.tmp_0, "monie");
    r0 = pxsim_Array__push(s.tmp_0, "monks");
    r0 = pxsim_Array__push(s.tmp_0, "monos");
    r0 = pxsim_Array__push(s.tmp_0, "monpe");
    r0 = pxsim_Array__push(s.tmp_0, "monte");
    r0 = pxsim_Array__push(s.tmp_0, "month");
    r0 = pxsim_Array__push(s.tmp_0, "monty");
    r0 = pxsim_Array__push(s.tmp_0, "moobs");
    r0 = pxsim_Array__push(s.tmp_0, "mooch");
    r0 = pxsim_Array__push(s.tmp_0, "moods");
    r0 = pxsim_Array__push(s.tmp_0, "moody");
    r0 = pxsim_Array__push(s.tmp_0, "mooed");
    r0 = pxsim_Array__push(s.tmp_0, "mooey");
    r0 = pxsim_Array__push(s.tmp_0, "mooks");
    r0 = pxsim_Array__push(s.tmp_0, "moola");
    r0 = pxsim_Array__push(s.tmp_0, "mooli");
    r0 = pxsim_Array__push(s.tmp_0, "mools");
    r0 = pxsim_Array__push(s.tmp_0, "mooly");
    r0 = pxsim_Array__push(s.tmp_0, "moong");
    r0 = pxsim_Array__push(s.tmp_0, "mooni");
    r0 = pxsim_Array__push(s.tmp_0, "moons");
    r0 = pxsim_Array__push(s.tmp_0, "moony");
    r0 = pxsim_Array__push(s.tmp_0, "moops");
    r0 = pxsim_Array__push(s.tmp_0, "moors");
    r0 = pxsim_Array__push(s.tmp_0, "moory");
    r0 = pxsim_Array__push(s.tmp_0, "moose");
    r0 = pxsim_Array__push(s.tmp_0, "mooth");
    r0 = pxsim_Array__push(s.tmp_0, "moots");
    r0 = pxsim_Array__push(s.tmp_0, "moove");
    r0 = pxsim_Array__push(s.tmp_0, "moped");
    r0 = pxsim_Array__push(s.tmp_0, "moper");
    r0 = pxsim_Array__push(s.tmp_0, "mopes");
    r0 = pxsim_Array__push(s.tmp_0, "mopey");
    r0 = pxsim_Array__push(s.tmp_0, "moppy");
    r0 = pxsim_Array__push(s.tmp_0, "mopsy");
    r0 = pxsim_Array__push(s.tmp_0, "mopus");
    r0 = pxsim_Array__push(s.tmp_0, "morae");
    r0 = pxsim_Array__push(s.tmp_0, "morah");
    r0 = pxsim_Array__push(s.tmp_0, "moral");
    r0 = pxsim_Array__push(s.tmp_0, "moran");
    r0 = pxsim_Array__push(s.tmp_0, "moras");
    r0 = pxsim_Array__push(s.tmp_0, "morat");
    r0 = pxsim_Array__push(s.tmp_0, "moray");
    r0 = pxsim_Array__push(s.tmp_0, "moree");
    r0 = pxsim_Array__push(s.tmp_0, "morel");
    r0 = pxsim_Array__push(s.tmp_0, "mores");
    r0 = pxsim_Array__push(s.tmp_0, "morgy");
    r0 = pxsim_Array__push(s.tmp_0, "moria");
    r0 = pxsim_Array__push(s.tmp_0, "morin");
    r0 = pxsim_Array__push(s.tmp_0, "mormo");
    r0 = pxsim_Array__push(s.tmp_0, "morna");
    r0 = pxsim_Array__push(s.tmp_0, "morne");
    r0 = pxsim_Array__push(s.tmp_0, "morns");
    r0 = pxsim_Array__push(s.tmp_0, "moron");
    r0 = pxsim_Array__push(s.tmp_0, "moror");
    r0 = pxsim_Array__push(s.tmp_0, "morph");
    r0 = pxsim_Array__push(s.tmp_0, "morra");
    r0 = pxsim_Array__push(s.tmp_0, "morro");
    r0 = pxsim_Array__push(s.tmp_0, "morse");
    r0 = pxsim_Array__push(s.tmp_0, "morts");
    r0 = pxsim_Array__push(s.tmp_0, "moruk");
    r0 = pxsim_Array__push(s.tmp_0, "mosed");
    r0 = pxsim_Array__push(s.tmp_0, "moses");
    r0 = pxsim_Array__push(s.tmp_0, "mosey");
    r0 = pxsim_Array__push(s.tmp_0, "mosks");
    r0 = pxsim_Array__push(s.tmp_0, "mosso");
    r0 = pxsim_Array__push(s.tmp_0, "mossy");
    r0 = pxsim_Array__push(s.tmp_0, "moste");
    r0 = pxsim_Array__push(s.tmp_0, "mosto");
    r0 = pxsim_Array__push(s.tmp_0, "mosts");
    r0 = pxsim_Array__push(s.tmp_0, "moted");
    r0 = pxsim_Array__push(s.tmp_0, "motel");
    r0 = pxsim_Array__push(s.tmp_0, "moten");
    r0 = pxsim_Array__push(s.tmp_0, "motes");
    r0 = pxsim_Array__push(s.tmp_0, "motet");
    r0 = pxsim_Array__push(s.tmp_0, "motey");
    r0 = pxsim_Array__push(s.tmp_0, "moths");
    r0 = pxsim_Array__push(s.tmp_0, "mothy");
    r0 = pxsim_Array__push(s.tmp_0, "motif");
    r0 = pxsim_Array__push(s.tmp_0, "motis");
    r0 = pxsim_Array__push(s.tmp_0, "moton");
    r0 = pxsim_Array__push(s.tmp_0, "motor");
    r0 = pxsim_Array__push(s.tmp_0, "motte");
    r0 = pxsim_Array__push(s.tmp_0, "motto");
    r0 = pxsim_Array__push(s.tmp_0, "motts");
    r0 = pxsim_Array__push(s.tmp_0, "motty");
    r0 = pxsim_Array__push(s.tmp_0, "motus");
    r0 = pxsim_Array__push(s.tmp_0, "motza");
    r0 = pxsim_Array__push(s.tmp_0, "mouch");
    r0 = pxsim_Array__push(s.tmp_0, "moues");
    r0 = pxsim_Array__push(s.tmp_0, "moufs");
    r0 = pxsim_Array__push(s.tmp_0, "mould");
    r0 = pxsim_Array__push(s.tmp_0, "moule");
    r0 = pxsim_Array__push(s.tmp_0, "mouls");
    r0 = pxsim_Array__push(s.tmp_0, "moult");
    r0 = pxsim_Array__push(s.tmp_0, "mouly");
    r0 = pxsim_Array__push(s.tmp_0, "mound");
    r0 = pxsim_Array__push(s.tmp_0, "mount");
    r0 = pxsim_Array__push(s.tmp_0, "moups");
    r0 = pxsim_Array__push(s.tmp_0, "mourn");
    r0 = pxsim_Array__push(s.tmp_0, "mouse");
    r0 = pxsim_Array__push(s.tmp_0, "moust");
    r0 = pxsim_Array__push(s.tmp_0, "mousy");
    r0 = pxsim_Array__push(s.tmp_0, "mouth");
    r0 = pxsim_Array__push(s.tmp_0, "moved");
    r0 = pxsim_Array__push(s.tmp_0, "mover");
    r0 = pxsim_Array__push(s.tmp_0, "moves");
    r0 = pxsim_Array__push(s.tmp_0, "movie");
    r0 = pxsim_Array__push(s.tmp_0, "mowas");
    r0 = pxsim_Array__push(s.tmp_0, "mowed");
    r0 = pxsim_Array__push(s.tmp_0, "mower");
    r0 = pxsim_Array__push(s.tmp_0, "mowie");
    r0 = pxsim_Array__push(s.tmp_0, "mowra");
    r0 = pxsim_Array__push(s.tmp_0, "moxas");
    r0 = pxsim_Array__push(s.tmp_0, "moxie");
    r0 = pxsim_Array__push(s.tmp_0, "moyas");
    r0 = pxsim_Array__push(s.tmp_0, "moyle");
    r0 = pxsim_Array__push(s.tmp_0, "moyls");
    r0 = pxsim_Array__push(s.tmp_0, "mozed");
    r0 = pxsim_Array__push(s.tmp_0, "mozes");
    r0 = pxsim_Array__push(s.tmp_0, "mozos");
    r0 = pxsim_Array__push(s.tmp_0, "mpret");
    r0 = pxsim_Array__push(s.tmp_0, "mrads");
    r0 = pxsim_Array__push(s.tmp_0, "msasa");
    r0 = pxsim_Array__push(s.tmp_0, "mtepe");
    r0 = pxsim_Array__push(s.tmp_0, "mucho");
    r0 = pxsim_Array__push(s.tmp_0, "mucic");
    r0 = pxsim_Array__push(s.tmp_0, "mucid");
    r0 = pxsim_Array__push(s.tmp_0, "mucin");
    r0 = pxsim_Array__push(s.tmp_0, "mucko");
    r0 = pxsim_Array__push(s.tmp_0, "mucks");
    r0 = pxsim_Array__push(s.tmp_0, "mucky");
    r0 = pxsim_Array__push(s.tmp_0, "mucor");
    r0 = pxsim_Array__push(s.tmp_0, "mucro");
    r0 = pxsim_Array__push(s.tmp_0, "mucus");
    r0 = pxsim_Array__push(s.tmp_0, "mudar");
    r0 = pxsim_Array__push(s.tmp_0, "muddy");
    r0 = pxsim_Array__push(s.tmp_0, "mudge");
    r0 = pxsim_Array__push(s.tmp_0, "mudif");
    r0 = pxsim_Array__push(s.tmp_0, "mudim");
    r0 = pxsim_Array__push(s.tmp_0, "mudir");
    r0 = pxsim_Array__push(s.tmp_0, "mudra");
    r0 = pxsim_Array__push(s.tmp_0, "muffs");
    r0 = pxsim_Array__push(s.tmp_0, "muffy");
    r0 = pxsim_Array__push(s.tmp_0, "mufti");
    r0 = pxsim_Array__push(s.tmp_0, "mugga");
    r0 = pxsim_Array__push(s.tmp_0, "muggs");
    r0 = pxsim_Array__push(s.tmp_0, "muggy");
    r0 = pxsim_Array__push(s.tmp_0, "mugho");
    r0 = pxsim_Array__push(s.tmp_0, "mugil");
    r0 = pxsim_Array__push(s.tmp_0, "mugos");
    r0 = pxsim_Array__push(s.tmp_0, "muhly");
    r0 = pxsim_Array__push(s.tmp_0, "muids");
    r0 = pxsim_Array__push(s.tmp_0, "muils");
    r0 = pxsim_Array__push(s.tmp_0, "muirs");
    r0 = pxsim_Array__push(s.tmp_0, "muiry");
    r0 = pxsim_Array__push(s.tmp_0, "muist");
    r0 = pxsim_Array__push(s.tmp_0, "mujik");
    r0 = pxsim_Array__push(s.tmp_0, "mukim");
    r0 = pxsim_Array__push(s.tmp_0, "mukti");
    r0 = pxsim_Array__push(s.tmp_0, "mulai");
    r0 = pxsim_Array__push(s.tmp_0, "mulch");
    r0 = pxsim_Array__push(s.tmp_0, "mulct");
    r0 = pxsim_Array__push(s.tmp_0, "muled");
    r0 = pxsim_Array__push(s.tmp_0, "mules");
    r0 = pxsim_Array__push(s.tmp_0, "muley");
    r0 = pxsim_Array__push(s.tmp_0, "mulga");
    r0 = pxsim_Array__push(s.tmp_0, "mulie");
    r0 = pxsim_Array__push(s.tmp_0, "mulla");
    r0 = pxsim_Array__push(s.tmp_0, "mulls");
    r0 = pxsim_Array__push(s.tmp_0, "mulse");
    r0 = pxsim_Array__push(s.tmp_0, "mulsh");
    r0 = pxsim_Array__push(s.tmp_0, "mumbo");
    r0 = pxsim_Array__push(s.tmp_0, "mumms");
    r0 = pxsim_Array__push(s.tmp_0, "mummy");
    r0 = pxsim_Array__push(s.tmp_0, "mumph");
    r0 = pxsim_Array__push(s.tmp_0, "mumps");
    r0 = pxsim_Array__push(s.tmp_0, "mumsy");
    r0 = pxsim_Array__push(s.tmp_0, "mumus");
    r0 = pxsim_Array__push(s.tmp_0, "munch");
    r0 = pxsim_Array__push(s.tmp_0, "munds");
    r0 = pxsim_Array__push(s.tmp_0, "mundu");
    r0 = pxsim_Array__push(s.tmp_0, "munga");
    r0 = pxsim_Array__push(s.tmp_0, "munge");
    r0 = pxsim_Array__push(s.tmp_0, "mungi");
    r0 = pxsim_Array__push(s.tmp_0, "mungo");
    r0 = pxsim_Array__push(s.tmp_0, "mungs");
    r0 = pxsim_Array__push(s.tmp_0, "mungy");
    r0 = pxsim_Array__push(s.tmp_0, "munia");
    r0 = pxsim_Array__push(s.tmp_0, "munis");
    r0 = pxsim_Array__push(s.tmp_0, "munja");
    r0 = pxsim_Array__push(s.tmp_0, "munjs");
    r0 = pxsim_Array__push(s.tmp_0, "munts");
    r0 = pxsim_Array__push(s.tmp_0, "muntu");
    r0 = pxsim_Array__push(s.tmp_0, "muons");
    r0 = pxsim_Array__push(s.tmp_0, "mural");
    r0 = pxsim_Array__push(s.tmp_0, "muras");
    r0 = pxsim_Array__push(s.tmp_0, "mured");
    r0 = pxsim_Array__push(s.tmp_0, "mures");
    r0 = pxsim_Array__push(s.tmp_0, "murex");
    r0 = pxsim_Array__push(s.tmp_0, "murgh");
    r0 = pxsim_Array__push(s.tmp_0, "murgi");
    r0 = pxsim_Array__push(s.tmp_0, "murid");
    r0 = pxsim_Array__push(s.tmp_0, "murks");
    r0 = pxsim_Array__push(s.tmp_0, "murky");
    r0 = pxsim_Array__push(s.tmp_0, "murls");
    r0 = pxsim_Array__push(s.tmp_0, "murly");
    r0 = pxsim_Array__push(s.tmp_0, "murra");
    r0 = pxsim_Array__push(s.tmp_0, "murre");
    r0 = pxsim_Array__push(s.tmp_0, "murri");
    r0 = pxsim_Array__push(s.tmp_0, "murrs");
    r0 = pxsim_Array__push(s.tmp_0, "murry");
    r0 = pxsim_Array__push(s.tmp_0, "murth");
    r0 = pxsim_Array__push(s.tmp_0, "murti");
    r0 = pxsim_Array__push(s.tmp_0, "muruk");
    r0 = pxsim_Array__push(s.tmp_0, "murva");
    r0 = pxsim_Array__push(s.tmp_0, "musar");
    r0 = pxsim_Array__push(s.tmp_0, "musca");
    r0 = pxsim_Array__push(s.tmp_0, "mused");
    r0 = pxsim_Array__push(s.tmp_0, "musee");
    r0 = pxsim_Array__push(s.tmp_0, "muser");
    r0 = pxsim_Array__push(s.tmp_0, "muses");
    r0 = pxsim_Array__push(s.tmp_0, "muset");
    r0 = pxsim_Array__push(s.tmp_0, "musha");
    r0 = pxsim_Array__push(s.tmp_0, "mushy");
    r0 = pxsim_Array__push(s.tmp_0, "music");
    r0 = pxsim_Array__push(s.tmp_0, "musit");
    r0 = pxsim_Array__push(s.tmp_0, "musks");
    r0 = pxsim_Array__push(s.tmp_0, "musky");
    r0 = pxsim_Array__push(s.tmp_0, "musos");
    r0 = pxsim_Array__push(s.tmp_0, "musse");
    r0 = pxsim_Array__push(s.tmp_0, "mussy");
    r0 = pxsim_Array__push(s.tmp_0, "musta");
    r0 = pxsim_Array__push(s.tmp_0, "musth");
    r0 = pxsim_Array__push(s.tmp_0, "musts");
    r0 = pxsim_Array__push(s.tmp_0, "musty");
    r0 = pxsim_Array__push(s.tmp_0, "mutas");
    r0 = pxsim_Array__push(s.tmp_0, "mutch");
    r0 = pxsim_Array__push(s.tmp_0, "muted");
    r0 = pxsim_Array__push(s.tmp_0, "muter");
    r0 = pxsim_Array__push(s.tmp_0, "mutes");
    r0 = pxsim_Array__push(s.tmp_0, "mutha");
    r0 = pxsim_Array__push(s.tmp_0, "mutic");
    r0 = pxsim_Array__push(s.tmp_0, "mutis");
    r0 = pxsim_Array__push(s.tmp_0, "muton");
    r0 = pxsim_Array__push(s.tmp_0, "mutti");
    r0 = pxsim_Array__push(s.tmp_0, "mutts");
    r0 = pxsim_Array__push(s.tmp_0, "mutum");
    r0 = pxsim_Array__push(s.tmp_0, "muvva");
    r0 = pxsim_Array__push(s.tmp_0, "muxed");
    r0 = pxsim_Array__push(s.tmp_0, "muxes");
    r0 = pxsim_Array__push(s.tmp_0, "muzak");
    r0 = pxsim_Array__push(s.tmp_0, "muzzy");
    r0 = pxsim_Array__push(s.tmp_0, "mvula");
    r0 = pxsim_Array__push(s.tmp_0, "mvule");
    r0 = pxsim_Array__push(s.tmp_0, "mvuli");
    r0 = pxsim_Array__push(s.tmp_0, "myall");
    r0 = pxsim_Array__push(s.tmp_0, "myals");
    r0 = pxsim_Array__push(s.tmp_0, "mylar");
    r0 = pxsim_Array__push(s.tmp_0, "mynah");
    r0 = pxsim_Array__push(s.tmp_0, "mynas");
    r0 = pxsim_Array__push(s.tmp_0, "myoid");
    r0 = pxsim_Array__push(s.tmp_0, "myoma");
    r0 = pxsim_Array__push(s.tmp_0, "myons");
    r0 = pxsim_Array__push(s.tmp_0, "myope");
    r0 = pxsim_Array__push(s.tmp_0, "myops");
    r0 = pxsim_Array__push(s.tmp_0, "myopy");
    r0 = pxsim_Array__push(s.tmp_0, "myrrh");
    r0 = pxsim_Array__push(s.tmp_0, "mysid");
    r0 = pxsim_Array__push(s.tmp_0, "mysie");
    r0 = pxsim_Array__push(s.tmp_0, "mythi");
    r0 = pxsim_Array__push(s.tmp_0, "myths");
    r0 = pxsim_Array__push(s.tmp_0, "mythy");
    r0 = pxsim_Array__push(s.tmp_0, "myxos");
    r0 = pxsim_Array__push(s.tmp_0, "mzees");
    r0 = pxsim_Array__push(s.tmp_0, "naams");
    r0 = pxsim_Array__push(s.tmp_0, "naans");
    r0 = pxsim_Array__push(s.tmp_0, "naats");
    r0 = pxsim_Array__push(s.tmp_0, "nabam");
    r0 = pxsim_Array__push(s.tmp_0, "nabby");
    r0 = pxsim_Array__push(s.tmp_0, "nabes");
    r0 = pxsim_Array__push(s.tmp_0, "nabis");
    r0 = pxsim_Array__push(s.tmp_0, "nabks");
    r0 = pxsim_Array__push(s.tmp_0, "nabla");
    r0 = pxsim_Array__push(s.tmp_0, "nabob");
    r0 = pxsim_Array__push(s.tmp_0, "nache");
    r0 = pxsim_Array__push(s.tmp_0, "nacho");
    r0 = pxsim_Array__push(s.tmp_0, "nacre");
    r0 = pxsim_Array__push(s.tmp_0, "nadas");
    r0 = pxsim_Array__push(s.tmp_0, "nadir");
    r0 = pxsim_Array__push(s.tmp_0, "naeve");
    r0 = pxsim_Array__push(s.tmp_0, "naevi");
    r0 = pxsim_Array__push(s.tmp_0, "naffs");
    r0 = pxsim_Array__push(s.tmp_0, "nagar");
    r0 = pxsim_Array__push(s.tmp_0, "nagas");
    r0 = pxsim_Array__push(s.tmp_0, "nages");
    r0 = pxsim_Array__push(s.tmp_0, "naggy");
    r0 = pxsim_Array__push(s.tmp_0, "nagor");
    r0 = pxsim_Array__push(s.tmp_0, "nahal");
    r0 = pxsim_Array__push(s.tmp_0, "naiad");
    r0 = pxsim_Array__push(s.tmp_0, "naibs");
    r0 = pxsim_Array__push(s.tmp_0, "naice");
    r0 = pxsim_Array__push(s.tmp_0, "naids");
    r0 = pxsim_Array__push(s.tmp_0, "naieo");
    r0 = pxsim_Array__push(s.tmp_0, "naifs");
    r0 = pxsim_Array__push(s.tmp_0, "naiks");
    r0 = pxsim_Array__push(s.tmp_0, "nails");
    r0 = pxsim_Array__push(s.tmp_0, "naily");
    r0 = pxsim_Array__push(s.tmp_0, "nains");
    r0 = pxsim_Array__push(s.tmp_0, "naios");
    r0 = pxsim_Array__push(s.tmp_0, "naira");
    r0 = pxsim_Array__push(s.tmp_0, "nairu");
    r0 = pxsim_Array__push(s.tmp_0, "naive");
    r0 = pxsim_Array__push(s.tmp_0, "najib");
    r0 = pxsim_Array__push(s.tmp_0, "nakas");
    r0 = pxsim_Array__push(s.tmp_0, "naked");
    r0 = pxsim_Array__push(s.tmp_0, "naker");
    r0 = pxsim_Array__push(s.tmp_0, "nakfa");
    r0 = pxsim_Array__push(s.tmp_0, "nalas");
    r0 = pxsim_Array__push(s.tmp_0, "naled");
    r0 = pxsim_Array__push(s.tmp_0, "nalla");
    r0 = pxsim_Array__push(s.tmp_0, "namad");
    r0 = pxsim_Array__push(s.tmp_0, "namak");
    r0 = pxsim_Array__push(s.tmp_0, "namaz");
    r0 = pxsim_Array__push(s.tmp_0, "named");
    r0 = pxsim_Array__push(s.tmp_0, "namer");
    r0 = pxsim_Array__push(s.tmp_0, "names");
    r0 = pxsim_Array__push(s.tmp_0, "namma");
    r0 = pxsim_Array__push(s.tmp_0, "namus");
    r0 = pxsim_Array__push(s.tmp_0, "nanas");
    r0 = pxsim_Array__push(s.tmp_0, "nance");
    r0 = pxsim_Array__push(s.tmp_0, "nancy");
    r0 = pxsim_Array__push(s.tmp_0, "nandu");
    r0 = pxsim_Array__push(s.tmp_0, "nanna");
    r0 = pxsim_Array__push(s.tmp_0, "nanny");
    r0 = pxsim_Array__push(s.tmp_0, "nanos");
    r0 = pxsim_Array__push(s.tmp_0, "nante");
    r0 = pxsim_Array__push(s.tmp_0, "nanti");
    r0 = pxsim_Array__push(s.tmp_0, "nanto");
    r0 = pxsim_Array__push(s.tmp_0, "nants");
    r0 = pxsim_Array__push(s.tmp_0, "nanty");
    r0 = pxsim_Array__push(s.tmp_0, "nanua");
    r0 = pxsim_Array__push(s.tmp_0, "napas");
    r0 = pxsim_Array__push(s.tmp_0, "naped");
    r0 = pxsim_Array__push(s.tmp_0, "napes");
    r0 = pxsim_Array__push(s.tmp_0, "napoh");
    r0 = pxsim_Array__push(s.tmp_0, "napoo");
    r0 = pxsim_Array__push(s.tmp_0, "nappa");
    r0 = pxsim_Array__push(s.tmp_0, "nappe");
    r0 = pxsim_Array__push(s.tmp_0, "nappy");
    r0 = pxsim_Array__push(s.tmp_0, "naras");
    r0 = pxsim_Array__push(s.tmp_0, "narco");
    r0 = pxsim_Array__push(s.tmp_0, "narcs");
    r0 = pxsim_Array__push(s.tmp_0, "nards");
    r0 = pxsim_Array__push(s.tmp_0, "nares");
    r0 = pxsim_Array__push(s.tmp_0, "naric");
    r0 = pxsim_Array__push(s.tmp_0, "naris");
    r0 = pxsim_Array__push(s.tmp_0, "narks");
    r0 = pxsim_Array__push(s.tmp_0, "narky");
    r0 = pxsim_Array__push(s.tmp_0, "narod");
    r0 = pxsim_Array__push(s.tmp_0, "narra");
    r0 = pxsim_Array__push(s.tmp_0, "narre");
    r0 = pxsim_Array__push(s.tmp_0, "nasal");
    r0 = pxsim_Array__push(s.tmp_0, "nashi");
    r0 = pxsim_Array__push(s.tmp_0, "nasho");
    r0 = pxsim_Array__push(s.tmp_0, "nasis");
    r0 = pxsim_Array__push(s.tmp_0, "nason");
    r0 = pxsim_Array__push(s.tmp_0, "nasty");
    r0 = pxsim_Array__push(s.tmp_0, "nasus");
    r0 = pxsim_Array__push(s.tmp_0, "natak");
    r0 = pxsim_Array__push(s.tmp_0, "natal");
    r0 = pxsim_Array__push(s.tmp_0, "natch");
    r0 = pxsim_Array__push(s.tmp_0, "nates");
    r0 = pxsim_Array__push(s.tmp_0, "natis");
    r0 = pxsim_Array__push(s.tmp_0, "natto");
    r0 = pxsim_Array__push(s.tmp_0, "natty");
    r0 = pxsim_Array__push(s.tmp_0, "natya");
    r0 = pxsim_Array__push(s.tmp_0, "nauch");
    r0 = pxsim_Array__push(s.tmp_0, "naunt");
    r0 = pxsim_Array__push(s.tmp_0, "naval");
    r0 = pxsim_Array__push(s.tmp_0, "navar");
    r0 = pxsim_Array__push(s.tmp_0, "naved");
    r0 = pxsim_Array__push(s.tmp_0, "navel");
    r0 = pxsim_Array__push(s.tmp_0, "naves");
    r0 = pxsim_Array__push(s.tmp_0, "navew");
    r0 = pxsim_Array__push(s.tmp_0, "navvy");
    r0 = pxsim_Array__push(s.tmp_0, "nawab");
    r0 = pxsim_Array__push(s.tmp_0, "nawal");
    r0 = pxsim_Array__push(s.tmp_0, "nazar");
    r0 = pxsim_Array__push(s.tmp_0, "nazes");
    r0 = pxsim_Array__push(s.tmp_0, "nazir");
    r0 = pxsim_Array__push(s.tmp_0, "nazis");
    r0 = pxsim_Array__push(s.tmp_0, "nazzy");
    r0 = pxsim_Array__push(s.tmp_0, "nduja");
    r0 = pxsim_Array__push(s.tmp_0, "neafe");
    r0 = pxsim_Array__push(s.tmp_0, "neals");
    r0 = pxsim_Array__push(s.tmp_0, "neant");
    r0 = pxsim_Array__push(s.tmp_0, "neaps");
    r0 = pxsim_Array__push(s.tmp_0, "nears");
    r0 = pxsim_Array__push(s.tmp_0, "neath");
    r0 = pxsim_Array__push(s.tmp_0, "neato");
    r0 = pxsim_Array__push(s.tmp_0, "neats");
    r0 = pxsim_Array__push(s.tmp_0, "nebby");
    r0 = pxsim_Array__push(s.tmp_0, "nebek");
    r0 = pxsim_Array__push(s.tmp_0, "nebel");
    r0 = pxsim_Array__push(s.tmp_0, "neche");
    r0 = pxsim_Array__push(s.tmp_0, "necks");
    r0 = pxsim_Array__push(s.tmp_0, "neddy");
    r0 = pxsim_Array__push(s.tmp_0, "neebs");
    r0 = pxsim_Array__push(s.tmp_0, "needs");
    r0 = pxsim_Array__push(s.tmp_0, "needy");
    r0 = pxsim_Array__push(s.tmp_0, "neefs");
    r0 = pxsim_Array__push(s.tmp_0, "neeld");
    r0 = pxsim_Array__push(s.tmp_0, "neele");
    r0 = pxsim_Array__push(s.tmp_0, "neemb");
    r0 = pxsim_Array__push(s.tmp_0, "neems");
    r0 = pxsim_Array__push(s.tmp_0, "neeps");
    r0 = pxsim_Array__push(s.tmp_0, "neese");
    r0 = pxsim_Array__push(s.tmp_0, "neeze");
    r0 = pxsim_Array__push(s.tmp_0, "nefie");
    r0 = pxsim_Array__push(s.tmp_0, "negri");
    r0 = pxsim_Array__push(s.tmp_0, "negro");
    r0 = pxsim_Array__push(s.tmp_0, "negus");
    r0 = pxsim_Array__push(s.tmp_0, "neifs");
    r0 = pxsim_Array__push(s.tmp_0, "neigh");
    r0 = pxsim_Array__push(s.tmp_0, "neist");
    r0 = pxsim_Array__push(s.tmp_0, "neive");
    r0 = pxsim_Array__push(s.tmp_0, "nelia");
    r0 = pxsim_Array__push(s.tmp_0, "nelis");
    r0 = pxsim_Array__push(s.tmp_0, "nelly");
    r0 = pxsim_Array__push(s.tmp_0, "nemas");
    r0 = pxsim_Array__push(s.tmp_0, "nemic");
    r0 = pxsim_Array__push(s.tmp_0, "nemns");
    r0 = pxsim_Array__push(s.tmp_0, "nempt");
    r0 = pxsim_Array__push(s.tmp_0, "nenes");
    r0 = pxsim_Array__push(s.tmp_0, "nenta");
    r0 = pxsim_Array__push(s.tmp_0, "neons");
    r0 = pxsim_Array__push(s.tmp_0, "neosa");
    r0 = pxsim_Array__push(s.tmp_0, "neoza");
    r0 = pxsim_Array__push(s.tmp_0, "neper");
    r0 = pxsim_Array__push(s.tmp_0, "nepit");
    r0 = pxsim_Array__push(s.tmp_0, "neral");
    r0 = pxsim_Array__push(s.tmp_0, "neram");
    r0 = pxsim_Array__push(s.tmp_0, "nerds");
    r0 = pxsim_Array__push(s.tmp_0, "nerdy");
    r0 = pxsim_Array__push(s.tmp_0, "nerfs");
    r0 = pxsim_Array__push(s.tmp_0, "nerka");
    r0 = pxsim_Array__push(s.tmp_0, "nerks");
    r0 = pxsim_Array__push(s.tmp_0, "nerol");
    r0 = pxsim_Array__push(s.tmp_0, "nerts");
    r0 = pxsim_Array__push(s.tmp_0, "nertz");
    r0 = pxsim_Array__push(s.tmp_0, "nerve");
    r0 = pxsim_Array__push(s.tmp_0, "nervy");
    r0 = pxsim_Array__push(s.tmp_0, "neski");
    r0 = pxsim_Array__push(s.tmp_0, "nests");
    r0 = pxsim_Array__push(s.tmp_0, "nesty");
    r0 = pxsim_Array__push(s.tmp_0, "netas");
    r0 = pxsim_Array__push(s.tmp_0, "netes");
    r0 = pxsim_Array__push(s.tmp_0, "netop");
    r0 = pxsim_Array__push(s.tmp_0, "netta");
    r0 = pxsim_Array__push(s.tmp_0, "netts");
    r0 = pxsim_Array__push(s.tmp_0, "netty");
    r0 = pxsim_Array__push(s.tmp_0, "neuks");
    r0 = pxsim_Array__push(s.tmp_0, "neume");
    r0 = pxsim_Array__push(s.tmp_0, "neums");
    r0 = pxsim_Array__push(s.tmp_0, "nevel");
    r0 = pxsim_Array__push(s.tmp_0, "never");
    r0 = pxsim_Array__push(s.tmp_0, "neves");
    r0 = pxsim_Array__push(s.tmp_0, "nevis");
    r0 = pxsim_Array__push(s.tmp_0, "nevus");
    r0 = pxsim_Array__push(s.tmp_0, "nevvy");
    r0 = pxsim_Array__push(s.tmp_0, "newbs");
    r0 = pxsim_Array__push(s.tmp_0, "newed");
    r0 = pxsim_Array__push(s.tmp_0, "newel");
    r0 = pxsim_Array__push(s.tmp_0, "newer");
    r0 = pxsim_Array__push(s.tmp_0, "newie");
    r0 = pxsim_Array__push(s.tmp_0, "newly");
    r0 = pxsim_Array__push(s.tmp_0, "newsy");
    r0 = pxsim_Array__push(s.tmp_0, "newts");
    r0 = pxsim_Array__push(s.tmp_0, "nexal");
    r0 = pxsim_Array__push(s.tmp_0, "nexin");
    r0 = pxsim_Array__push(s.tmp_0, "nexts");
    r0 = pxsim_Array__push(s.tmp_0, "nexum");
    r0 = pxsim_Array__push(s.tmp_0, "nexus");
    r0 = pxsim_Array__push(s.tmp_0, "ngaio");
    r0 = pxsim_Array__push(s.tmp_0, "ngaka");
    r0 = pxsim_Array__push(s.tmp_0, "ngana");
    r0 = pxsim_Array__push(s.tmp_0, "ngapi");
    r0 = pxsim_Array__push(s.tmp_0, "ngati");
    r0 = pxsim_Array__push(s.tmp_0, "ngege");
    r0 = pxsim_Array__push(s.tmp_0, "ngoma");
    r0 = pxsim_Array__push(s.tmp_0, "ngoni");
    r0 = pxsim_Array__push(s.tmp_0, "ngram");
    r0 = pxsim_Array__push(s.tmp_0, "ngwee");
    r0 = pxsim_Array__push(s.tmp_0, "nibby");
    r0 = pxsim_Array__push(s.tmp_0, "nicad");
    r0 = pxsim_Array__push(s.tmp_0, "niced");
    r0 = pxsim_Array__push(s.tmp_0, "nicer");
    r0 = pxsim_Array__push(s.tmp_0, "nicey");
    r0 = pxsim_Array__push(s.tmp_0, "niche");
    r0 = pxsim_Array__push(s.tmp_0, "nicht");
    r0 = pxsim_Array__push(s.tmp_0, "nicks");
    r0 = pxsim_Array__push(s.tmp_0, "nicky");
    r0 = pxsim_Array__push(s.tmp_0, "nicol");
    r0 = pxsim_Array__push(s.tmp_0, "nidal");
    r0 = pxsim_Array__push(s.tmp_0, "nided");
    r0 = pxsim_Array__push(s.tmp_0, "nides");
    r0 = pxsim_Array__push(s.tmp_0, "nidor");
    r0 = pxsim_Array__push(s.tmp_0, "nidus");
    r0 = pxsim_Array__push(s.tmp_0, "niece");
    r0 = pxsim_Array__push(s.tmp_0, "niefs");
    r0 = pxsim_Array__push(s.tmp_0, "niess");
    r0 = pxsim_Array__push(s.tmp_0, "nieve");
    r0 = pxsim_Array__push(s.tmp_0, "nifes");
    r0 = pxsim_Array__push(s.tmp_0, "niffs");
    r0 = pxsim_Array__push(s.tmp_0, "niffy");
    r0 = pxsim_Array__push(s.tmp_0, "nifle");
    r0 = pxsim_Array__push(s.tmp_0, "nifty");
    r0 = pxsim_Array__push(s.tmp_0, "niger");
    r0 = pxsim_Array__push(s.tmp_0, "nigga");
    r0 = pxsim_Array__push(s.tmp_0, "nighs");
    r0 = pxsim_Array__push(s.tmp_0, "night");
    r0 = pxsim_Array__push(s.tmp_0, "nigre");
    r0 = pxsim_Array__push(s.tmp_0, "nigua");
    r0 = pxsim_Array__push(s.tmp_0, "nihil");
    r0 = pxsim_Array__push(s.tmp_0, "nikab");
    r0 = pxsim_Array__push(s.tmp_0, "nikah");
    r0 = pxsim_Array__push(s.tmp_0, "nikau");
    r0 = pxsim_Array__push(s.tmp_0, "nilas");
    r0 = pxsim_Array__push(s.tmp_0, "nills");
    r0 = pxsim_Array__push(s.tmp_0, "nimbi");
    r0 = pxsim_Array__push(s.tmp_0, "nimbs");
    r0 = pxsim_Array__push(s.tmp_0, "nimby");
    r0 = pxsim_Array__push(s.tmp_0, "nimps");
    r0 = pxsim_Array__push(s.tmp_0, "niner");
    r0 = pxsim_Array__push(s.tmp_0, "nines");
    r0 = pxsim_Array__push(s.tmp_0, "ninja");
    r0 = pxsim_Array__push(s.tmp_0, "ninny");
    r0 = pxsim_Array__push(s.tmp_0, "ninon");
    r0 = pxsim_Array__push(s.tmp_0, "ninta");
    r0 = pxsim_Array__push(s.tmp_0, "ninth");
    r0 = pxsim_Array__push(s.tmp_0, "niopo");
    r0 = pxsim_Array__push(s.tmp_0, "nioza");
    r0 = pxsim_Array__push(s.tmp_0, "nipas");
    r0 = pxsim_Array__push(s.tmp_0, "nipet");
    r0 = pxsim_Array__push(s.tmp_0, "nippy");
    r0 = pxsim_Array__push(s.tmp_0, "niqab");
    r0 = pxsim_Array__push(s.tmp_0, "nirls");
    r0 = pxsim_Array__push(s.tmp_0, "nirly");
    r0 = pxsim_Array__push(s.tmp_0, "nisei");
    r0 = pxsim_Array__push(s.tmp_0, "nisin");
    r0 = pxsim_Array__push(s.tmp_0, "nisse");
    r0 = pxsim_Array__push(s.tmp_0, "nisus");
    r0 = pxsim_Array__push(s.tmp_0, "nital");
    r0 = pxsim_Array__push(s.tmp_0, "niter");
    r0 = pxsim_Array__push(s.tmp_0, "nites");
    r0 = pxsim_Array__push(s.tmp_0, "nitid");
    r0 = pxsim_Array__push(s.tmp_0, "niton");
    r0 = pxsim_Array__push(s.tmp_0, "nitre");
    r0 = pxsim_Array__push(s.tmp_0, "nitro");
    r0 = pxsim_Array__push(s.tmp_0, "nitry");
    r0 = pxsim_Array__push(s.tmp_0, "nitta");
    r0 = pxsim_Array__push(s.tmp_0, "nitto");
    r0 = pxsim_Array__push(s.tmp_0, "nitty");
    r0 = pxsim_Array__push(s.tmp_0, "nival");
    r0 = pxsim_Array__push(s.tmp_0, "nivas");
    r0 = pxsim_Array__push(s.tmp_0, "nivel");
    r0 = pxsim_Array__push(s.tmp_0, "nixed");
    r0 = pxsim_Array__push(s.tmp_0, "nixer");
    r0 = pxsim_Array__push(s.tmp_0, "nixes");
    r0 = pxsim_Array__push(s.tmp_0, "nixie");
    r0 = pxsim_Array__push(s.tmp_0, "nizam");
    r0 = pxsim_Array__push(s.tmp_0, "njirl");
    r0 = pxsim_Array__push(s.tmp_0, "nkosi");
    r0 = pxsim_Array__push(s.tmp_0, "nmoli");
    r0 = pxsim_Array__push(s.tmp_0, "nmols");
    r0 = pxsim_Array__push(s.tmp_0, "noahs");
    r0 = pxsim_Array__push(s.tmp_0, "nobby");
    r0 = pxsim_Array__push(s.tmp_0, "noble");
    r0 = pxsim_Array__push(s.tmp_0, "nobly");
    r0 = pxsim_Array__push(s.tmp_0, "nocks");
    r0 = pxsim_Array__push(s.tmp_0, "nodal");
    r0 = pxsim_Array__push(s.tmp_0, "noddy");
    r0 = pxsim_Array__push(s.tmp_0, "noded");
    r0 = pxsim_Array__push(s.tmp_0, "nodes");
    r0 = pxsim_Array__push(s.tmp_0, "nodum");
    r0 = pxsim_Array__push(s.tmp_0, "nodus");
    r0 = pxsim_Array__push(s.tmp_0, "noels");
    r0 = pxsim_Array__push(s.tmp_0, "noema");
    r0 = pxsim_Array__push(s.tmp_0, "noeme");
    r0 = pxsim_Array__push(s.tmp_0, "nogal");
    r0 = pxsim_Array__push(s.tmp_0, "noggs");
    r0 = pxsim_Array__push(s.tmp_0, "noggy");
    r0 = pxsim_Array__push(s.tmp_0, "nohow");
    r0 = pxsim_Array__push(s.tmp_0, "noias");
    r0 = pxsim_Array__push(s.tmp_0, "noils");
    r0 = pxsim_Array__push(s.tmp_0, "noily");
    r0 = pxsim_Array__push(s.tmp_0, "noint");
    r0 = pxsim_Array__push(s.tmp_0, "noire");
    r0 = pxsim_Array__push(s.tmp_0, "noirs");
    r0 = pxsim_Array__push(s.tmp_0, "noise");
    r0 = pxsim_Array__push(s.tmp_0, "noisy");
    r0 = pxsim_Array__push(s.tmp_0, "nokes");
    r0 = pxsim_Array__push(s.tmp_0, "noles");
    r0 = pxsim_Array__push(s.tmp_0, "nolle");
    r0 = pxsim_Array__push(s.tmp_0, "nolls");
    r0 = pxsim_Array__push(s.tmp_0, "nolos");
    r0 = pxsim_Array__push(s.tmp_0, "nomad");
    r0 = pxsim_Array__push(s.tmp_0, "nomas");
    r0 = pxsim_Array__push(s.tmp_0, "nomen");
    r0 = pxsim_Array__push(s.tmp_0, "nomes");
    r0 = pxsim_Array__push(s.tmp_0, "nomic");
    r0 = pxsim_Array__push(s.tmp_0, "nomoi");
    r0 = pxsim_Array__push(s.tmp_0, "nomos");
    r0 = pxsim_Array__push(s.tmp_0, "nonan");
    r0 = pxsim_Array__push(s.tmp_0, "nonas");
    r0 = pxsim_Array__push(s.tmp_0, "nonce");
    r0 = pxsim_Array__push(s.tmp_0, "noncy");
    r0 = pxsim_Array__push(s.tmp_0, "nonda");
    r0 = pxsim_Array__push(s.tmp_0, "nondo");
    r0 = pxsim_Array__push(s.tmp_0, "nones");
    r0 = pxsim_Array__push(s.tmp_0, "nonet");
    r0 = pxsim_Array__push(s.tmp_0, "nongs");
    r0 = pxsim_Array__push(s.tmp_0, "nonic");
    r0 = pxsim_Array__push(s.tmp_0, "nonis");
    r0 = pxsim_Array__push(s.tmp_0, "nonna");
    r0 = pxsim_Array__push(s.tmp_0, "nonno");
    r0 = pxsim_Array__push(s.tmp_0, "nonny");
    r0 = pxsim_Array__push(s.tmp_0, "nonyl");
    r0 = pxsim_Array__push(s.tmp_0, "noobs");
    r0 = pxsim_Array__push(s.tmp_0, "noois");
    r0 = pxsim_Array__push(s.tmp_0, "nooit");
    r0 = pxsim_Array__push(s.tmp_0, "nooks");
    r0 = pxsim_Array__push(s.tmp_0, "nooky");
    r0 = pxsim_Array__push(s.tmp_0, "noone");
    r0 = pxsim_Array__push(s.tmp_0, "noons");
    r0 = pxsim_Array__push(s.tmp_0, "noops");
    r0 = pxsim_Array__push(s.tmp_0, "noose");
    r0 = pxsim_Array__push(s.tmp_0, "noove");
    r0 = pxsim_Array__push(s.tmp_0, "nopal");
    r0 = pxsim_Array__push(s.tmp_0, "noria");
    r0 = pxsim_Array__push(s.tmp_0, "norie");
    r0 = pxsim_Array__push(s.tmp_0, "noris");
    r0 = pxsim_Array__push(s.tmp_0, "norks");
    r0 = pxsim_Array__push(s.tmp_0, "norma");
    r0 = pxsim_Array__push(s.tmp_0, "norms");
    r0 = pxsim_Array__push(s.tmp_0, "north");
    r0 = pxsim_Array__push(s.tmp_0, "nosed");
    r0 = pxsim_Array__push(s.tmp_0, "noser");
    r0 = pxsim_Array__push(s.tmp_0, "noses");
    r0 = pxsim_Array__push(s.tmp_0, "nosey");
    r0 = pxsim_Array__push(s.tmp_0, "noshi");
    r0 = pxsim_Array__push(s.tmp_0, "nosir");
    r0 = pxsim_Array__push(s.tmp_0, "notal");
    r0 = pxsim_Array__push(s.tmp_0, "notam");
    r0 = pxsim_Array__push(s.tmp_0, "notch");
    r0 = pxsim_Array__push(s.tmp_0, "noted");
    r0 = pxsim_Array__push(s.tmp_0, "noter");
    r0 = pxsim_Array__push(s.tmp_0, "notes");
    r0 = pxsim_Array__push(s.tmp_0, "notum");
    r0 = pxsim_Array__push(s.tmp_0, "nougs");
    r0 = pxsim_Array__push(s.tmp_0, "nouja");
    r0 = pxsim_Array__push(s.tmp_0, "nould");
    r0 = pxsim_Array__push(s.tmp_0, "noule");
    r0 = pxsim_Array__push(s.tmp_0, "nouls");
    r0 = pxsim_Array__push(s.tmp_0, "nouns");
    r0 = pxsim_Array__push(s.tmp_0, "nouny");
    r0 = pxsim_Array__push(s.tmp_0, "noups");
    r0 = pxsim_Array__push(s.tmp_0, "noust");
    r0 = pxsim_Array__push(s.tmp_0, "novae");
    r0 = pxsim_Array__push(s.tmp_0, "novas");
    r0 = pxsim_Array__push(s.tmp_0, "novel");
    r0 = pxsim_Array__push(s.tmp_0, "novia");
    r0 = pxsim_Array__push(s.tmp_0, "novio");
    r0 = pxsim_Array__push(s.tmp_0, "novum");
    r0 = pxsim_Array__push(s.tmp_0, "noway");
    r0 = pxsim_Array__push(s.tmp_0, "nowds");
    r0 = pxsim_Array__push(s.tmp_0, "nowed");
    r0 = pxsim_Array__push(s.tmp_0, "nowls");
    r0 = pxsim_Array__push(s.tmp_0, "nowts");
    r0 = pxsim_Array__push(s.tmp_0, "nowty");
    r0 = pxsim_Array__push(s.tmp_0, "noxal");
    r0 = pxsim_Array__push(s.tmp_0, "noxas");
    r0 = pxsim_Array__push(s.tmp_0, "noxes");
    r0 = pxsim_Array__push(s.tmp_0, "noyau");
    r0 = pxsim_Array__push(s.tmp_0, "noyed");
    r0 = pxsim_Array__push(s.tmp_0, "noyes");
    r0 = pxsim_Array__push(s.tmp_0, "nrtta");
    r0 = pxsim_Array__push(s.tmp_0, "nrtya");
    r0 = pxsim_Array__push(s.tmp_0, "nsima");
    r0 = pxsim_Array__push(s.tmp_0, "nubby");
    r0 = pxsim_Array__push(s.tmp_0, "nubia");
    r0 = pxsim_Array__push(s.tmp_0, "nucha");
    r0 = pxsim_Array__push(s.tmp_0, "nucin");
    r0 = pxsim_Array__push(s.tmp_0, "nuddy");
    r0 = pxsim_Array__push(s.tmp_0, "nuder");
    r0 = pxsim_Array__push(s.tmp_0, "nudes");
    r0 = pxsim_Array__push(s.tmp_0, "nudge");
    r0 = pxsim_Array__push(s.tmp_0, "nudgy");
    r0 = pxsim_Array__push(s.tmp_0, "nudie");
    r0 = pxsim_Array__push(s.tmp_0, "nudzh");
    r0 = pxsim_Array__push(s.tmp_0, "nuevo");
    r0 = pxsim_Array__push(s.tmp_0, "nuffs");
    r0 = pxsim_Array__push(s.tmp_0, "nugae");
    r0 = pxsim_Array__push(s.tmp_0, "nujol");
    r0 = pxsim_Array__push(s.tmp_0, "nuked");
    r0 = pxsim_Array__push(s.tmp_0, "nukes");
    r0 = pxsim_Array__push(s.tmp_0, "nulla");
    r0 = pxsim_Array__push(s.tmp_0, "nullo");
    r0 = pxsim_Array__push(s.tmp_0, "nulls");
    r0 = pxsim_Array__push(s.tmp_0, "nully");
    r0 = pxsim_Array__push(s.tmp_0, "numbs");
    r0 = pxsim_Array__push(s.tmp_0, "numen");
    r0 = pxsim_Array__push(s.tmp_0, "nummy");
    r0 = pxsim_Array__push(s.tmp_0, "numps");
    r0 = pxsim_Array__push(s.tmp_0, "nunks");
    r0 = pxsim_Array__push(s.tmp_0, "nunky");
    r0 = pxsim_Array__push(s.tmp_0, "nunny");
    r0 = pxsim_Array__push(s.tmp_0, "nunus");
    r0 = pxsim_Array__push(s.tmp_0, "nuque");
    r0 = pxsim_Array__push(s.tmp_0, "nurds");
    r0 = pxsim_Array__push(s.tmp_0, "nurdy");
    r0 = pxsim_Array__push(s.tmp_0, "nurls");
    r0 = pxsim_Array__push(s.tmp_0, "nurrs");
    r0 = pxsim_Array__push(s.tmp_0, "nurse");
    r0 = pxsim_Array__push(s.tmp_0, "nurts");
    r0 = pxsim_Array__push(s.tmp_0, "nurtz");
    r0 = pxsim_Array__push(s.tmp_0, "nused");
    r0 = pxsim_Array__push(s.tmp_0, "nuses");
    r0 = pxsim_Array__push(s.tmp_0, "nutso");
    r0 = pxsim_Array__push(s.tmp_0, "nutsy");
    r0 = pxsim_Array__push(s.tmp_0, "nutty");
    r0 = pxsim_Array__push(s.tmp_0, "nyaff");
    r0 = pxsim_Array__push(s.tmp_0, "nyala");
    r0 = pxsim_Array__push(s.tmp_0, "nyams");
    r0 = pxsim_Array__push(s.tmp_0, "nying");
    r0 = pxsim_Array__push(s.tmp_0, "nylon");
    r0 = pxsim_Array__push(s.tmp_0, "nymph");
    r0 = pxsim_Array__push(s.tmp_0, "nyong");
    r0 = pxsim_Array__push(s.tmp_0, "nyssa");
    r0 = pxsim_Array__push(s.tmp_0, "nyung");
    r0 = pxsim_Array__push(s.tmp_0, "nyuse");
    r0 = pxsim_Array__push(s.tmp_0, "nyuze");
    r0 = pxsim_Array__push(s.tmp_0, "oafos");
    r0 = pxsim_Array__push(s.tmp_0, "oaked");
    r0 = pxsim_Array__push(s.tmp_0, "oaken");
    r0 = pxsim_Array__push(s.tmp_0, "oaker");
    r0 = pxsim_Array__push(s.tmp_0, "oakum");
    r0 = pxsim_Array__push(s.tmp_0, "oared");
    r0 = pxsim_Array__push(s.tmp_0, "oarer");
    r0 = pxsim_Array__push(s.tmp_0, "oasal");
    r0 = pxsim_Array__push(s.tmp_0, "oases");
    r0 = pxsim_Array__push(s.tmp_0, "oasis");
    r0 = pxsim_Array__push(s.tmp_0, "oasts");
    r0 = pxsim_Array__push(s.tmp_0, "oaten");
    r0 = pxsim_Array__push(s.tmp_0, "oater");
    r0 = pxsim_Array__push(s.tmp_0, "oaths");
    r0 = pxsim_Array__push(s.tmp_0, "oaves");
    r0 = pxsim_Array__push(s.tmp_0, "obang");
    r0 = pxsim_Array__push(s.tmp_0, "obbos");
    r0 = pxsim_Array__push(s.tmp_0, "obeah");
    r0 = pxsim_Array__push(s.tmp_0, "obeli");
    r0 = pxsim_Array__push(s.tmp_0, "obese");
    r0 = pxsim_Array__push(s.tmp_0, "obeys");
    r0 = pxsim_Array__push(s.tmp_0, "obias");
    r0 = pxsim_Array__push(s.tmp_0, "obied");
    r0 = pxsim_Array__push(s.tmp_0, "obiit");
    r0 = pxsim_Array__push(s.tmp_0, "obits");
    r0 = pxsim_Array__push(s.tmp_0, "objet");
    r0 = pxsim_Array__push(s.tmp_0, "oboes");
    r0 = pxsim_Array__push(s.tmp_0, "obole");
    r0 = pxsim_Array__push(s.tmp_0, "oboli");
    r0 = pxsim_Array__push(s.tmp_0, "obols");
    r0 = pxsim_Array__push(s.tmp_0, "occam");
    r0 = pxsim_Array__push(s.tmp_0, "occur");
    r0 = pxsim_Array__push(s.tmp_0, "ocean");
    r0 = pxsim_Array__push(s.tmp_0, "ocher");
    r0 = pxsim_Array__push(s.tmp_0, "oches");
    r0 = pxsim_Array__push(s.tmp_0, "ochre");
    r0 = pxsim_Array__push(s.tmp_0, "ochry");
    r0 = pxsim_Array__push(s.tmp_0, "ocker");
    r0 = pxsim_Array__push(s.tmp_0, "ocote");
    r0 = pxsim_Array__push(s.tmp_0, "ocrea");
    r0 = pxsim_Array__push(s.tmp_0, "octad");
    r0 = pxsim_Array__push(s.tmp_0, "octal");
    r0 = pxsim_Array__push(s.tmp_0, "octan");
    r0 = pxsim_Array__push(s.tmp_0, "octas");
    r0 = pxsim_Array__push(s.tmp_0, "octet");
    r0 = pxsim_Array__push(s.tmp_0, "octic");
    r0 = pxsim_Array__push(s.tmp_0, "octli");
    r0 = pxsim_Array__push(s.tmp_0, "octyl");
    r0 = pxsim_Array__push(s.tmp_0, "oculi");
    r0 = pxsim_Array__push(s.tmp_0, "odahs");
    r0 = pxsim_Array__push(s.tmp_0, "odals");
    r0 = pxsim_Array__push(s.tmp_0, "odder");
    r0 = pxsim_Array__push(s.tmp_0, "oddly");
    r0 = pxsim_Array__push(s.tmp_0, "odeon");
    r0 = pxsim_Array__push(s.tmp_0, "odeum");
    r0 = pxsim_Array__push(s.tmp_0, "odism");
    r0 = pxsim_Array__push(s.tmp_0, "odist");
    r0 = pxsim_Array__push(s.tmp_0, "odium");
    r0 = pxsim_Array__push(s.tmp_0, "odoom");
    r0 = pxsim_Array__push(s.tmp_0, "odors");
    r0 = pxsim_Array__push(s.tmp_0, "odour");
    r0 = pxsim_Array__push(s.tmp_0, "odums");
    r0 = pxsim_Array__push(s.tmp_0, "odyle");
    r0 = pxsim_Array__push(s.tmp_0, "odyls");
    r0 = pxsim_Array__push(s.tmp_0, "ofays");
    r0 = pxsim_Array__push(s.tmp_0, "offal");
    r0 = pxsim_Array__push(s.tmp_0, "offed");
    r0 = pxsim_Array__push(s.tmp_0, "offer");
    r0 = pxsim_Array__push(s.tmp_0, "offie");
    r0 = pxsim_Array__push(s.tmp_0, "oflag");
    r0 = pxsim_Array__push(s.tmp_0, "often");
    r0 = pxsim_Array__push(s.tmp_0, "ofter");
    r0 = pxsim_Array__push(s.tmp_0, "ofuro");
    r0 = pxsim_Array__push(s.tmp_0, "ogams");
    r0 = pxsim_Array__push(s.tmp_0, "ogeed");
    r0 = pxsim_Array__push(s.tmp_0, "ogees");
    r0 = pxsim_Array__push(s.tmp_0, "oggin");
    r0 = pxsim_Array__push(s.tmp_0, "ogham");
    r0 = pxsim_Array__push(s.tmp_0, "ogive");
    r0 = pxsim_Array__push(s.tmp_0, "ogled");
    r0 = pxsim_Array__push(s.tmp_0, "ogler");
    r0 = pxsim_Array__push(s.tmp_0, "ogles");
    r0 = pxsim_Array__push(s.tmp_0, "ogmic");
    r0 = pxsim_Array__push(s.tmp_0, "ogres");
    r0 = pxsim_Array__push(s.tmp_0, "ohelo");
    r0 = pxsim_Array__push(s.tmp_0, "ohias");
    r0 = pxsim_Array__push(s.tmp_0, "ohing");
    r0 = pxsim_Array__push(s.tmp_0, "ohmic");
    r0 = pxsim_Array__push(s.tmp_0, "ohone");
    r0 = pxsim_Array__push(s.tmp_0, "oicks");
    r0 = pxsim_Array__push(s.tmp_0, "oidia");
    r0 = pxsim_Array__push(s.tmp_0, "oiled");
    r0 = pxsim_Array__push(s.tmp_0, "oiler");
    r0 = pxsim_Array__push(s.tmp_0, "oilet");
    r0 = pxsim_Array__push(s.tmp_0, "oinks");
    r0 = pxsim_Array__push(s.tmp_0, "oints");
    r0 = pxsim_Array__push(s.tmp_0, "oiran");
    r0 = pxsim_Array__push(s.tmp_0, "ojime");
    r0 = pxsim_Array__push(s.tmp_0, "okapi");
    r0 = pxsim_Array__push(s.tmp_0, "okays");
    r0 = pxsim_Array__push(s.tmp_0, "okehs");
    r0 = pxsim_Array__push(s.tmp_0, "okies");
    r0 = pxsim_Array__push(s.tmp_0, "oking");
    r0 = pxsim_Array__push(s.tmp_0, "okole");
    r0 = pxsim_Array__push(s.tmp_0, "okras");
    r0 = pxsim_Array__push(s.tmp_0, "okrug");
    r0 = pxsim_Array__push(s.tmp_0, "oktas");
    r0 = pxsim_Array__push(s.tmp_0, "olate");
    r0 = pxsim_Array__push(s.tmp_0, "olden");
    r0 = pxsim_Array__push(s.tmp_0, "older");
    r0 = pxsim_Array__push(s.tmp_0, "oldie");
    r0 = pxsim_Array__push(s.tmp_0, "oldly");
    r0 = pxsim_Array__push(s.tmp_0, "olehs");
    r0 = pxsim_Array__push(s.tmp_0, "oleic");
    r0 = pxsim_Array__push(s.tmp_0, "olein");
    r0 = pxsim_Array__push(s.tmp_0, "olent");
    r0 = pxsim_Array__push(s.tmp_0, "oleos");
    r0 = pxsim_Array__push(s.tmp_0, "oleum");
    r0 = pxsim_Array__push(s.tmp_0, "oleyl");
    r0 = pxsim_Array__push(s.tmp_0, "oligo");
    r0 = pxsim_Array__push(s.tmp_0, "olios");
    r0 = pxsim_Array__push(s.tmp_0, "oliva");
    r0 = pxsim_Array__push(s.tmp_0, "olive");
    r0 = pxsim_Array__push(s.tmp_0, "ollas");
    r0 = pxsim_Array__push(s.tmp_0, "ollav");
    r0 = pxsim_Array__push(s.tmp_0, "oller");
    r0 = pxsim_Array__push(s.tmp_0, "ollie");
    r0 = pxsim_Array__push(s.tmp_0, "ology");
    r0 = pxsim_Array__push(s.tmp_0, "olona");
    r0 = pxsim_Array__push(s.tmp_0, "olpae");
    r0 = pxsim_Array__push(s.tmp_0, "olpes");
    r0 = pxsim_Array__push(s.tmp_0, "omasa");
    r0 = pxsim_Array__push(s.tmp_0, "omber");
    r0 = pxsim_Array__push(s.tmp_0, "ombre");
    r0 = pxsim_Array__push(s.tmp_0, "ombus");
    r0 = pxsim_Array__push(s.tmp_0, "omdah");
    r0 = pxsim_Array__push(s.tmp_0, "omdas");
    r0 = pxsim_Array__push(s.tmp_0, "omdda");
    r0 = pxsim_Array__push(s.tmp_0, "omdeh");
    r0 = pxsim_Array__push(s.tmp_0, "omees");
    r0 = pxsim_Array__push(s.tmp_0, "omega");
    r0 = pxsim_Array__push(s.tmp_0, "omens");
    r0 = pxsim_Array__push(s.tmp_0, "omers");
    r0 = pxsim_Array__push(s.tmp_0, "omiai");
    r0 = pxsim_Array__push(s.tmp_0, "omits");
    r0 = pxsim_Array__push(s.tmp_0, "omlah");
    r0 = pxsim_Array__push(s.tmp_0, "ommel");
    r0 = pxsim_Array__push(s.tmp_0, "ommin");
    r0 = pxsim_Array__push(s.tmp_0, "omnes");
    r0 = pxsim_Array__push(s.tmp_0, "omovs");
    r0 = pxsim_Array__push(s.tmp_0, "omrah");
    r0 = pxsim_Array__push(s.tmp_0, "omuls");
    r0 = pxsim_Array__push(s.tmp_0, "oncer");
    r0 = pxsim_Array__push(s.tmp_0, "onces");
    r0 = pxsim_Array__push(s.tmp_0, "oncet");
    r0 = pxsim_Array__push(s.tmp_0, "oncus");
    r0 = pxsim_Array__push(s.tmp_0, "ondes");
    r0 = pxsim_Array__push(s.tmp_0, "ondol");
    r0 = pxsim_Array__push(s.tmp_0, "onely");
    r0 = pxsim_Array__push(s.tmp_0, "oners");
    r0 = pxsim_Array__push(s.tmp_0, "onery");
    r0 = pxsim_Array__push(s.tmp_0, "ongon");
    r0 = pxsim_Array__push(s.tmp_0, "onion");
    r0 = pxsim_Array__push(s.tmp_0, "onium");
    r0 = pxsim_Array__push(s.tmp_0, "onkus");
    r0 = pxsim_Array__push(s.tmp_0, "onlap");
    r0 = pxsim_Array__push(s.tmp_0, "onlay");
    r0 = pxsim_Array__push(s.tmp_0, "onmun");
    r0 = pxsim_Array__push(s.tmp_0, "onned");
    r0 = pxsim_Array__push(s.tmp_0, "onsen");
    r0 = pxsim_Array__push(s.tmp_0, "onset");
    r0 = pxsim_Array__push(s.tmp_0, "ontal");
    r0 = pxsim_Array__push(s.tmp_0, "ontic");
    r0 = pxsim_Array__push(s.tmp_0, "ooaas");
    r0 = pxsim_Array__push(s.tmp_0, "oobit");
    r0 = pxsim_Array__push(s.tmp_0, "oohed");
    r0 = pxsim_Array__push(s.tmp_0, "ooids");
    r0 = pxsim_Array__push(s.tmp_0, "oojah");
    r0 = pxsim_Array__push(s.tmp_0, "oomph");
    r0 = pxsim_Array__push(s.tmp_0, "oonts");
    r0 = pxsim_Array__push(s.tmp_0, "oopak");
    r0 = pxsim_Array__push(s.tmp_0, "ooped");
    r0 = pxsim_Array__push(s.tmp_0, "oopsy");
    r0 = pxsim_Array__push(s.tmp_0, "oorie");
    r0 = pxsim_Array__push(s.tmp_0, "ooses");
    r0 = pxsim_Array__push(s.tmp_0, "ootid");
    r0 = pxsim_Array__push(s.tmp_0, "ooyah");
    r0 = pxsim_Array__push(s.tmp_0, "oozed");
    r0 = pxsim_Array__push(s.tmp_0, "oozes");
    r0 = pxsim_Array__push(s.tmp_0, "oozie");
    r0 = pxsim_Array__push(s.tmp_0, "oozle");
    r0 = pxsim_Array__push(s.tmp_0, "opahs");
    r0 = pxsim_Array__push(s.tmp_0, "opals");
    r0 = pxsim_Array__push(s.tmp_0, "opens");
    r0 = pxsim_Array__push(s.tmp_0, "opepe");
    r0 = pxsim_Array__push(s.tmp_0, "opera");
    r0 = pxsim_Array__push(s.tmp_0, "opery");
    r0 = pxsim_Array__push(s.tmp_0, "opgaf");
    r0 = pxsim_Array__push(s.tmp_0, "opihi");
    r0 = pxsim_Array__push(s.tmp_0, "opine");
    r0 = pxsim_Array__push(s.tmp_0, "oping");
    r0 = pxsim_Array__push(s.tmp_0, "opium");
    r0 = pxsim_Array__push(s.tmp_0, "oppos");
    r0 = pxsim_Array__push(s.tmp_0, "opsat");
    r0 = pxsim_Array__push(s.tmp_0, "opsin");
    r0 = pxsim_Array__push(s.tmp_0, "opsit");
    r0 = pxsim_Array__push(s.tmp_0, "opted");
    r0 = pxsim_Array__push(s.tmp_0, "opter");
    r0 = pxsim_Array__push(s.tmp_0, "optic");
    r0 = pxsim_Array__push(s.tmp_0, "opzit");
    r0 = pxsim_Array__push(s.tmp_0, "orach");
    r0 = pxsim_Array__push(s.tmp_0, "oracy");
    r0 = pxsim_Array__push(s.tmp_0, "orals");
    r0 = pxsim_Array__push(s.tmp_0, "orang");
    r0 = pxsim_Array__push(s.tmp_0, "orans");
    r0 = pxsim_Array__push(s.tmp_0, "orant");
    r0 = pxsim_Array__push(s.tmp_0, "orate");
    r0 = pxsim_Array__push(s.tmp_0, "orbat");
    r0 = pxsim_Array__push(s.tmp_0, "orbed");
    r0 = pxsim_Array__push(s.tmp_0, "orbic");
    r0 = pxsim_Array__push(s.tmp_0, "orbit");
    r0 = pxsim_Array__push(s.tmp_0, "orcas");
    r0 = pxsim_Array__push(s.tmp_0, "orcin");
    r0 = pxsim_Array__push(s.tmp_0, "order");
    r0 = pxsim_Array__push(s.tmp_0, "ordie");
    r0 = pxsim_Array__push(s.tmp_0, "ordos");
    r0 = pxsim_Array__push(s.tmp_0, "oread");
    r0 = pxsim_Array__push(s.tmp_0, "orfes");
    r0 = pxsim_Array__push(s.tmp_0, "orful");
    r0 = pxsim_Array__push(s.tmp_0, "organ");
    r0 = pxsim_Array__push(s.tmp_0, "orgia");
    r0 = pxsim_Array__push(s.tmp_0, "orgic");
    r0 = pxsim_Array__push(s.tmp_0, "orgue");
    r0 = pxsim_Array__push(s.tmp_0, "oribi");
    r0 = pxsim_Array__push(s.tmp_0, "oriel");
    r0 = pxsim_Array__push(s.tmp_0, "origo");
    r0 = pxsim_Array__push(s.tmp_0, "orixa");
    r0 = pxsim_Array__push(s.tmp_0, "orles");
    r0 = pxsim_Array__push(s.tmp_0, "orlon");
    r0 = pxsim_Array__push(s.tmp_0, "orlop");
    r0 = pxsim_Array__push(s.tmp_0, "ormer");
    r0 = pxsim_Array__push(s.tmp_0, "ornee");
    r0 = pxsim_Array__push(s.tmp_0, "ornis");
    r0 = pxsim_Array__push(s.tmp_0, "orped");
    r0 = pxsim_Array__push(s.tmp_0, "orpin");
    r0 = pxsim_Array__push(s.tmp_0, "orris");
    r0 = pxsim_Array__push(s.tmp_0, "ortet");
    r0 = pxsim_Array__push(s.tmp_0, "ortho");
    r0 = pxsim_Array__push(s.tmp_0, "orval");
    r0 = pxsim_Array__push(s.tmp_0, "orzos");
    r0 = pxsim_Array__push(s.tmp_0, "osars");
    r0 = pxsim_Array__push(s.tmp_0, "oscar");
    r0 = pxsim_Array__push(s.tmp_0, "osetr");
    r0 = pxsim_Array__push(s.tmp_0, "oseys");
    r0 = pxsim_Array__push(s.tmp_0, "oshac");
    r0 = pxsim_Array__push(s.tmp_0, "osier");
    r0 = pxsim_Array__push(s.tmp_0, "oskin");
    r0 = pxsim_Array__push(s.tmp_0, "oslin");
    r0 = pxsim_Array__push(s.tmp_0, "osmic");
    r0 = pxsim_Array__push(s.tmp_0, "osmol");
    r0 = pxsim_Array__push(s.tmp_0, "osone");
    r0 = pxsim_Array__push(s.tmp_0, "ossia");
    r0 = pxsim_Array__push(s.tmp_0, "ostia");
    r0 = pxsim_Array__push(s.tmp_0, "otaku");
    r0 = pxsim_Array__push(s.tmp_0, "otary");
    r0 = pxsim_Array__push(s.tmp_0, "other");
    r0 = pxsim_Array__push(s.tmp_0, "othyl");
    r0 = pxsim_Array__push(s.tmp_0, "otium");
    r0 = pxsim_Array__push(s.tmp_0, "ottar");
    r0 = pxsim_Array__push(s.tmp_0, "otter");
    r0 = pxsim_Array__push(s.tmp_0, "ottos");
    r0 = pxsim_Array__push(s.tmp_0, "oubit");
    r0 = pxsim_Array__push(s.tmp_0, "ouche");
    r0 = pxsim_Array__push(s.tmp_0, "oucht");
    r0 = pxsim_Array__push(s.tmp_0, "oueds");
    r0 = pxsim_Array__push(s.tmp_0, "ouens");
    r0 = pxsim_Array__push(s.tmp_0, "ought");
    r0 = pxsim_Array__push(s.tmp_0, "ouija");
    r0 = pxsim_Array__push(s.tmp_0, "oulks");
    r0 = pxsim_Array__push(s.tmp_0, "oumas");
    r0 = pxsim_Array__push(s.tmp_0, "ounce");
    r0 = pxsim_Array__push(s.tmp_0, "oundy");
    r0 = pxsim_Array__push(s.tmp_0, "oupas");
    r0 = pxsim_Array__push(s.tmp_0, "ouped");
    r0 = pxsim_Array__push(s.tmp_0, "ouphe");
    r0 = pxsim_Array__push(s.tmp_0, "ouphs");
    r0 = pxsim_Array__push(s.tmp_0, "ourey");
    r0 = pxsim_Array__push(s.tmp_0, "ourie");
    r0 = pxsim_Array__push(s.tmp_0, "ousel");
    r0 = pxsim_Array__push(s.tmp_0, "ousia");
    r0 = pxsim_Array__push(s.tmp_0, "ousts");
    r0 = pxsim_Array__push(s.tmp_0, "outby");
    r0 = pxsim_Array__push(s.tmp_0, "outdo");
    r0 = pxsim_Array__push(s.tmp_0, "outed");
    r0 = pxsim_Array__push(s.tmp_0, "outen");
    r0 = pxsim_Array__push(s.tmp_0, "outer");
    r0 = pxsim_Array__push(s.tmp_0, "outgo");
    r0 = pxsim_Array__push(s.tmp_0, "outie");
    r0 = pxsim_Array__push(s.tmp_0, "outre");
    r0 = pxsim_Array__push(s.tmp_0, "outro");
    r0 = pxsim_Array__push(s.tmp_0, "outta");
    r0 = pxsim_Array__push(s.tmp_0, "ouzel");
    r0 = pxsim_Array__push(s.tmp_0, "ouzos");
    r0 = pxsim_Array__push(s.tmp_0, "ovals");
    r0 = pxsim_Array__push(s.tmp_0, "ovary");
    r0 = pxsim_Array__push(s.tmp_0, "ovate");
    r0 = pxsim_Array__push(s.tmp_0, "ovels");
    r0 = pxsim_Array__push(s.tmp_0, "ovens");
    r0 = pxsim_Array__push(s.tmp_0, "overs");
    r0 = pxsim_Array__push(s.tmp_0, "overt");
    r0 = pxsim_Array__push(s.tmp_0, "ovine");
    r0 = pxsim_Array__push(s.tmp_0, "ovism");
    r0 = pxsim_Array__push(s.tmp_0, "ovist");
    r0 = pxsim_Array__push(s.tmp_0, "ovoid");
    r0 = pxsim_Array__push(s.tmp_0, "ovoli");
    r0 = pxsim_Array__push(s.tmp_0, "ovolo");
    r0 = pxsim_Array__push(s.tmp_0, "ovule");
    r0 = pxsim_Array__push(s.tmp_0, "oware");
    r0 = pxsim_Array__push(s.tmp_0, "owari");
    r0 = pxsim_Array__push(s.tmp_0, "owche");
    r0 = pxsim_Array__push(s.tmp_0, "owers");
    r0 = pxsim_Array__push(s.tmp_0, "owies");
    r0 = pxsim_Array__push(s.tmp_0, "owing");
    r0 = pxsim_Array__push(s.tmp_0, "owled");
    r0 = pxsim_Array__push(s.tmp_0, "owler");
    r0 = pxsim_Array__push(s.tmp_0, "owlet");
    r0 = pxsim_Array__push(s.tmp_0, "owned");
    r0 = pxsim_Array__push(s.tmp_0, "owner");
    r0 = pxsim_Array__push(s.tmp_0, "ownio");
    r0 = pxsim_Array__push(s.tmp_0, "owres");
    r0 = pxsim_Array__push(s.tmp_0, "owrie");
    r0 = pxsim_Array__push(s.tmp_0, "owsen");
    r0 = pxsim_Array__push(s.tmp_0, "oxbow");
    r0 = pxsim_Array__push(s.tmp_0, "oxeas");
    r0 = pxsim_Array__push(s.tmp_0, "oxers");
    r0 = pxsim_Array__push(s.tmp_0, "oxeye");
    r0 = pxsim_Array__push(s.tmp_0, "oxide");
    r0 = pxsim_Array__push(s.tmp_0, "oxids");
    r0 = pxsim_Array__push(s.tmp_0, "oxies");
    r0 = pxsim_Array__push(s.tmp_0, "oxime");
    r0 = pxsim_Array__push(s.tmp_0, "oxims");
    r0 = pxsim_Array__push(s.tmp_0, "oxine");
    r0 = pxsim_Array__push(s.tmp_0, "oxlip");
    r0 = pxsim_Array__push(s.tmp_0, "oxman");
    r0 = pxsim_Array__push(s.tmp_0, "oxmen");
    r0 = pxsim_Array__push(s.tmp_0, "oxter");
    r0 = pxsim_Array__push(s.tmp_0, "oyama");
    r0 = pxsim_Array__push(s.tmp_0, "oyers");
    r0 = pxsim_Array__push(s.tmp_0, "ozeki");
    r0 = pxsim_Array__push(s.tmp_0, "ozena");
    r0 = pxsim_Array__push(s.tmp_0, "ozone");
    r0 = pxsim_Array__push(s.tmp_0, "ozzie");
    r0 = pxsim_Array__push(s.tmp_0, "paaho");
    r0 = pxsim_Array__push(s.tmp_0, "paals");
    r0 = pxsim_Array__push(s.tmp_0, "paans");
    r0 = pxsim_Array__push(s.tmp_0, "pacai");
    r0 = pxsim_Array__push(s.tmp_0, "pacas");
    r0 = pxsim_Array__push(s.tmp_0, "pacay");
    r0 = pxsim_Array__push(s.tmp_0, "paced");
    r0 = pxsim_Array__push(s.tmp_0, "pacer");
    r0 = pxsim_Array__push(s.tmp_0, "paces");
    r0 = pxsim_Array__push(s.tmp_0, "pacey");
    r0 = pxsim_Array__push(s.tmp_0, "pacha");
    r0 = pxsim_Array__push(s.tmp_0, "packs");
    r0 = pxsim_Array__push(s.tmp_0, "packy");
    r0 = pxsim_Array__push(s.tmp_0, "pacos");
    r0 = pxsim_Array__push(s.tmp_0, "pacta");
    r0 = pxsim_Array__push(s.tmp_0, "pacts");
    r0 = pxsim_Array__push(s.tmp_0, "padam");
    r0 = pxsim_Array__push(s.tmp_0, "padas");
    r0 = pxsim_Array__push(s.tmp_0, "paddo");
    r0 = pxsim_Array__push(s.tmp_0, "paddy");
    r0 = pxsim_Array__push(s.tmp_0, "padis");
    r0 = pxsim_Array__push(s.tmp_0, "padle");
    r0 = pxsim_Array__push(s.tmp_0, "padma");
    r0 = pxsim_Array__push(s.tmp_0, "padou");
    r0 = pxsim_Array__push(s.tmp_0, "padre");
    r0 = pxsim_Array__push(s.tmp_0, "padri");
    r0 = pxsim_Array__push(s.tmp_0, "paean");
    r0 = pxsim_Array__push(s.tmp_0, "paedo");
    r0 = pxsim_Array__push(s.tmp_0, "paeon");
    r0 = pxsim_Array__push(s.tmp_0, "pagan");
    r0 = pxsim_Array__push(s.tmp_0, "paged");
    r0 = pxsim_Array__push(s.tmp_0, "pager");
    r0 = pxsim_Array__push(s.tmp_0, "pages");
    r0 = pxsim_Array__push(s.tmp_0, "pagle");
    r0 = pxsim_Array__push(s.tmp_0, "pagne");
    r0 = pxsim_Array__push(s.tmp_0, "pagod");
    r0 = pxsim_Array__push(s.tmp_0, "pagri");
    r0 = pxsim_Array__push(s.tmp_0, "pahit");
    r0 = pxsim_Array__push(s.tmp_0, "pahos");
    r0 = pxsim_Array__push(s.tmp_0, "pahus");
    r0 = pxsim_Array__push(s.tmp_0, "paiks");
    r0 = pxsim_Array__push(s.tmp_0, "pails");
    r0 = pxsim_Array__push(s.tmp_0, "pains");
    r0 = pxsim_Array__push(s.tmp_0, "paint");
    r0 = pxsim_Array__push(s.tmp_0, "paipe");
    r0 = pxsim_Array__push(s.tmp_0, "paips");
    r0 = pxsim_Array__push(s.tmp_0, "paire");
    r0 = pxsim_Array__push(s.tmp_0, "pairs");
    r0 = pxsim_Array__push(s.tmp_0, "paisa");
    r0 = pxsim_Array__push(s.tmp_0, "paise");
    r0 = pxsim_Array__push(s.tmp_0, "pakay");
    r0 = pxsim_Array__push(s.tmp_0, "pakka");
    r0 = pxsim_Array__push(s.tmp_0, "pakki");
    r0 = pxsim_Array__push(s.tmp_0, "pakua");
    r0 = pxsim_Array__push(s.tmp_0, "pakul");
    r0 = pxsim_Array__push(s.tmp_0, "palak");
    r0 = pxsim_Array__push(s.tmp_0, "palar");
    r0 = pxsim_Array__push(s.tmp_0, "palas");
    r0 = pxsim_Array__push(s.tmp_0, "palay");
    r0 = pxsim_Array__push(s.tmp_0, "palea");
    r0 = pxsim_Array__push(s.tmp_0, "paled");
    r0 = pxsim_Array__push(s.tmp_0, "paler");
    r0 = pxsim_Array__push(s.tmp_0, "pales");
    r0 = pxsim_Array__push(s.tmp_0, "palet");
    r0 = pxsim_Array__push(s.tmp_0, "palis");
    r0 = pxsim_Array__push(s.tmp_0, "palki");
    r0 = pxsim_Array__push(s.tmp_0, "palla");
    r0 = pxsim_Array__push(s.tmp_0, "palls");
    r0 = pxsim_Array__push(s.tmp_0, "pallu");
    r0 = pxsim_Array__push(s.tmp_0, "pally");
    r0 = pxsim_Array__push(s.tmp_0, "palms");
    r0 = pxsim_Array__push(s.tmp_0, "palmy");
    r0 = pxsim_Array__push(s.tmp_0, "palpi");
    r0 = pxsim_Array__push(s.tmp_0, "palps");
    r0 = pxsim_Array__push(s.tmp_0, "palsa");
    r0 = pxsim_Array__push(s.tmp_0, "palsy");
    r0 = pxsim_Array__push(s.tmp_0, "palus");
    r0 = pxsim_Array__push(s.tmp_0, "pamby");
    r0 = pxsim_Array__push(s.tmp_0, "pampa");
    r0 = pxsim_Array__push(s.tmp_0, "panax");
    r0 = pxsim_Array__push(s.tmp_0, "pance");
    r0 = pxsim_Array__push(s.tmp_0, "panch");
    r0 = pxsim_Array__push(s.tmp_0, "panda");
    r0 = pxsim_Array__push(s.tmp_0, "pands");
    r0 = pxsim_Array__push(s.tmp_0, "pandy");
    r0 = pxsim_Array__push(s.tmp_0, "paned");
    r0 = pxsim_Array__push(s.tmp_0, "panel");
    r0 = pxsim_Array__push(s.tmp_0, "panes");
    r0 = pxsim_Array__push(s.tmp_0, "panga");
    r0 = pxsim_Array__push(s.tmp_0, "pangs");
    r0 = pxsim_Array__push(s.tmp_0, "panic");
    r0 = pxsim_Array__push(s.tmp_0, "panim");
    r0 = pxsim_Array__push(s.tmp_0, "panir");
    r0 = pxsim_Array__push(s.tmp_0, "panko");
    r0 = pxsim_Array__push(s.tmp_0, "panks");
    r0 = pxsim_Array__push(s.tmp_0, "panna");
    r0 = pxsim_Array__push(s.tmp_0, "panne");
    r0 = pxsim_Array__push(s.tmp_0, "panni");
    r0 = pxsim_Array__push(s.tmp_0, "panny");
    r0 = pxsim_Array__push(s.tmp_0, "pansy");
    r0 = pxsim_Array__push(s.tmp_0, "panto");
    r0 = pxsim_Array__push(s.tmp_0, "pants");
    r0 = pxsim_Array__push(s.tmp_0, "panty");
    r0 = pxsim_Array__push(s.tmp_0, "paoli");
    r0 = pxsim_Array__push(s.tmp_0, "paolo");
    r0 = pxsim_Array__push(s.tmp_0, "papad");
    r0 = pxsim_Array__push(s.tmp_0, "papal");
    r0 = pxsim_Array__push(s.tmp_0, "papas");
    r0 = pxsim_Array__push(s.tmp_0, "papaw");
    r0 = pxsim_Array__push(s.tmp_0, "paper");
    r0 = pxsim_Array__push(s.tmp_0, "papes");
    r0 = pxsim_Array__push(s.tmp_0, "papey");
    r0 = pxsim_Array__push(s.tmp_0, "pappi");
    r0 = pxsim_Array__push(s.tmp_0, "pappy");
    r0 = pxsim_Array__push(s.tmp_0, "papri");
    r0 = pxsim_Array__push(s.tmp_0, "parae");
    r0 = pxsim_Array__push(s.tmp_0, "paras");
    r0 = pxsim_Array__push(s.tmp_0, "parch");
    r0 = pxsim_Array__push(s.tmp_0, "parcs");
    r0 = pxsim_Array__push(s.tmp_0, "pardi");
    r0 = pxsim_Array__push(s.tmp_0, "pards");
    r0 = pxsim_Array__push(s.tmp_0, "pardy");
    r0 = pxsim_Array__push(s.tmp_0, "pared");
    r0 = pxsim_Array__push(s.tmp_0, "paren");
    r0 = pxsim_Array__push(s.tmp_0, "pareo");
    r0 = pxsim_Array__push(s.tmp_0, "parer");
    r0 = pxsim_Array__push(s.tmp_0, "pares");
    r0 = pxsim_Array__push(s.tmp_0, "pareu");
    r0 = pxsim_Array__push(s.tmp_0, "parev");
    r0 = pxsim_Array__push(s.tmp_0, "parge");
    r0 = pxsim_Array__push(s.tmp_0, "pargo");
    r0 = pxsim_Array__push(s.tmp_0, "parid");
    r0 = pxsim_Array__push(s.tmp_0, "paris");
    r0 = pxsim_Array__push(s.tmp_0, "parka");
    r0 = pxsim_Array__push(s.tmp_0, "parki");
    r0 = pxsim_Array__push(s.tmp_0, "parks");
    r0 = pxsim_Array__push(s.tmp_0, "parky");
    r0 = pxsim_Array__push(s.tmp_0, "parle");
    r0 = pxsim_Array__push(s.tmp_0, "parly");
    r0 = pxsim_Array__push(s.tmp_0, "parma");
    r0 = pxsim_Array__push(s.tmp_0, "parmo");
    r0 = pxsim_Array__push(s.tmp_0, "parms");
    r0 = pxsim_Array__push(s.tmp_0, "parol");
    r0 = pxsim_Array__push(s.tmp_0, "parps");
    r0 = pxsim_Array__push(s.tmp_0, "parra");
    r0 = pxsim_Array__push(s.tmp_0, "parrs");
    r0 = pxsim_Array__push(s.tmp_0, "parry");
    r0 = pxsim_Array__push(s.tmp_0, "parse");
    r0 = pxsim_Array__push(s.tmp_0, "parte");
    r0 = pxsim_Array__push(s.tmp_0, "parti");
    r0 = pxsim_Array__push(s.tmp_0, "parts");
    r0 = pxsim_Array__push(s.tmp_0, "party");
    r0 = pxsim_Array__push(s.tmp_0, "parve");
    r0 = pxsim_Array__push(s.tmp_0, "parvo");
    r0 = pxsim_Array__push(s.tmp_0, "pasag");
    r0 = pxsim_Array__push(s.tmp_0, "pasar");
    r0 = pxsim_Array__push(s.tmp_0, "pasch");
    r0 = pxsim_Array__push(s.tmp_0, "paseo");
    r0 = pxsim_Array__push(s.tmp_0, "pases");
    r0 = pxsim_Array__push(s.tmp_0, "pasha");
    r0 = pxsim_Array__push(s.tmp_0, "pashm");
    r0 = pxsim_Array__push(s.tmp_0, "paska");
    r0 = pxsim_Array__push(s.tmp_0, "pasmo");
    r0 = pxsim_Array__push(s.tmp_0, "paspy");
    r0 = pxsim_Array__push(s.tmp_0, "passe");
    r0 = pxsim_Array__push(s.tmp_0, "passu");
    r0 = pxsim_Array__push(s.tmp_0, "pasta");
    r0 = pxsim_Array__push(s.tmp_0, "paste");
    r0 = pxsim_Array__push(s.tmp_0, "pasts");
    r0 = pxsim_Array__push(s.tmp_0, "pasty");
    r0 = pxsim_Array__push(s.tmp_0, "patas");
    r0 = pxsim_Array__push(s.tmp_0, "patch");
    r0 = pxsim_Array__push(s.tmp_0, "pated");
    r0 = pxsim_Array__push(s.tmp_0, "patee");
    r0 = pxsim_Array__push(s.tmp_0, "patel");
    r0 = pxsim_Array__push(s.tmp_0, "paten");
    r0 = pxsim_Array__push(s.tmp_0, "pater");
    r0 = pxsim_Array__push(s.tmp_0, "pates");
    r0 = pxsim_Array__push(s.tmp_0, "paths");
    r0 = pxsim_Array__push(s.tmp_0, "patia");
    r0 = pxsim_Array__push(s.tmp_0, "patin");
    r0 = pxsim_Array__push(s.tmp_0, "patio");
    r0 = pxsim_Array__push(s.tmp_0, "patka");
    r0 = pxsim_Array__push(s.tmp_0, "patly");
    r0 = pxsim_Array__push(s.tmp_0, "patsy");
    r0 = pxsim_Array__push(s.tmp_0, "patta");
    r0 = pxsim_Array__push(s.tmp_0, "patte");
    r0 = pxsim_Array__push(s.tmp_0, "pattu");
    r0 = pxsim_Array__push(s.tmp_0, "patty");
    r0 = pxsim_Array__push(s.tmp_0, "patus");
    r0 = pxsim_Array__push(s.tmp_0, "pauas");
    r0 = pxsim_Array__push(s.tmp_0, "pauls");
    r0 = pxsim_Array__push(s.tmp_0, "pause");
    r0 = pxsim_Array__push(s.tmp_0, "pauxi");
    r0 = pxsim_Array__push(s.tmp_0, "pavan");
    r0 = pxsim_Array__push(s.tmp_0, "pavas");
    r0 = pxsim_Array__push(s.tmp_0, "paved");
    r0 = pxsim_Array__push(s.tmp_0, "paven");
    r0 = pxsim_Array__push(s.tmp_0, "paver");
    r0 = pxsim_Array__push(s.tmp_0, "paves");
    r0 = pxsim_Array__push(s.tmp_0, "pavid");
    r0 = pxsim_Array__push(s.tmp_0, "pavie");
    r0 = pxsim_Array__push(s.tmp_0, "pavin");
    r0 = pxsim_Array__push(s.tmp_0, "pavis");
    r0 = pxsim_Array__push(s.tmp_0, "pavon");
    r0 = pxsim_Array__push(s.tmp_0, "pavvy");
    r0 = pxsim_Array__push(s.tmp_0, "pawas");
    r0 = pxsim_Array__push(s.tmp_0, "pawaw");
    r0 = pxsim_Array__push(s.tmp_0, "pawed");
    r0 = pxsim_Array__push(s.tmp_0, "pawer");
    r0 = pxsim_Array__push(s.tmp_0, "pawks");
    r0 = pxsim_Array__push(s.tmp_0, "pawky");
    r0 = pxsim_Array__push(s.tmp_0, "pawls");
    r0 = pxsim_Array__push(s.tmp_0, "pawns");
    r0 = pxsim_Array__push(s.tmp_0, "paxes");
    r0 = pxsim_Array__push(s.tmp_0, "payed");
    r0 = pxsim_Array__push(s.tmp_0, "payee");
    r0 = pxsim_Array__push(s.tmp_0, "payer");
    r0 = pxsim_Array__push(s.tmp_0, "payor");
    r0 = pxsim_Array__push(s.tmp_0, "paysd");
    r0 = pxsim_Array__push(s.tmp_0, "peace");
    r0 = pxsim_Array__push(s.tmp_0, "peach");
    r0 = pxsim_Array__push(s.tmp_0, "peage");
    r0 = pxsim_Array__push(s.tmp_0, "peags");
    r0 = pxsim_Array__push(s.tmp_0, "peake");
    r0 = pxsim_Array__push(s.tmp_0, "peaks");
    r0 = pxsim_Array__push(s.tmp_0, "peaky");
    r0 = pxsim_Array__push(s.tmp_0, "peals");
    r0 = pxsim_Array__push(s.tmp_0, "peans");
    r0 = pxsim_Array__push(s.tmp_0, "peare");
    r0 = pxsim_Array__push(s.tmp_0, "pearl");
    r0 = pxsim_Array__push(s.tmp_0, "pears");
    r0 = pxsim_Array__push(s.tmp_0, "peart");
    r0 = pxsim_Array__push(s.tmp_0, "pease");
    r0 = pxsim_Array__push(s.tmp_0, "peasy");
    r0 = pxsim_Array__push(s.tmp_0, "peats");
    r0 = pxsim_Array__push(s.tmp_0, "peaty");
    r0 = pxsim_Array__push(s.tmp_0, "peavy");
    r0 = pxsim_Array__push(s.tmp_0, "peaze");
    r0 = pxsim_Array__push(s.tmp_0, "pebas");
    r0 = pxsim_Array__push(s.tmp_0, "pecan");
    r0 = pxsim_Array__push(s.tmp_0, "pechs");
    r0 = pxsim_Array__push(s.tmp_0, "pecia");
    r0 = pxsim_Array__push(s.tmp_0, "pecke");
    r0 = pxsim_Array__push(s.tmp_0, "pecks");
    r0 = pxsim_Array__push(s.tmp_0, "pecky");
    r0 = pxsim_Array__push(s.tmp_0, "pects");
    r0 = pxsim_Array__push(s.tmp_0, "pedal");
    r0 = pxsim_Array__push(s.tmp_0, "pedes");
    r0 = pxsim_Array__push(s.tmp_0, "pedis");
    r0 = pxsim_Array__push(s.tmp_0, "pedon");
    r0 = pxsim_Array__push(s.tmp_0, "pedos");
    r0 = pxsim_Array__push(s.tmp_0, "pedro");
    r0 = pxsim_Array__push(s.tmp_0, "peece");
    r0 = pxsim_Array__push(s.tmp_0, "peeks");
    r0 = pxsim_Array__push(s.tmp_0, "peeky");
    r0 = pxsim_Array__push(s.tmp_0, "peels");
    r0 = pxsim_Array__push(s.tmp_0, "peely");
    r0 = pxsim_Array__push(s.tmp_0, "peens");
    r0 = pxsim_Array__push(s.tmp_0, "peent");
    r0 = pxsim_Array__push(s.tmp_0, "peeoy");
    r0 = pxsim_Array__push(s.tmp_0, "peepe");
    r0 = pxsim_Array__push(s.tmp_0, "peeps");
    r0 = pxsim_Array__push(s.tmp_0, "peepy");
    r0 = pxsim_Array__push(s.tmp_0, "peers");
    r0 = pxsim_Array__push(s.tmp_0, "peery");
    r0 = pxsim_Array__push(s.tmp_0, "peeve");
    r0 = pxsim_Array__push(s.tmp_0, "peevo");
    r0 = pxsim_Array__push(s.tmp_0, "peggy");
    r0 = pxsim_Array__push(s.tmp_0, "peghs");
    r0 = pxsim_Array__push(s.tmp_0, "pegma");
    r0 = pxsim_Array__push(s.tmp_0, "pegos");
    r0 = pxsim_Array__push(s.tmp_0, "peine");
    r0 = pxsim_Array__push(s.tmp_0, "peins");
    r0 = pxsim_Array__push(s.tmp_0, "peise");
    r0 = pxsim_Array__push(s.tmp_0, "peisy");
    r0 = pxsim_Array__push(s.tmp_0, "peize");
    r0 = pxsim_Array__push(s.tmp_0, "pekan");
    r0 = pxsim_Array__push(s.tmp_0, "pekau");
    r0 = pxsim_Array__push(s.tmp_0, "pekea");
    r0 = pxsim_Array__push(s.tmp_0, "pekes");
    r0 = pxsim_Array__push(s.tmp_0, "pekid");
    r0 = pxsim_Array__push(s.tmp_0, "pekin");
    r0 = pxsim_Array__push(s.tmp_0, "pekoe");
    r0 = pxsim_Array__push(s.tmp_0, "pelas");
    r0 = pxsim_Array__push(s.tmp_0, "pelau");
    r0 = pxsim_Array__push(s.tmp_0, "pelch");
    r0 = pxsim_Array__push(s.tmp_0, "peles");
    r0 = pxsim_Array__push(s.tmp_0, "pelfs");
    r0 = pxsim_Array__push(s.tmp_0, "pells");
    r0 = pxsim_Array__push(s.tmp_0, "pelma");
    r0 = pxsim_Array__push(s.tmp_0, "pelog");
    r0 = pxsim_Array__push(s.tmp_0, "pelon");
    r0 = pxsim_Array__push(s.tmp_0, "pelsh");
    r0 = pxsim_Array__push(s.tmp_0, "pelta");
    r0 = pxsim_Array__push(s.tmp_0, "pelts");
    r0 = pxsim_Array__push(s.tmp_0, "pelus");
    r0 = pxsim_Array__push(s.tmp_0, "penal");
    r0 = pxsim_Array__push(s.tmp_0, "pence");
    r0 = pxsim_Array__push(s.tmp_0, "pends");
    r0 = pxsim_Array__push(s.tmp_0, "pendu");
    r0 = pxsim_Array__push(s.tmp_0, "pened");
    r0 = pxsim_Array__push(s.tmp_0, "penes");
    r0 = pxsim_Array__push(s.tmp_0, "pengo");
    r0 = pxsim_Array__push(s.tmp_0, "penie");
    r0 = pxsim_Array__push(s.tmp_0, "penis");
    r0 = pxsim_Array__push(s.tmp_0, "penks");
    r0 = pxsim_Array__push(s.tmp_0, "penna");
    r0 = pxsim_Array__push(s.tmp_0, "penne");
    r0 = pxsim_Array__push(s.tmp_0, "penni");
    r0 = pxsim_Array__push(s.tmp_0, "penny");
    r0 = pxsim_Array__push(s.tmp_0, "pense");
    r0 = pxsim_Array__push(s.tmp_0, "pensy");
    r0 = pxsim_Array__push(s.tmp_0, "pents");
    r0 = pxsim_Array__push(s.tmp_0, "peola");
    r0 = pxsim_Array__push(s.tmp_0, "peons");
    r0 = pxsim_Array__push(s.tmp_0, "peony");
    r0 = pxsim_Array__push(s.tmp_0, "pepla");
    r0 = pxsim_Array__push(s.tmp_0, "peple");
    r0 = pxsim_Array__push(s.tmp_0, "pepon");
    r0 = pxsim_Array__push(s.tmp_0, "pepos");
    r0 = pxsim_Array__push(s.tmp_0, "peppy");
    r0 = pxsim_Array__push(s.tmp_0, "pepsi");
    r0 = pxsim_Array__push(s.tmp_0, "pequi");
    r0 = pxsim_Array__push(s.tmp_0, "perae");
    r0 = pxsim_Array__push(s.tmp_0, "perai");
    r0 = pxsim_Array__push(s.tmp_0, "perce");
    r0 = pxsim_Array__push(s.tmp_0, "perch");
    r0 = pxsim_Array__push(s.tmp_0, "percs");
    r0 = pxsim_Array__push(s.tmp_0, "perdu");
    r0 = pxsim_Array__push(s.tmp_0, "perdy");
    r0 = pxsim_Array__push(s.tmp_0, "perea");
    r0 = pxsim_Array__push(s.tmp_0, "peres");
    r0 = pxsim_Array__push(s.tmp_0, "perfs");
    r0 = pxsim_Array__push(s.tmp_0, "peril");
    r0 = pxsim_Array__push(s.tmp_0, "peris");
    r0 = pxsim_Array__push(s.tmp_0, "perks");
    r0 = pxsim_Array__push(s.tmp_0, "perky");
    r0 = pxsim_Array__push(s.tmp_0, "perle");
    r0 = pxsim_Array__push(s.tmp_0, "perls");
    r0 = pxsim_Array__push(s.tmp_0, "perms");
    r0 = pxsim_Array__push(s.tmp_0, "permy");
    r0 = pxsim_Array__push(s.tmp_0, "perne");
    r0 = pxsim_Array__push(s.tmp_0, "perns");
    r0 = pxsim_Array__push(s.tmp_0, "perog");
    r0 = pxsim_Array__push(s.tmp_0, "perps");
    r0 = pxsim_Array__push(s.tmp_0, "perry");
    r0 = pxsim_Array__push(s.tmp_0, "perse");
    r0 = pxsim_Array__push(s.tmp_0, "persp");
    r0 = pxsim_Array__push(s.tmp_0, "perst");
    r0 = pxsim_Array__push(s.tmp_0, "perts");
    r0 = pxsim_Array__push(s.tmp_0, "perve");
    r0 = pxsim_Array__push(s.tmp_0, "pervo");
    r0 = pxsim_Array__push(s.tmp_0, "pervs");
    r0 = pxsim_Array__push(s.tmp_0, "pervy");
    r0 = pxsim_Array__push(s.tmp_0, "pesch");
    r0 = pxsim_Array__push(s.tmp_0, "pesky");
    r0 = pxsim_Array__push(s.tmp_0, "pesos");
    r0 = pxsim_Array__push(s.tmp_0, "pesta");
    r0 = pxsim_Array__push(s.tmp_0, "pesto");
    r0 = pxsim_Array__push(s.tmp_0, "pests");
    r0 = pxsim_Array__push(s.tmp_0, "pesty");
    r0 = pxsim_Array__push(s.tmp_0, "petal");
    r0 = pxsim_Array__push(s.tmp_0, "petar");
    r0 = pxsim_Array__push(s.tmp_0, "peter");
    r0 = pxsim_Array__push(s.tmp_0, "petit");
    r0 = pxsim_Array__push(s.tmp_0, "petos");
    r0 = pxsim_Array__push(s.tmp_0, "petre");
    r0 = pxsim_Array__push(s.tmp_0, "petri");
    r0 = pxsim_Array__push(s.tmp_0, "petti");
    r0 = pxsim_Array__push(s.tmp_0, "petto");
    r0 = pxsim_Array__push(s.tmp_0, "petty");
    r0 = pxsim_Array__push(s.tmp_0, "pewed");
    r0 = pxsim_Array__push(s.tmp_0, "pewee");
    r0 = pxsim_Array__push(s.tmp_0, "pewit");
    r0 = pxsim_Array__push(s.tmp_0, "peyse");
    r0 = pxsim_Array__push(s.tmp_0, "pfftt");
    r0 = pxsim_Array__push(s.tmp_0, "phage");
    r0 = pxsim_Array__push(s.tmp_0, "phang");
    r0 = pxsim_Array__push(s.tmp_0, "phare");
    r0 = pxsim_Array__push(s.tmp_0, "pharm");
    r0 = pxsim_Array__push(s.tmp_0, "phase");
    r0 = pxsim_Array__push(s.tmp_0, "phasm");
    r0 = pxsim_Array__push(s.tmp_0, "pheer");
    r0 = pxsim_Array__push(s.tmp_0, "pheme");
    r0 = pxsim_Array__push(s.tmp_0, "phene");
    r0 = pxsim_Array__push(s.tmp_0, "pheon");
    r0 = pxsim_Array__push(s.tmp_0, "phese");
    r0 = pxsim_Array__push(s.tmp_0, "phial");
    r0 = pxsim_Array__push(s.tmp_0, "phies");
    r0 = pxsim_Array__push(s.tmp_0, "phish");
    r0 = pxsim_Array__push(s.tmp_0, "phizz");
    r0 = pxsim_Array__push(s.tmp_0, "phlox");
    r0 = pxsim_Array__push(s.tmp_0, "phobe");
    r0 = pxsim_Array__push(s.tmp_0, "phoca");
    r0 = pxsim_Array__push(s.tmp_0, "phone");
    r0 = pxsim_Array__push(s.tmp_0, "phono");
    r0 = pxsim_Array__push(s.tmp_0, "phons");
    r0 = pxsim_Array__push(s.tmp_0, "phony");
    r0 = pxsim_Array__push(s.tmp_0, "phooh");
    r0 = pxsim_Array__push(s.tmp_0, "phooo");
    r0 = pxsim_Array__push(s.tmp_0, "phota");
    r0 = pxsim_Array__push(s.tmp_0, "photo");
    r0 = pxsim_Array__push(s.tmp_0, "phots");
    r0 = pxsim_Array__push(s.tmp_0, "photy");
    r0 = pxsim_Array__push(s.tmp_0, "phpht");
    r0 = pxsim_Array__push(s.tmp_0, "phubs");
    r0 = pxsim_Array__push(s.tmp_0, "phuts");
    r0 = pxsim_Array__push(s.tmp_0, "phutu");
    r0 = pxsim_Array__push(s.tmp_0, "phwat");
    r0 = pxsim_Array__push(s.tmp_0, "phyla");
    r0 = pxsim_Array__push(s.tmp_0, "phyle");
    r0 = pxsim_Array__push(s.tmp_0, "phyma");
    r0 = pxsim_Array__push(s.tmp_0, "phynx");
    r0 = pxsim_Array__push(s.tmp_0, "physa");
    r0 = pxsim_Array__push(s.tmp_0, "piais");
    r0 = pxsim_Array__push(s.tmp_0, "piani");
    r0 = pxsim_Array__push(s.tmp_0, "piano");
    r0 = pxsim_Array__push(s.tmp_0, "pians");
    r0 = pxsim_Array__push(s.tmp_0, "pibal");
    r0 = pxsim_Array__push(s.tmp_0, "pical");
    r0 = pxsim_Array__push(s.tmp_0, "picas");
    r0 = pxsim_Array__push(s.tmp_0, "piccy");
    r0 = pxsim_Array__push(s.tmp_0, "picey");
    r0 = pxsim_Array__push(s.tmp_0, "pichi");
    r0 = pxsim_Array__push(s.tmp_0, "picks");
    r0 = pxsim_Array__push(s.tmp_0, "picky");
    r0 = pxsim_Array__push(s.tmp_0, "picon");
    r0 = pxsim_Array__push(s.tmp_0, "picot");
    r0 = pxsim_Array__push(s.tmp_0, "picra");
    r0 = pxsim_Array__push(s.tmp_0, "picul");
    r0 = pxsim_Array__push(s.tmp_0, "piece");
    r0 = pxsim_Array__push(s.tmp_0, "pieds");
    r0 = pxsim_Array__push(s.tmp_0, "piend");
    r0 = pxsim_Array__push(s.tmp_0, "piers");
    r0 = pxsim_Array__push(s.tmp_0, "piert");
    r0 = pxsim_Array__push(s.tmp_0, "pieta");
    r0 = pxsim_Array__push(s.tmp_0, "piets");
    r0 = pxsim_Array__push(s.tmp_0, "piety");
    r0 = pxsim_Array__push(s.tmp_0, "piezo");
    r0 = pxsim_Array__push(s.tmp_0, "piggy");
    r0 = pxsim_Array__push(s.tmp_0, "pight");
    r0 = pxsim_Array__push(s.tmp_0, "pigly");
    r0 = pxsim_Array__push(s.tmp_0, "pigmy");
    r0 = pxsim_Array__push(s.tmp_0, "piing");
    r0 = pxsim_Array__push(s.tmp_0, "pikas");
    r0 = pxsim_Array__push(s.tmp_0, "pikau");
    r0 = pxsim_Array__push(s.tmp_0, "piked");
    r0 = pxsim_Array__push(s.tmp_0, "pikel");
    r0 = pxsim_Array__push(s.tmp_0, "piker");
    r0 = pxsim_Array__push(s.tmp_0, "pikes");
    r0 = pxsim_Array__push(s.tmp_0, "pikey");
    r0 = pxsim_Array__push(s.tmp_0, "pikis");
    r0 = pxsim_Array__push(s.tmp_0, "pikul");
    r0 = pxsim_Array__push(s.tmp_0, "pilae");
    r0 = pxsim_Array__push(s.tmp_0, "pilaf");
    r0 = pxsim_Array__push(s.tmp_0, "pilao");
    r0 = pxsim_Array__push(s.tmp_0, "pilar");
    r0 = pxsim_Array__push(s.tmp_0, "pilau");
    r0 = pxsim_Array__push(s.tmp_0, "pilaw");
    r0 = pxsim_Array__push(s.tmp_0, "pilch");
    r0 = pxsim_Array__push(s.tmp_0, "pilea");
    r0 = pxsim_Array__push(s.tmp_0, "piled");
    r0 = pxsim_Array__push(s.tmp_0, "pilei");
    r0 = pxsim_Array__push(s.tmp_0, "piler");
    r0 = pxsim_Array__push(s.tmp_0, "piles");
    r0 = pxsim_Array__push(s.tmp_0, "piley");
    r0 = pxsim_Array__push(s.tmp_0, "pilin");
    r0 = pxsim_Array__push(s.tmp_0, "pilis");
    r0 = pxsim_Array__push(s.tmp_0, "pills");
    r0 = pxsim_Array__push(s.tmp_0, "pilon");
    r0 = pxsim_Array__push(s.tmp_0, "pilot");
    r0 = pxsim_Array__push(s.tmp_0, "pilow");
    r0 = pxsim_Array__push(s.tmp_0, "pilum");
    r0 = pxsim_Array__push(s.tmp_0, "pilus");
    r0 = pxsim_Array__push(s.tmp_0, "pimas");
    r0 = pxsim_Array__push(s.tmp_0, "pimps");
    r0 = pxsim_Array__push(s.tmp_0, "pinas");
    r0 = pxsim_Array__push(s.tmp_0, "pinax");
    r0 = pxsim_Array__push(s.tmp_0, "pince");
    r0 = pxsim_Array__push(s.tmp_0, "pinch");
    r0 = pxsim_Array__push(s.tmp_0, "pinda");
    r0 = pxsim_Array__push(s.tmp_0, "pinds");
    r0 = pxsim_Array__push(s.tmp_0, "pined");
    r0 = pxsim_Array__push(s.tmp_0, "piner");
    r0 = pxsim_Array__push(s.tmp_0, "pines");
    r0 = pxsim_Array__push(s.tmp_0, "piney");
    r0 = pxsim_Array__push(s.tmp_0, "pinga");
    r0 = pxsim_Array__push(s.tmp_0, "pinge");
    r0 = pxsim_Array__push(s.tmp_0, "pingo");
    r0 = pxsim_Array__push(s.tmp_0, "pings");
    r0 = pxsim_Array__push(s.tmp_0, "pinko");
    r0 = pxsim_Array__push(s.tmp_0, "pinks");
    r0 = pxsim_Array__push(s.tmp_0, "pinky");
    r0 = pxsim_Array__push(s.tmp_0, "pinna");
    r0 = pxsim_Array__push(s.tmp_0, "pinny");
    r0 = pxsim_Array__push(s.tmp_0, "pinol");
    r0 = pxsim_Array__push(s.tmp_0, "pinon");
    r0 = pxsim_Array__push(s.tmp_0, "pinot");
    r0 = pxsim_Array__push(s.tmp_0, "pinta");
    r0 = pxsim_Array__push(s.tmp_0, "pinto");
    r0 = pxsim_Array__push(s.tmp_0, "pints");
    r0 = pxsim_Array__push(s.tmp_0, "pinup");
    r0 = pxsim_Array__push(s.tmp_0, "pions");
    r0 = pxsim_Array__push(s.tmp_0, "piony");
    r0 = pxsim_Array__push(s.tmp_0, "pious");
    r0 = pxsim_Array__push(s.tmp_0, "pioye");
    r0 = pxsim_Array__push(s.tmp_0, "pioys");
    r0 = pxsim_Array__push(s.tmp_0, "pipal");
    r0 = pxsim_Array__push(s.tmp_0, "pipas");
    r0 = pxsim_Array__push(s.tmp_0, "piped");
    r0 = pxsim_Array__push(s.tmp_0, "piper");
    r0 = pxsim_Array__push(s.tmp_0, "pipes");
    r0 = pxsim_Array__push(s.tmp_0, "pipet");
    r0 = pxsim_Array__push(s.tmp_0, "pipid");
    r0 = pxsim_Array__push(s.tmp_0, "pipis");
    r0 = pxsim_Array__push(s.tmp_0, "pipit");
    r0 = pxsim_Array__push(s.tmp_0, "pippy");
    r0 = pxsim_Array__push(s.tmp_0, "pipul");
    r0 = pxsim_Array__push(s.tmp_0, "pique");
    r0 = pxsim_Array__push(s.tmp_0, "piqui");
    r0 = pxsim_Array__push(s.tmp_0, "pirai");
    r0 = pxsim_Array__push(s.tmp_0, "pirks");
    r0 = pxsim_Array__push(s.tmp_0, "pirls");
    r0 = pxsim_Array__push(s.tmp_0, "pirns");
    r0 = pxsim_Array__push(s.tmp_0, "pirog");
    r0 = pxsim_Array__push(s.tmp_0, "pirre");
    r0 = pxsim_Array__push(s.tmp_0, "pirri");
    r0 = pxsim_Array__push(s.tmp_0, "pirrs");
    r0 = pxsim_Array__push(s.tmp_0, "pisco");
    r0 = pxsim_Array__push(s.tmp_0, "pises");
    r0 = pxsim_Array__push(s.tmp_0, "pisky");
    r0 = pxsim_Array__push(s.tmp_0, "pisos");
    r0 = pxsim_Array__push(s.tmp_0, "pissy");
    r0 = pxsim_Array__push(s.tmp_0, "piste");
    r0 = pxsim_Array__push(s.tmp_0, "pitas");
    r0 = pxsim_Array__push(s.tmp_0, "pitch");
    r0 = pxsim_Array__push(s.tmp_0, "piths");
    r0 = pxsim_Array__push(s.tmp_0, "pithy");
    r0 = pxsim_Array__push(s.tmp_0, "piton");
    r0 = pxsim_Array__push(s.tmp_0, "pitot");
    r0 = pxsim_Array__push(s.tmp_0, "pitso");
    r0 = pxsim_Array__push(s.tmp_0, "pitsu");
    r0 = pxsim_Array__push(s.tmp_0, "pitta");
    r0 = pxsim_Array__push(s.tmp_0, "pittu");
    r0 = pxsim_Array__push(s.tmp_0, "piuma");
    r0 = pxsim_Array__push(s.tmp_0, "piums");
    r0 = pxsim_Array__push(s.tmp_0, "pivos");
    r0 = pxsim_Array__push(s.tmp_0, "pivot");
    r0 = pxsim_Array__push(s.tmp_0, "pixel");
    r0 = pxsim_Array__push(s.tmp_0, "pixes");
    r0 = pxsim_Array__push(s.tmp_0, "pixie");
    r0 = pxsim_Array__push(s.tmp_0, "piyut");
    r0 = pxsim_Array__push(s.tmp_0, "pized");
    r0 = pxsim_Array__push(s.tmp_0, "pizer");
    r0 = pxsim_Array__push(s.tmp_0, "pizes");
    r0 = pxsim_Array__push(s.tmp_0, "pizza");
    r0 = pxsim_Array__push(s.tmp_0, "plaas");
    r0 = pxsim_Array__push(s.tmp_0, "place");
    r0 = pxsim_Array__push(s.tmp_0, "plack");
    r0 = pxsim_Array__push(s.tmp_0, "plaga");
    r0 = pxsim_Array__push(s.tmp_0, "plage");
    r0 = pxsim_Array__push(s.tmp_0, "plaid");
    r0 = pxsim_Array__push(s.tmp_0, "plaig");
    r0 = pxsim_Array__push(s.tmp_0, "plain");
    r0 = pxsim_Array__push(s.tmp_0, "plait");
    r0 = pxsim_Array__push(s.tmp_0, "planc");
    r0 = pxsim_Array__push(s.tmp_0, "plane");
    r0 = pxsim_Array__push(s.tmp_0, "planh");
    r0 = pxsim_Array__push(s.tmp_0, "plank");
    r0 = pxsim_Array__push(s.tmp_0, "plans");
    r0 = pxsim_Array__push(s.tmp_0, "plant");
    r0 = pxsim_Array__push(s.tmp_0, "plaps");
    r0 = pxsim_Array__push(s.tmp_0, "plash");
    r0 = pxsim_Array__push(s.tmp_0, "plasm");
    r0 = pxsim_Array__push(s.tmp_0, "plast");
    r0 = pxsim_Array__push(s.tmp_0, "plate");
    r0 = pxsim_Array__push(s.tmp_0, "plats");
    r0 = pxsim_Array__push(s.tmp_0, "platt");
    r0 = pxsim_Array__push(s.tmp_0, "platy");
    r0 = pxsim_Array__push(s.tmp_0, "plaud");
    r0 = pxsim_Array__push(s.tmp_0, "plaur");
    r0 = pxsim_Array__push(s.tmp_0, "plavs");
    r0 = pxsim_Array__push(s.tmp_0, "playa");
    r0 = pxsim_Array__push(s.tmp_0, "plays");
    r0 = pxsim_Array__push(s.tmp_0, "plaza");
    r0 = pxsim_Array__push(s.tmp_0, "plead");
    r0 = pxsim_Array__push(s.tmp_0, "pleas");
    r0 = pxsim_Array__push(s.tmp_0, "pleat");
    r0 = pxsim_Array__push(s.tmp_0, "plebe");
    r0 = pxsim_Array__push(s.tmp_0, "plebs");
    r0 = pxsim_Array__push(s.tmp_0, "pleck");
    r0 = pxsim_Array__push(s.tmp_0, "pleep");
    r0 = pxsim_Array__push(s.tmp_0, "plein");
    r0 = pxsim_Array__push(s.tmp_0, "plena");
    r0 = pxsim_Array__push(s.tmp_0, "plene");
    r0 = pxsim_Array__push(s.tmp_0, "pleno");
    r0 = pxsim_Array__push(s.tmp_0, "pleon");
    r0 = pxsim_Array__push(s.tmp_0, "plesh");
    r0 = pxsim_Array__push(s.tmp_0, "plets");
    r0 = pxsim_Array__push(s.tmp_0, "plews");
    r0 = pxsim_Array__push(s.tmp_0, "plexi");
    r0 = pxsim_Array__push(s.tmp_0, "plica");
    r0 = pxsim_Array__push(s.tmp_0, "plied");
    r0 = pxsim_Array__push(s.tmp_0, "plier");
    r0 = pxsim_Array__push(s.tmp_0, "plies");
    r0 = pxsim_Array__push(s.tmp_0, "pligs");
    r0 = pxsim_Array__push(s.tmp_0, "plims");
    r0 = pxsim_Array__push(s.tmp_0, "pling");
    r0 = pxsim_Array__push(s.tmp_0, "plink");
    r0 = pxsim_Array__push(s.tmp_0, "plips");
    r0 = pxsim_Array__push(s.tmp_0, "plish");
    r0 = pxsim_Array__push(s.tmp_0, "ploat");
    r0 = pxsim_Array__push(s.tmp_0, "ploce");
    r0 = pxsim_Array__push(s.tmp_0, "plock");
    r0 = pxsim_Array__push(s.tmp_0, "plods");
    r0 = pxsim_Array__push(s.tmp_0, "ploit");
    r0 = pxsim_Array__push(s.tmp_0, "plomb");
    r0 = pxsim_Array__push(s.tmp_0, "plong");
    r0 = pxsim_Array__push(s.tmp_0, "plonk");
    r0 = pxsim_Array__push(s.tmp_0, "plook");
    r0 = pxsim_Array__push(s.tmp_0, "ploot");
    r0 = pxsim_Array__push(s.tmp_0, "plops");
    r0 = pxsim_Array__push(s.tmp_0, "plore");
    r0 = pxsim_Array__push(s.tmp_0, "plots");
    r0 = pxsim_Array__push(s.tmp_0, "plotz");
    r0 = pxsim_Array__push(s.tmp_0, "plouk");
    r0 = pxsim_Array__push(s.tmp_0, "plout");
    r0 = pxsim_Array__push(s.tmp_0, "plows");
    r0 = pxsim_Array__push(s.tmp_0, "plowt");
    r0 = pxsim_Array__push(s.tmp_0, "ploye");
    r0 = pxsim_Array__push(s.tmp_0, "ploys");
    r0 = pxsim_Array__push(s.tmp_0, "pluck");
    r0 = pxsim_Array__push(s.tmp_0, "pluds");
    r0 = pxsim_Array__push(s.tmp_0, "plues");
    r0 = pxsim_Array__push(s.tmp_0, "pluff");
    r0 = pxsim_Array__push(s.tmp_0, "plugs");
    r0 = pxsim_Array__push(s.tmp_0, "pluke");
    r0 = pxsim_Array__push(s.tmp_0, "plumb");
    r0 = pxsim_Array__push(s.tmp_0, "plume");
    r0 = pxsim_Array__push(s.tmp_0, "plump");
    r0 = pxsim_Array__push(s.tmp_0, "plums");
    r0 = pxsim_Array__push(s.tmp_0, "plumy");
    r0 = pxsim_Array__push(s.tmp_0, "plung");
    r0 = pxsim_Array__push(s.tmp_0, "plunk");
    r0 = pxsim_Array__push(s.tmp_0, "pluot");
    r0 = pxsim_Array__push(s.tmp_0, "plups");
    r0 = pxsim_Array__push(s.tmp_0, "plush");
    r0 = pxsim_Array__push(s.tmp_0, "plute");
    r0 = pxsim_Array__push(s.tmp_0, "pluto");
    r0 = pxsim_Array__push(s.tmp_0, "pluty");
    r0 = pxsim_Array__push(s.tmp_0, "plyer");
    r0 = pxsim_Array__push(s.tmp_0, "pneus");
    r0 = pxsim_Array__push(s.tmp_0, "poach");
    r0 = pxsim_Array__push(s.tmp_0, "poaka");
    r0 = pxsim_Array__push(s.tmp_0, "poake");
    r0 = pxsim_Array__push(s.tmp_0, "poalo");
    r0 = pxsim_Array__push(s.tmp_0, "pobby");
    r0 = pxsim_Array__push(s.tmp_0, "poboy");
    r0 = pxsim_Array__push(s.tmp_0, "pocan");
    r0 = pxsim_Array__push(s.tmp_0, "poche");
    r0 = pxsim_Array__push(s.tmp_0, "pocho");
    r0 = pxsim_Array__push(s.tmp_0, "pocks");
    r0 = pxsim_Array__push(s.tmp_0, "pocky");
    r0 = pxsim_Array__push(s.tmp_0, "podal");
    r0 = pxsim_Array__push(s.tmp_0, "poddy");
    r0 = pxsim_Array__push(s.tmp_0, "podex");
    r0 = pxsim_Array__push(s.tmp_0, "podge");
    r0 = pxsim_Array__push(s.tmp_0, "podgy");
    r0 = pxsim_Array__push(s.tmp_0, "podia");
    r0 = pxsim_Array__push(s.tmp_0, "podos");
    r0 = pxsim_Array__push(s.tmp_0, "podus");
    r0 = pxsim_Array__push(s.tmp_0, "poems");
    r0 = pxsim_Array__push(s.tmp_0, "poena");
    r0 = pxsim_Array__push(s.tmp_0, "poeps");
    r0 = pxsim_Array__push(s.tmp_0, "poesy");
    r0 = pxsim_Array__push(s.tmp_0, "poete");
    r0 = pxsim_Array__push(s.tmp_0, "poets");
    r0 = pxsim_Array__push(s.tmp_0, "pogey");
    r0 = pxsim_Array__push(s.tmp_0, "pogge");
    r0 = pxsim_Array__push(s.tmp_0, "poggy");
    r0 = pxsim_Array__push(s.tmp_0, "pogos");
    r0 = pxsim_Array__push(s.tmp_0, "pogue");
    r0 = pxsim_Array__push(s.tmp_0, "pohed");
    r0 = pxsim_Array__push(s.tmp_0, "poilu");
    r0 = pxsim_Array__push(s.tmp_0, "poind");
    r0 = pxsim_Array__push(s.tmp_0, "point");
    r0 = pxsim_Array__push(s.tmp_0, "poire");
    r0 = pxsim_Array__push(s.tmp_0, "poise");
    r0 = pxsim_Array__push(s.tmp_0, "pokal");
    r0 = pxsim_Array__push(s.tmp_0, "poked");
    r0 = pxsim_Array__push(s.tmp_0, "poker");
    r0 = pxsim_Array__push(s.tmp_0, "pokes");
    r0 = pxsim_Array__push(s.tmp_0, "pokey");
    r0 = pxsim_Array__push(s.tmp_0, "pokie");
    r0 = pxsim_Array__push(s.tmp_0, "pokit");
    r0 = pxsim_Array__push(s.tmp_0, "polar");
    r0 = pxsim_Array__push(s.tmp_0, "poled");
    r0 = pxsim_Array__push(s.tmp_0, "poler");
    r0 = pxsim_Array__push(s.tmp_0, "poles");
    r0 = pxsim_Array__push(s.tmp_0, "poley");
    r0 = pxsim_Array__push(s.tmp_0, "polio");
    r0 = pxsim_Array__push(s.tmp_0, "polis");
    r0 = pxsim_Array__push(s.tmp_0, "polje");
    r0 = pxsim_Array__push(s.tmp_0, "polka");
    r0 = pxsim_Array__push(s.tmp_0, "polks");
    r0 = pxsim_Array__push(s.tmp_0, "pollo");
    r0 = pxsim_Array__push(s.tmp_0, "polls");
    r0 = pxsim_Array__push(s.tmp_0, "polly");
    r0 = pxsim_Array__push(s.tmp_0, "polos");
    r0 = pxsim_Array__push(s.tmp_0, "polts");
    r0 = pxsim_Array__push(s.tmp_0, "polyp");
    r0 = pxsim_Array__push(s.tmp_0, "polys");
    r0 = pxsim_Array__push(s.tmp_0, "pomas");
    r0 = pxsim_Array__push(s.tmp_0, "pombe");
    r0 = pxsim_Array__push(s.tmp_0, "pomes");
    r0 = pxsim_Array__push(s.tmp_0, "pomme");
    r0 = pxsim_Array__push(s.tmp_0, "pommy");
    r0 = pxsim_Array__push(s.tmp_0, "pomos");
    r0 = pxsim_Array__push(s.tmp_0, "pompa");
    r0 = pxsim_Array__push(s.tmp_0, "pomps");
    r0 = pxsim_Array__push(s.tmp_0, "ponce");
    r0 = pxsim_Array__push(s.tmp_0, "poncy");
    r0 = pxsim_Array__push(s.tmp_0, "ponds");
    r0 = pxsim_Array__push(s.tmp_0, "pondy");
    r0 = pxsim_Array__push(s.tmp_0, "pones");
    r0 = pxsim_Array__push(s.tmp_0, "poney");
    r0 = pxsim_Array__push(s.tmp_0, "ponga");
    r0 = pxsim_Array__push(s.tmp_0, "pongo");
    r0 = pxsim_Array__push(s.tmp_0, "pongs");
    r0 = pxsim_Array__push(s.tmp_0, "pongy");
    r0 = pxsim_Array__push(s.tmp_0, "ponks");
    r0 = pxsim_Array__push(s.tmp_0, "ponor");
    r0 = pxsim_Array__push(s.tmp_0, "ponto");
    r0 = pxsim_Array__push(s.tmp_0, "ponts");
    r0 = pxsim_Array__push(s.tmp_0, "ponty");
    r0 = pxsim_Array__push(s.tmp_0, "ponzu");
    r0 = pxsim_Array__push(s.tmp_0, "pooay");
    r0 = pxsim_Array__push(s.tmp_0, "pooch");
    r0 = pxsim_Array__push(s.tmp_0, "poods");
    r0 = pxsim_Array__push(s.tmp_0, "pooed");
    r0 = pxsim_Array__push(s.tmp_0, "pooey");
    r0 = pxsim_Array__push(s.tmp_0, "poofs");
    r0 = pxsim_Array__push(s.tmp_0, "poofy");
    r0 = pxsim_Array__push(s.tmp_0, "poohs");
    r0 = pxsim_Array__push(s.tmp_0, "poohy");
    r0 = pxsim_Array__push(s.tmp_0, "pooja");
    r0 = pxsim_Array__push(s.tmp_0, "pooka");
    r0 = pxsim_Array__push(s.tmp_0, "pooks");
    r0 = pxsim_Array__push(s.tmp_0, "pools");
    r0 = pxsim_Array__push(s.tmp_0, "pooly");
    r0 = pxsim_Array__push(s.tmp_0, "poons");
    r0 = pxsim_Array__push(s.tmp_0, "poopa");
    r0 = pxsim_Array__push(s.tmp_0, "poops");
    r0 = pxsim_Array__push(s.tmp_0, "poopy");
    r0 = pxsim_Array__push(s.tmp_0, "poori");
    r0 = pxsim_Array__push(s.tmp_0, "poort");
    r0 = pxsim_Array__push(s.tmp_0, "poots");
    r0 = pxsim_Array__push(s.tmp_0, "pooty");
    r0 = pxsim_Array__push(s.tmp_0, "poove");
    r0 = pxsim_Array__push(s.tmp_0, "poovy");
    r0 = pxsim_Array__push(s.tmp_0, "popes");
    r0 = pxsim_Array__push(s.tmp_0, "popia");
    r0 = pxsim_Array__push(s.tmp_0, "popos");
    r0 = pxsim_Array__push(s.tmp_0, "poppa");
    r0 = pxsim_Array__push(s.tmp_0, "poppy");
    r0 = pxsim_Array__push(s.tmp_0, "popsy");
    r0 = pxsim_Array__push(s.tmp_0, "popup");
    r0 = pxsim_Array__push(s.tmp_0, "porae");
    r0 = pxsim_Array__push(s.tmp_0, "poral");
    r0 = pxsim_Array__push(s.tmp_0, "porch");
    r0 = pxsim_Array__push(s.tmp_0, "pored");
    r0 = pxsim_Array__push(s.tmp_0, "porer");
    r0 = pxsim_Array__push(s.tmp_0, "pores");
    r0 = pxsim_Array__push(s.tmp_0, "porey");
    r0 = pxsim_Array__push(s.tmp_0, "porge");
    r0 = pxsim_Array__push(s.tmp_0, "porgy");
    r0 = pxsim_Array__push(s.tmp_0, "porin");
    r0 = pxsim_Array__push(s.tmp_0, "porks");
    r0 = pxsim_Array__push(s.tmp_0, "porky");
    r0 = pxsim_Array__push(s.tmp_0, "porno");
    r0 = pxsim_Array__push(s.tmp_0, "porns");
    r0 = pxsim_Array__push(s.tmp_0, "porny");
    r0 = pxsim_Array__push(s.tmp_0, "porta");
    r0 = pxsim_Array__push(s.tmp_0, "porte");
    r0 = pxsim_Array__push(s.tmp_0, "porth");
    r0 = pxsim_Array__push(s.tmp_0, "ports");
    r0 = pxsim_Array__push(s.tmp_0, "porty");
    r0 = pxsim_Array__push(s.tmp_0, "porus");
    r0 = pxsim_Array__push(s.tmp_0, "posca");
    r0 = pxsim_Array__push(s.tmp_0, "posed");
    r0 = pxsim_Array__push(s.tmp_0, "poser");
    r0 = pxsim_Array__push(s.tmp_0, "poses");
    r0 = pxsim_Array__push(s.tmp_0, "poset");
    r0 = pxsim_Array__push(s.tmp_0, "posey");
    r0 = pxsim_Array__push(s.tmp_0, "posho");
    r0 = pxsim_Array__push(s.tmp_0, "posit");
    r0 = pxsim_Array__push(s.tmp_0, "posol");
    r0 = pxsim_Array__push(s.tmp_0, "posse");
    r0 = pxsim_Array__push(s.tmp_0, "poste");
    r0 = pxsim_Array__push(s.tmp_0, "posts");
    r0 = pxsim_Array__push(s.tmp_0, "potae");
    r0 = pxsim_Array__push(s.tmp_0, "potai");
    r0 = pxsim_Array__push(s.tmp_0, "potch");
    r0 = pxsim_Array__push(s.tmp_0, "poted");
    r0 = pxsim_Array__push(s.tmp_0, "potes");
    r0 = pxsim_Array__push(s.tmp_0, "potin");
    r0 = pxsim_Array__push(s.tmp_0, "potoo");
    r0 = pxsim_Array__push(s.tmp_0, "potro");
    r0 = pxsim_Array__push(s.tmp_0, "potsy");
    r0 = pxsim_Array__push(s.tmp_0, "potto");
    r0 = pxsim_Array__push(s.tmp_0, "potts");
    r0 = pxsim_Array__push(s.tmp_0, "potty");
    r0 = pxsim_Array__push(s.tmp_0, "pouce");
    r0 = pxsim_Array__push(s.tmp_0, "pouch");
    r0 = pxsim_Array__push(s.tmp_0, "pouff");
    r0 = pxsim_Array__push(s.tmp_0, "poufs");
    r0 = pxsim_Array__push(s.tmp_0, "poufy");
    r0 = pxsim_Array__push(s.tmp_0, "pouis");
    r0 = pxsim_Array__push(s.tmp_0, "pouke");
    r0 = pxsim_Array__push(s.tmp_0, "pouks");
    r0 = pxsim_Array__push(s.tmp_0, "poule");
    r0 = pxsim_Array__push(s.tmp_0, "poulp");
    r0 = pxsim_Array__push(s.tmp_0, "poult");
    r0 = pxsim_Array__push(s.tmp_0, "pound");
    r0 = pxsim_Array__push(s.tmp_0, "poupe");
    r0 = pxsim_Array__push(s.tmp_0, "poupt");
    r0 = pxsim_Array__push(s.tmp_0, "pours");
    r0 = pxsim_Array__push(s.tmp_0, "pousy");
    r0 = pxsim_Array__push(s.tmp_0, "pouts");
    r0 = pxsim_Array__push(s.tmp_0, "pouty");
    r0 = pxsim_Array__push(s.tmp_0, "povos");
    r0 = pxsim_Array__push(s.tmp_0, "powan");
    r0 = pxsim_Array__push(s.tmp_0, "power");
    r0 = pxsim_Array__push(s.tmp_0, "powie");
    r0 = pxsim_Array__push(s.tmp_0, "powin");
    r0 = pxsim_Array__push(s.tmp_0, "powis");
    r0 = pxsim_Array__push(s.tmp_0, "powlt");
    r0 = pxsim_Array__push(s.tmp_0, "pownd");
    r0 = pxsim_Array__push(s.tmp_0, "powns");
    r0 = pxsim_Array__push(s.tmp_0, "powny");
    r0 = pxsim_Array__push(s.tmp_0, "powre");
    r0 = pxsim_Array__push(s.tmp_0, "powsy");
    r0 = pxsim_Array__push(s.tmp_0, "poxed");
    r0 = pxsim_Array__push(s.tmp_0, "poxes");
    r0 = pxsim_Array__push(s.tmp_0, "poyas");
    r0 = pxsim_Array__push(s.tmp_0, "poynt");
    r0 = pxsim_Array__push(s.tmp_0, "poyou");
    r0 = pxsim_Array__push(s.tmp_0, "poyse");
    r0 = pxsim_Array__push(s.tmp_0, "pozzy");
    r0 = pxsim_Array__push(s.tmp_0, "praam");
    r0 = pxsim_Array__push(s.tmp_0, "prads");
    r0 = pxsim_Array__push(s.tmp_0, "prags");
    r0 = pxsim_Array__push(s.tmp_0, "prahu");
    r0 = pxsim_Array__push(s.tmp_0, "prams");
    r0 = pxsim_Array__push(s.tmp_0, "prana");
    r0 = pxsim_Array__push(s.tmp_0, "prang");
    r0 = pxsim_Array__push(s.tmp_0, "prank");
    r0 = pxsim_Array__push(s.tmp_0, "praos");
    r0 = pxsim_Array__push(s.tmp_0, "praps");
    r0 = pxsim_Array__push(s.tmp_0, "prase");
    r0 = pxsim_Array__push(s.tmp_0, "prate");
    r0 = pxsim_Array__push(s.tmp_0, "prats");
    r0 = pxsim_Array__push(s.tmp_0, "pratt");
    r0 = pxsim_Array__push(s.tmp_0, "praty");
    r0 = pxsim_Array__push(s.tmp_0, "praus");
    r0 = pxsim_Array__push(s.tmp_0, "prawn");
    r0 = pxsim_Array__push(s.tmp_0, "prays");
    r0 = pxsim_Array__push(s.tmp_0, "preak");
    r0 = pxsim_Array__push(s.tmp_0, "predy");
    r0 = pxsim_Array__push(s.tmp_0, "preed");
    r0 = pxsim_Array__push(s.tmp_0, "preem");
    r0 = pxsim_Array__push(s.tmp_0, "preen");
    r0 = pxsim_Array__push(s.tmp_0, "prees");
    r0 = pxsim_Array__push(s.tmp_0, "preif");
    r0 = pxsim_Array__push(s.tmp_0, "preke");
    r0 = pxsim_Array__push(s.tmp_0, "prems");
    r0 = pxsim_Array__push(s.tmp_0, "premy");
    r0 = pxsim_Array__push(s.tmp_0, "prent");
    r0 = pxsim_Array__push(s.tmp_0, "preon");
    r0 = pxsim_Array__push(s.tmp_0, "preop");
    r0 = pxsim_Array__push(s.tmp_0, "preps");
    r0 = pxsim_Array__push(s.tmp_0, "presa");
    r0 = pxsim_Array__push(s.tmp_0, "prese");
    r0 = pxsim_Array__push(s.tmp_0, "press");
    r0 = pxsim_Array__push(s.tmp_0, "prest");
    r0 = pxsim_Array__push(s.tmp_0, "preta");
    r0 = pxsim_Array__push(s.tmp_0, "preux");
    r0 = pxsim_Array__push(s.tmp_0, "preve");
    r0 = pxsim_Array__push(s.tmp_0, "prexy");
    r0 = pxsim_Array__push(s.tmp_0, "preys");
    r0 = pxsim_Array__push(s.tmp_0, "prial");
    r0 = pxsim_Array__push(s.tmp_0, "prian");
    r0 = pxsim_Array__push(s.tmp_0, "price");
    r0 = pxsim_Array__push(s.tmp_0, "prick");
    r0 = pxsim_Array__push(s.tmp_0, "pricy");
    r0 = pxsim_Array__push(s.tmp_0, "pride");
    r0 = pxsim_Array__push(s.tmp_0, "pridy");
    r0 = pxsim_Array__push(s.tmp_0, "pried");
    r0 = pxsim_Array__push(s.tmp_0, "prief");
    r0 = pxsim_Array__push(s.tmp_0, "prier");
    r0 = pxsim_Array__push(s.tmp_0, "pries");
    r0 = pxsim_Array__push(s.tmp_0, "prigs");
    r0 = pxsim_Array__push(s.tmp_0, "prill");
    r0 = pxsim_Array__push(s.tmp_0, "prima");
    r0 = pxsim_Array__push(s.tmp_0, "prime");
    r0 = pxsim_Array__push(s.tmp_0, "primi");
    r0 = pxsim_Array__push(s.tmp_0, "primo");
    r0 = pxsim_Array__push(s.tmp_0, "primp");
    r0 = pxsim_Array__push(s.tmp_0, "prims");
    r0 = pxsim_Array__push(s.tmp_0, "primy");
    r0 = pxsim_Array__push(s.tmp_0, "pring");
    r0 = pxsim_Array__push(s.tmp_0, "prink");
    r0 = pxsim_Array__push(s.tmp_0, "print");
    r0 = pxsim_Array__push(s.tmp_0, "prion");
    r0 = pxsim_Array__push(s.tmp_0, "prior");
    r0 = pxsim_Array__push(s.tmp_0, "prise");
    r0 = pxsim_Array__push(s.tmp_0, "prism");
    r0 = pxsim_Array__push(s.tmp_0, "priss");
    r0 = pxsim_Array__push(s.tmp_0, "prius");
    r0 = pxsim_Array__push(s.tmp_0, "privy");
    r0 = pxsim_Array__push(s.tmp_0, "prize");
    r0 = pxsim_Array__push(s.tmp_0, "proal");
    r0 = pxsim_Array__push(s.tmp_0, "proas");
    r0 = pxsim_Array__push(s.tmp_0, "probe");
    r0 = pxsim_Array__push(s.tmp_0, "probs");
    r0 = pxsim_Array__push(s.tmp_0, "proby");
    r0 = pxsim_Array__push(s.tmp_0, "prodd");
    r0 = pxsim_Array__push(s.tmp_0, "prods");
    r0 = pxsim_Array__push(s.tmp_0, "proem");
    r0 = pxsim_Array__push(s.tmp_0, "profs");
    r0 = pxsim_Array__push(s.tmp_0, "progs");
    r0 = pxsim_Array__push(s.tmp_0, "proin");
    r0 = pxsim_Array__push(s.tmp_0, "proke");
    r0 = pxsim_Array__push(s.tmp_0, "prole");
    r0 = pxsim_Array__push(s.tmp_0, "proll");
    r0 = pxsim_Array__push(s.tmp_0, "promo");
    r0 = pxsim_Array__push(s.tmp_0, "proms");
    r0 = pxsim_Array__push(s.tmp_0, "prone");
    r0 = pxsim_Array__push(s.tmp_0, "prong");
    r0 = pxsim_Array__push(s.tmp_0, "pronk");
    r0 = pxsim_Array__push(s.tmp_0, "proof");
    r0 = pxsim_Array__push(s.tmp_0, "prook");
    r0 = pxsim_Array__push(s.tmp_0, "proot");
    r0 = pxsim_Array__push(s.tmp_0, "props");
    r0 = pxsim_Array__push(s.tmp_0, "prora");
    r0 = pxsim_Array__push(s.tmp_0, "prore");
    r0 = pxsim_Array__push(s.tmp_0, "prose");
    r0 = pxsim_Array__push(s.tmp_0, "proso");
    r0 = pxsim_Array__push(s.tmp_0, "pross");
    r0 = pxsim_Array__push(s.tmp_0, "prost");
    r0 = pxsim_Array__push(s.tmp_0, "prosy");
    r0 = pxsim_Array__push(s.tmp_0, "proto");
    r0 = pxsim_Array__push(s.tmp_0, "proud");
    r0 = pxsim_Array__push(s.tmp_0, "proul");
    r0 = pxsim_Array__push(s.tmp_0, "prove");
    r0 = pxsim_Array__push(s.tmp_0, "prowk");
    r0 = pxsim_Array__push(s.tmp_0, "prowl");
    r0 = pxsim_Array__push(s.tmp_0, "prows");
    r0 = pxsim_Array__push(s.tmp_0, "proxy");
    r0 = pxsim_Array__push(s.tmp_0, "proyn");
    r0 = pxsim_Array__push(s.tmp_0, "prude");
    r0 = pxsim_Array__push(s.tmp_0, "prune");
    r0 = pxsim_Array__push(s.tmp_0, "pruno");
    r0 = pxsim_Array__push(s.tmp_0, "prunt");
    r0 = pxsim_Array__push(s.tmp_0, "pruny");
    r0 = pxsim_Array__push(s.tmp_0, "pruta");
    r0 = pxsim_Array__push(s.tmp_0, "pryan");
    r0 = pxsim_Array__push(s.tmp_0, "pryer");
    r0 = pxsim_Array__push(s.tmp_0, "pryse");
    r0 = pxsim_Array__push(s.tmp_0, "psalm");
    r0 = pxsim_Array__push(s.tmp_0, "pseud");
    r0 = pxsim_Array__push(s.tmp_0, "pshaw");
    r0 = pxsim_Array__push(s.tmp_0, "pshut");
    r0 = pxsim_Array__push(s.tmp_0, "psias");
    r0 = pxsim_Array__push(s.tmp_0, "psion");
    r0 = pxsim_Array__push(s.tmp_0, "psoae");
    r0 = pxsim_Array__push(s.tmp_0, "psoai");
    r0 = pxsim_Array__push(s.tmp_0, "psoas");
    r0 = pxsim_Array__push(s.tmp_0, "psora");
    r0 = pxsim_Array__push(s.tmp_0, "psych");
    r0 = pxsim_Array__push(s.tmp_0, "psyop");
    r0 = pxsim_Array__push(s.tmp_0, "ptish");
    r0 = pxsim_Array__push(s.tmp_0, "ptype");
    r0 = pxsim_Array__push(s.tmp_0, "pubby");
    r0 = pxsim_Array__push(s.tmp_0, "pubco");
    r0 = pxsim_Array__push(s.tmp_0, "pubes");
    r0 = pxsim_Array__push(s.tmp_0, "pubic");
    r0 = pxsim_Array__push(s.tmp_0, "pubis");
    r0 = pxsim_Array__push(s.tmp_0, "pubsy");
    r0 = pxsim_Array__push(s.tmp_0, "pucan");
    r0 = pxsim_Array__push(s.tmp_0, "pucer");
    r0 = pxsim_Array__push(s.tmp_0, "puces");
    r0 = pxsim_Array__push(s.tmp_0, "pucka");
    r0 = pxsim_Array__push(s.tmp_0, "pucks");
    r0 = pxsim_Array__push(s.tmp_0, "puddy");
    r0 = pxsim_Array__push(s.tmp_0, "pudge");
    r0 = pxsim_Array__push(s.tmp_0, "pudgy");
    r0 = pxsim_Array__push(s.tmp_0, "pudic");
    r0 = pxsim_Array__push(s.tmp_0, "pudor");
    r0 = pxsim_Array__push(s.tmp_0, "pudsy");
    r0 = pxsim_Array__push(s.tmp_0, "pudus");
    r0 = pxsim_Array__push(s.tmp_0, "puers");
    r0 = pxsim_Array__push(s.tmp_0, "puffa");
    r0 = pxsim_Array__push(s.tmp_0, "puffs");
    r0 = pxsim_Array__push(s.tmp_0, "puffy");
    r0 = pxsim_Array__push(s.tmp_0, "puggy");
    r0 = pxsim_Array__push(s.tmp_0, "pugil");
    r0 = pxsim_Array__push(s.tmp_0, "puhas");
    r0 = pxsim_Array__push(s.tmp_0, "pujah");
    r0 = pxsim_Array__push(s.tmp_0, "pujas");
    r0 = pxsim_Array__push(s.tmp_0, "pukas");
    r0 = pxsim_Array__push(s.tmp_0, "puked");
    r0 = pxsim_Array__push(s.tmp_0, "puker");
    r0 = pxsim_Array__push(s.tmp_0, "pukes");
    r0 = pxsim_Array__push(s.tmp_0, "pukey");
    r0 = pxsim_Array__push(s.tmp_0, "pukka");
    r0 = pxsim_Array__push(s.tmp_0, "pukus");
    r0 = pxsim_Array__push(s.tmp_0, "pulao");
    r0 = pxsim_Array__push(s.tmp_0, "pulas");
    r0 = pxsim_Array__push(s.tmp_0, "puled");
    r0 = pxsim_Array__push(s.tmp_0, "puler");
    r0 = pxsim_Array__push(s.tmp_0, "pules");
    r0 = pxsim_Array__push(s.tmp_0, "pulik");
    r0 = pxsim_Array__push(s.tmp_0, "pulis");
    r0 = pxsim_Array__push(s.tmp_0, "pulka");
    r0 = pxsim_Array__push(s.tmp_0, "pulks");
    r0 = pxsim_Array__push(s.tmp_0, "pulli");
    r0 = pxsim_Array__push(s.tmp_0, "pulls");
    r0 = pxsim_Array__push(s.tmp_0, "pully");
    r0 = pxsim_Array__push(s.tmp_0, "pulmo");
    r0 = pxsim_Array__push(s.tmp_0, "pulps");
    r0 = pxsim_Array__push(s.tmp_0, "pulpy");
    r0 = pxsim_Array__push(s.tmp_0, "pulse");
    r0 = pxsim_Array__push(s.tmp_0, "pulus");
    r0 = pxsim_Array__push(s.tmp_0, "pulut");
    r0 = pxsim_Array__push(s.tmp_0, "pumas");
    r0 = pxsim_Array__push(s.tmp_0, "pumie");
    r0 = pxsim_Array__push(s.tmp_0, "pumps");
    r0 = pxsim_Array__push(s.tmp_0, "pumpy");
    r0 = pxsim_Array__push(s.tmp_0, "punas");
    r0 = pxsim_Array__push(s.tmp_0, "punce");
    r0 = pxsim_Array__push(s.tmp_0, "punch");
    r0 = pxsim_Array__push(s.tmp_0, "punga");
    r0 = pxsim_Array__push(s.tmp_0, "pungi");
    r0 = pxsim_Array__push(s.tmp_0, "pungo");
    r0 = pxsim_Array__push(s.tmp_0, "pungs");
    r0 = pxsim_Array__push(s.tmp_0, "pungy");
    r0 = pxsim_Array__push(s.tmp_0, "punim");
    r0 = pxsim_Array__push(s.tmp_0, "punji");
    r0 = pxsim_Array__push(s.tmp_0, "punka");
    r0 = pxsim_Array__push(s.tmp_0, "punks");
    r0 = pxsim_Array__push(s.tmp_0, "punky");
    r0 = pxsim_Array__push(s.tmp_0, "punny");
    r0 = pxsim_Array__push(s.tmp_0, "punto");
    r0 = pxsim_Array__push(s.tmp_0, "punts");
    r0 = pxsim_Array__push(s.tmp_0, "punty");
    r0 = pxsim_Array__push(s.tmp_0, "pupae");
    r0 = pxsim_Array__push(s.tmp_0, "pupal");
    r0 = pxsim_Array__push(s.tmp_0, "pupas");
    r0 = pxsim_Array__push(s.tmp_0, "pupil");
    r0 = pxsim_Array__push(s.tmp_0, "puppa");
    r0 = pxsim_Array__push(s.tmp_0, "puppy");
    r0 = pxsim_Array__push(s.tmp_0, "pupus");
    r0 = pxsim_Array__push(s.tmp_0, "purao");
    r0 = pxsim_Array__push(s.tmp_0, "purau");
    r0 = pxsim_Array__push(s.tmp_0, "purda");
    r0 = pxsim_Array__push(s.tmp_0, "purdy");
    r0 = pxsim_Array__push(s.tmp_0, "pured");
    r0 = pxsim_Array__push(s.tmp_0, "puree");
    r0 = pxsim_Array__push(s.tmp_0, "purer");
    r0 = pxsim_Array__push(s.tmp_0, "pures");
    r0 = pxsim_Array__push(s.tmp_0, "purga");
    r0 = pxsim_Array__push(s.tmp_0, "purge");
    r0 = pxsim_Array__push(s.tmp_0, "purin");
    r0 = pxsim_Array__push(s.tmp_0, "puris");
    r0 = pxsim_Array__push(s.tmp_0, "purls");
    r0 = pxsim_Array__push(s.tmp_0, "puros");
    r0 = pxsim_Array__push(s.tmp_0, "purps");
    r0 = pxsim_Array__push(s.tmp_0, "purpy");
    r0 = pxsim_Array__push(s.tmp_0, "purre");
    r0 = pxsim_Array__push(s.tmp_0, "purrs");
    r0 = pxsim_Array__push(s.tmp_0, "purry");
    r0 = pxsim_Array__push(s.tmp_0, "purse");
    r0 = pxsim_Array__push(s.tmp_0, "pursy");
    r0 = pxsim_Array__push(s.tmp_0, "purty");
    r0 = pxsim_Array__push(s.tmp_0, "puses");
    r0 = pxsim_Array__push(s.tmp_0, "pushy");
    r0 = pxsim_Array__push(s.tmp_0, "pusle");
    r0 = pxsim_Array__push(s.tmp_0, "pussy");
    r0 = pxsim_Array__push(s.tmp_0, "putas");
    r0 = pxsim_Array__push(s.tmp_0, "puter");
    r0 = pxsim_Array__push(s.tmp_0, "putid");
    r0 = pxsim_Array__push(s.tmp_0, "putin");
    r0 = pxsim_Array__push(s.tmp_0, "puton");
    r0 = pxsim_Array__push(s.tmp_0, "putos");
    r0 = pxsim_Array__push(s.tmp_0, "putti");
    r0 = pxsim_Array__push(s.tmp_0, "putto");
    r0 = pxsim_Array__push(s.tmp_0, "putts");
    r0 = pxsim_Array__push(s.tmp_0, "puttu");
    r0 = pxsim_Array__push(s.tmp_0, "putty");
    r0 = pxsim_Array__push(s.tmp_0, "putza");
    r0 = pxsim_Array__push(s.tmp_0, "puuko");
    r0 = pxsim_Array__push(s.tmp_0, "puyas");
    r0 = pxsim_Array__push(s.tmp_0, "puzel");
    r0 = pxsim_Array__push(s.tmp_0, "puzta");
    r0 = pxsim_Array__push(s.tmp_0, "pwned");
    r0 = pxsim_Array__push(s.tmp_0, "pyats");
    r0 = pxsim_Array__push(s.tmp_0, "pyets");
    r0 = pxsim_Array__push(s.tmp_0, "pygal");
    r0 = pxsim_Array__push(s.tmp_0, "pygmy");
    r0 = pxsim_Array__push(s.tmp_0, "pyins");
    r0 = pxsim_Array__push(s.tmp_0, "pylon");
    r0 = pxsim_Array__push(s.tmp_0, "pyned");
    r0 = pxsim_Array__push(s.tmp_0, "pynes");
    r0 = pxsim_Array__push(s.tmp_0, "pyoid");
    r0 = pxsim_Array__push(s.tmp_0, "pyots");
    r0 = pxsim_Array__push(s.tmp_0, "pyral");
    r0 = pxsim_Array__push(s.tmp_0, "pyran");
    r0 = pxsim_Array__push(s.tmp_0, "pyres");
    r0 = pxsim_Array__push(s.tmp_0, "pyrex");
    r0 = pxsim_Array__push(s.tmp_0, "pyric");
    r0 = pxsim_Array__push(s.tmp_0, "pyros");
    r0 = pxsim_Array__push(s.tmp_0, "pyrus");
    r0 = pxsim_Array__push(s.tmp_0, "pyuff");
    r0 = pxsim_Array__push(s.tmp_0, "pyxed");
    r0 = pxsim_Array__push(s.tmp_0, "pyxes");
    r0 = pxsim_Array__push(s.tmp_0, "pyxie");
    r0 = pxsim_Array__push(s.tmp_0, "pyxis");
    r0 = pxsim_Array__push(s.tmp_0, "pzazz");
    r0 = pxsim_Array__push(s.tmp_0, "qadis");
    r0 = pxsim_Array__push(s.tmp_0, "qaids");
    r0 = pxsim_Array__push(s.tmp_0, "qajaq");
    r0 = pxsim_Array__push(s.tmp_0, "qanat");
    r0 = pxsim_Array__push(s.tmp_0, "qapik");
    r0 = pxsim_Array__push(s.tmp_0, "qibla");
    r0 = pxsim_Array__push(s.tmp_0, "qilas");
    r0 = pxsim_Array__push(s.tmp_0, "qipao");
    r0 = pxsim_Array__push(s.tmp_0, "qophs");
    r0 = pxsim_Array__push(s.tmp_0, "qorma");
    r0 = pxsim_Array__push(s.tmp_0, "quabs");
    r0 = pxsim_Array__push(s.tmp_0, "quack");
    r0 = pxsim_Array__push(s.tmp_0, "quads");
    r0 = pxsim_Array__push(s.tmp_0, "quaff");
    r0 = pxsim_Array__push(s.tmp_0, "quags");
    r0 = pxsim_Array__push(s.tmp_0, "quail");
    r0 = pxsim_Array__push(s.tmp_0, "quair");
    r0 = pxsim_Array__push(s.tmp_0, "quais");
    r0 = pxsim_Array__push(s.tmp_0, "quake");
    r0 = pxsim_Array__push(s.tmp_0, "quaky");
    r0 = pxsim_Array__push(s.tmp_0, "quale");
    r0 = pxsim_Array__push(s.tmp_0, "qualm");
    r0 = pxsim_Array__push(s.tmp_0, "qualy");
    r0 = pxsim_Array__push(s.tmp_0, "quank");
    r0 = pxsim_Array__push(s.tmp_0, "quant");
    r0 = pxsim_Array__push(s.tmp_0, "quare");
    r0 = pxsim_Array__push(s.tmp_0, "quark");
    r0 = pxsim_Array__push(s.tmp_0, "quarl");
    r0 = pxsim_Array__push(s.tmp_0, "quart");
    r0 = pxsim_Array__push(s.tmp_0, "quash");
    r0 = pxsim_Array__push(s.tmp_0, "quasi");
    r0 = pxsim_Array__push(s.tmp_0, "quass");
    r0 = pxsim_Array__push(s.tmp_0, "quate");
    r0 = pxsim_Array__push(s.tmp_0, "quats");
    r0 = pxsim_Array__push(s.tmp_0, "quawk");
    r0 = pxsim_Array__push(s.tmp_0, "quaws");
    r0 = pxsim_Array__push(s.tmp_0, "quayd");
    r0 = pxsim_Array__push(s.tmp_0, "quays");
    r0 = pxsim_Array__push(s.tmp_0, "qubit");
    r0 = pxsim_Array__push(s.tmp_0, "quean");
    r0 = pxsim_Array__push(s.tmp_0, "queck");
    r0 = pxsim_Array__push(s.tmp_0, "queek");
    r0 = pxsim_Array__push(s.tmp_0, "queem");
    r0 = pxsim_Array__push(s.tmp_0, "queen");
    r0 = pxsim_Array__push(s.tmp_0, "queer");
    r0 = pxsim_Array__push(s.tmp_0, "quell");
    r0 = pxsim_Array__push(s.tmp_0, "queme");
    r0 = pxsim_Array__push(s.tmp_0, "quena");
    r0 = pxsim_Array__push(s.tmp_0, "quern");
    r0 = pxsim_Array__push(s.tmp_0, "query");
    r0 = pxsim_Array__push(s.tmp_0, "queso");
    r0 = pxsim_Array__push(s.tmp_0, "quest");
    r0 = pxsim_Array__push(s.tmp_0, "quete");
    r0 = pxsim_Array__push(s.tmp_0, "queue");
    r0 = pxsim_Array__push(s.tmp_0, "queyn");
    r0 = pxsim_Array__push(s.tmp_0, "queys");
    r0 = pxsim_Array__push(s.tmp_0, "queyu");
    r0 = pxsim_Array__push(s.tmp_0, "quibs");
    r0 = pxsim_Array__push(s.tmp_0, "quich");
    r0 = pxsim_Array__push(s.tmp_0, "quick");
    r0 = pxsim_Array__push(s.tmp_0, "quids");
    r0 = pxsim_Array__push(s.tmp_0, "quies");
    r0 = pxsim_Array__push(s.tmp_0, "quiet");
    r0 = pxsim_Array__push(s.tmp_0, "quiff");
    r0 = pxsim_Array__push(s.tmp_0, "quila");
    r0 = pxsim_Array__push(s.tmp_0, "quill");
    r0 = pxsim_Array__push(s.tmp_0, "quilt");
    r0 = pxsim_Array__push(s.tmp_0, "quims");
    r0 = pxsim_Array__push(s.tmp_0, "quina");
    r0 = pxsim_Array__push(s.tmp_0, "quine");
    r0 = pxsim_Array__push(s.tmp_0, "quink");
    r0 = pxsim_Array__push(s.tmp_0, "quino");
    r0 = pxsim_Array__push(s.tmp_0, "quins");
    r0 = pxsim_Array__push(s.tmp_0, "quint");
    r0 = pxsim_Array__push(s.tmp_0, "quipo");
    r0 = pxsim_Array__push(s.tmp_0, "quips");
    r0 = pxsim_Array__push(s.tmp_0, "quipu");
    r0 = pxsim_Array__push(s.tmp_0, "quire");
    r0 = pxsim_Array__push(s.tmp_0, "quirk");
    r0 = pxsim_Array__push(s.tmp_0, "quirl");
    r0 = pxsim_Array__push(s.tmp_0, "quirt");
    r0 = pxsim_Array__push(s.tmp_0, "quist");
    r0 = pxsim_Array__push(s.tmp_0, "quite");
    r0 = pxsim_Array__push(s.tmp_0, "quits");
    r0 = pxsim_Array__push(s.tmp_0, "quoad");
    r0 = pxsim_Array__push(s.tmp_0, "quods");
    r0 = pxsim_Array__push(s.tmp_0, "quoif");
    r0 = pxsim_Array__push(s.tmp_0, "quoin");
    r0 = pxsim_Array__push(s.tmp_0, "quois");
    r0 = pxsim_Array__push(s.tmp_0, "quoit");
    r0 = pxsim_Array__push(s.tmp_0, "quoll");
    r0 = pxsim_Array__push(s.tmp_0, "quonk");
    r0 = pxsim_Array__push(s.tmp_0, "quops");
    r0 = pxsim_Array__push(s.tmp_0, "quork");
    r0 = pxsim_Array__push(s.tmp_0, "quorl");
    r0 = pxsim_Array__push(s.tmp_0, "quota");
    r0 = pxsim_Array__push(s.tmp_0, "quote");
    r0 = pxsim_Array__push(s.tmp_0, "quoth");
    r0 = pxsim_Array__push(s.tmp_0, "quouk");
    r0 = pxsim_Array__push(s.tmp_0, "quoys");
    r0 = pxsim_Array__push(s.tmp_0, "quran");
    r0 = pxsim_Array__push(s.tmp_0, "qursh");
    r0 = pxsim_Array__push(s.tmp_0, "quyte");
    r0 = pxsim_Array__push(s.tmp_0, "raads");
    r0 = pxsim_Array__push(s.tmp_0, "raake");
    r0 = pxsim_Array__push(s.tmp_0, "rabat");
    r0 = pxsim_Array__push(s.tmp_0, "rabbi");
    r0 = pxsim_Array__push(s.tmp_0, "rabic");
    r0 = pxsim_Array__push(s.tmp_0, "rabid");
    r0 = pxsim_Array__push(s.tmp_0, "rabis");
    r0 = pxsim_Array__push(s.tmp_0, "raced");
    r0 = pxsim_Array__push(s.tmp_0, "racer");
    r0 = pxsim_Array__push(s.tmp_0, "races");
    r0 = pxsim_Array__push(s.tmp_0, "rache");
    r0 = pxsim_Array__push(s.tmp_0, "racks");
    r0 = pxsim_Array__push(s.tmp_0, "racon");
    r0 = pxsim_Array__push(s.tmp_0, "radar");
    r0 = pxsim_Array__push(s.tmp_0, "raddi");
    r0 = pxsim_Array__push(s.tmp_0, "raddy");
    r0 = pxsim_Array__push(s.tmp_0, "radge");
    r0 = pxsim_Array__push(s.tmp_0, "radgy");
    r0 = pxsim_Array__push(s.tmp_0, "radif");
    r0 = pxsim_Array__push(s.tmp_0, "radii");
    r0 = pxsim_Array__push(s.tmp_0, "radio");
    r0 = pxsim_Array__push(s.tmp_0, "radix");
    r0 = pxsim_Array__push(s.tmp_0, "radon");
    r0 = pxsim_Array__push(s.tmp_0, "rafee");
    r0 = pxsim_Array__push(s.tmp_0, "raffs");
    r0 = pxsim_Array__push(s.tmp_0, "raffy");
    r0 = pxsim_Array__push(s.tmp_0, "rafik");
    r0 = pxsim_Array__push(s.tmp_0, "rafiq");
    r0 = pxsim_Array__push(s.tmp_0, "rafts");
    r0 = pxsim_Array__push(s.tmp_0, "rafty");
    r0 = pxsim_Array__push(s.tmp_0, "ragas");
    r0 = pxsim_Array__push(s.tmp_0, "ragde");
    r0 = pxsim_Array__push(s.tmp_0, "raged");
    r0 = pxsim_Array__push(s.tmp_0, "ragee");
    r0 = pxsim_Array__push(s.tmp_0, "rager");
    r0 = pxsim_Array__push(s.tmp_0, "rages");
    r0 = pxsim_Array__push(s.tmp_0, "ragga");
    r0 = pxsim_Array__push(s.tmp_0, "raggs");
    r0 = pxsim_Array__push(s.tmp_0, "raggy");
    r0 = pxsim_Array__push(s.tmp_0, "ragis");
    r0 = pxsim_Array__push(s.tmp_0, "ragus");
    r0 = pxsim_Array__push(s.tmp_0, "rahed");
    r0 = pxsim_Array__push(s.tmp_0, "rahui");
    r0 = pxsim_Array__push(s.tmp_0, "raiah");
    r0 = pxsim_Array__push(s.tmp_0, "raias");
    r0 = pxsim_Array__push(s.tmp_0, "raids");
    r0 = pxsim_Array__push(s.tmp_0, "raike");
    r0 = pxsim_Array__push(s.tmp_0, "raiks");
    r0 = pxsim_Array__push(s.tmp_0, "raile");
    r0 = pxsim_Array__push(s.tmp_0, "rails");
    r0 = pxsim_Array__push(s.tmp_0, "raine");
    r0 = pxsim_Array__push(s.tmp_0, "rains");
    r0 = pxsim_Array__push(s.tmp_0, "rainy");
    r0 = pxsim_Array__push(s.tmp_0, "raird");
    r0 = pxsim_Array__push(s.tmp_0, "raise");
    r0 = pxsim_Array__push(s.tmp_0, "raita");
    r0 = pxsim_Array__push(s.tmp_0, "raith");
    r0 = pxsim_Array__push(s.tmp_0, "raits");
    r0 = pxsim_Array__push(s.tmp_0, "rajah");
    r0 = pxsim_Array__push(s.tmp_0, "rajas");
    r0 = pxsim_Array__push(s.tmp_0, "rajes");
    r0 = pxsim_Array__push(s.tmp_0, "raked");
    r0 = pxsim_Array__push(s.tmp_0, "rakee");
    r0 = pxsim_Array__push(s.tmp_0, "raker");
    r0 = pxsim_Array__push(s.tmp_0, "rakes");
    r0 = pxsim_Array__push(s.tmp_0, "rakhi");
    r0 = pxsim_Array__push(s.tmp_0, "rakia");
    r0 = pxsim_Array__push(s.tmp_0, "rakis");
    r0 = pxsim_Array__push(s.tmp_0, "rakki");
    r0 = pxsim_Array__push(s.tmp_0, "raksi");
    r0 = pxsim_Array__push(s.tmp_0, "rakus");
    r0 = pxsim_Array__push(s.tmp_0, "rales");
    r0 = pxsim_Array__push(s.tmp_0, "ralli");
    r0 = pxsim_Array__push(s.tmp_0, "rally");
    r0 = pxsim_Array__push(s.tmp_0, "ralph");
    r0 = pxsim_Array__push(s.tmp_0, "ramal");
    r0 = pxsim_Array__push(s.tmp_0, "ramee");
    r0 = pxsim_Array__push(s.tmp_0, "ramen");
    r0 = pxsim_Array__push(s.tmp_0, "rames");
    r0 = pxsim_Array__push(s.tmp_0, "ramet");
    r0 = pxsim_Array__push(s.tmp_0, "ramie");
    r0 = pxsim_Array__push(s.tmp_0, "ramin");
    r0 = pxsim_Array__push(s.tmp_0, "ramis");
    r0 = pxsim_Array__push(s.tmp_0, "rammy");
    r0 = pxsim_Array__push(s.tmp_0, "ramon");
    r0 = pxsim_Array__push(s.tmp_0, "ramps");
    r0 = pxsim_Array__push(s.tmp_0, "ramse");
    r0 = pxsim_Array__push(s.tmp_0, "ramsh");
    r0 = pxsim_Array__push(s.tmp_0, "ramus");
    r0 = pxsim_Array__push(s.tmp_0, "ranas");
    r0 = pxsim_Array__push(s.tmp_0, "rance");
    r0 = pxsim_Array__push(s.tmp_0, "ranch");
    r0 = pxsim_Array__push(s.tmp_0, "rando");
    r0 = pxsim_Array__push(s.tmp_0, "rands");
    r0 = pxsim_Array__push(s.tmp_0, "randy");
    r0 = pxsim_Array__push(s.tmp_0, "raned");
    r0 = pxsim_Array__push(s.tmp_0, "ranee");
    r0 = pxsim_Array__push(s.tmp_0, "ranes");
    r0 = pxsim_Array__push(s.tmp_0, "ranga");
    r0 = pxsim_Array__push(s.tmp_0, "range");
    r0 = pxsim_Array__push(s.tmp_0, "rangi");
    r0 = pxsim_Array__push(s.tmp_0, "rangs");
    r0 = pxsim_Array__push(s.tmp_0, "rangy");
    r0 = pxsim_Array__push(s.tmp_0, "ranid");
    r0 = pxsim_Array__push(s.tmp_0, "ranis");
    r0 = pxsim_Array__push(s.tmp_0, "ranke");
    r0 = pxsim_Array__push(s.tmp_0, "ranks");
    r0 = pxsim_Array__push(s.tmp_0, "ranns");
    r0 = pxsim_Array__push(s.tmp_0, "ranny");
    r0 = pxsim_Array__push(s.tmp_0, "ranse");
    r0 = pxsim_Array__push(s.tmp_0, "rants");
    r0 = pxsim_Array__push(s.tmp_0, "ranty");
    r0 = pxsim_Array__push(s.tmp_0, "raped");
    r0 = pxsim_Array__push(s.tmp_0, "rapee");
    r0 = pxsim_Array__push(s.tmp_0, "raper");
    r0 = pxsim_Array__push(s.tmp_0, "rapes");
    r0 = pxsim_Array__push(s.tmp_0, "raphe");
    r0 = pxsim_Array__push(s.tmp_0, "rapid");
    r0 = pxsim_Array__push(s.tmp_0, "rapin");
    r0 = pxsim_Array__push(s.tmp_0, "rappe");
    r0 = pxsim_Array__push(s.tmp_0, "rapso");
    r0 = pxsim_Array__push(s.tmp_0, "rared");
    r0 = pxsim_Array__push(s.tmp_0, "raree");
    r0 = pxsim_Array__push(s.tmp_0, "rarer");
    r0 = pxsim_Array__push(s.tmp_0, "rares");
    r0 = pxsim_Array__push(s.tmp_0, "rarks");
    r0 = pxsim_Array__push(s.tmp_0, "rasam");
    r0 = pxsim_Array__push(s.tmp_0, "rasas");
    r0 = pxsim_Array__push(s.tmp_0, "rased");
    r0 = pxsim_Array__push(s.tmp_0, "raser");
    r0 = pxsim_Array__push(s.tmp_0, "rases");
    r0 = pxsim_Array__push(s.tmp_0, "rasps");
    r0 = pxsim_Array__push(s.tmp_0, "raspy");
    r0 = pxsim_Array__push(s.tmp_0, "rasse");
    r0 = pxsim_Array__push(s.tmp_0, "rasta");
    r0 = pxsim_Array__push(s.tmp_0, "ratal");
    r0 = pxsim_Array__push(s.tmp_0, "ratan");
    r0 = pxsim_Array__push(s.tmp_0, "ratas");
    r0 = pxsim_Array__push(s.tmp_0, "ratch");
    r0 = pxsim_Array__push(s.tmp_0, "rated");
    r0 = pxsim_Array__push(s.tmp_0, "ratel");
    r0 = pxsim_Array__push(s.tmp_0, "rater");
    r0 = pxsim_Array__push(s.tmp_0, "rates");
    r0 = pxsim_Array__push(s.tmp_0, "ratha");
    r0 = pxsim_Array__push(s.tmp_0, "rathe");
    r0 = pxsim_Array__push(s.tmp_0, "raths");
    r0 = pxsim_Array__push(s.tmp_0, "ratio");
    r0 = pxsim_Array__push(s.tmp_0, "ratoo");
    r0 = pxsim_Array__push(s.tmp_0, "ratos");
    r0 = pxsim_Array__push(s.tmp_0, "ratti");
    r0 = pxsim_Array__push(s.tmp_0, "ratty");
    r0 = pxsim_Array__push(s.tmp_0, "ratus");
    r0 = pxsim_Array__push(s.tmp_0, "rauli");
    r0 = pxsim_Array__push(s.tmp_0, "rauns");
    r0 = pxsim_Array__push(s.tmp_0, "raupo");
    r0 = pxsim_Array__push(s.tmp_0, "raved");
    r0 = pxsim_Array__push(s.tmp_0, "ravel");
    r0 = pxsim_Array__push(s.tmp_0, "raven");
    r0 = pxsim_Array__push(s.tmp_0, "raver");
    r0 = pxsim_Array__push(s.tmp_0, "raves");
    r0 = pxsim_Array__push(s.tmp_0, "ravey");
    r0 = pxsim_Array__push(s.tmp_0, "ravin");
    r0 = pxsim_Array__push(s.tmp_0, "rawdy");
    r0 = pxsim_Array__push(s.tmp_0, "rawer");
    r0 = pxsim_Array__push(s.tmp_0, "rawin");
    r0 = pxsim_Array__push(s.tmp_0, "rawks");
    r0 = pxsim_Array__push(s.tmp_0, "rawly");
    r0 = pxsim_Array__push(s.tmp_0, "rawns");
    r0 = pxsim_Array__push(s.tmp_0, "raxed");
    r0 = pxsim_Array__push(s.tmp_0, "raxes");
    r0 = pxsim_Array__push(s.tmp_0, "rayah");
    r0 = pxsim_Array__push(s.tmp_0, "rayas");
    r0 = pxsim_Array__push(s.tmp_0, "rayed");
    r0 = pxsim_Array__push(s.tmp_0, "rayle");
    r0 = pxsim_Array__push(s.tmp_0, "rayls");
    r0 = pxsim_Array__push(s.tmp_0, "rayne");
    r0 = pxsim_Array__push(s.tmp_0, "rayon");
    r0 = pxsim_Array__push(s.tmp_0, "razai");
    r0 = pxsim_Array__push(s.tmp_0, "razed");
    r0 = pxsim_Array__push(s.tmp_0, "razee");
    r0 = pxsim_Array__push(s.tmp_0, "razer");
    r0 = pxsim_Array__push(s.tmp_0, "razes");
    r0 = pxsim_Array__push(s.tmp_0, "razet");
    r0 = pxsim_Array__push(s.tmp_0, "razoo");
    r0 = pxsim_Array__push(s.tmp_0, "razor");
    r0 = pxsim_Array__push(s.tmp_0, "reach");
    r0 = pxsim_Array__push(s.tmp_0, "react");
    r0 = pxsim_Array__push(s.tmp_0, "readd");
    r0 = pxsim_Array__push(s.tmp_0, "reads");
    r0 = pxsim_Array__push(s.tmp_0, "ready");
    r0 = pxsim_Array__push(s.tmp_0, "reais");
    r0 = pxsim_Array__push(s.tmp_0, "reaks");
    r0 = pxsim_Array__push(s.tmp_0, "realm");
    r0 = pxsim_Array__push(s.tmp_0, "realo");
    r0 = pxsim_Array__push(s.tmp_0, "reals");
    r0 = pxsim_Array__push(s.tmp_0, "reame");
    r0 = pxsim_Array__push(s.tmp_0, "reams");
    r0 = pxsim_Array__push(s.tmp_0, "reamy");
    r0 = pxsim_Array__push(s.tmp_0, "reans");
    r0 = pxsim_Array__push(s.tmp_0, "reaps");
    r0 = pxsim_Array__push(s.tmp_0, "reard");
    r0 = pxsim_Array__push(s.tmp_0, "rearm");
    r0 = pxsim_Array__push(s.tmp_0, "rears");
    r0 = pxsim_Array__push(s.tmp_0, "reast");
    r0 = pxsim_Array__push(s.tmp_0, "reata");
    r0 = pxsim_Array__push(s.tmp_0, "reate");
    r0 = pxsim_Array__push(s.tmp_0, "reave");
    r0 = pxsim_Array__push(s.tmp_0, "rebab");
    r0 = pxsim_Array__push(s.tmp_0, "rebar");
    r0 = pxsim_Array__push(s.tmp_0, "rebbe");
    r0 = pxsim_Array__push(s.tmp_0, "rebec");
    r0 = pxsim_Array__push(s.tmp_0, "rebel");
    r0 = pxsim_Array__push(s.tmp_0, "rebid");
    r0 = pxsim_Array__push(s.tmp_0, "rebit");
    r0 = pxsim_Array__push(s.tmp_0, "rebop");
    r0 = pxsim_Array__push(s.tmp_0, "rebud");
    r0 = pxsim_Array__push(s.tmp_0, "rebus");
    r0 = pxsim_Array__push(s.tmp_0, "rebut");
    r0 = pxsim_Array__push(s.tmp_0, "rebuy");
    r0 = pxsim_Array__push(s.tmp_0, "recal");
    r0 = pxsim_Array__push(s.tmp_0, "recap");
    r0 = pxsim_Array__push(s.tmp_0, "recce");
    r0 = pxsim_Array__push(s.tmp_0, "recco");
    r0 = pxsim_Array__push(s.tmp_0, "reccy");
    r0 = pxsim_Array__push(s.tmp_0, "recep");
    r0 = pxsim_Array__push(s.tmp_0, "recit");
    r0 = pxsim_Array__push(s.tmp_0, "recks");
    r0 = pxsim_Array__push(s.tmp_0, "recon");
    r0 = pxsim_Array__push(s.tmp_0, "recta");
    r0 = pxsim_Array__push(s.tmp_0, "recte");
    r0 = pxsim_Array__push(s.tmp_0, "recti");
    r0 = pxsim_Array__push(s.tmp_0, "recto");
    r0 = pxsim_Array__push(s.tmp_0, "recue");
    r0 = pxsim_Array__push(s.tmp_0, "recur");
    r0 = pxsim_Array__push(s.tmp_0, "recut");
    r0 = pxsim_Array__push(s.tmp_0, "redan");
    r0 = pxsim_Array__push(s.tmp_0, "redds");
    r0 = pxsim_Array__push(s.tmp_0, "reddy");
    r0 = pxsim_Array__push(s.tmp_0, "reded");
    r0 = pxsim_Array__push(s.tmp_0, "redes");
    r0 = pxsim_Array__push(s.tmp_0, "redia");
    r0 = pxsim_Array__push(s.tmp_0, "redid");
    r0 = pxsim_Array__push(s.tmp_0, "redif");
    r0 = pxsim_Array__push(s.tmp_0, "redig");
    r0 = pxsim_Array__push(s.tmp_0, "redip");
    r0 = pxsim_Array__push(s.tmp_0, "redly");
    r0 = pxsim_Array__push(s.tmp_0, "redon");
    r0 = pxsim_Array__push(s.tmp_0, "redos");
    r0 = pxsim_Array__push(s.tmp_0, "redox");
    r0 = pxsim_Array__push(s.tmp_0, "redry");
    r0 = pxsim_Array__push(s.tmp_0, "redub");
    r0 = pxsim_Array__push(s.tmp_0, "redug");
    r0 = pxsim_Array__push(s.tmp_0, "redux");
    r0 = pxsim_Array__push(s.tmp_0, "redye");
    r0 = pxsim_Array__push(s.tmp_0, "reeaf");
    r0 = pxsim_Array__push(s.tmp_0, "reech");
    r0 = pxsim_Array__push(s.tmp_0, "reede");
    r0 = pxsim_Array__push(s.tmp_0, "reeds");
    r0 = pxsim_Array__push(s.tmp_0, "reedy");
    r0 = pxsim_Array__push(s.tmp_0, "reefs");
    r0 = pxsim_Array__push(s.tmp_0, "reefy");
    r0 = pxsim_Array__push(s.tmp_0, "reeks");
    r0 = pxsim_Array__push(s.tmp_0, "reeky");
    r0 = pxsim_Array__push(s.tmp_0, "reels");
    r0 = pxsim_Array__push(s.tmp_0, "reely");
    r0 = pxsim_Array__push(s.tmp_0, "reems");
    r0 = pxsim_Array__push(s.tmp_0, "reens");
    r0 = pxsim_Array__push(s.tmp_0, "reerd");
    r0 = pxsim_Array__push(s.tmp_0, "reest");
    r0 = pxsim_Array__push(s.tmp_0, "reeve");
    r0 = pxsim_Array__push(s.tmp_0, "reeze");
    r0 = pxsim_Array__push(s.tmp_0, "refan");
    r0 = pxsim_Array__push(s.tmp_0, "refed");
    r0 = pxsim_Array__push(s.tmp_0, "refel");
    r0 = pxsim_Array__push(s.tmp_0, "refer");
    r0 = pxsim_Array__push(s.tmp_0, "reffo");
    r0 = pxsim_Array__push(s.tmp_0, "refis");
    r0 = pxsim_Array__push(s.tmp_0, "refit");
    r0 = pxsim_Array__push(s.tmp_0, "refix");
    r0 = pxsim_Array__push(s.tmp_0, "refly");
    r0 = pxsim_Array__push(s.tmp_0, "refry");
    r0 = pxsim_Array__push(s.tmp_0, "regal");
    r0 = pxsim_Array__push(s.tmp_0, "regar");
    r0 = pxsim_Array__push(s.tmp_0, "reges");
    r0 = pxsim_Array__push(s.tmp_0, "reget");
    r0 = pxsim_Array__push(s.tmp_0, "regex");
    r0 = pxsim_Array__push(s.tmp_0, "reggo");
    r0 = pxsim_Array__push(s.tmp_0, "regia");
    r0 = pxsim_Array__push(s.tmp_0, "regie");
    r0 = pxsim_Array__push(s.tmp_0, "regle");
    r0 = pxsim_Array__push(s.tmp_0, "regma");
    r0 = pxsim_Array__push(s.tmp_0, "regna");
    r0 = pxsim_Array__push(s.tmp_0, "regos");
    r0 = pxsim_Array__push(s.tmp_0, "regot");
    r0 = pxsim_Array__push(s.tmp_0, "regur");
    r0 = pxsim_Array__push(s.tmp_0, "rehab");
    r0 = pxsim_Array__push(s.tmp_0, "rehem");
    r0 = pxsim_Array__push(s.tmp_0, "reifs");
    r0 = pxsim_Array__push(s.tmp_0, "reify");
    r0 = pxsim_Array__push(s.tmp_0, "reign");
    r0 = pxsim_Array__push(s.tmp_0, "reiki");
    r0 = pxsim_Array__push(s.tmp_0, "reiks");
    r0 = pxsim_Array__push(s.tmp_0, "reine");
    r0 = pxsim_Array__push(s.tmp_0, "reing");
    r0 = pxsim_Array__push(s.tmp_0, "reink");
    r0 = pxsim_Array__push(s.tmp_0, "reins");
    r0 = pxsim_Array__push(s.tmp_0, "reird");
    r0 = pxsim_Array__push(s.tmp_0, "reist");
    r0 = pxsim_Array__push(s.tmp_0, "reive");
    r0 = pxsim_Array__push(s.tmp_0, "rejas");
    r0 = pxsim_Array__push(s.tmp_0, "rejig");
    r0 = pxsim_Array__push(s.tmp_0, "rejon");
    r0 = pxsim_Array__push(s.tmp_0, "reked");
    r0 = pxsim_Array__push(s.tmp_0, "rekes");
    r0 = pxsim_Array__push(s.tmp_0, "rekey");
    r0 = pxsim_Array__push(s.tmp_0, "relax");
    r0 = pxsim_Array__push(s.tmp_0, "relay");
    r0 = pxsim_Array__push(s.tmp_0, "relet");
    r0 = pxsim_Array__push(s.tmp_0, "relic");
    r0 = pxsim_Array__push(s.tmp_0, "relie");
    r0 = pxsim_Array__push(s.tmp_0, "relit");
    r0 = pxsim_Array__push(s.tmp_0, "rello");
    r0 = pxsim_Array__push(s.tmp_0, "relos");
    r0 = pxsim_Array__push(s.tmp_0, "reman");
    r0 = pxsim_Array__push(s.tmp_0, "remap");
    r0 = pxsim_Array__push(s.tmp_0, "remen");
    r0 = pxsim_Array__push(s.tmp_0, "remet");
    r0 = pxsim_Array__push(s.tmp_0, "remex");
    r0 = pxsim_Array__push(s.tmp_0, "remit");
    r0 = pxsim_Array__push(s.tmp_0, "remix");
    r0 = pxsim_Array__push(s.tmp_0, "remou");
    r0 = pxsim_Array__push(s.tmp_0, "renal");
    r0 = pxsim_Array__push(s.tmp_0, "renay");
    r0 = pxsim_Array__push(s.tmp_0, "rends");
    r0 = pxsim_Array__push(s.tmp_0, "rendu");
    r0 = pxsim_Array__push(s.tmp_0, "renew");
    r0 = pxsim_Array__push(s.tmp_0, "reney");
    r0 = pxsim_Array__push(s.tmp_0, "renga");
    r0 = pxsim_Array__push(s.tmp_0, "rengs");
    r0 = pxsim_Array__push(s.tmp_0, "renig");
    r0 = pxsim_Array__push(s.tmp_0, "renin");
    r0 = pxsim_Array__push(s.tmp_0, "renks");
    r0 = pxsim_Array__push(s.tmp_0, "renne");
    r0 = pxsim_Array__push(s.tmp_0, "renos");
    r0 = pxsim_Array__push(s.tmp_0, "rente");
    r0 = pxsim_Array__push(s.tmp_0, "rents");
    r0 = pxsim_Array__push(s.tmp_0, "reoil");
    r0 = pxsim_Array__push(s.tmp_0, "reorg");
    r0 = pxsim_Array__push(s.tmp_0, "repas");
    r0 = pxsim_Array__push(s.tmp_0, "repat");
    r0 = pxsim_Array__push(s.tmp_0, "repay");
    r0 = pxsim_Array__push(s.tmp_0, "repeg");
    r0 = pxsim_Array__push(s.tmp_0, "repel");
    r0 = pxsim_Array__push(s.tmp_0, "repen");
    r0 = pxsim_Array__push(s.tmp_0, "repin");
    r0 = pxsim_Array__push(s.tmp_0, "repla");
    r0 = pxsim_Array__push(s.tmp_0, "reply");
    r0 = pxsim_Array__push(s.tmp_0, "repos");
    r0 = pxsim_Array__push(s.tmp_0, "repot");
    r0 = pxsim_Array__push(s.tmp_0, "repps");
    r0 = pxsim_Array__push(s.tmp_0, "repro");
    r0 = pxsim_Array__push(s.tmp_0, "repun");
    r0 = pxsim_Array__push(s.tmp_0, "reput");
    r0 = pxsim_Array__push(s.tmp_0, "reran");
    r0 = pxsim_Array__push(s.tmp_0, "rerig");
    r0 = pxsim_Array__push(s.tmp_0, "rerun");
    r0 = pxsim_Array__push(s.tmp_0, "resam");
    r0 = pxsim_Array__push(s.tmp_0, "resat");
    r0 = pxsim_Array__push(s.tmp_0, "resaw");
    r0 = pxsim_Array__push(s.tmp_0, "resay");
    r0 = pxsim_Array__push(s.tmp_0, "resee");
    r0 = pxsim_Array__push(s.tmp_0, "reses");
    r0 = pxsim_Array__push(s.tmp_0, "reset");
    r0 = pxsim_Array__push(s.tmp_0, "resew");
    r0 = pxsim_Array__push(s.tmp_0, "resid");
    r0 = pxsim_Array__push(s.tmp_0, "resin");
    r0 = pxsim_Array__push(s.tmp_0, "resit");
    r0 = pxsim_Array__push(s.tmp_0, "resod");
    r0 = pxsim_Array__push(s.tmp_0, "resol");
    r0 = pxsim_Array__push(s.tmp_0, "resow");
    r0 = pxsim_Array__push(s.tmp_0, "resto");
    r0 = pxsim_Array__push(s.tmp_0, "rests");
    r0 = pxsim_Array__push(s.tmp_0, "resty");
    r0 = pxsim_Array__push(s.tmp_0, "resue");
    r0 = pxsim_Array__push(s.tmp_0, "resus");
    r0 = pxsim_Array__push(s.tmp_0, "retag");
    r0 = pxsim_Array__push(s.tmp_0, "retam");
    r0 = pxsim_Array__push(s.tmp_0, "retax");
    r0 = pxsim_Array__push(s.tmp_0, "retch");
    r0 = pxsim_Array__push(s.tmp_0, "retem");
    r0 = pxsim_Array__push(s.tmp_0, "retia");
    r0 = pxsim_Array__push(s.tmp_0, "retie");
    r0 = pxsim_Array__push(s.tmp_0, "retin");
    r0 = pxsim_Array__push(s.tmp_0, "retip");
    r0 = pxsim_Array__push(s.tmp_0, "retox");
    r0 = pxsim_Array__push(s.tmp_0, "retro");
    r0 = pxsim_Array__push(s.tmp_0, "retry");
    r0 = pxsim_Array__push(s.tmp_0, "reune");
    r0 = pxsim_Array__push(s.tmp_0, "reups");
    r0 = pxsim_Array__push(s.tmp_0, "reuse");
    r0 = pxsim_Array__push(s.tmp_0, "revel");
    r0 = pxsim_Array__push(s.tmp_0, "revet");
    r0 = pxsim_Array__push(s.tmp_0, "revie");
    r0 = pxsim_Array__push(s.tmp_0, "revow");
    r0 = pxsim_Array__push(s.tmp_0, "revue");
    r0 = pxsim_Array__push(s.tmp_0, "rewan");
    r0 = pxsim_Array__push(s.tmp_0, "rewax");
    r0 = pxsim_Array__push(s.tmp_0, "rewed");
    r0 = pxsim_Array__push(s.tmp_0, "rewet");
    r0 = pxsim_Array__push(s.tmp_0, "rewin");
    r0 = pxsim_Array__push(s.tmp_0, "rewon");
    r0 = pxsim_Array__push(s.tmp_0, "rewth");
    r0 = pxsim_Array__push(s.tmp_0, "rexes");
    r0 = pxsim_Array__push(s.tmp_0, "rezes");
    r0 = pxsim_Array__push(s.tmp_0, "rhabd");
    r0 = pxsim_Array__push(s.tmp_0, "rheas");
    r0 = pxsim_Array__push(s.tmp_0, "rheid");
    r0 = pxsim_Array__push(s.tmp_0, "rheme");
    r0 = pxsim_Array__push(s.tmp_0, "rheum");
    r0 = pxsim_Array__push(s.tmp_0, "rhies");
    r0 = pxsim_Array__push(s.tmp_0, "rhime");
    r0 = pxsim_Array__push(s.tmp_0, "rhine");
    r0 = pxsim_Array__push(s.tmp_0, "rhino");
    r0 = pxsim_Array__push(s.tmp_0, "rhody");
    r0 = pxsim_Array__push(s.tmp_0, "rhomb");
    r0 = pxsim_Array__push(s.tmp_0, "rhone");
    r0 = pxsim_Array__push(s.tmp_0, "rhumb");
    r0 = pxsim_Array__push(s.tmp_0, "rhyme");
    r0 = pxsim_Array__push(s.tmp_0, "rhymy");
    r0 = pxsim_Array__push(s.tmp_0, "rhyne");
    r0 = pxsim_Array__push(s.tmp_0, "rhyta");
    r0 = pxsim_Array__push(s.tmp_0, "riads");
    r0 = pxsim_Array__push(s.tmp_0, "rials");
    r0 = pxsim_Array__push(s.tmp_0, "riant");
    r0 = pxsim_Array__push(s.tmp_0, "riata");
    r0 = pxsim_Array__push(s.tmp_0, "riato");
    r0 = pxsim_Array__push(s.tmp_0, "ribas");
    r0 = pxsim_Array__push(s.tmp_0, "ribby");
    r0 = pxsim_Array__push(s.tmp_0, "ribes");
    r0 = pxsim_Array__push(s.tmp_0, "riced");
    r0 = pxsim_Array__push(s.tmp_0, "ricer");
    r0 = pxsim_Array__push(s.tmp_0, "rices");
    r0 = pxsim_Array__push(s.tmp_0, "ricey");
    r0 = pxsim_Array__push(s.tmp_0, "riche");
    r0 = pxsim_Array__push(s.tmp_0, "richt");
    r0 = pxsim_Array__push(s.tmp_0, "ricin");
    r0 = pxsim_Array__push(s.tmp_0, "ricks");
    r0 = pxsim_Array__push(s.tmp_0, "rider");
    r0 = pxsim_Array__push(s.tmp_0, "rides");
    r0 = pxsim_Array__push(s.tmp_0, "ridge");
    r0 = pxsim_Array__push(s.tmp_0, "ridgy");
    r0 = pxsim_Array__push(s.tmp_0, "ridic");
    r0 = pxsim_Array__push(s.tmp_0, "riels");
    r0 = pxsim_Array__push(s.tmp_0, "riems");
    r0 = pxsim_Array__push(s.tmp_0, "rieve");
    r0 = pxsim_Array__push(s.tmp_0, "rifer");
    r0 = pxsim_Array__push(s.tmp_0, "riffs");
    r0 = pxsim_Array__push(s.tmp_0, "riffy");
    r0 = pxsim_Array__push(s.tmp_0, "rifle");
    r0 = pxsim_Array__push(s.tmp_0, "rifte");
    r0 = pxsim_Array__push(s.tmp_0, "rifts");
    r0 = pxsim_Array__push(s.tmp_0, "rifty");
    r0 = pxsim_Array__push(s.tmp_0, "riggs");
    r0 = pxsim_Array__push(s.tmp_0, "right");
    r0 = pxsim_Array__push(s.tmp_0, "rigid");
    r0 = pxsim_Array__push(s.tmp_0, "rigmo");
    r0 = pxsim_Array__push(s.tmp_0, "rigol");
    r0 = pxsim_Array__push(s.tmp_0, "rigor");
    r0 = pxsim_Array__push(s.tmp_0, "rikka");
    r0 = pxsim_Array__push(s.tmp_0, "rikwa");
    r0 = pxsim_Array__push(s.tmp_0, "riled");
    r0 = pxsim_Array__push(s.tmp_0, "riles");
    r0 = pxsim_Array__push(s.tmp_0, "riley");
    r0 = pxsim_Array__push(s.tmp_0, "rille");
    r0 = pxsim_Array__push(s.tmp_0, "rills");
    r0 = pxsim_Array__push(s.tmp_0, "rilly");
    r0 = pxsim_Array__push(s.tmp_0, "rimae");
    r0 = pxsim_Array__push(s.tmp_0, "rimed");
    r0 = pxsim_Array__push(s.tmp_0, "rimer");
    r0 = pxsim_Array__push(s.tmp_0, "rimes");
    r0 = pxsim_Array__push(s.tmp_0, "rimon");
    r0 = pxsim_Array__push(s.tmp_0, "rimus");
    r0 = pxsim_Array__push(s.tmp_0, "rince");
    r0 = pxsim_Array__push(s.tmp_0, "rinds");
    r0 = pxsim_Array__push(s.tmp_0, "rindy");
    r0 = pxsim_Array__push(s.tmp_0, "rines");
    r0 = pxsim_Array__push(s.tmp_0, "ringe");
    r0 = pxsim_Array__push(s.tmp_0, "rings");
    r0 = pxsim_Array__push(s.tmp_0, "ringy");
    r0 = pxsim_Array__push(s.tmp_0, "rinks");
    r0 = pxsim_Array__push(s.tmp_0, "rinse");
    r0 = pxsim_Array__push(s.tmp_0, "rioja");
    r0 = pxsim_Array__push(s.tmp_0, "rione");
    r0 = pxsim_Array__push(s.tmp_0, "riots");
    r0 = pxsim_Array__push(s.tmp_0, "rioty");
    r0 = pxsim_Array__push(s.tmp_0, "riped");
    r0 = pxsim_Array__push(s.tmp_0, "ripen");
    r0 = pxsim_Array__push(s.tmp_0, "riper");
    r0 = pxsim_Array__push(s.tmp_0, "ripes");
    r0 = pxsim_Array__push(s.tmp_0, "ripps");
    r0 = pxsim_Array__push(s.tmp_0, "riqqs");
    r0 = pxsim_Array__push(s.tmp_0, "risen");
    r0 = pxsim_Array__push(s.tmp_0, "riser");
    r0 = pxsim_Array__push(s.tmp_0, "rises");
    r0 = pxsim_Array__push(s.tmp_0, "rishi");
    r0 = pxsim_Array__push(s.tmp_0, "risks");
    r0 = pxsim_Array__push(s.tmp_0, "risky");
    r0 = pxsim_Array__push(s.tmp_0, "risps");
    r0 = pxsim_Array__push(s.tmp_0, "rists");
    r0 = pxsim_Array__push(s.tmp_0, "risus");
    r0 = pxsim_Array__push(s.tmp_0, "rites");
    r0 = pxsim_Array__push(s.tmp_0, "rithe");
    r0 = pxsim_Array__push(s.tmp_0, "ritts");
    r0 = pxsim_Array__push(s.tmp_0, "ritzy");
    r0 = pxsim_Array__push(s.tmp_0, "rival");
    r0 = pxsim_Array__push(s.tmp_0, "rivas");
    r0 = pxsim_Array__push(s.tmp_0, "rived");
    r0 = pxsim_Array__push(s.tmp_0, "rivel");
    r0 = pxsim_Array__push(s.tmp_0, "riven");
    r0 = pxsim_Array__push(s.tmp_0, "river");
    r0 = pxsim_Array__push(s.tmp_0, "rives");
    r0 = pxsim_Array__push(s.tmp_0, "rivet");
    r0 = pxsim_Array__push(s.tmp_0, "riyal");
    r0 = pxsim_Array__push(s.tmp_0, "rizas");
    r0 = pxsim_Array__push(s.tmp_0, "roach");
    r0 = pxsim_Array__push(s.tmp_0, "roads");
    r0 = pxsim_Array__push(s.tmp_0, "roady");
    r0 = pxsim_Array__push(s.tmp_0, "roake");
    r0 = pxsim_Array__push(s.tmp_0, "roaky");
    r0 = pxsim_Array__push(s.tmp_0, "roams");
    r0 = pxsim_Array__push(s.tmp_0, "roans");
    r0 = pxsim_Array__push(s.tmp_0, "roany");
    r0 = pxsim_Array__push(s.tmp_0, "roars");
    r0 = pxsim_Array__push(s.tmp_0, "roary");
    r0 = pxsim_Array__push(s.tmp_0, "roast");
    r0 = pxsim_Array__push(s.tmp_0, "roate");
    r0 = pxsim_Array__push(s.tmp_0, "robbo");
    r0 = pxsim_Array__push(s.tmp_0, "robed");
    r0 = pxsim_Array__push(s.tmp_0, "rober");
    r0 = pxsim_Array__push(s.tmp_0, "robes");
    r0 = pxsim_Array__push(s.tmp_0, "robin");
    r0 = pxsim_Array__push(s.tmp_0, "roble");
    r0 = pxsim_Array__push(s.tmp_0, "robot");
    r0 = pxsim_Array__push(s.tmp_0, "robug");
    r0 = pxsim_Array__push(s.tmp_0, "robur");
    r0 = pxsim_Array__push(s.tmp_0, "roche");
    r0 = pxsim_Array__push(s.tmp_0, "rocks");
    r0 = pxsim_Array__push(s.tmp_0, "rocky");
    r0 = pxsim_Array__push(s.tmp_0, "roded");
    r0 = pxsim_Array__push(s.tmp_0, "rodeo");
    r0 = pxsim_Array__push(s.tmp_0, "rodes");
    r0 = pxsim_Array__push(s.tmp_0, "rodny");
    r0 = pxsim_Array__push(s.tmp_0, "roers");
    r0 = pxsim_Array__push(s.tmp_0, "rogan");
    r0 = pxsim_Array__push(s.tmp_0, "roger");
    r0 = pxsim_Array__push(s.tmp_0, "rogue");
    r0 = pxsim_Array__push(s.tmp_0, "roguy");
    r0 = pxsim_Array__push(s.tmp_0, "rohan");
    r0 = pxsim_Array__push(s.tmp_0, "rohes");
    r0 = pxsim_Array__push(s.tmp_0, "rohun");
    r0 = pxsim_Array__push(s.tmp_0, "rohus");
    r0 = pxsim_Array__push(s.tmp_0, "roids");
    r0 = pxsim_Array__push(s.tmp_0, "roils");
    r0 = pxsim_Array__push(s.tmp_0, "roily");
    r0 = pxsim_Array__push(s.tmp_0, "roins");
    r0 = pxsim_Array__push(s.tmp_0, "roist");
    r0 = pxsim_Array__push(s.tmp_0, "rojak");
    r0 = pxsim_Array__push(s.tmp_0, "rojis");
    r0 = pxsim_Array__push(s.tmp_0, "roked");
    r0 = pxsim_Array__push(s.tmp_0, "roker");
    r0 = pxsim_Array__push(s.tmp_0, "rokes");
    r0 = pxsim_Array__push(s.tmp_0, "rokey");
    r0 = pxsim_Array__push(s.tmp_0, "rokos");
    r0 = pxsim_Array__push(s.tmp_0, "rolag");
    r0 = pxsim_Array__push(s.tmp_0, "roleo");
    r0 = pxsim_Array__push(s.tmp_0, "roles");
    r0 = pxsim_Array__push(s.tmp_0, "rolfs");
    r0 = pxsim_Array__push(s.tmp_0, "rolls");
    r0 = pxsim_Array__push(s.tmp_0, "rolly");
    r0 = pxsim_Array__push(s.tmp_0, "romal");
    r0 = pxsim_Array__push(s.tmp_0, "roman");
    r0 = pxsim_Array__push(s.tmp_0, "romeo");
    r0 = pxsim_Array__push(s.tmp_0, "romer");
    r0 = pxsim_Array__push(s.tmp_0, "romps");
    r0 = pxsim_Array__push(s.tmp_0, "rompu");
    r0 = pxsim_Array__push(s.tmp_0, "rompy");
    r0 = pxsim_Array__push(s.tmp_0, "ronde");
    r0 = pxsim_Array__push(s.tmp_0, "rondo");
    r0 = pxsim_Array__push(s.tmp_0, "roneo");
    r0 = pxsim_Array__push(s.tmp_0, "rones");
    r0 = pxsim_Array__push(s.tmp_0, "ronin");
    r0 = pxsim_Array__push(s.tmp_0, "ronne");
    r0 = pxsim_Array__push(s.tmp_0, "ronte");
    r0 = pxsim_Array__push(s.tmp_0, "ronts");
    r0 = pxsim_Array__push(s.tmp_0, "ronuk");
    r0 = pxsim_Array__push(s.tmp_0, "roods");
    r0 = pxsim_Array__push(s.tmp_0, "roofs");
    r0 = pxsim_Array__push(s.tmp_0, "roofy");
    r0 = pxsim_Array__push(s.tmp_0, "rooks");
    r0 = pxsim_Array__push(s.tmp_0, "rooky");
    r0 = pxsim_Array__push(s.tmp_0, "rooms");
    r0 = pxsim_Array__push(s.tmp_0, "roomy");
    r0 = pxsim_Array__push(s.tmp_0, "roons");
    r0 = pxsim_Array__push(s.tmp_0, "roops");
    r0 = pxsim_Array__push(s.tmp_0, "roopy");
    r0 = pxsim_Array__push(s.tmp_0, "roosa");
    r0 = pxsim_Array__push(s.tmp_0, "roose");
    r0 = pxsim_Array__push(s.tmp_0, "roost");
    r0 = pxsim_Array__push(s.tmp_0, "roots");
    r0 = pxsim_Array__push(s.tmp_0, "rooty");
    r0 = pxsim_Array__push(s.tmp_0, "roped");
    r0 = pxsim_Array__push(s.tmp_0, "roper");
    r0 = pxsim_Array__push(s.tmp_0, "ropes");
    r0 = pxsim_Array__push(s.tmp_0, "ropey");
    r0 = pxsim_Array__push(s.tmp_0, "roque");
    r0 = pxsim_Array__push(s.tmp_0, "roral");
    r0 = pxsim_Array__push(s.tmp_0, "rores");
    r0 = pxsim_Array__push(s.tmp_0, "roric");
    r0 = pxsim_Array__push(s.tmp_0, "rorid");
    r0 = pxsim_Array__push(s.tmp_0, "rorie");
    r0 = pxsim_Array__push(s.tmp_0, "rorts");
    r0 = pxsim_Array__push(s.tmp_0, "rorty");
    r0 = pxsim_Array__push(s.tmp_0, "rosal");
    r0 = pxsim_Array__push(s.tmp_0, "rosco");
    r0 = pxsim_Array__push(s.tmp_0, "rosed");
    r0 = pxsim_Array__push(s.tmp_0, "roses");
    r0 = pxsim_Array__push(s.tmp_0, "roset");
    r0 = pxsim_Array__push(s.tmp_0, "rosha");
    r0 = pxsim_Array__push(s.tmp_0, "roshi");
    r0 = pxsim_Array__push(s.tmp_0, "rosin");
    r0 = pxsim_Array__push(s.tmp_0, "rosit");
    r0 = pxsim_Array__push(s.tmp_0, "rosps");
    r0 = pxsim_Array__push(s.tmp_0, "rossa");
    r0 = pxsim_Array__push(s.tmp_0, "rosso");
    r0 = pxsim_Array__push(s.tmp_0, "rosti");
    r0 = pxsim_Array__push(s.tmp_0, "rosts");
    r0 = pxsim_Array__push(s.tmp_0, "rotal");
    r0 = pxsim_Array__push(s.tmp_0, "rotan");
    r0 = pxsim_Array__push(s.tmp_0, "rotas");
    r0 = pxsim_Array__push(s.tmp_0, "rotch");
    r0 = pxsim_Array__push(s.tmp_0, "roted");
    r0 = pxsim_Array__push(s.tmp_0, "rotes");
    r0 = pxsim_Array__push(s.tmp_0, "rotis");
    r0 = pxsim_Array__push(s.tmp_0, "rotls");
    r0 = pxsim_Array__push(s.tmp_0, "roton");
    r0 = pxsim_Array__push(s.tmp_0, "rotor");
    r0 = pxsim_Array__push(s.tmp_0, "rotos");
    r0 = pxsim_Array__push(s.tmp_0, "rotta");
    r0 = pxsim_Array__push(s.tmp_0, "rotte");
    r0 = pxsim_Array__push(s.tmp_0, "rotto");
    r0 = pxsim_Array__push(s.tmp_0, "rotty");
    r0 = pxsim_Array__push(s.tmp_0, "rouen");
    r0 = pxsim_Array__push(s.tmp_0, "roues");
    r0 = pxsim_Array__push(s.tmp_0, "rouet");
    r0 = pxsim_Array__push(s.tmp_0, "roufs");
    r0 = pxsim_Array__push(s.tmp_0, "rouge");
    r0 = pxsim_Array__push(s.tmp_0, "rough");
    r0 = pxsim_Array__push(s.tmp_0, "rougy");
    r0 = pxsim_Array__push(s.tmp_0, "rouks");
    r0 = pxsim_Array__push(s.tmp_0, "rouky");
    r0 = pxsim_Array__push(s.tmp_0, "roule");
    r0 = pxsim_Array__push(s.tmp_0, "rouls");
    r0 = pxsim_Array__push(s.tmp_0, "roums");
    r0 = pxsim_Array__push(s.tmp_0, "round");
    r0 = pxsim_Array__push(s.tmp_0, "roups");
    r0 = pxsim_Array__push(s.tmp_0, "roupy");
    r0 = pxsim_Array__push(s.tmp_0, "rouse");
    r0 = pxsim_Array__push(s.tmp_0, "roust");
    r0 = pxsim_Array__push(s.tmp_0, "route");
    r0 = pxsim_Array__push(s.tmp_0, "routh");
    r0 = pxsim_Array__push(s.tmp_0, "routs");
    r0 = pxsim_Array__push(s.tmp_0, "roved");
    r0 = pxsim_Array__push(s.tmp_0, "roven");
    r0 = pxsim_Array__push(s.tmp_0, "rover");
    r0 = pxsim_Array__push(s.tmp_0, "roves");
    r0 = pxsim_Array__push(s.tmp_0, "rowan");
    r0 = pxsim_Array__push(s.tmp_0, "rowdy");
    r0 = pxsim_Array__push(s.tmp_0, "rowed");
    r0 = pxsim_Array__push(s.tmp_0, "rowel");
    r0 = pxsim_Array__push(s.tmp_0, "rowen");
    r0 = pxsim_Array__push(s.tmp_0, "rower");
    r0 = pxsim_Array__push(s.tmp_0, "rowet");
    r0 = pxsim_Array__push(s.tmp_0, "rowie");
    r0 = pxsim_Array__push(s.tmp_0, "rowme");
    r0 = pxsim_Array__push(s.tmp_0, "rownd");
    r0 = pxsim_Array__push(s.tmp_0, "rowns");
    r0 = pxsim_Array__push(s.tmp_0, "rowth");
    r0 = pxsim_Array__push(s.tmp_0, "rowts");
    r0 = pxsim_Array__push(s.tmp_0, "royal");
    r0 = pxsim_Array__push(s.tmp_0, "royet");
    r0 = pxsim_Array__push(s.tmp_0, "royne");
    r0 = pxsim_Array__push(s.tmp_0, "royst");
    r0 = pxsim_Array__push(s.tmp_0, "rozes");
    r0 = pxsim_Array__push(s.tmp_0, "rozet");
    r0 = pxsim_Array__push(s.tmp_0, "rozit");
    r0 = pxsim_Array__push(s.tmp_0, "ruach");
    r0 = pxsim_Array__push(s.tmp_0, "ruana");
    r0 = pxsim_Array__push(s.tmp_0, "rubai");
    r0 = pxsim_Array__push(s.tmp_0, "ruban");
    r0 = pxsim_Array__push(s.tmp_0, "rubby");
    r0 = pxsim_Array__push(s.tmp_0, "rubel");
    r0 = pxsim_Array__push(s.tmp_0, "rubes");
    r0 = pxsim_Array__push(s.tmp_0, "rubin");
    r0 = pxsim_Array__push(s.tmp_0, "rubio");
    r0 = pxsim_Array__push(s.tmp_0, "ruble");
    r0 = pxsim_Array__push(s.tmp_0, "rubli");
    r0 = pxsim_Array__push(s.tmp_0, "rubor");
    r0 = pxsim_Array__push(s.tmp_0, "rubus");
    r0 = pxsim_Array__push(s.tmp_0, "ruche");
    r0 = pxsim_Array__push(s.tmp_0, "ruchy");
    r0 = pxsim_Array__push(s.tmp_0, "rucks");
    r0 = pxsim_Array__push(s.tmp_0, "rudas");
    r0 = pxsim_Array__push(s.tmp_0, "rudds");
    r0 = pxsim_Array__push(s.tmp_0, "ruddy");
    r0 = pxsim_Array__push(s.tmp_0, "ruder");
    r0 = pxsim_Array__push(s.tmp_0, "rudes");
    r0 = pxsim_Array__push(s.tmp_0, "rudie");
    r0 = pxsim_Array__push(s.tmp_0, "rudis");
    r0 = pxsim_Array__push(s.tmp_0, "rueda");
    r0 = pxsim_Array__push(s.tmp_0, "ruers");
    r0 = pxsim_Array__push(s.tmp_0, "ruffe");
    r0 = pxsim_Array__push(s.tmp_0, "ruffs");
    r0 = pxsim_Array__push(s.tmp_0, "ruffy");
    r0 = pxsim_Array__push(s.tmp_0, "rufus");
    r0 = pxsim_Array__push(s.tmp_0, "rugae");
    r0 = pxsim_Array__push(s.tmp_0, "rugal");
    r0 = pxsim_Array__push(s.tmp_0, "rugas");
    r0 = pxsim_Array__push(s.tmp_0, "rugby");
    r0 = pxsim_Array__push(s.tmp_0, "ruggy");
    r0 = pxsim_Array__push(s.tmp_0, "ruice");
    r0 = pxsim_Array__push(s.tmp_0, "ruing");
    r0 = pxsim_Array__push(s.tmp_0, "ruins");
    r0 = pxsim_Array__push(s.tmp_0, "rukhs");
    r0 = pxsim_Array__push(s.tmp_0, "ruled");
    r0 = pxsim_Array__push(s.tmp_0, "ruler");
    r0 = pxsim_Array__push(s.tmp_0, "rules");
    r0 = pxsim_Array__push(s.tmp_0, "rully");
    r0 = pxsim_Array__push(s.tmp_0, "rumal");
    r0 = pxsim_Array__push(s.tmp_0, "rumba");
    r0 = pxsim_Array__push(s.tmp_0, "rumbo");
    r0 = pxsim_Array__push(s.tmp_0, "rumen");
    r0 = pxsim_Array__push(s.tmp_0, "rumes");
    r0 = pxsim_Array__push(s.tmp_0, "rumly");
    r0 = pxsim_Array__push(s.tmp_0, "rummy");
    r0 = pxsim_Array__push(s.tmp_0, "rumor");
    r0 = pxsim_Array__push(s.tmp_0, "rumpo");
    r0 = pxsim_Array__push(s.tmp_0, "rumps");
    r0 = pxsim_Array__push(s.tmp_0, "rumpy");
    r0 = pxsim_Array__push(s.tmp_0, "runce");
    r0 = pxsim_Array__push(s.tmp_0, "runch");
    r0 = pxsim_Array__push(s.tmp_0, "runds");
    r0 = pxsim_Array__push(s.tmp_0, "runed");
    r0 = pxsim_Array__push(s.tmp_0, "runer");
    r0 = pxsim_Array__push(s.tmp_0, "runes");
    r0 = pxsim_Array__push(s.tmp_0, "rungs");
    r0 = pxsim_Array__push(s.tmp_0, "runic");
    r0 = pxsim_Array__push(s.tmp_0, "runny");
    r0 = pxsim_Array__push(s.tmp_0, "runos");
    r0 = pxsim_Array__push(s.tmp_0, "runts");
    r0 = pxsim_Array__push(s.tmp_0, "runty");
    r0 = pxsim_Array__push(s.tmp_0, "runup");
    r0 = pxsim_Array__push(s.tmp_0, "ruote");
    r0 = pxsim_Array__push(s.tmp_0, "rupee");
    r0 = pxsim_Array__push(s.tmp_0, "rupia");
    r0 = pxsim_Array__push(s.tmp_0, "rural");
    r0 = pxsim_Array__push(s.tmp_0, "rurps");
    r0 = pxsim_Array__push(s.tmp_0, "rurus");
    r0 = pxsim_Array__push(s.tmp_0, "rusas");
    r0 = pxsim_Array__push(s.tmp_0, "ruses");
    r0 = pxsim_Array__push(s.tmp_0, "rushy");
    r0 = pxsim_Array__push(s.tmp_0, "rusks");
    r0 = pxsim_Array__push(s.tmp_0, "rusky");
    r0 = pxsim_Array__push(s.tmp_0, "rusma");
    r0 = pxsim_Array__push(s.tmp_0, "russe");
    r0 = pxsim_Array__push(s.tmp_0, "rusts");
    r0 = pxsim_Array__push(s.tmp_0, "rusty");
    r0 = pxsim_Array__push(s.tmp_0, "ruths");
    r0 = pxsim_Array__push(s.tmp_0, "rutin");
    r0 = pxsim_Array__push(s.tmp_0, "rutty");
    r0 = pxsim_Array__push(s.tmp_0, "ruvid");
    r0 = pxsim_Array__push(s.tmp_0, "ryals");
    r0 = pxsim_Array__push(s.tmp_0, "rybat");
    r0 = pxsim_Array__push(s.tmp_0, "ryiji");
    r0 = pxsim_Array__push(s.tmp_0, "ryijy");
    r0 = pxsim_Array__push(s.tmp_0, "ryked");
    r0 = pxsim_Array__push(s.tmp_0, "rykes");
    r0 = pxsim_Array__push(s.tmp_0, "rymer");
    r0 = pxsim_Array__push(s.tmp_0, "rymme");
    r0 = pxsim_Array__push(s.tmp_0, "rynds");
    r0 = pxsim_Array__push(s.tmp_0, "ryoti");
    r0 = pxsim_Array__push(s.tmp_0, "ryots");
    r0 = pxsim_Array__push(s.tmp_0, "ryper");
    r0 = pxsim_Array__push(s.tmp_0, "rypin");
    r0 = pxsim_Array__push(s.tmp_0, "rythe");
    r0 = pxsim_Array__push(s.tmp_0, "ryugi");
    r0 = pxsim_Array__push(s.tmp_0, "saags");
    r0 = pxsim_Array__push(s.tmp_0, "sabal");
    r0 = pxsim_Array__push(s.tmp_0, "sabed");
    r0 = pxsim_Array__push(s.tmp_0, "saber");
    r0 = pxsim_Array__push(s.tmp_0, "sabes");
    r0 = pxsim_Array__push(s.tmp_0, "sabha");
    r0 = pxsim_Array__push(s.tmp_0, "sabin");
    r0 = pxsim_Array__push(s.tmp_0, "sabir");
    r0 = pxsim_Array__push(s.tmp_0, "sabji");
    r0 = pxsim_Array__push(s.tmp_0, "sable");
    r0 = pxsim_Array__push(s.tmp_0, "sabos");
    r0 = pxsim_Array__push(s.tmp_0, "sabot");
    r0 = pxsim_Array__push(s.tmp_0, "sabra");
    r0 = pxsim_Array__push(s.tmp_0, "sabre");
    r0 = pxsim_Array__push(s.tmp_0, "sabzi");
    r0 = pxsim_Array__push(s.tmp_0, "sacks");
    r0 = pxsim_Array__push(s.tmp_0, "sacra");
    r0 = pxsim_Array__push(s.tmp_0, "sacre");
    r0 = pxsim_Array__push(s.tmp_0, "saddo");
    r0 = pxsim_Array__push(s.tmp_0, "saddy");
    r0 = pxsim_Array__push(s.tmp_0, "sades");
    r0 = pxsim_Array__push(s.tmp_0, "sadhe");
    r0 = pxsim_Array__push(s.tmp_0, "sadhu");
    r0 = pxsim_Array__push(s.tmp_0, "sadic");
    r0 = pxsim_Array__push(s.tmp_0, "sadis");
    r0 = pxsim_Array__push(s.tmp_0, "sadly");
    r0 = pxsim_Array__push(s.tmp_0, "sados");
    r0 = pxsim_Array__push(s.tmp_0, "sadza");
    r0 = pxsim_Array__push(s.tmp_0, "saeta");
    r0 = pxsim_Array__push(s.tmp_0, "safed");
    r0 = pxsim_Array__push(s.tmp_0, "safer");
    r0 = pxsim_Array__push(s.tmp_0, "safes");
    r0 = pxsim_Array__push(s.tmp_0, "sagar");
    r0 = pxsim_Array__push(s.tmp_0, "sagas");
    r0 = pxsim_Array__push(s.tmp_0, "sager");
    r0 = pxsim_Array__push(s.tmp_0, "sages");
    r0 = pxsim_Array__push(s.tmp_0, "saggy");
    r0 = pxsim_Array__push(s.tmp_0, "sagos");
    r0 = pxsim_Array__push(s.tmp_0, "sagum");
    r0 = pxsim_Array__push(s.tmp_0, "sahab");
    r0 = pxsim_Array__push(s.tmp_0, "saheb");
    r0 = pxsim_Array__push(s.tmp_0, "sahib");
    r0 = pxsim_Array__push(s.tmp_0, "saice");
    r0 = pxsim_Array__push(s.tmp_0, "saick");
    r0 = pxsim_Array__push(s.tmp_0, "saics");
    r0 = pxsim_Array__push(s.tmp_0, "saids");
    r0 = pxsim_Array__push(s.tmp_0, "saiga");
    r0 = pxsim_Array__push(s.tmp_0, "sails");
    r0 = pxsim_Array__push(s.tmp_0, "saims");
    r0 = pxsim_Array__push(s.tmp_0, "saine");
    r0 = pxsim_Array__push(s.tmp_0, "sains");
    r0 = pxsim_Array__push(s.tmp_0, "saint");
    r0 = pxsim_Array__push(s.tmp_0, "sairs");
    r0 = pxsim_Array__push(s.tmp_0, "saist");
    r0 = pxsim_Array__push(s.tmp_0, "saith");
    r0 = pxsim_Array__push(s.tmp_0, "sajou");
    r0 = pxsim_Array__push(s.tmp_0, "sakai");
    r0 = pxsim_Array__push(s.tmp_0, "saker");
    r0 = pxsim_Array__push(s.tmp_0, "sakes");
    r0 = pxsim_Array__push(s.tmp_0, "sakia");
    r0 = pxsim_Array__push(s.tmp_0, "sakis");
    r0 = pxsim_Array__push(s.tmp_0, "sakti");
    r0 = pxsim_Array__push(s.tmp_0, "salad");
    r0 = pxsim_Array__push(s.tmp_0, "salal");
    r0 = pxsim_Array__push(s.tmp_0, "salas");
    r0 = pxsim_Array__push(s.tmp_0, "salat");
    r0 = pxsim_Array__push(s.tmp_0, "salep");
    r0 = pxsim_Array__push(s.tmp_0, "sales");
    r0 = pxsim_Array__push(s.tmp_0, "salet");
    r0 = pxsim_Array__push(s.tmp_0, "salic");
    r0 = pxsim_Array__push(s.tmp_0, "salis");
    r0 = pxsim_Array__push(s.tmp_0, "salix");
    r0 = pxsim_Array__push(s.tmp_0, "salle");
    r0 = pxsim_Array__push(s.tmp_0, "sally");
    r0 = pxsim_Array__push(s.tmp_0, "salmi");
    r0 = pxsim_Array__push(s.tmp_0, "salol");
    r0 = pxsim_Array__push(s.tmp_0, "salon");
    r0 = pxsim_Array__push(s.tmp_0, "salop");
    r0 = pxsim_Array__push(s.tmp_0, "salpa");
    r0 = pxsim_Array__push(s.tmp_0, "salps");
    r0 = pxsim_Array__push(s.tmp_0, "salsa");
    r0 = pxsim_Array__push(s.tmp_0, "salse");
    r0 = pxsim_Array__push(s.tmp_0, "salto");
    r0 = pxsim_Array__push(s.tmp_0, "salts");
    r0 = pxsim_Array__push(s.tmp_0, "salty");
    r0 = pxsim_Array__push(s.tmp_0, "salud");
    r0 = pxsim_Array__push(s.tmp_0, "salue");
    r0 = pxsim_Array__push(s.tmp_0, "salut");
    r0 = pxsim_Array__push(s.tmp_0, "salve");
    r0 = pxsim_Array__push(s.tmp_0, "salvo");
    r0 = pxsim_Array__push(s.tmp_0, "saman");
    r0 = pxsim_Array__push(s.tmp_0, "samas");
    r0 = pxsim_Array__push(s.tmp_0, "samba");
    r0 = pxsim_Array__push(s.tmp_0, "sambo");
    r0 = pxsim_Array__push(s.tmp_0, "samek");
    r0 = pxsim_Array__push(s.tmp_0, "samel");
    r0 = pxsim_Array__push(s.tmp_0, "samen");
    r0 = pxsim_Array__push(s.tmp_0, "sames");
    r0 = pxsim_Array__push(s.tmp_0, "samey");
    r0 = pxsim_Array__push(s.tmp_0, "samfi");
    r0 = pxsim_Array__push(s.tmp_0, "samfu");
    r0 = pxsim_Array__push(s.tmp_0, "sammy");
    r0 = pxsim_Array__push(s.tmp_0, "sampi");
    r0 = pxsim_Array__push(s.tmp_0, "samps");
    r0 = pxsim_Array__push(s.tmp_0, "sanad");
    r0 = pxsim_Array__push(s.tmp_0, "sands");
    r0 = pxsim_Array__push(s.tmp_0, "sandy");
    r0 = pxsim_Array__push(s.tmp_0, "saned");
    r0 = pxsim_Array__push(s.tmp_0, "saner");
    r0 = pxsim_Array__push(s.tmp_0, "sanes");
    r0 = pxsim_Array__push(s.tmp_0, "sanga");
    r0 = pxsim_Array__push(s.tmp_0, "sangh");
    r0 = pxsim_Array__push(s.tmp_0, "sango");
    r0 = pxsim_Array__push(s.tmp_0, "sangs");
    r0 = pxsim_Array__push(s.tmp_0, "sanko");
    r0 = pxsim_Array__push(s.tmp_0, "sansa");
    r0 = pxsim_Array__push(s.tmp_0, "santo");
    r0 = pxsim_Array__push(s.tmp_0, "sants");
    r0 = pxsim_Array__push(s.tmp_0, "saola");
    r0 = pxsim_Array__push(s.tmp_0, "sapan");
    r0 = pxsim_Array__push(s.tmp_0, "sapid");
    r0 = pxsim_Array__push(s.tmp_0, "sapor");
    r0 = pxsim_Array__push(s.tmp_0, "sappy");
    r0 = pxsim_Array__push(s.tmp_0, "saran");
    r0 = pxsim_Array__push(s.tmp_0, "sards");
    r0 = pxsim_Array__push(s.tmp_0, "sared");
    r0 = pxsim_Array__push(s.tmp_0, "saree");
    r0 = pxsim_Array__push(s.tmp_0, "sarge");
    r0 = pxsim_Array__push(s.tmp_0, "sargo");
    r0 = pxsim_Array__push(s.tmp_0, "sarin");
    r0 = pxsim_Array__push(s.tmp_0, "sarir");
    r0 = pxsim_Array__push(s.tmp_0, "saris");
    r0 = pxsim_Array__push(s.tmp_0, "sarks");
    r0 = pxsim_Array__push(s.tmp_0, "sarky");
    r0 = pxsim_Array__push(s.tmp_0, "sarod");
    r0 = pxsim_Array__push(s.tmp_0, "saros");
    r0 = pxsim_Array__push(s.tmp_0, "sarus");
    r0 = pxsim_Array__push(s.tmp_0, "sarvo");
    r0 = pxsim_Array__push(s.tmp_0, "saser");
    r0 = pxsim_Array__push(s.tmp_0, "sasin");
    r0 = pxsim_Array__push(s.tmp_0, "sasse");
    r0 = pxsim_Array__push(s.tmp_0, "sassy");
    r0 = pxsim_Array__push(s.tmp_0, "satai");
    r0 = pxsim_Array__push(s.tmp_0, "satay");
    r0 = pxsim_Array__push(s.tmp_0, "sated");
    r0 = pxsim_Array__push(s.tmp_0, "satem");
    r0 = pxsim_Array__push(s.tmp_0, "sater");
    r0 = pxsim_Array__push(s.tmp_0, "sates");
    r0 = pxsim_Array__push(s.tmp_0, "satin");
    r0 = pxsim_Array__push(s.tmp_0, "satis");
    r0 = pxsim_Array__push(s.tmp_0, "satyr");
    r0 = pxsim_Array__push(s.tmp_0, "sauba");
    r0 = pxsim_Array__push(s.tmp_0, "sauce");
    r0 = pxsim_Array__push(s.tmp_0, "sauch");
    r0 = pxsim_Array__push(s.tmp_0, "saucy");
    r0 = pxsim_Array__push(s.tmp_0, "saugh");
    r0 = pxsim_Array__push(s.tmp_0, "sauls");
    r0 = pxsim_Array__push(s.tmp_0, "sault");
    r0 = pxsim_Array__push(s.tmp_0, "sauna");
    r0 = pxsim_Array__push(s.tmp_0, "saunf");
    r0 = pxsim_Array__push(s.tmp_0, "saunt");
    r0 = pxsim_Array__push(s.tmp_0, "saury");
    r0 = pxsim_Array__push(s.tmp_0, "saute");
    r0 = pxsim_Array__push(s.tmp_0, "sauts");
    r0 = pxsim_Array__push(s.tmp_0, "sauve");
    r0 = pxsim_Array__push(s.tmp_0, "saved");
    r0 = pxsim_Array__push(s.tmp_0, "saver");
    r0 = pxsim_Array__push(s.tmp_0, "saves");
    r0 = pxsim_Array__push(s.tmp_0, "savey");
    r0 = pxsim_Array__push(s.tmp_0, "savin");
    r0 = pxsim_Array__push(s.tmp_0, "savor");
    r0 = pxsim_Array__push(s.tmp_0, "savoy");
    r0 = pxsim_Array__push(s.tmp_0, "savvy");
    r0 = pxsim_Array__push(s.tmp_0, "sawah");
    r0 = pxsim_Array__push(s.tmp_0, "sawed");
    r0 = pxsim_Array__push(s.tmp_0, "sawer");
    r0 = pxsim_Array__push(s.tmp_0, "saxes");
    r0 = pxsim_Array__push(s.tmp_0, "sayas");
    r0 = pxsim_Array__push(s.tmp_0, "sayed");
    r0 = pxsim_Array__push(s.tmp_0, "sayee");
    r0 = pxsim_Array__push(s.tmp_0, "sayer");
    r0 = pxsim_Array__push(s.tmp_0, "sayid");
    r0 = pxsim_Array__push(s.tmp_0, "sayne");
    r0 = pxsim_Array__push(s.tmp_0, "sayon");
    r0 = pxsim_Array__push(s.tmp_0, "sayst");
    r0 = pxsim_Array__push(s.tmp_0, "sazes");
    r0 = pxsim_Array__push(s.tmp_0, "scabs");
    r0 = pxsim_Array__push(s.tmp_0, "scads");
    r0 = pxsim_Array__push(s.tmp_0, "scaff");
    r0 = pxsim_Array__push(s.tmp_0, "scags");
    r0 = pxsim_Array__push(s.tmp_0, "scail");
    r0 = pxsim_Array__push(s.tmp_0, "scala");
    r0 = pxsim_Array__push(s.tmp_0, "scald");
    r0 = pxsim_Array__push(s.tmp_0, "scale");
    r0 = pxsim_Array__push(s.tmp_0, "scall");
    r0 = pxsim_Array__push(s.tmp_0, "scalp");
    r0 = pxsim_Array__push(s.tmp_0, "scaly");
    r0 = pxsim_Array__push(s.tmp_0, "scamp");
    r0 = pxsim_Array__push(s.tmp_0, "scams");
    r0 = pxsim_Array__push(s.tmp_0, "scand");
    r0 = pxsim_Array__push(s.tmp_0, "scans");
    r0 = pxsim_Array__push(s.tmp_0, "scant");
    r0 = pxsim_Array__push(s.tmp_0, "scapa");
    r0 = pxsim_Array__push(s.tmp_0, "scape");
    r0 = pxsim_Array__push(s.tmp_0, "scapi");
    r0 = pxsim_Array__push(s.tmp_0, "scare");
    r0 = pxsim_Array__push(s.tmp_0, "scarf");
    r0 = pxsim_Array__push(s.tmp_0, "scarp");
    r0 = pxsim_Array__push(s.tmp_0, "scars");
    r0 = pxsim_Array__push(s.tmp_0, "scart");
    r0 = pxsim_Array__push(s.tmp_0, "scary");
    r0 = pxsim_Array__push(s.tmp_0, "scath");
    r0 = pxsim_Array__push(s.tmp_0, "scats");
    r0 = pxsim_Array__push(s.tmp_0, "scatt");
    r0 = pxsim_Array__push(s.tmp_0, "scaud");
    r0 = pxsim_Array__push(s.tmp_0, "scaup");
    r0 = pxsim_Array__push(s.tmp_0, "scaur");
    r0 = pxsim_Array__push(s.tmp_0, "scaws");
    r0 = pxsim_Array__push(s.tmp_0, "sceat");
    r0 = pxsim_Array__push(s.tmp_0, "scena");
    r0 = pxsim_Array__push(s.tmp_0, "scend");
    r0 = pxsim_Array__push(s.tmp_0, "scene");
    r0 = pxsim_Array__push(s.tmp_0, "scent");
    r0 = pxsim_Array__push(s.tmp_0, "schav");
    r0 = pxsim_Array__push(s.tmp_0, "schif");
    r0 = pxsim_Array__push(s.tmp_0, "schmo");
    r0 = pxsim_Array__push(s.tmp_0, "schul");
    r0 = pxsim_Array__push(s.tmp_0, "schwa");
    r0 = pxsim_Array__push(s.tmp_0, "scifi");
    r0 = pxsim_Array__push(s.tmp_0, "scind");
    r0 = pxsim_Array__push(s.tmp_0, "scion");
    r0 = pxsim_Array__push(s.tmp_0, "scire");
    r0 = pxsim_Array__push(s.tmp_0, "sclim");
    r0 = pxsim_Array__push(s.tmp_0, "scobe");
    r0 = pxsim_Array__push(s.tmp_0, "scody");
    r0 = pxsim_Array__push(s.tmp_0, "scoff");
    r0 = pxsim_Array__push(s.tmp_0, "scogs");
    r0 = pxsim_Array__push(s.tmp_0, "scold");
    r0 = pxsim_Array__push(s.tmp_0, "scone");
    r0 = pxsim_Array__push(s.tmp_0, "scoog");
    r0 = pxsim_Array__push(s.tmp_0, "scoop");
    r0 = pxsim_Array__push(s.tmp_0, "scoot");
    r0 = pxsim_Array__push(s.tmp_0, "scopa");
    r0 = pxsim_Array__push(s.tmp_0, "scope");
    r0 = pxsim_Array__push(s.tmp_0, "scops");
    r0 = pxsim_Array__push(s.tmp_0, "score");
    r0 = pxsim_Array__push(s.tmp_0, "scorn");
    r0 = pxsim_Array__push(s.tmp_0, "scorp");
    r0 = pxsim_Array__push(s.tmp_0, "scote");
    r0 = pxsim_Array__push(s.tmp_0, "scots");
    r0 = pxsim_Array__push(s.tmp_0, "scoug");
    r0 = pxsim_Array__push(s.tmp_0, "scoup");
    r0 = pxsim_Array__push(s.tmp_0, "scour");
    r0 = pxsim_Array__push(s.tmp_0, "scout");
    r0 = pxsim_Array__push(s.tmp_0, "scowl");
    r0 = pxsim_Array__push(s.tmp_0, "scowp");
    r0 = pxsim_Array__push(s.tmp_0, "scows");
    r0 = pxsim_Array__push(s.tmp_0, "scrab");
    r0 = pxsim_Array__push(s.tmp_0, "scrae");
    r0 = pxsim_Array__push(s.tmp_0, "scrag");
    r0 = pxsim_Array__push(s.tmp_0, "scram");
    r0 = pxsim_Array__push(s.tmp_0, "scran");
    r0 = pxsim_Array__push(s.tmp_0, "scrap");
    r0 = pxsim_Array__push(s.tmp_0, "scrat");
    r0 = pxsim_Array__push(s.tmp_0, "scraw");
    r0 = pxsim_Array__push(s.tmp_0, "scray");
    r0 = pxsim_Array__push(s.tmp_0, "scree");
    r0 = pxsim_Array__push(s.tmp_0, "screw");
    r0 = pxsim_Array__push(s.tmp_0, "scrim");
    r0 = pxsim_Array__push(s.tmp_0, "scrip");
    r0 = pxsim_Array__push(s.tmp_0, "scrob");
    r0 = pxsim_Array__push(s.tmp_0, "scrod");
    r0 = pxsim_Array__push(s.tmp_0, "scrog");
    r0 = pxsim_Array__push(s.tmp_0, "scroo");
    r0 = pxsim_Array__push(s.tmp_0, "scrow");
    r0 = pxsim_Array__push(s.tmp_0, "scrub");
    r0 = pxsim_Array__push(s.tmp_0, "scrum");
    r0 = pxsim_Array__push(s.tmp_0, "scuba");
    r0 = pxsim_Array__push(s.tmp_0, "scudi");
    r0 = pxsim_Array__push(s.tmp_0, "scudo");
    r0 = pxsim_Array__push(s.tmp_0, "scuds");
    r0 = pxsim_Array__push(s.tmp_0, "scuff");
    r0 = pxsim_Array__push(s.tmp_0, "scuft");
    r0 = pxsim_Array__push(s.tmp_0, "scugs");
    r0 = pxsim_Array__push(s.tmp_0, "sculk");
    r0 = pxsim_Array__push(s.tmp_0, "scull");
    r0 = pxsim_Array__push(s.tmp_0, "sculp");
    r0 = pxsim_Array__push(s.tmp_0, "sculs");
    r0 = pxsim_Array__push(s.tmp_0, "scums");
    r0 = pxsim_Array__push(s.tmp_0, "scups");
    r0 = pxsim_Array__push(s.tmp_0, "scurf");
    r0 = pxsim_Array__push(s.tmp_0, "scurs");
    r0 = pxsim_Array__push(s.tmp_0, "scuse");
    r0 = pxsim_Array__push(s.tmp_0, "scuta");
    r0 = pxsim_Array__push(s.tmp_0, "scute");
    r0 = pxsim_Array__push(s.tmp_0, "scuts");
    r0 = pxsim_Array__push(s.tmp_0, "scuzz");
    r0 = pxsim_Array__push(s.tmp_0, "scyes");
    r0 = pxsim_Array__push(s.tmp_0, "sdayn");
    r0 = pxsim_Array__push(s.tmp_0, "sdein");
    r0 = pxsim_Array__push(s.tmp_0, "seals");
    r0 = pxsim_Array__push(s.tmp_0, "seame");
    r0 = pxsim_Array__push(s.tmp_0, "seams");
    r0 = pxsim_Array__push(s.tmp_0, "seamy");
    r0 = pxsim_Array__push(s.tmp_0, "seans");
    r0 = pxsim_Array__push(s.tmp_0, "seare");
    r0 = pxsim_Array__push(s.tmp_0, "sears");
    r0 = pxsim_Array__push(s.tmp_0, "sease");
    r0 = pxsim_Array__push(s.tmp_0, "seats");
    r0 = pxsim_Array__push(s.tmp_0, "seaze");
    r0 = pxsim_Array__push(s.tmp_0, "sebum");
    r0 = pxsim_Array__push(s.tmp_0, "secco");
    r0 = pxsim_Array__push(s.tmp_0, "sechs");
    r0 = pxsim_Array__push(s.tmp_0, "sects");
    r0 = pxsim_Array__push(s.tmp_0, "sedan");
    r0 = pxsim_Array__push(s.tmp_0, "seder");
    r0 = pxsim_Array__push(s.tmp_0, "sedes");
    r0 = pxsim_Array__push(s.tmp_0, "sedge");
    r0 = pxsim_Array__push(s.tmp_0, "sedgy");
    r0 = pxsim_Array__push(s.tmp_0, "sedum");
    r0 = pxsim_Array__push(s.tmp_0, "seeds");
    r0 = pxsim_Array__push(s.tmp_0, "seedy");
    r0 = pxsim_Array__push(s.tmp_0, "seeks");
    r0 = pxsim_Array__push(s.tmp_0, "seeld");
    r0 = pxsim_Array__push(s.tmp_0, "seels");
    r0 = pxsim_Array__push(s.tmp_0, "seely");
    r0 = pxsim_Array__push(s.tmp_0, "seems");
    r0 = pxsim_Array__push(s.tmp_0, "seeps");
    r0 = pxsim_Array__push(s.tmp_0, "seepy");
    r0 = pxsim_Array__push(s.tmp_0, "seers");
    r0 = pxsim_Array__push(s.tmp_0, "sefer");
    r0 = pxsim_Array__push(s.tmp_0, "segar");
    r0 = pxsim_Array__push(s.tmp_0, "segas");
    r0 = pxsim_Array__push(s.tmp_0, "segni");
    r0 = pxsim_Array__push(s.tmp_0, "segno");
    r0 = pxsim_Array__push(s.tmp_0, "segol");
    r0 = pxsim_Array__push(s.tmp_0, "segos");
    r0 = pxsim_Array__push(s.tmp_0, "segue");
    r0 = pxsim_Array__push(s.tmp_0, "sehri");
    r0 = pxsim_Array__push(s.tmp_0, "seifs");
    r0 = pxsim_Array__push(s.tmp_0, "seils");
    r0 = pxsim_Array__push(s.tmp_0, "seine");
    r0 = pxsim_Array__push(s.tmp_0, "seirs");
    r0 = pxsim_Array__push(s.tmp_0, "seise");
    r0 = pxsim_Array__push(s.tmp_0, "seism");
    r0 = pxsim_Array__push(s.tmp_0, "seity");
    r0 = pxsim_Array__push(s.tmp_0, "seiza");
    r0 = pxsim_Array__push(s.tmp_0, "seize");
    r0 = pxsim_Array__push(s.tmp_0, "sekos");
    r0 = pxsim_Array__push(s.tmp_0, "sekts");
    r0 = pxsim_Array__push(s.tmp_0, "selah");
    r0 = pxsim_Array__push(s.tmp_0, "seles");
    r0 = pxsim_Array__push(s.tmp_0, "selfs");
    r0 = pxsim_Array__push(s.tmp_0, "selfy");
    r0 = pxsim_Array__push(s.tmp_0, "selky");
    r0 = pxsim_Array__push(s.tmp_0, "sella");
    r0 = pxsim_Array__push(s.tmp_0, "selle");
    r0 = pxsim_Array__push(s.tmp_0, "sells");
    r0 = pxsim_Array__push(s.tmp_0, "selva");
    r0 = pxsim_Array__push(s.tmp_0, "semas");
    r0 = pxsim_Array__push(s.tmp_0, "semee");
    r0 = pxsim_Array__push(s.tmp_0, "semen");
    r0 = pxsim_Array__push(s.tmp_0, "semes");
    r0 = pxsim_Array__push(s.tmp_0, "semie");
    r0 = pxsim_Array__push(s.tmp_0, "semis");
    r0 = pxsim_Array__push(s.tmp_0, "senas");
    r0 = pxsim_Array__push(s.tmp_0, "sends");
    r0 = pxsim_Array__push(s.tmp_0, "senes");
    r0 = pxsim_Array__push(s.tmp_0, "senex");
    r0 = pxsim_Array__push(s.tmp_0, "sengi");
    r0 = pxsim_Array__push(s.tmp_0, "senna");
    r0 = pxsim_Array__push(s.tmp_0, "senor");
    r0 = pxsim_Array__push(s.tmp_0, "sensa");
    r0 = pxsim_Array__push(s.tmp_0, "sense");
    r0 = pxsim_Array__push(s.tmp_0, "sensi");
    r0 = pxsim_Array__push(s.tmp_0, "sensu");
    r0 = pxsim_Array__push(s.tmp_0, "sente");
    r0 = pxsim_Array__push(s.tmp_0, "senti");
    r0 = pxsim_Array__push(s.tmp_0, "sents");
    r0 = pxsim_Array__push(s.tmp_0, "senvy");
    r0 = pxsim_Array__push(s.tmp_0, "senza");
    r0 = pxsim_Array__push(s.tmp_0, "sepad");
    r0 = pxsim_Array__push(s.tmp_0, "sepal");
    r0 = pxsim_Array__push(s.tmp_0, "sepia");
    r0 = pxsim_Array__push(s.tmp_0, "sepic");
    r0 = pxsim_Array__push(s.tmp_0, "sepoy");
    r0 = pxsim_Array__push(s.tmp_0, "seppo");
    r0 = pxsim_Array__push(s.tmp_0, "septa");
    r0 = pxsim_Array__push(s.tmp_0, "septs");
    r0 = pxsim_Array__push(s.tmp_0, "serac");
    r0 = pxsim_Array__push(s.tmp_0, "serai");
    r0 = pxsim_Array__push(s.tmp_0, "seral");
    r0 = pxsim_Array__push(s.tmp_0, "sered");
    r0 = pxsim_Array__push(s.tmp_0, "serer");
    r0 = pxsim_Array__push(s.tmp_0, "seres");
    r0 = pxsim_Array__push(s.tmp_0, "serfs");
    r0 = pxsim_Array__push(s.tmp_0, "serge");
    r0 = pxsim_Array__push(s.tmp_0, "seria");
    r0 = pxsim_Array__push(s.tmp_0, "seric");
    r0 = pxsim_Array__push(s.tmp_0, "serif");
    r0 = pxsim_Array__push(s.tmp_0, "serin");
    r0 = pxsim_Array__push(s.tmp_0, "serir");
    r0 = pxsim_Array__push(s.tmp_0, "serks");
    r0 = pxsim_Array__push(s.tmp_0, "seron");
    r0 = pxsim_Array__push(s.tmp_0, "serow");
    r0 = pxsim_Array__push(s.tmp_0, "serra");
    r0 = pxsim_Array__push(s.tmp_0, "serre");
    r0 = pxsim_Array__push(s.tmp_0, "serrs");
    r0 = pxsim_Array__push(s.tmp_0, "serry");
    r0 = pxsim_Array__push(s.tmp_0, "serum");
    r0 = pxsim_Array__push(s.tmp_0, "serve");
    r0 = pxsim_Array__push(s.tmp_0, "servo");
    r0 = pxsim_Array__push(s.tmp_0, "sesey");
    r0 = pxsim_Array__push(s.tmp_0, "sessa");
    r0 = pxsim_Array__push(s.tmp_0, "setae");
    r0 = pxsim_Array__push(s.tmp_0, "setal");
    r0 = pxsim_Array__push(s.tmp_0, "seter");
    r0 = pxsim_Array__push(s.tmp_0, "seths");
    r0 = pxsim_Array__push(s.tmp_0, "seton");
    r0 = pxsim_Array__push(s.tmp_0, "setts");
    r0 = pxsim_Array__push(s.tmp_0, "setup");
    r0 = pxsim_Array__push(s.tmp_0, "sevak");
    r0 = pxsim_Array__push(s.tmp_0, "seven");
    r0 = pxsim_Array__push(s.tmp_0, "sever");
    r0 = pxsim_Array__push(s.tmp_0, "sevir");
    r0 = pxsim_Array__push(s.tmp_0, "sewan");
    r0 = pxsim_Array__push(s.tmp_0, "sewar");
    r0 = pxsim_Array__push(s.tmp_0, "sewed");
    r0 = pxsim_Array__push(s.tmp_0, "sewel");
    r0 = pxsim_Array__push(s.tmp_0, "sewen");
    r0 = pxsim_Array__push(s.tmp_0, "sewer");
    r0 = pxsim_Array__push(s.tmp_0, "sewin");
    r0 = pxsim_Array__push(s.tmp_0, "sexed");
    r0 = pxsim_Array__push(s.tmp_0, "sexer");
    r0 = pxsim_Array__push(s.tmp_0, "sexes");
    r0 = pxsim_Array__push(s.tmp_0, "sexor");
    r0 = pxsim_Array__push(s.tmp_0, "sexto");
    r0 = pxsim_Array__push(s.tmp_0, "sexts");
    r0 = pxsim_Array__push(s.tmp_0, "seyen");
    r0 = pxsim_Array__push(s.tmp_0, "sezes");
    r0 = pxsim_Array__push(s.tmp_0, "shack");
    r0 = pxsim_Array__push(s.tmp_0, "shade");
    r0 = pxsim_Array__push(s.tmp_0, "shads");
    r0 = pxsim_Array__push(s.tmp_0, "shady");
    r0 = pxsim_Array__push(s.tmp_0, "shaft");
    r0 = pxsim_Array__push(s.tmp_0, "shags");
    r0 = pxsim_Array__push(s.tmp_0, "shahs");
    r0 = pxsim_Array__push(s.tmp_0, "shaka");
    r0 = pxsim_Array__push(s.tmp_0, "shake");
    r0 = pxsim_Array__push(s.tmp_0, "shako");
    r0 = pxsim_Array__push(s.tmp_0, "shakt");
    r0 = pxsim_Array__push(s.tmp_0, "shaky");
    r0 = pxsim_Array__push(s.tmp_0, "shale");
    r0 = pxsim_Array__push(s.tmp_0, "shall");
    r0 = pxsim_Array__push(s.tmp_0, "shalm");
    r0 = pxsim_Array__push(s.tmp_0, "shalt");
    r0 = pxsim_Array__push(s.tmp_0, "shaly");
    r0 = pxsim_Array__push(s.tmp_0, "shama");
    r0 = pxsim_Array__push(s.tmp_0, "shame");
    r0 = pxsim_Array__push(s.tmp_0, "shams");
    r0 = pxsim_Array__push(s.tmp_0, "shand");
    r0 = pxsim_Array__push(s.tmp_0, "shank");
    r0 = pxsim_Array__push(s.tmp_0, "shans");
    r0 = pxsim_Array__push(s.tmp_0, "shape");
    r0 = pxsim_Array__push(s.tmp_0, "shaps");
    r0 = pxsim_Array__push(s.tmp_0, "shard");
    r0 = pxsim_Array__push(s.tmp_0, "share");
    r0 = pxsim_Array__push(s.tmp_0, "shark");
    r0 = pxsim_Array__push(s.tmp_0, "sharn");
    r0 = pxsim_Array__push(s.tmp_0, "sharp");
    r0 = pxsim_Array__push(s.tmp_0, "shart");
    r0 = pxsim_Array__push(s.tmp_0, "shash");
    r0 = pxsim_Array__push(s.tmp_0, "shaul");
    r0 = pxsim_Array__push(s.tmp_0, "shave");
    r0 = pxsim_Array__push(s.tmp_0, "shawl");
    r0 = pxsim_Array__push(s.tmp_0, "shawm");
    r0 = pxsim_Array__push(s.tmp_0, "shawn");
    r0 = pxsim_Array__push(s.tmp_0, "shaws");
    r0 = pxsim_Array__push(s.tmp_0, "shaya");
    r0 = pxsim_Array__push(s.tmp_0, "shays");
    r0 = pxsim_Array__push(s.tmp_0, "shchi");
    r0 = pxsim_Array__push(s.tmp_0, "sheaf");
    r0 = pxsim_Array__push(s.tmp_0, "sheal");
    r0 = pxsim_Array__push(s.tmp_0, "shear");
    r0 = pxsim_Array__push(s.tmp_0, "sheas");
    r0 = pxsim_Array__push(s.tmp_0, "sheds");
    r0 = pxsim_Array__push(s.tmp_0, "sheel");
    r0 = pxsim_Array__push(s.tmp_0, "sheen");
    r0 = pxsim_Array__push(s.tmp_0, "sheep");
    r0 = pxsim_Array__push(s.tmp_0, "sheer");
    r0 = pxsim_Array__push(s.tmp_0, "sheet");
    r0 = pxsim_Array__push(s.tmp_0, "sheik");
    r0 = pxsim_Array__push(s.tmp_0, "shelf");
    r0 = pxsim_Array__push(s.tmp_0, "shell");
    r0 = pxsim_Array__push(s.tmp_0, "shend");
    r0 = pxsim_Array__push(s.tmp_0, "sheng");
    r0 = pxsim_Array__push(s.tmp_0, "shent");
    r0 = pxsim_Array__push(s.tmp_0, "sheol");
    r0 = pxsim_Array__push(s.tmp_0, "sherd");
    r0 = pxsim_Array__push(s.tmp_0, "shere");
    r0 = pxsim_Array__push(s.tmp_0, "shero");
    r0 = pxsim_Array__push(s.tmp_0, "shets");
    r0 = pxsim_Array__push(s.tmp_0, "sheva");
    r0 = pxsim_Array__push(s.tmp_0, "shewn");
    r0 = pxsim_Array__push(s.tmp_0, "shews");
    r0 = pxsim_Array__push(s.tmp_0, "shiai");
    r0 = pxsim_Array__push(s.tmp_0, "shied");
    r0 = pxsim_Array__push(s.tmp_0, "shiel");
    r0 = pxsim_Array__push(s.tmp_0, "shier");
    r0 = pxsim_Array__push(s.tmp_0, "shies");
    r0 = pxsim_Array__push(s.tmp_0, "shift");
    r0 = pxsim_Array__push(s.tmp_0, "shill");
    r0 = pxsim_Array__push(s.tmp_0, "shily");
    r0 = pxsim_Array__push(s.tmp_0, "shims");
    r0 = pxsim_Array__push(s.tmp_0, "shine");
    r0 = pxsim_Array__push(s.tmp_0, "shins");
    r0 = pxsim_Array__push(s.tmp_0, "shiny");
    r0 = pxsim_Array__push(s.tmp_0, "shiok");
    r0 = pxsim_Array__push(s.tmp_0, "ships");
    r0 = pxsim_Array__push(s.tmp_0, "shire");
    r0 = pxsim_Array__push(s.tmp_0, "shirk");
    r0 = pxsim_Array__push(s.tmp_0, "shirr");
    r0 = pxsim_Array__push(s.tmp_0, "shirs");
    r0 = pxsim_Array__push(s.tmp_0, "shirt");
    r0 = pxsim_Array__push(s.tmp_0, "shish");
    r0 = pxsim_Array__push(s.tmp_0, "shiso");
    r0 = pxsim_Array__push(s.tmp_0, "shist");
    r0 = pxsim_Array__push(s.tmp_0, "shite");
    r0 = pxsim_Array__push(s.tmp_0, "shits");
    r0 = pxsim_Array__push(s.tmp_0, "shiur");
    r0 = pxsim_Array__push(s.tmp_0, "shiva");
    r0 = pxsim_Array__push(s.tmp_0, "shive");
    r0 = pxsim_Array__push(s.tmp_0, "shivs");
    r0 = pxsim_Array__push(s.tmp_0, "shlep");
    r0 = pxsim_Array__push(s.tmp_0, "shlub");
    r0 = pxsim_Array__push(s.tmp_0, "shmek");
    r0 = pxsim_Array__push(s.tmp_0, "shmoe");
    r0 = pxsim_Array__push(s.tmp_0, "shoal");
    r0 = pxsim_Array__push(s.tmp_0, "shoat");
    r0 = pxsim_Array__push(s.tmp_0, "shock");
    r0 = pxsim_Array__push(s.tmp_0, "shoed");
    r0 = pxsim_Array__push(s.tmp_0, "shoer");
    r0 = pxsim_Array__push(s.tmp_0, "shoes");
    r0 = pxsim_Array__push(s.tmp_0, "shogi");
    r0 = pxsim_Array__push(s.tmp_0, "shogs");
    r0 = pxsim_Array__push(s.tmp_0, "shoji");
    r0 = pxsim_Array__push(s.tmp_0, "shojo");
    r0 = pxsim_Array__push(s.tmp_0, "shola");
    r0 = pxsim_Array__push(s.tmp_0, "shone");
    r0 = pxsim_Array__push(s.tmp_0, "shonk");
    r0 = pxsim_Array__push(s.tmp_0, "shook");
    r0 = pxsim_Array__push(s.tmp_0, "shool");
    r0 = pxsim_Array__push(s.tmp_0, "shoon");
    r0 = pxsim_Array__push(s.tmp_0, "shoos");
    r0 = pxsim_Array__push(s.tmp_0, "shoot");
    r0 = pxsim_Array__push(s.tmp_0, "shope");
    r0 = pxsim_Array__push(s.tmp_0, "shops");
    r0 = pxsim_Array__push(s.tmp_0, "shore");
    r0 = pxsim_Array__push(s.tmp_0, "shorl");
    r0 = pxsim_Array__push(s.tmp_0, "shorn");
    r0 = pxsim_Array__push(s.tmp_0, "short");
    r0 = pxsim_Array__push(s.tmp_0, "shote");
    r0 = pxsim_Array__push(s.tmp_0, "shots");
    r0 = pxsim_Array__push(s.tmp_0, "shott");
    r0 = pxsim_Array__push(s.tmp_0, "shoud");
    r0 = pxsim_Array__push(s.tmp_0, "shout");
    r0 = pxsim_Array__push(s.tmp_0, "shove");
    r0 = pxsim_Array__push(s.tmp_0, "showd");
    r0 = pxsim_Array__push(s.tmp_0, "shown");
    r0 = pxsim_Array__push(s.tmp_0, "shows");
    r0 = pxsim_Array__push(s.tmp_0, "showy");
    r0 = pxsim_Array__push(s.tmp_0, "shoyu");
    r0 = pxsim_Array__push(s.tmp_0, "shred");
    r0 = pxsim_Array__push(s.tmp_0, "shrew");
    r0 = pxsim_Array__push(s.tmp_0, "shris");
    r0 = pxsim_Array__push(s.tmp_0, "shrow");
    r0 = pxsim_Array__push(s.tmp_0, "shrub");
    r0 = pxsim_Array__push(s.tmp_0, "shrug");
    r0 = pxsim_Array__push(s.tmp_0, "shtar");
    r0 = pxsim_Array__push(s.tmp_0, "shtik");
    r0 = pxsim_Array__push(s.tmp_0, "shtum");
    r0 = pxsim_Array__push(s.tmp_0, "shtup");
    r0 = pxsim_Array__push(s.tmp_0, "shuba");
    r0 = pxsim_Array__push(s.tmp_0, "shuck");
    r0 = pxsim_Array__push(s.tmp_0, "shule");
    r0 = pxsim_Array__push(s.tmp_0, "shuln");
    r0 = pxsim_Array__push(s.tmp_0, "shuls");
    r0 = pxsim_Array__push(s.tmp_0, "shuns");
    r0 = pxsim_Array__push(s.tmp_0, "shunt");
    r0 = pxsim_Array__push(s.tmp_0, "shura");
    r0 = pxsim_Array__push(s.tmp_0, "shush");
    r0 = pxsim_Array__push(s.tmp_0, "shute");
    r0 = pxsim_Array__push(s.tmp_0, "shuts");
    r0 = pxsim_Array__push(s.tmp_0, "shwas");
    r0 = pxsim_Array__push(s.tmp_0, "shyer");
    r0 = pxsim_Array__push(s.tmp_0, "shyly");
    r0 = pxsim_Array__push(s.tmp_0, "sials");
    r0 = pxsim_Array__push(s.tmp_0, "sibbs");
    r0 = pxsim_Array__push(s.tmp_0, "sibia");
    r0 = pxsim_Array__push(s.tmp_0, "sibyl");
    r0 = pxsim_Array__push(s.tmp_0, "sices");
    r0 = pxsim_Array__push(s.tmp_0, "sicht");
    r0 = pxsim_Array__push(s.tmp_0, "sicko");
    r0 = pxsim_Array__push(s.tmp_0, "sicks");
    r0 = pxsim_Array__push(s.tmp_0, "sicky");
    r0 = pxsim_Array__push(s.tmp_0, "sidas");
    r0 = pxsim_Array__push(s.tmp_0, "sided");
    r0 = pxsim_Array__push(s.tmp_0, "sider");
    r0 = pxsim_Array__push(s.tmp_0, "sides");
    r0 = pxsim_Array__push(s.tmp_0, "sidey");
    r0 = pxsim_Array__push(s.tmp_0, "sidha");
    r0 = pxsim_Array__push(s.tmp_0, "sidhe");
    r0 = pxsim_Array__push(s.tmp_0, "sidle");
    r0 = pxsim_Array__push(s.tmp_0, "siege");
    r0 = pxsim_Array__push(s.tmp_0, "sield");
    r0 = pxsim_Array__push(s.tmp_0, "siens");
    r0 = pxsim_Array__push(s.tmp_0, "sient");
    r0 = pxsim_Array__push(s.tmp_0, "sieth");
    r0 = pxsim_Array__push(s.tmp_0, "sieur");
    r0 = pxsim_Array__push(s.tmp_0, "sieve");
    r0 = pxsim_Array__push(s.tmp_0, "sifts");
    r0 = pxsim_Array__push(s.tmp_0, "sighs");
    r0 = pxsim_Array__push(s.tmp_0, "sight");
    r0 = pxsim_Array__push(s.tmp_0, "sigil");
    r0 = pxsim_Array__push(s.tmp_0, "sigla");
    r0 = pxsim_Array__push(s.tmp_0, "sigma");
    r0 = pxsim_Array__push(s.tmp_0, "signa");
    r0 = pxsim_Array__push(s.tmp_0, "signs");
    r0 = pxsim_Array__push(s.tmp_0, "sigri");
    r0 = pxsim_Array__push(s.tmp_0, "sijos");
    r0 = pxsim_Array__push(s.tmp_0, "sikas");
    r0 = pxsim_Array__push(s.tmp_0, "siker");
    r0 = pxsim_Array__push(s.tmp_0, "sikes");
    r0 = pxsim_Array__push(s.tmp_0, "silds");
    r0 = pxsim_Array__push(s.tmp_0, "siled");
    r0 = pxsim_Array__push(s.tmp_0, "silen");
    r0 = pxsim_Array__push(s.tmp_0, "siler");
    r0 = pxsim_Array__push(s.tmp_0, "siles");
    r0 = pxsim_Array__push(s.tmp_0, "silex");
    r0 = pxsim_Array__push(s.tmp_0, "silks");
    r0 = pxsim_Array__push(s.tmp_0, "silky");
    r0 = pxsim_Array__push(s.tmp_0, "sills");
    r0 = pxsim_Array__push(s.tmp_0, "silly");
    r0 = pxsim_Array__push(s.tmp_0, "silos");
    r0 = pxsim_Array__push(s.tmp_0, "silts");
    r0 = pxsim_Array__push(s.tmp_0, "silty");
    r0 = pxsim_Array__push(s.tmp_0, "silva");
    r0 = pxsim_Array__push(s.tmp_0, "simar");
    r0 = pxsim_Array__push(s.tmp_0, "simas");
    r0 = pxsim_Array__push(s.tmp_0, "simba");
    r0 = pxsim_Array__push(s.tmp_0, "simis");
    r0 = pxsim_Array__push(s.tmp_0, "simps");
    r0 = pxsim_Array__push(s.tmp_0, "simul");
    r0 = pxsim_Array__push(s.tmp_0, "since");
    r0 = pxsim_Array__push(s.tmp_0, "sinds");
    r0 = pxsim_Array__push(s.tmp_0, "sined");
    r0 = pxsim_Array__push(s.tmp_0, "sines");
    r0 = pxsim_Array__push(s.tmp_0, "sinew");
    r0 = pxsim_Array__push(s.tmp_0, "singe");
    r0 = pxsim_Array__push(s.tmp_0, "sings");
    r0 = pxsim_Array__push(s.tmp_0, "sinhs");
    r0 = pxsim_Array__push(s.tmp_0, "sinks");
    r0 = pxsim_Array__push(s.tmp_0, "sinky");
    r0 = pxsim_Array__push(s.tmp_0, "sinsi");
    r0 = pxsim_Array__push(s.tmp_0, "sinus");
    r0 = pxsim_Array__push(s.tmp_0, "siped");
    r0 = pxsim_Array__push(s.tmp_0, "sipes");
    r0 = pxsim_Array__push(s.tmp_0, "sippy");
    r0 = pxsim_Array__push(s.tmp_0, "sired");
    r0 = pxsim_Array__push(s.tmp_0, "siree");
    r0 = pxsim_Array__push(s.tmp_0, "siren");
    r0 = pxsim_Array__push(s.tmp_0, "sires");
    r0 = pxsim_Array__push(s.tmp_0, "sirih");
    r0 = pxsim_Array__push(s.tmp_0, "siris");
    r0 = pxsim_Array__push(s.tmp_0, "siroc");
    r0 = pxsim_Array__push(s.tmp_0, "sirra");
    r0 = pxsim_Array__push(s.tmp_0, "sirup");
    r0 = pxsim_Array__push(s.tmp_0, "sisal");
    r0 = pxsim_Array__push(s.tmp_0, "sises");
    r0 = pxsim_Array__push(s.tmp_0, "sissy");
    r0 = pxsim_Array__push(s.tmp_0, "sista");
    r0 = pxsim_Array__push(s.tmp_0, "sists");
    r0 = pxsim_Array__push(s.tmp_0, "sitar");
    r0 = pxsim_Array__push(s.tmp_0, "sitch");
    r0 = pxsim_Array__push(s.tmp_0, "sited");
    r0 = pxsim_Array__push(s.tmp_0, "sites");
    r0 = pxsim_Array__push(s.tmp_0, "sithe");
    r0 = pxsim_Array__push(s.tmp_0, "sitka");
    r0 = pxsim_Array__push(s.tmp_0, "situp");
    r0 = pxsim_Array__push(s.tmp_0, "situs");
    r0 = pxsim_Array__push(s.tmp_0, "siver");
    r0 = pxsim_Array__push(s.tmp_0, "sixer");
    r0 = pxsim_Array__push(s.tmp_0, "sixes");
    r0 = pxsim_Array__push(s.tmp_0, "sixmo");
    r0 = pxsim_Array__push(s.tmp_0, "sixte");
    r0 = pxsim_Array__push(s.tmp_0, "sixth");
    r0 = pxsim_Array__push(s.tmp_0, "sixty");
    r0 = pxsim_Array__push(s.tmp_0, "sizar");
    r0 = pxsim_Array__push(s.tmp_0, "sized");
    r0 = pxsim_Array__push(s.tmp_0, "sizel");
    r0 = pxsim_Array__push(s.tmp_0, "sizer");
    r0 = pxsim_Array__push(s.tmp_0, "sizes");
    r0 = pxsim_Array__push(s.tmp_0, "skags");
    r0 = pxsim_Array__push(s.tmp_0, "skail");
    r0 = pxsim_Array__push(s.tmp_0, "skald");
    r0 = pxsim_Array__push(s.tmp_0, "skank");
    r0 = pxsim_Array__push(s.tmp_0, "skarn");
    r0 = pxsim_Array__push(s.tmp_0, "skart");
    r0 = pxsim_Array__push(s.tmp_0, "skate");
    r0 = pxsim_Array__push(s.tmp_0, "skats");
    r0 = pxsim_Array__push(s.tmp_0, "skatt");
    r0 = pxsim_Array__push(s.tmp_0, "skaws");
    r0 = pxsim_Array__push(s.tmp_0, "skean");
    r0 = pxsim_Array__push(s.tmp_0, "skear");
    r0 = pxsim_Array__push(s.tmp_0, "skeds");
    r0 = pxsim_Array__push(s.tmp_0, "skeed");
    r0 = pxsim_Array__push(s.tmp_0, "skeef");
    r0 = pxsim_Array__push(s.tmp_0, "skeen");
    r0 = pxsim_Array__push(s.tmp_0, "skeer");
    r0 = pxsim_Array__push(s.tmp_0, "skees");
    r0 = pxsim_Array__push(s.tmp_0, "skeet");
    r0 = pxsim_Array__push(s.tmp_0, "skeev");
    r0 = pxsim_Array__push(s.tmp_0, "skeez");
    r0 = pxsim_Array__push(s.tmp_0, "skegg");
    r0 = pxsim_Array__push(s.tmp_0, "skegs");
    r0 = pxsim_Array__push(s.tmp_0, "skein");
    r0 = pxsim_Array__push(s.tmp_0, "skelf");
    r0 = pxsim_Array__push(s.tmp_0, "skell");
    r0 = pxsim_Array__push(s.tmp_0, "skelm");
    r0 = pxsim_Array__push(s.tmp_0, "skelp");
    r0 = pxsim_Array__push(s.tmp_0, "skene");
    r0 = pxsim_Array__push(s.tmp_0, "skens");
    r0 = pxsim_Array__push(s.tmp_0, "skeos");
    r0 = pxsim_Array__push(s.tmp_0, "skeps");
    r0 = pxsim_Array__push(s.tmp_0, "skerm");
    r0 = pxsim_Array__push(s.tmp_0, "skers");
    r0 = pxsim_Array__push(s.tmp_0, "skets");
    r0 = pxsim_Array__push(s.tmp_0, "skews");
    r0 = pxsim_Array__push(s.tmp_0, "skids");
    r0 = pxsim_Array__push(s.tmp_0, "skied");
    r0 = pxsim_Array__push(s.tmp_0, "skier");
    r0 = pxsim_Array__push(s.tmp_0, "skies");
    r0 = pxsim_Array__push(s.tmp_0, "skiey");
    r0 = pxsim_Array__push(s.tmp_0, "skiff");
    r0 = pxsim_Array__push(s.tmp_0, "skill");
    r0 = pxsim_Array__push(s.tmp_0, "skimo");
    r0 = pxsim_Array__push(s.tmp_0, "skimp");
    r0 = pxsim_Array__push(s.tmp_0, "skims");
    r0 = pxsim_Array__push(s.tmp_0, "skink");
    r0 = pxsim_Array__push(s.tmp_0, "skins");
    r0 = pxsim_Array__push(s.tmp_0, "skint");
    r0 = pxsim_Array__push(s.tmp_0, "skios");
    r0 = pxsim_Array__push(s.tmp_0, "skips");
    r0 = pxsim_Array__push(s.tmp_0, "skirl");
    r0 = pxsim_Array__push(s.tmp_0, "skirr");
    r0 = pxsim_Array__push(s.tmp_0, "skirt");
    r0 = pxsim_Array__push(s.tmp_0, "skite");
    r0 = pxsim_Array__push(s.tmp_0, "skits");
    r0 = pxsim_Array__push(s.tmp_0, "skive");
    r0 = pxsim_Array__push(s.tmp_0, "skivy");
    r0 = pxsim_Array__push(s.tmp_0, "sklim");
    r0 = pxsim_Array__push(s.tmp_0, "skoal");
    r0 = pxsim_Array__push(s.tmp_0, "skobe");
    r0 = pxsim_Array__push(s.tmp_0, "skody");
    r0 = pxsim_Array__push(s.tmp_0, "skoff");
    r0 = pxsim_Array__push(s.tmp_0, "skofs");
    r0 = pxsim_Array__push(s.tmp_0, "skogs");
    r0 = pxsim_Array__push(s.tmp_0, "skols");
    r0 = pxsim_Array__push(s.tmp_0, "skool");
    r0 = pxsim_Array__push(s.tmp_0, "skort");
    r0 = pxsim_Array__push(s.tmp_0, "skosh");
    r0 = pxsim_Array__push(s.tmp_0, "skran");
    r0 = pxsim_Array__push(s.tmp_0, "skrik");
    r0 = pxsim_Array__push(s.tmp_0, "skroo");
    r0 = pxsim_Array__push(s.tmp_0, "skuas");
    r0 = pxsim_Array__push(s.tmp_0, "skugs");
    r0 = pxsim_Array__push(s.tmp_0, "skulk");
    r0 = pxsim_Array__push(s.tmp_0, "skull");
    r0 = pxsim_Array__push(s.tmp_0, "skunk");
    r0 = pxsim_Array__push(s.tmp_0, "skyed");
    r0 = pxsim_Array__push(s.tmp_0, "skyer");
    r0 = pxsim_Array__push(s.tmp_0, "skyey");
    r0 = pxsim_Array__push(s.tmp_0, "skyfs");
    r0 = pxsim_Array__push(s.tmp_0, "skyre");
    r0 = pxsim_Array__push(s.tmp_0, "skyrs");
    r0 = pxsim_Array__push(s.tmp_0, "skyte");
    r0 = pxsim_Array__push(s.tmp_0, "slabs");
    r0 = pxsim_Array__push(s.tmp_0, "slack");
    r0 = pxsim_Array__push(s.tmp_0, "slade");
    r0 = pxsim_Array__push(s.tmp_0, "slaes");
    r0 = pxsim_Array__push(s.tmp_0, "slags");
    r0 = pxsim_Array__push(s.tmp_0, "slaid");
    r0 = pxsim_Array__push(s.tmp_0, "slain");
    r0 = pxsim_Array__push(s.tmp_0, "slake");
    r0 = pxsim_Array__push(s.tmp_0, "slams");
    r0 = pxsim_Array__push(s.tmp_0, "slane");
    r0 = pxsim_Array__push(s.tmp_0, "slang");
    r0 = pxsim_Array__push(s.tmp_0, "slank");
    r0 = pxsim_Array__push(s.tmp_0, "slant");
    r0 = pxsim_Array__push(s.tmp_0, "slaps");
    r0 = pxsim_Array__push(s.tmp_0, "slart");
    r0 = pxsim_Array__push(s.tmp_0, "slash");
    r0 = pxsim_Array__push(s.tmp_0, "slate");
    r0 = pxsim_Array__push(s.tmp_0, "slats");
    r0 = pxsim_Array__push(s.tmp_0, "slaty");
    r0 = pxsim_Array__push(s.tmp_0, "slave");
    r0 = pxsim_Array__push(s.tmp_0, "slaws");
    r0 = pxsim_Array__push(s.tmp_0, "slays");
    r0 = pxsim_Array__push(s.tmp_0, "slebs");
    r0 = pxsim_Array__push(s.tmp_0, "sleds");
    r0 = pxsim_Array__push(s.tmp_0, "sleek");
    r0 = pxsim_Array__push(s.tmp_0, "sleep");
    r0 = pxsim_Array__push(s.tmp_0, "sleer");
    r0 = pxsim_Array__push(s.tmp_0, "sleet");
    r0 = pxsim_Array__push(s.tmp_0, "slept");
    r0 = pxsim_Array__push(s.tmp_0, "slews");
    r0 = pxsim_Array__push(s.tmp_0, "sleys");
    r0 = pxsim_Array__push(s.tmp_0, "slice");
    r0 = pxsim_Array__push(s.tmp_0, "slick");
    r0 = pxsim_Array__push(s.tmp_0, "slide");
    r0 = pxsim_Array__push(s.tmp_0, "slier");
    r0 = pxsim_Array__push(s.tmp_0, "slily");
    r0 = pxsim_Array__push(s.tmp_0, "slime");
    r0 = pxsim_Array__push(s.tmp_0, "slims");
    r0 = pxsim_Array__push(s.tmp_0, "slimy");
    r0 = pxsim_Array__push(s.tmp_0, "sling");
    r0 = pxsim_Array__push(s.tmp_0, "slink");
    r0 = pxsim_Array__push(s.tmp_0, "slipe");
    r0 = pxsim_Array__push(s.tmp_0, "slips");
    r0 = pxsim_Array__push(s.tmp_0, "slipt");
    r0 = pxsim_Array__push(s.tmp_0, "slish");
    r0 = pxsim_Array__push(s.tmp_0, "slits");
    r0 = pxsim_Array__push(s.tmp_0, "slive");
    r0 = pxsim_Array__push(s.tmp_0, "sloan");
    r0 = pxsim_Array__push(s.tmp_0, "slobs");
    r0 = pxsim_Array__push(s.tmp_0, "sloes");
    r0 = pxsim_Array__push(s.tmp_0, "slogs");
    r0 = pxsim_Array__push(s.tmp_0, "sloid");
    r0 = pxsim_Array__push(s.tmp_0, "slojd");
    r0 = pxsim_Array__push(s.tmp_0, "sloka");
    r0 = pxsim_Array__push(s.tmp_0, "slomo");
    r0 = pxsim_Array__push(s.tmp_0, "sloom");
    r0 = pxsim_Array__push(s.tmp_0, "sloop");
    r0 = pxsim_Array__push(s.tmp_0, "sloot");
    r0 = pxsim_Array__push(s.tmp_0, "slope");
    r0 = pxsim_Array__push(s.tmp_0, "slops");
    r0 = pxsim_Array__push(s.tmp_0, "slopy");
    r0 = pxsim_Array__push(s.tmp_0, "slorm");
    r0 = pxsim_Array__push(s.tmp_0, "slosh");
    r0 = pxsim_Array__push(s.tmp_0, "sloth");
    r0 = pxsim_Array__push(s.tmp_0, "slots");
    r0 = pxsim_Array__push(s.tmp_0, "slove");
    r0 = pxsim_Array__push(s.tmp_0, "slows");
    r0 = pxsim_Array__push(s.tmp_0, "sloyd");
    r0 = pxsim_Array__push(s.tmp_0, "slubb");
    r0 = pxsim_Array__push(s.tmp_0, "slubs");
    r0 = pxsim_Array__push(s.tmp_0, "slued");
    r0 = pxsim_Array__push(s.tmp_0, "slues");
    r0 = pxsim_Array__push(s.tmp_0, "sluff");
    r0 = pxsim_Array__push(s.tmp_0, "slugs");
    r0 = pxsim_Array__push(s.tmp_0, "sluit");
    r0 = pxsim_Array__push(s.tmp_0, "slump");
    r0 = pxsim_Array__push(s.tmp_0, "slums");
    r0 = pxsim_Array__push(s.tmp_0, "slung");
    r0 = pxsim_Array__push(s.tmp_0, "slunk");
    r0 = pxsim_Array__push(s.tmp_0, "slurb");
    r0 = pxsim_Array__push(s.tmp_0, "slurp");
    r0 = pxsim_Array__push(s.tmp_0, "slurs");
    r0 = pxsim_Array__push(s.tmp_0, "sluse");
    r0 = pxsim_Array__push(s.tmp_0, "slush");
    r0 = pxsim_Array__push(s.tmp_0, "sluts");
    r0 = pxsim_Array__push(s.tmp_0, "slyer");
    r0 = pxsim_Array__push(s.tmp_0, "slyly");
    r0 = pxsim_Array__push(s.tmp_0, "slype");
    r0 = pxsim_Array__push(s.tmp_0, "smaak");
    r0 = pxsim_Array__push(s.tmp_0, "smack");
    r0 = pxsim_Array__push(s.tmp_0, "smaik");
    r0 = pxsim_Array__push(s.tmp_0, "small");
    r0 = pxsim_Array__push(s.tmp_0, "smalm");
    r0 = pxsim_Array__push(s.tmp_0, "smalt");
    r0 = pxsim_Array__push(s.tmp_0, "smarm");
    r0 = pxsim_Array__push(s.tmp_0, "smart");
    r0 = pxsim_Array__push(s.tmp_0, "smash");
    r0 = pxsim_Array__push(s.tmp_0, "smaze");
    r0 = pxsim_Array__push(s.tmp_0, "smear");
    r0 = pxsim_Array__push(s.tmp_0, "smeek");
    r0 = pxsim_Array__push(s.tmp_0, "smees");
    r0 = pxsim_Array__push(s.tmp_0, "smeik");
    r0 = pxsim_Array__push(s.tmp_0, "smeke");
    r0 = pxsim_Array__push(s.tmp_0, "smell");
    r0 = pxsim_Array__push(s.tmp_0, "smelt");
    r0 = pxsim_Array__push(s.tmp_0, "smerk");
    r0 = pxsim_Array__push(s.tmp_0, "smews");
    r0 = pxsim_Array__push(s.tmp_0, "smick");
    r0 = pxsim_Array__push(s.tmp_0, "smile");
    r0 = pxsim_Array__push(s.tmp_0, "smily");
    r0 = pxsim_Array__push(s.tmp_0, "smirk");
    r0 = pxsim_Array__push(s.tmp_0, "smirr");
    r0 = pxsim_Array__push(s.tmp_0, "smirs");
    r0 = pxsim_Array__push(s.tmp_0, "smite");
    r0 = pxsim_Array__push(s.tmp_0, "smith");
    r0 = pxsim_Array__push(s.tmp_0, "smits");
    r0 = pxsim_Array__push(s.tmp_0, "smize");
    r0 = pxsim_Array__push(s.tmp_0, "smock");
    r0 = pxsim_Array__push(s.tmp_0, "smogs");
    r0 = pxsim_Array__push(s.tmp_0, "smoke");
    r0 = pxsim_Array__push(s.tmp_0, "smoko");
    r0 = pxsim_Array__push(s.tmp_0, "smoky");
    r0 = pxsim_Array__push(s.tmp_0, "smolt");
    r0 = pxsim_Array__push(s.tmp_0, "smoor");
    r0 = pxsim_Array__push(s.tmp_0, "smoot");
    r0 = pxsim_Array__push(s.tmp_0, "smore");
    r0 = pxsim_Array__push(s.tmp_0, "smorg");
    r0 = pxsim_Array__push(s.tmp_0, "smote");
    r0 = pxsim_Array__push(s.tmp_0, "smout");
    r0 = pxsim_Array__push(s.tmp_0, "smowt");
    r0 = pxsim_Array__push(s.tmp_0, "smugs");
    r0 = pxsim_Array__push(s.tmp_0, "smurs");
    r0 = pxsim_Array__push(s.tmp_0, "smush");
    r0 = pxsim_Array__push(s.tmp_0, "smuts");
    r0 = pxsim_Array__push(s.tmp_0, "snabs");
    r0 = pxsim_Array__push(s.tmp_0, "snack");
    r0 = pxsim_Array__push(s.tmp_0, "snafu");
    r0 = pxsim_Array__push(s.tmp_0, "snags");
    r0 = pxsim_Array__push(s.tmp_0, "snail");
    r0 = pxsim_Array__push(s.tmp_0, "snake");
    r0 = pxsim_Array__push(s.tmp_0, "snaky");
    r0 = pxsim_Array__push(s.tmp_0, "snaps");
    r0 = pxsim_Array__push(s.tmp_0, "snare");
    r0 = pxsim_Array__push(s.tmp_0, "snarf");
    r0 = pxsim_Array__push(s.tmp_0, "snark");
    r0 = pxsim_Array__push(s.tmp_0, "snarl");
    r0 = pxsim_Array__push(s.tmp_0, "snars");
    r0 = pxsim_Array__push(s.tmp_0, "snary");
    r0 = pxsim_Array__push(s.tmp_0, "snash");
    r0 = pxsim_Array__push(s.tmp_0, "snath");
    r0 = pxsim_Array__push(s.tmp_0, "snaws");
    r0 = pxsim_Array__push(s.tmp_0, "snead");
    r0 = pxsim_Array__push(s.tmp_0, "sneak");
    r0 = pxsim_Array__push(s.tmp_0, "sneap");
    r0 = pxsim_Array__push(s.tmp_0, "snebs");
    r0 = pxsim_Array__push(s.tmp_0, "sneck");
    r0 = pxsim_Array__push(s.tmp_0, "sneds");
    r0 = pxsim_Array__push(s.tmp_0, "sneed");
    r0 = pxsim_Array__push(s.tmp_0, "sneer");
    r0 = pxsim_Array__push(s.tmp_0, "snees");
    r0 = pxsim_Array__push(s.tmp_0, "snell");
    r0 = pxsim_Array__push(s.tmp_0, "snibs");
    r0 = pxsim_Array__push(s.tmp_0, "snick");
    r0 = pxsim_Array__push(s.tmp_0, "snide");
    r0 = pxsim_Array__push(s.tmp_0, "snied");
    r0 = pxsim_Array__push(s.tmp_0, "snies");
    r0 = pxsim_Array__push(s.tmp_0, "sniff");
    r0 = pxsim_Array__push(s.tmp_0, "snift");
    r0 = pxsim_Array__push(s.tmp_0, "snigs");
    r0 = pxsim_Array__push(s.tmp_0, "snipe");
    r0 = pxsim_Array__push(s.tmp_0, "snips");
    r0 = pxsim_Array__push(s.tmp_0, "snipy");
    r0 = pxsim_Array__push(s.tmp_0, "snirt");
    r0 = pxsim_Array__push(s.tmp_0, "snits");
    r0 = pxsim_Array__push(s.tmp_0, "snive");
    r0 = pxsim_Array__push(s.tmp_0, "snobs");
    r0 = pxsim_Array__push(s.tmp_0, "snods");
    r0 = pxsim_Array__push(s.tmp_0, "snoek");
    r0 = pxsim_Array__push(s.tmp_0, "snoep");
    r0 = pxsim_Array__push(s.tmp_0, "snogs");
    r0 = pxsim_Array__push(s.tmp_0, "snoke");
    r0 = pxsim_Array__push(s.tmp_0, "snood");
    r0 = pxsim_Array__push(s.tmp_0, "snook");
    r0 = pxsim_Array__push(s.tmp_0, "snool");
    r0 = pxsim_Array__push(s.tmp_0, "snoop");
    r0 = pxsim_Array__push(s.tmp_0, "snoot");
    r0 = pxsim_Array__push(s.tmp_0, "snore");
    r0 = pxsim_Array__push(s.tmp_0, "snort");
    r0 = pxsim_Array__push(s.tmp_0, "snots");
    r0 = pxsim_Array__push(s.tmp_0, "snout");
    r0 = pxsim_Array__push(s.tmp_0, "snowk");
    r0 = pxsim_Array__push(s.tmp_0, "snows");
    r0 = pxsim_Array__push(s.tmp_0, "snowy");
    r0 = pxsim_Array__push(s.tmp_0, "snubs");
    r0 = pxsim_Array__push(s.tmp_0, "snuck");
    r0 = pxsim_Array__push(s.tmp_0, "snuff");
    r0 = pxsim_Array__push(s.tmp_0, "snugs");
    r0 = pxsim_Array__push(s.tmp_0, "snush");
    r0 = pxsim_Array__push(s.tmp_0, "snyes");
    r0 = pxsim_Array__push(s.tmp_0, "soaks");
    r0 = pxsim_Array__push(s.tmp_0, "soaps");
    r0 = pxsim_Array__push(s.tmp_0, "soapy");
    r0 = pxsim_Array__push(s.tmp_0, "soare");
    r0 = pxsim_Array__push(s.tmp_0, "soars");
    r0 = pxsim_Array__push(s.tmp_0, "soave");
    r0 = pxsim_Array__push(s.tmp_0, "sobas");
    r0 = pxsim_Array__push(s.tmp_0, "sober");
    r0 = pxsim_Array__push(s.tmp_0, "socas");
    r0 = pxsim_Array__push(s.tmp_0, "soces");
    r0 = pxsim_Array__push(s.tmp_0, "socia");
    r0 = pxsim_Array__push(s.tmp_0, "socko");
    r0 = pxsim_Array__push(s.tmp_0, "socks");
    r0 = pxsim_Array__push(s.tmp_0, "socle");
    r0 = pxsim_Array__push(s.tmp_0, "sodas");
    r0 = pxsim_Array__push(s.tmp_0, "soddy");
    r0 = pxsim_Array__push(s.tmp_0, "sodic");
    r0 = pxsim_Array__push(s.tmp_0, "sodom");
    r0 = pxsim_Array__push(s.tmp_0, "sofar");
    r0 = pxsim_Array__push(s.tmp_0, "sofas");
    r0 = pxsim_Array__push(s.tmp_0, "softa");
    r0 = pxsim_Array__push(s.tmp_0, "softs");
    r0 = pxsim_Array__push(s.tmp_0, "softy");
    r0 = pxsim_Array__push(s.tmp_0, "soger");
    r0 = pxsim_Array__push(s.tmp_0, "soggy");
    r0 = pxsim_Array__push(s.tmp_0, "sohur");
    r0 = pxsim_Array__push(s.tmp_0, "soils");
    r0 = pxsim_Array__push(s.tmp_0, "soily");
    r0 = pxsim_Array__push(s.tmp_0, "sojas");
    r0 = pxsim_Array__push(s.tmp_0, "sojus");
    r0 = pxsim_Array__push(s.tmp_0, "sokah");
    r0 = pxsim_Array__push(s.tmp_0, "soken");
    r0 = pxsim_Array__push(s.tmp_0, "sokes");
    r0 = pxsim_Array__push(s.tmp_0, "sokol");
    r0 = pxsim_Array__push(s.tmp_0, "solah");
    r0 = pxsim_Array__push(s.tmp_0, "solan");
    r0 = pxsim_Array__push(s.tmp_0, "solar");
    r0 = pxsim_Array__push(s.tmp_0, "solas");
    r0 = pxsim_Array__push(s.tmp_0, "solde");
    r0 = pxsim_Array__push(s.tmp_0, "soldi");
    r0 = pxsim_Array__push(s.tmp_0, "soldo");
    r0 = pxsim_Array__push(s.tmp_0, "solds");
    r0 = pxsim_Array__push(s.tmp_0, "soled");
    r0 = pxsim_Array__push(s.tmp_0, "solei");
    r0 = pxsim_Array__push(s.tmp_0, "soler");
    r0 = pxsim_Array__push(s.tmp_0, "soles");
    r0 = pxsim_Array__push(s.tmp_0, "solid");
    r0 = pxsim_Array__push(s.tmp_0, "solon");
    r0 = pxsim_Array__push(s.tmp_0, "solos");
    r0 = pxsim_Array__push(s.tmp_0, "solum");
    r0 = pxsim_Array__push(s.tmp_0, "solus");
    r0 = pxsim_Array__push(s.tmp_0, "solve");
    r0 = pxsim_Array__push(s.tmp_0, "soman");
    r0 = pxsim_Array__push(s.tmp_0, "somas");
    r0 = pxsim_Array__push(s.tmp_0, "sonar");
    r0 = pxsim_Array__push(s.tmp_0, "sonce");
    r0 = pxsim_Array__push(s.tmp_0, "sonde");
    r0 = pxsim_Array__push(s.tmp_0, "sones");
    r0 = pxsim_Array__push(s.tmp_0, "songo");
    r0 = pxsim_Array__push(s.tmp_0, "songs");
    r0 = pxsim_Array__push(s.tmp_0, "songy");
    r0 = pxsim_Array__push(s.tmp_0, "sonic");
    r0 = pxsim_Array__push(s.tmp_0, "sonly");
    r0 = pxsim_Array__push(s.tmp_0, "sonne");
    r0 = pxsim_Array__push(s.tmp_0, "sonny");
    r0 = pxsim_Array__push(s.tmp_0, "sonse");
    r0 = pxsim_Array__push(s.tmp_0, "sonsy");
    r0 = pxsim_Array__push(s.tmp_0, "sooey");
    r0 = pxsim_Array__push(s.tmp_0, "sooks");
    r0 = pxsim_Array__push(s.tmp_0, "sooky");
    r0 = pxsim_Array__push(s.tmp_0, "soole");
    r0 = pxsim_Array__push(s.tmp_0, "sools");
    r0 = pxsim_Array__push(s.tmp_0, "sooms");
    r0 = pxsim_Array__push(s.tmp_0, "soops");
    r0 = pxsim_Array__push(s.tmp_0, "soote");
    r0 = pxsim_Array__push(s.tmp_0, "sooth");
    r0 = pxsim_Array__push(s.tmp_0, "soots");
    r0 = pxsim_Array__push(s.tmp_0, "sooty");
    r0 = pxsim_Array__push(s.tmp_0, "sophs");
    r0 = pxsim_Array__push(s.tmp_0, "sophy");
    r0 = pxsim_Array__push(s.tmp_0, "sopor");
    r0 = pxsim_Array__push(s.tmp_0, "soppy");
    r0 = pxsim_Array__push(s.tmp_0, "sopra");
    r0 = pxsim_Array__push(s.tmp_0, "soral");
    r0 = pxsim_Array__push(s.tmp_0, "soras");
    r0 = pxsim_Array__push(s.tmp_0, "sorbi");
    r0 = pxsim_Array__push(s.tmp_0, "sorbo");
    r0 = pxsim_Array__push(s.tmp_0, "sorbs");
    r0 = pxsim_Array__push(s.tmp_0, "sorda");
    r0 = pxsim_Array__push(s.tmp_0, "sordo");
    r0 = pxsim_Array__push(s.tmp_0, "sords");
    r0 = pxsim_Array__push(s.tmp_0, "sored");
    r0 = pxsim_Array__push(s.tmp_0, "soree");
    r0 = pxsim_Array__push(s.tmp_0, "sorel");
    r0 = pxsim_Array__push(s.tmp_0, "sorer");
    r0 = pxsim_Array__push(s.tmp_0, "sores");
    r0 = pxsim_Array__push(s.tmp_0, "sorex");
    r0 = pxsim_Array__push(s.tmp_0, "sorgo");
    r0 = pxsim_Array__push(s.tmp_0, "sorns");
    r0 = pxsim_Array__push(s.tmp_0, "sorra");
    r0 = pxsim_Array__push(s.tmp_0, "sorry");
    r0 = pxsim_Array__push(s.tmp_0, "sorta");
    r0 = pxsim_Array__push(s.tmp_0, "sorts");
    r0 = pxsim_Array__push(s.tmp_0, "sorus");
    r0 = pxsim_Array__push(s.tmp_0, "soths");
    r0 = pxsim_Array__push(s.tmp_0, "sotol");
    r0 = pxsim_Array__push(s.tmp_0, "sotto");
    r0 = pxsim_Array__push(s.tmp_0, "souce");
    r0 = pxsim_Array__push(s.tmp_0, "souct");
    r0 = pxsim_Array__push(s.tmp_0, "sough");
    r0 = pxsim_Array__push(s.tmp_0, "souks");
    r0 = pxsim_Array__push(s.tmp_0, "souls");
    r0 = pxsim_Array__push(s.tmp_0, "souly");
    r0 = pxsim_Array__push(s.tmp_0, "soums");
    r0 = pxsim_Array__push(s.tmp_0, "sound");
    r0 = pxsim_Array__push(s.tmp_0, "soups");
    r0 = pxsim_Array__push(s.tmp_0, "soupy");
    r0 = pxsim_Array__push(s.tmp_0, "sours");
    r0 = pxsim_Array__push(s.tmp_0, "souse");
    r0 = pxsim_Array__push(s.tmp_0, "south");
    r0 = pxsim_Array__push(s.tmp_0, "souts");
    r0 = pxsim_Array__push(s.tmp_0, "sowar");
    r0 = pxsim_Array__push(s.tmp_0, "sowce");
    r0 = pxsim_Array__push(s.tmp_0, "sowed");
    r0 = pxsim_Array__push(s.tmp_0, "sower");
    r0 = pxsim_Array__push(s.tmp_0, "sowff");
    r0 = pxsim_Array__push(s.tmp_0, "sowfs");
    r0 = pxsim_Array__push(s.tmp_0, "sowle");
    r0 = pxsim_Array__push(s.tmp_0, "sowls");
    r0 = pxsim_Array__push(s.tmp_0, "sowms");
    r0 = pxsim_Array__push(s.tmp_0, "sownd");
    r0 = pxsim_Array__push(s.tmp_0, "sowne");
    r0 = pxsim_Array__push(s.tmp_0, "sowps");
    r0 = pxsim_Array__push(s.tmp_0, "sowse");
    r0 = pxsim_Array__push(s.tmp_0, "sowth");
    r0 = pxsim_Array__push(s.tmp_0, "soxes");
    r0 = pxsim_Array__push(s.tmp_0, "soyas");
    r0 = pxsim_Array__push(s.tmp_0, "soyle");
    r0 = pxsim_Array__push(s.tmp_0, "soyuz");
    r0 = pxsim_Array__push(s.tmp_0, "sozin");
    r0 = pxsim_Array__push(s.tmp_0, "space");
    r0 = pxsim_Array__push(s.tmp_0, "spack");
    r0 = pxsim_Array__push(s.tmp_0, "spacy");
    r0 = pxsim_Array__push(s.tmp_0, "spade");
    r0 = pxsim_Array__push(s.tmp_0, "spado");
    r0 = pxsim_Array__push(s.tmp_0, "spads");
    r0 = pxsim_Array__push(s.tmp_0, "spaed");
    r0 = pxsim_Array__push(s.tmp_0, "spaer");
    r0 = pxsim_Array__push(s.tmp_0, "spaes");
    r0 = pxsim_Array__push(s.tmp_0, "spags");
    r0 = pxsim_Array__push(s.tmp_0, "spahi");
    r0 = pxsim_Array__push(s.tmp_0, "spail");
    r0 = pxsim_Array__push(s.tmp_0, "spain");
    r0 = pxsim_Array__push(s.tmp_0, "spait");
    r0 = pxsim_Array__push(s.tmp_0, "spake");
    r0 = pxsim_Array__push(s.tmp_0, "spald");
    r0 = pxsim_Array__push(s.tmp_0, "spale");
    r0 = pxsim_Array__push(s.tmp_0, "spall");
    r0 = pxsim_Array__push(s.tmp_0, "spalt");
    r0 = pxsim_Array__push(s.tmp_0, "spams");
    r0 = pxsim_Array__push(s.tmp_0, "spane");
    r0 = pxsim_Array__push(s.tmp_0, "spang");
    r0 = pxsim_Array__push(s.tmp_0, "spank");
    r0 = pxsim_Array__push(s.tmp_0, "spans");
    r0 = pxsim_Array__push(s.tmp_0, "spard");
    r0 = pxsim_Array__push(s.tmp_0, "spare");
    r0 = pxsim_Array__push(s.tmp_0, "spark");
    r0 = pxsim_Array__push(s.tmp_0, "spars");
    r0 = pxsim_Array__push(s.tmp_0, "spart");
    r0 = pxsim_Array__push(s.tmp_0, "spasm");
    r0 = pxsim_Array__push(s.tmp_0, "spate");
    r0 = pxsim_Array__push(s.tmp_0, "spats");
    r0 = pxsim_Array__push(s.tmp_0, "spaul");
    r0 = pxsim_Array__push(s.tmp_0, "spawl");
    r0 = pxsim_Array__push(s.tmp_0, "spawn");
    r0 = pxsim_Array__push(s.tmp_0, "spaws");
    r0 = pxsim_Array__push(s.tmp_0, "spayd");
    r0 = pxsim_Array__push(s.tmp_0, "spays");
    r0 = pxsim_Array__push(s.tmp_0, "spaza");
    r0 = pxsim_Array__push(s.tmp_0, "spazz");
    r0 = pxsim_Array__push(s.tmp_0, "speak");
    r0 = pxsim_Array__push(s.tmp_0, "speal");
    r0 = pxsim_Array__push(s.tmp_0, "spean");
    r0 = pxsim_Array__push(s.tmp_0, "spear");
    r0 = pxsim_Array__push(s.tmp_0, "speat");
    r0 = pxsim_Array__push(s.tmp_0, "speck");
    r0 = pxsim_Array__push(s.tmp_0, "specs");
    r0 = pxsim_Array__push(s.tmp_0, "spect");
    r0 = pxsim_Array__push(s.tmp_0, "speed");
    r0 = pxsim_Array__push(s.tmp_0, "speel");
    r0 = pxsim_Array__push(s.tmp_0, "speer");
    r0 = pxsim_Array__push(s.tmp_0, "speil");
    r0 = pxsim_Array__push(s.tmp_0, "speir");
    r0 = pxsim_Array__push(s.tmp_0, "speks");
    r0 = pxsim_Array__push(s.tmp_0, "speld");
    r0 = pxsim_Array__push(s.tmp_0, "spelk");
    r0 = pxsim_Array__push(s.tmp_0, "spell");
    r0 = pxsim_Array__push(s.tmp_0, "spelt");
    r0 = pxsim_Array__push(s.tmp_0, "spend");
    r0 = pxsim_Array__push(s.tmp_0, "spent");
    r0 = pxsim_Array__push(s.tmp_0, "speos");
    r0 = pxsim_Array__push(s.tmp_0, "sperm");
    r0 = pxsim_Array__push(s.tmp_0, "spesh");
    r0 = pxsim_Array__push(s.tmp_0, "spets");
    r0 = pxsim_Array__push(s.tmp_0, "speug");
    r0 = pxsim_Array__push(s.tmp_0, "spews");
    r0 = pxsim_Array__push(s.tmp_0, "spewy");
    r0 = pxsim_Array__push(s.tmp_0, "spial");
    r0 = pxsim_Array__push(s.tmp_0, "spica");
    r0 = pxsim_Array__push(s.tmp_0, "spice");
    r0 = pxsim_Array__push(s.tmp_0, "spick");
    r0 = pxsim_Array__push(s.tmp_0, "spics");
    r0 = pxsim_Array__push(s.tmp_0, "spicy");
    r0 = pxsim_Array__push(s.tmp_0, "spide");
    r0 = pxsim_Array__push(s.tmp_0, "spied");
    r0 = pxsim_Array__push(s.tmp_0, "spiel");
    r0 = pxsim_Array__push(s.tmp_0, "spier");
    r0 = pxsim_Array__push(s.tmp_0, "spies");
    r0 = pxsim_Array__push(s.tmp_0, "spiff");
    r0 = pxsim_Array__push(s.tmp_0, "spifs");
    r0 = pxsim_Array__push(s.tmp_0, "spike");
    r0 = pxsim_Array__push(s.tmp_0, "spiks");
    r0 = pxsim_Array__push(s.tmp_0, "spiky");
    r0 = pxsim_Array__push(s.tmp_0, "spile");
    r0 = pxsim_Array__push(s.tmp_0, "spill");
    r0 = pxsim_Array__push(s.tmp_0, "spilt");
    r0 = pxsim_Array__push(s.tmp_0, "spims");
    r0 = pxsim_Array__push(s.tmp_0, "spina");
    r0 = pxsim_Array__push(s.tmp_0, "spine");
    r0 = pxsim_Array__push(s.tmp_0, "spink");
    r0 = pxsim_Array__push(s.tmp_0, "spins");
    r0 = pxsim_Array__push(s.tmp_0, "spiny");
    r0 = pxsim_Array__push(s.tmp_0, "spire");
    r0 = pxsim_Array__push(s.tmp_0, "spirt");
    r0 = pxsim_Array__push(s.tmp_0, "spiry");
    r0 = pxsim_Array__push(s.tmp_0, "spite");
    r0 = pxsim_Array__push(s.tmp_0, "spits");
    r0 = pxsim_Array__push(s.tmp_0, "spitz");
    r0 = pxsim_Array__push(s.tmp_0, "spivs");
    r0 = pxsim_Array__push(s.tmp_0, "splat");
    r0 = pxsim_Array__push(s.tmp_0, "splay");
    r0 = pxsim_Array__push(s.tmp_0, "split");
    r0 = pxsim_Array__push(s.tmp_0, "splog");
    r0 = pxsim_Array__push(s.tmp_0, "spode");
    r0 = pxsim_Array__push(s.tmp_0, "spods");
    r0 = pxsim_Array__push(s.tmp_0, "spoil");
    r0 = pxsim_Array__push(s.tmp_0, "spoke");
    r0 = pxsim_Array__push(s.tmp_0, "spoof");
    r0 = pxsim_Array__push(s.tmp_0, "spook");
    r0 = pxsim_Array__push(s.tmp_0, "spool");
    r0 = pxsim_Array__push(s.tmp_0, "spoom");
    r0 = pxsim_Array__push(s.tmp_0, "spoon");
    r0 = pxsim_Array__push(s.tmp_0, "spoor");
    r0 = pxsim_Array__push(s.tmp_0, "spoot");
    r0 = pxsim_Array__push(s.tmp_0, "spore");
    r0 = pxsim_Array__push(s.tmp_0, "spork");
    r0 = pxsim_Array__push(s.tmp_0, "sport");
    r0 = pxsim_Array__push(s.tmp_0, "sposa");
    r0 = pxsim_Array__push(s.tmp_0, "sposh");
    r0 = pxsim_Array__push(s.tmp_0, "sposo");
    r0 = pxsim_Array__push(s.tmp_0, "spots");
    r0 = pxsim_Array__push(s.tmp_0, "spout");
    r0 = pxsim_Array__push(s.tmp_0, "sprad");
    r0 = pxsim_Array__push(s.tmp_0, "sprag");
    r0 = pxsim_Array__push(s.tmp_0, "sprat");
    r0 = pxsim_Array__push(s.tmp_0, "spray");
    r0 = pxsim_Array__push(s.tmp_0, "spred");
    r0 = pxsim_Array__push(s.tmp_0, "spree");
    r0 = pxsim_Array__push(s.tmp_0, "sprew");
    r0 = pxsim_Array__push(s.tmp_0, "sprig");
    r0 = pxsim_Array__push(s.tmp_0, "sprit");
    r0 = pxsim_Array__push(s.tmp_0, "sprod");
    r0 = pxsim_Array__push(s.tmp_0, "sprog");
    r0 = pxsim_Array__push(s.tmp_0, "sprue");
    r0 = pxsim_Array__push(s.tmp_0, "sprug");
    r0 = pxsim_Array__push(s.tmp_0, "spuds");
    r0 = pxsim_Array__push(s.tmp_0, "spued");
    r0 = pxsim_Array__push(s.tmp_0, "spuer");
    r0 = pxsim_Array__push(s.tmp_0, "spues");
    r0 = pxsim_Array__push(s.tmp_0, "spugs");
    r0 = pxsim_Array__push(s.tmp_0, "spule");
    r0 = pxsim_Array__push(s.tmp_0, "spume");
    r0 = pxsim_Array__push(s.tmp_0, "spumy");
    r0 = pxsim_Array__push(s.tmp_0, "spunk");
    r0 = pxsim_Array__push(s.tmp_0, "spurn");
    r0 = pxsim_Array__push(s.tmp_0, "spurs");
    r0 = pxsim_Array__push(s.tmp_0, "spurt");
    r0 = pxsim_Array__push(s.tmp_0, "sputa");
    r0 = pxsim_Array__push(s.tmp_0, "spyal");
    r0 = pxsim_Array__push(s.tmp_0, "spyre");
    r0 = pxsim_Array__push(s.tmp_0, "squab");
    r0 = pxsim_Array__push(s.tmp_0, "squad");
    r0 = pxsim_Array__push(s.tmp_0, "squat");
    r0 = pxsim_Array__push(s.tmp_0, "squaw");
    r0 = pxsim_Array__push(s.tmp_0, "squee");
    r0 = pxsim_Array__push(s.tmp_0, "squeg");
    r0 = pxsim_Array__push(s.tmp_0, "squib");
    r0 = pxsim_Array__push(s.tmp_0, "squid");
    r0 = pxsim_Array__push(s.tmp_0, "squit");
    r0 = pxsim_Array__push(s.tmp_0, "squiz");
    r0 = pxsim_Array__push(s.tmp_0, "srsly");
    r0 = pxsim_Array__push(s.tmp_0, "stabs");
    r0 = pxsim_Array__push(s.tmp_0, "stack");
    r0 = pxsim_Array__push(s.tmp_0, "stade");
    r0 = pxsim_Array__push(s.tmp_0, "staff");
    r0 = pxsim_Array__push(s.tmp_0, "stage");
    r0 = pxsim_Array__push(s.tmp_0, "stags");
    r0 = pxsim_Array__push(s.tmp_0, "stagy");
    r0 = pxsim_Array__push(s.tmp_0, "staid");
    r0 = pxsim_Array__push(s.tmp_0, "staig");
    r0 = pxsim_Array__push(s.tmp_0, "stain");
    r0 = pxsim_Array__push(s.tmp_0, "stair");
    r0 = pxsim_Array__push(s.tmp_0, "stake");
    r0 = pxsim_Array__push(s.tmp_0, "stale");
    r0 = pxsim_Array__push(s.tmp_0, "stalk");
    r0 = pxsim_Array__push(s.tmp_0, "stall");
    r0 = pxsim_Array__push(s.tmp_0, "stamp");
    r0 = pxsim_Array__push(s.tmp_0, "stand");
    r0 = pxsim_Array__push(s.tmp_0, "stane");
    r0 = pxsim_Array__push(s.tmp_0, "stang");
    r0 = pxsim_Array__push(s.tmp_0, "stank");
    r0 = pxsim_Array__push(s.tmp_0, "stans");
    r0 = pxsim_Array__push(s.tmp_0, "staph");
    r0 = pxsim_Array__push(s.tmp_0, "staps");
    r0 = pxsim_Array__push(s.tmp_0, "stare");
    r0 = pxsim_Array__push(s.tmp_0, "stark");
    r0 = pxsim_Array__push(s.tmp_0, "starn");
    r0 = pxsim_Array__push(s.tmp_0, "starr");
    r0 = pxsim_Array__push(s.tmp_0, "stars");
    r0 = pxsim_Array__push(s.tmp_0, "start");
    r0 = pxsim_Array__push(s.tmp_0, "stary");
    r0 = pxsim_Array__push(s.tmp_0, "stash");
    r0 = pxsim_Array__push(s.tmp_0, "state");
    r0 = pxsim_Array__push(s.tmp_0, "stats");
    r0 = pxsim_Array__push(s.tmp_0, "statu");
    r0 = pxsim_Array__push(s.tmp_0, "staun");
    r0 = pxsim_Array__push(s.tmp_0, "stave");
    r0 = pxsim_Array__push(s.tmp_0, "staws");
    r0 = pxsim_Array__push(s.tmp_0, "stays");
    r0 = pxsim_Array__push(s.tmp_0, "stead");
    r0 = pxsim_Array__push(s.tmp_0, "steak");
    r0 = pxsim_Array__push(s.tmp_0, "steal");
    r0 = pxsim_Array__push(s.tmp_0, "steam");
    r0 = pxsim_Array__push(s.tmp_0, "stean");
    r0 = pxsim_Array__push(s.tmp_0, "stear");
    r0 = pxsim_Array__push(s.tmp_0, "stedd");
    r0 = pxsim_Array__push(s.tmp_0, "stede");
    r0 = pxsim_Array__push(s.tmp_0, "steds");
    r0 = pxsim_Array__push(s.tmp_0, "steed");
    r0 = pxsim_Array__push(s.tmp_0, "steek");
    r0 = pxsim_Array__push(s.tmp_0, "steel");
    r0 = pxsim_Array__push(s.tmp_0, "steem");
    r0 = pxsim_Array__push(s.tmp_0, "steen");
    r0 = pxsim_Array__push(s.tmp_0, "steep");
    r0 = pxsim_Array__push(s.tmp_0, "steer");
    r0 = pxsim_Array__push(s.tmp_0, "steez");
    r0 = pxsim_Array__push(s.tmp_0, "steik");
    r0 = pxsim_Array__push(s.tmp_0, "steil");
    r0 = pxsim_Array__push(s.tmp_0, "stein");
    r0 = pxsim_Array__push(s.tmp_0, "stela");
    r0 = pxsim_Array__push(s.tmp_0, "stele");
    r0 = pxsim_Array__push(s.tmp_0, "stell");
    r0 = pxsim_Array__push(s.tmp_0, "steme");
    r0 = pxsim_Array__push(s.tmp_0, "stems");
    r0 = pxsim_Array__push(s.tmp_0, "stend");
    r0 = pxsim_Array__push(s.tmp_0, "steno");
    r0 = pxsim_Array__push(s.tmp_0, "stens");
    r0 = pxsim_Array__push(s.tmp_0, "stent");
    r0 = pxsim_Array__push(s.tmp_0, "steps");
    r0 = pxsim_Array__push(s.tmp_0, "stept");
    r0 = pxsim_Array__push(s.tmp_0, "stere");
    r0 = pxsim_Array__push(s.tmp_0, "stern");
    r0 = pxsim_Array__push(s.tmp_0, "stets");
    r0 = pxsim_Array__push(s.tmp_0, "stews");
    r0 = pxsim_Array__push(s.tmp_0, "stewy");
    r0 = pxsim_Array__push(s.tmp_0, "steys");
    r0 = pxsim_Array__push(s.tmp_0, "stich");
    r0 = pxsim_Array__push(s.tmp_0, "stick");
    r0 = pxsim_Array__push(s.tmp_0, "stied");
    r0 = pxsim_Array__push(s.tmp_0, "sties");
    r0 = pxsim_Array__push(s.tmp_0, "stiff");
    r0 = pxsim_Array__push(s.tmp_0, "stilb");
    r0 = pxsim_Array__push(s.tmp_0, "stile");
    r0 = pxsim_Array__push(s.tmp_0, "still");
    r0 = pxsim_Array__push(s.tmp_0, "stilt");
    r0 = pxsim_Array__push(s.tmp_0, "stime");
    r0 = pxsim_Array__push(s.tmp_0, "stims");
    r0 = pxsim_Array__push(s.tmp_0, "stimy");
    r0 = pxsim_Array__push(s.tmp_0, "sting");
    r0 = pxsim_Array__push(s.tmp_0, "stink");
    r0 = pxsim_Array__push(s.tmp_0, "stint");
    r0 = pxsim_Array__push(s.tmp_0, "stipa");
    r0 = pxsim_Array__push(s.tmp_0, "stipe");
    r0 = pxsim_Array__push(s.tmp_0, "stire");
    r0 = pxsim_Array__push(s.tmp_0, "stirk");
    r0 = pxsim_Array__push(s.tmp_0, "stirp");
    r0 = pxsim_Array__push(s.tmp_0, "stirs");
    r0 = pxsim_Array__push(s.tmp_0, "stive");
    r0 = pxsim_Array__push(s.tmp_0, "stivy");
    r0 = pxsim_Array__push(s.tmp_0, "stoae");
    r0 = pxsim_Array__push(s.tmp_0, "stoai");
    r0 = pxsim_Array__push(s.tmp_0, "stoas");
    r0 = pxsim_Array__push(s.tmp_0, "stoat");
    r0 = pxsim_Array__push(s.tmp_0, "stobs");
    r0 = pxsim_Array__push(s.tmp_0, "stock");
    r0 = pxsim_Array__push(s.tmp_0, "stoep");
    r0 = pxsim_Array__push(s.tmp_0, "stogs");
    r0 = pxsim_Array__push(s.tmp_0, "stogy");
    r0 = pxsim_Array__push(s.tmp_0, "stoic");
    r0 = pxsim_Array__push(s.tmp_0, "stoit");
    r0 = pxsim_Array__push(s.tmp_0, "stoke");
    r0 = pxsim_Array__push(s.tmp_0, "stole");
    r0 = pxsim_Array__push(s.tmp_0, "stoln");
    r0 = pxsim_Array__push(s.tmp_0, "stoma");
    r0 = pxsim_Array__push(s.tmp_0, "stomp");
    r0 = pxsim_Array__push(s.tmp_0, "stond");
    r0 = pxsim_Array__push(s.tmp_0, "stone");
    r0 = pxsim_Array__push(s.tmp_0, "stong");
    r0 = pxsim_Array__push(s.tmp_0, "stonk");
    r0 = pxsim_Array__push(s.tmp_0, "stonn");
    r0 = pxsim_Array__push(s.tmp_0, "stony");
    r0 = pxsim_Array__push(s.tmp_0, "stood");
    r0 = pxsim_Array__push(s.tmp_0, "stook");
    r0 = pxsim_Array__push(s.tmp_0, "stool");
    r0 = pxsim_Array__push(s.tmp_0, "stoop");
    r0 = pxsim_Array__push(s.tmp_0, "stoor");
    r0 = pxsim_Array__push(s.tmp_0, "stope");
    r0 = pxsim_Array__push(s.tmp_0, "stops");
    r0 = pxsim_Array__push(s.tmp_0, "stopt");
    r0 = pxsim_Array__push(s.tmp_0, "store");
    r0 = pxsim_Array__push(s.tmp_0, "stork");
    r0 = pxsim_Array__push(s.tmp_0, "storm");
    r0 = pxsim_Array__push(s.tmp_0, "story");
    r0 = pxsim_Array__push(s.tmp_0, "stoss");
    r0 = pxsim_Array__push(s.tmp_0, "stots");
    r0 = pxsim_Array__push(s.tmp_0, "stott");
    r0 = pxsim_Array__push(s.tmp_0, "stoun");
    r0 = pxsim_Array__push(s.tmp_0, "stoup");
    r0 = pxsim_Array__push(s.tmp_0, "stour");
    r0 = pxsim_Array__push(s.tmp_0, "stout");
    r0 = pxsim_Array__push(s.tmp_0, "stove");
    r0 = pxsim_Array__push(s.tmp_0, "stown");
    r0 = pxsim_Array__push(s.tmp_0, "stowp");
    r0 = pxsim_Array__push(s.tmp_0, "stows");
    r0 = pxsim_Array__push(s.tmp_0, "strad");
    r0 = pxsim_Array__push(s.tmp_0, "strae");
    r0 = pxsim_Array__push(s.tmp_0, "strag");
    r0 = pxsim_Array__push(s.tmp_0, "strak");
    r0 = pxsim_Array__push(s.tmp_0, "strap");
    r0 = pxsim_Array__push(s.tmp_0, "straw");
    r0 = pxsim_Array__push(s.tmp_0, "stray");
    r0 = pxsim_Array__push(s.tmp_0, "strep");
    r0 = pxsim_Array__push(s.tmp_0, "strew");
    r0 = pxsim_Array__push(s.tmp_0, "stria");
    r0 = pxsim_Array__push(s.tmp_0, "strig");
    r0 = pxsim_Array__push(s.tmp_0, "strim");
    r0 = pxsim_Array__push(s.tmp_0, "strip");
    r0 = pxsim_Array__push(s.tmp_0, "strop");
    r0 = pxsim_Array__push(s.tmp_0, "strow");
    r0 = pxsim_Array__push(s.tmp_0, "stroy");
    r0 = pxsim_Array__push(s.tmp_0, "strum");
    r0 = pxsim_Array__push(s.tmp_0, "strut");
    r0 = pxsim_Array__push(s.tmp_0, "stubs");
    r0 = pxsim_Array__push(s.tmp_0, "stuck");
    r0 = pxsim_Array__push(s.tmp_0, "stucs");
    r0 = pxsim_Array__push(s.tmp_0, "stude");
    r0 = pxsim_Array__push(s.tmp_0, "studs");
    r0 = pxsim_Array__push(s.tmp_0, "study");
    r0 = pxsim_Array__push(s.tmp_0, "stuff");
    r0 = pxsim_Array__push(s.tmp_0, "stull");
    r0 = pxsim_Array__push(s.tmp_0, "stulm");
    r0 = pxsim_Array__push(s.tmp_0, "stumm");
    r0 = pxsim_Array__push(s.tmp_0, "stump");
    r0 = pxsim_Array__push(s.tmp_0, "stums");
    r0 = pxsim_Array__push(s.tmp_0, "stung");
    r0 = pxsim_Array__push(s.tmp_0, "stunk");
    r0 = pxsim_Array__push(s.tmp_0, "stuns");
    r0 = pxsim_Array__push(s.tmp_0, "stunt");
    r0 = pxsim_Array__push(s.tmp_0, "stupa");
    r0 = pxsim_Array__push(s.tmp_0, "stupe");
    r0 = pxsim_Array__push(s.tmp_0, "sture");
    r0 = pxsim_Array__push(s.tmp_0, "sturt");
    r0 = pxsim_Array__push(s.tmp_0, "stush");
    r0 = pxsim_Array__push(s.tmp_0, "styed");
    r0 = pxsim_Array__push(s.tmp_0, "styes");
    r0 = pxsim_Array__push(s.tmp_0, "style");
    r0 = pxsim_Array__push(s.tmp_0, "styli");
    r0 = pxsim_Array__push(s.tmp_0, "stylo");
    r0 = pxsim_Array__push(s.tmp_0, "styme");
    r0 = pxsim_Array__push(s.tmp_0, "stymy");
    r0 = pxsim_Array__push(s.tmp_0, "styre");
    r0 = pxsim_Array__push(s.tmp_0, "styte");
    r0 = pxsim_Array__push(s.tmp_0, "suave");
    r0 = pxsim_Array__push(s.tmp_0, "subah");
    r0 = pxsim_Array__push(s.tmp_0, "subak");
    r0 = pxsim_Array__push(s.tmp_0, "subas");
    r0 = pxsim_Array__push(s.tmp_0, "subby");
    r0 = pxsim_Array__push(s.tmp_0, "suber");
    r0 = pxsim_Array__push(s.tmp_0, "subha");
    r0 = pxsim_Array__push(s.tmp_0, "succi");
    r0 = pxsim_Array__push(s.tmp_0, "sucks");
    r0 = pxsim_Array__push(s.tmp_0, "sucky");
    r0 = pxsim_Array__push(s.tmp_0, "sucre");
    r0 = pxsim_Array__push(s.tmp_0, "sudan");
    r0 = pxsim_Array__push(s.tmp_0, "sudds");
    r0 = pxsim_Array__push(s.tmp_0, "sudor");
    r0 = pxsim_Array__push(s.tmp_0, "sudsy");
    r0 = pxsim_Array__push(s.tmp_0, "suede");
    r0 = pxsim_Array__push(s.tmp_0, "suent");
    r0 = pxsim_Array__push(s.tmp_0, "suers");
    r0 = pxsim_Array__push(s.tmp_0, "suete");
    r0 = pxsim_Array__push(s.tmp_0, "suets");
    r0 = pxsim_Array__push(s.tmp_0, "suety");
    r0 = pxsim_Array__push(s.tmp_0, "sugan");
    r0 = pxsim_Array__push(s.tmp_0, "sugar");
    r0 = pxsim_Array__push(s.tmp_0, "sughs");
    r0 = pxsim_Array__push(s.tmp_0, "sugos");
    r0 = pxsim_Array__push(s.tmp_0, "suhur");
    r0 = pxsim_Array__push(s.tmp_0, "suids");
    r0 = pxsim_Array__push(s.tmp_0, "suing");
    r0 = pxsim_Array__push(s.tmp_0, "suint");
    r0 = pxsim_Array__push(s.tmp_0, "suite");
    r0 = pxsim_Array__push(s.tmp_0, "suits");
    r0 = pxsim_Array__push(s.tmp_0, "sujee");
    r0 = pxsim_Array__push(s.tmp_0, "sukhs");
    r0 = pxsim_Array__push(s.tmp_0, "sukis");
    r0 = pxsim_Array__push(s.tmp_0, "sukuk");
    r0 = pxsim_Array__push(s.tmp_0, "sulci");
    r0 = pxsim_Array__push(s.tmp_0, "sulfa");
    r0 = pxsim_Array__push(s.tmp_0, "sulfo");
    r0 = pxsim_Array__push(s.tmp_0, "sulks");
    r0 = pxsim_Array__push(s.tmp_0, "sulky");
    r0 = pxsim_Array__push(s.tmp_0, "sulls");
    r0 = pxsim_Array__push(s.tmp_0, "sully");
    r0 = pxsim_Array__push(s.tmp_0, "sulph");
    r0 = pxsim_Array__push(s.tmp_0, "sulus");
    r0 = pxsim_Array__push(s.tmp_0, "sumac");
    r0 = pxsim_Array__push(s.tmp_0, "sumis");
    r0 = pxsim_Array__push(s.tmp_0, "summa");
    r0 = pxsim_Array__push(s.tmp_0, "sumos");
    r0 = pxsim_Array__push(s.tmp_0, "sumph");
    r0 = pxsim_Array__push(s.tmp_0, "sumps");
    r0 = pxsim_Array__push(s.tmp_0, "sunis");
    r0 = pxsim_Array__push(s.tmp_0, "sunks");
    r0 = pxsim_Array__push(s.tmp_0, "sunna");
    r0 = pxsim_Array__push(s.tmp_0, "sunns");
    r0 = pxsim_Array__push(s.tmp_0, "sunny");
    r0 = pxsim_Array__push(s.tmp_0, "sunts");
    r0 = pxsim_Array__push(s.tmp_0, "sunup");
    r0 = pxsim_Array__push(s.tmp_0, "suona");
    r0 = pxsim_Array__push(s.tmp_0, "suped");
    r0 = pxsim_Array__push(s.tmp_0, "super");
    r0 = pxsim_Array__push(s.tmp_0, "supes");
    r0 = pxsim_Array__push(s.tmp_0, "supra");
    r0 = pxsim_Array__push(s.tmp_0, "surah");
    r0 = pxsim_Array__push(s.tmp_0, "sural");
    r0 = pxsim_Array__push(s.tmp_0, "suras");
    r0 = pxsim_Array__push(s.tmp_0, "surat");
    r0 = pxsim_Array__push(s.tmp_0, "surds");
    r0 = pxsim_Array__push(s.tmp_0, "sured");
    r0 = pxsim_Array__push(s.tmp_0, "surer");
    r0 = pxsim_Array__push(s.tmp_0, "sures");
    r0 = pxsim_Array__push(s.tmp_0, "surfs");
    r0 = pxsim_Array__push(s.tmp_0, "surfy");
    r0 = pxsim_Array__push(s.tmp_0, "surge");
    r0 = pxsim_Array__push(s.tmp_0, "surgy");
    r0 = pxsim_Array__push(s.tmp_0, "surly");
    r0 = pxsim_Array__push(s.tmp_0, "surra");
    r0 = pxsim_Array__push(s.tmp_0, "sused");
    r0 = pxsim_Array__push(s.tmp_0, "suses");
    r0 = pxsim_Array__push(s.tmp_0, "sushi");
    r0 = pxsim_Array__push(s.tmp_0, "susus");
    r0 = pxsim_Array__push(s.tmp_0, "sutor");
    r0 = pxsim_Array__push(s.tmp_0, "sutra");
    r0 = pxsim_Array__push(s.tmp_0, "sutta");
    r0 = pxsim_Array__push(s.tmp_0, "swabs");
    r0 = pxsim_Array__push(s.tmp_0, "swack");
    r0 = pxsim_Array__push(s.tmp_0, "swads");
    r0 = pxsim_Array__push(s.tmp_0, "swage");
    r0 = pxsim_Array__push(s.tmp_0, "swags");
    r0 = pxsim_Array__push(s.tmp_0, "swail");
    r0 = pxsim_Array__push(s.tmp_0, "swain");
    r0 = pxsim_Array__push(s.tmp_0, "swale");
    r0 = pxsim_Array__push(s.tmp_0, "swaly");
    r0 = pxsim_Array__push(s.tmp_0, "swami");
    r0 = pxsim_Array__push(s.tmp_0, "swamp");
    r0 = pxsim_Array__push(s.tmp_0, "swamy");
    r0 = pxsim_Array__push(s.tmp_0, "swang");
    r0 = pxsim_Array__push(s.tmp_0, "swank");
    r0 = pxsim_Array__push(s.tmp_0, "swans");
    r0 = pxsim_Array__push(s.tmp_0, "swaps");
    r0 = pxsim_Array__push(s.tmp_0, "swapt");
    r0 = pxsim_Array__push(s.tmp_0, "sward");
    r0 = pxsim_Array__push(s.tmp_0, "sware");
    r0 = pxsim_Array__push(s.tmp_0, "swarf");
    r0 = pxsim_Array__push(s.tmp_0, "swarm");
    r0 = pxsim_Array__push(s.tmp_0, "swart");
    r0 = pxsim_Array__push(s.tmp_0, "swash");
    r0 = pxsim_Array__push(s.tmp_0, "swath");
    r0 = pxsim_Array__push(s.tmp_0, "swats");
    r0 = pxsim_Array__push(s.tmp_0, "swayl");
    r0 = pxsim_Array__push(s.tmp_0, "sways");
    r0 = pxsim_Array__push(s.tmp_0, "sweal");
    r0 = pxsim_Array__push(s.tmp_0, "swear");
    r0 = pxsim_Array__push(s.tmp_0, "sweat");
    r0 = pxsim_Array__push(s.tmp_0, "swede");
    r0 = pxsim_Array__push(s.tmp_0, "sweed");
    r0 = pxsim_Array__push(s.tmp_0, "sweel");
    r0 = pxsim_Array__push(s.tmp_0, "sweep");
    r0 = pxsim_Array__push(s.tmp_0, "sweer");
    r0 = pxsim_Array__push(s.tmp_0, "swees");
    r0 = pxsim_Array__push(s.tmp_0, "sweet");
    r0 = pxsim_Array__push(s.tmp_0, "sweir");
    r0 = pxsim_Array__push(s.tmp_0, "swell");
    r0 = pxsim_Array__push(s.tmp_0, "swelt");
    r0 = pxsim_Array__push(s.tmp_0, "swept");
    r0 = pxsim_Array__push(s.tmp_0, "swerf");
    r0 = pxsim_Array__push(s.tmp_0, "sweys");
    r0 = pxsim_Array__push(s.tmp_0, "swies");
    r0 = pxsim_Array__push(s.tmp_0, "swift");
    r0 = pxsim_Array__push(s.tmp_0, "swigs");
    r0 = pxsim_Array__push(s.tmp_0, "swile");
    r0 = pxsim_Array__push(s.tmp_0, "swill");
    r0 = pxsim_Array__push(s.tmp_0, "swims");
    r0 = pxsim_Array__push(s.tmp_0, "swine");
    r0 = pxsim_Array__push(s.tmp_0, "swing");
    r0 = pxsim_Array__push(s.tmp_0, "swink");
    r0 = pxsim_Array__push(s.tmp_0, "swipe");
    r0 = pxsim_Array__push(s.tmp_0, "swire");
    r0 = pxsim_Array__push(s.tmp_0, "swirl");
    r0 = pxsim_Array__push(s.tmp_0, "swish");
    r0 = pxsim_Array__push(s.tmp_0, "swiss");
    r0 = pxsim_Array__push(s.tmp_0, "swith");
    r0 = pxsim_Array__push(s.tmp_0, "swits");
    r0 = pxsim_Array__push(s.tmp_0, "swive");
    r0 = pxsim_Array__push(s.tmp_0, "swizz");
    r0 = pxsim_Array__push(s.tmp_0, "swobs");
    r0 = pxsim_Array__push(s.tmp_0, "swole");
    r0 = pxsim_Array__push(s.tmp_0, "swoll");
    r0 = pxsim_Array__push(s.tmp_0, "swoln");
    r0 = pxsim_Array__push(s.tmp_0, "swoon");
    r0 = pxsim_Array__push(s.tmp_0, "swoop");
    r0 = pxsim_Array__push(s.tmp_0, "swops");
    r0 = pxsim_Array__push(s.tmp_0, "swopt");
    r0 = pxsim_Array__push(s.tmp_0, "sword");
    r0 = pxsim_Array__push(s.tmp_0, "swore");
    r0 = pxsim_Array__push(s.tmp_0, "sworn");
    r0 = pxsim_Array__push(s.tmp_0, "swots");
    r0 = pxsim_Array__push(s.tmp_0, "swoun");
    r0 = pxsim_Array__push(s.tmp_0, "swung");
    r0 = pxsim_Array__push(s.tmp_0, "sybbe");
    r0 = pxsim_Array__push(s.tmp_0, "sybil");
    r0 = pxsim_Array__push(s.tmp_0, "syboe");
    r0 = pxsim_Array__push(s.tmp_0, "sybow");
    r0 = pxsim_Array__push(s.tmp_0, "sycee");
    r0 = pxsim_Array__push(s.tmp_0, "syces");
    r0 = pxsim_Array__push(s.tmp_0, "sycon");
    r0 = pxsim_Array__push(s.tmp_0, "syeds");
    r0 = pxsim_Array__push(s.tmp_0, "syens");
    r0 = pxsim_Array__push(s.tmp_0, "syker");
    r0 = pxsim_Array__push(s.tmp_0, "sykes");
    r0 = pxsim_Array__push(s.tmp_0, "sylis");
    r0 = pxsim_Array__push(s.tmp_0, "sylph");
    r0 = pxsim_Array__push(s.tmp_0, "sylva");
    r0 = pxsim_Array__push(s.tmp_0, "symar");
    r0 = pxsim_Array__push(s.tmp_0, "synch");
    r0 = pxsim_Array__push(s.tmp_0, "syncs");
    r0 = pxsim_Array__push(s.tmp_0, "synds");
    r0 = pxsim_Array__push(s.tmp_0, "syned");
    r0 = pxsim_Array__push(s.tmp_0, "synes");
    r0 = pxsim_Array__push(s.tmp_0, "synod");
    r0 = pxsim_Array__push(s.tmp_0, "synth");
    r0 = pxsim_Array__push(s.tmp_0, "syped");
    r0 = pxsim_Array__push(s.tmp_0, "sypes");
    r0 = pxsim_Array__push(s.tmp_0, "syphs");
    r0 = pxsim_Array__push(s.tmp_0, "syrah");
    r0 = pxsim_Array__push(s.tmp_0, "syren");
    r0 = pxsim_Array__push(s.tmp_0, "syrup");
    r0 = pxsim_Array__push(s.tmp_0, "sysop");
    r0 = pxsim_Array__push(s.tmp_0, "sythe");
    r0 = pxsim_Array__push(s.tmp_0, "syver");
    r0 = pxsim_Array__push(s.tmp_0, "taals");
    r0 = pxsim_Array__push(s.tmp_0, "taata");
    r0 = pxsim_Array__push(s.tmp_0, "tabac");
    r0 = pxsim_Array__push(s.tmp_0, "tabby");
    r0 = pxsim_Array__push(s.tmp_0, "taber");
    r0 = pxsim_Array__push(s.tmp_0, "tabes");
    r0 = pxsim_Array__push(s.tmp_0, "tabid");
    r0 = pxsim_Array__push(s.tmp_0, "tabis");
    r0 = pxsim_Array__push(s.tmp_0, "tabla");
    r0 = pxsim_Array__push(s.tmp_0, "table");
    r0 = pxsim_Array__push(s.tmp_0, "tabls");
    r0 = pxsim_Array__push(s.tmp_0, "taboo");
    r0 = pxsim_Array__push(s.tmp_0, "tabor");
    r0 = pxsim_Array__push(s.tmp_0, "tabos");
    r0 = pxsim_Array__push(s.tmp_0, "tabun");
    r0 = pxsim_Array__push(s.tmp_0, "tabus");
    r0 = pxsim_Array__push(s.tmp_0, "tacan");
    r0 = pxsim_Array__push(s.tmp_0, "taces");
    r0 = pxsim_Array__push(s.tmp_0, "tacet");
    r0 = pxsim_Array__push(s.tmp_0, "tache");
    r0 = pxsim_Array__push(s.tmp_0, "tachi");
    r0 = pxsim_Array__push(s.tmp_0, "tacho");
    r0 = pxsim_Array__push(s.tmp_0, "tachs");
    r0 = pxsim_Array__push(s.tmp_0, "tacit");
    r0 = pxsim_Array__push(s.tmp_0, "tacks");
    r0 = pxsim_Array__push(s.tmp_0, "tacky");
    r0 = pxsim_Array__push(s.tmp_0, "tacos");
    r0 = pxsim_Array__push(s.tmp_0, "tacts");
    r0 = pxsim_Array__push(s.tmp_0, "tadah");
    r0 = pxsim_Array__push(s.tmp_0, "taels");
    r0 = pxsim_Array__push(s.tmp_0, "taffy");
    r0 = pxsim_Array__push(s.tmp_0, "tafia");
    r0 = pxsim_Array__push(s.tmp_0, "taggy");
    r0 = pxsim_Array__push(s.tmp_0, "tagma");
    r0 = pxsim_Array__push(s.tmp_0, "tagua");
    r0 = pxsim_Array__push(s.tmp_0, "tahas");
    r0 = pxsim_Array__push(s.tmp_0, "tahrs");
    r0 = pxsim_Array__push(s.tmp_0, "taiga");
    r0 = pxsim_Array__push(s.tmp_0, "taigs");
    r0 = pxsim_Array__push(s.tmp_0, "taiko");
    r0 = pxsim_Array__push(s.tmp_0, "tails");
    r0 = pxsim_Array__push(s.tmp_0, "tains");
    r0 = pxsim_Array__push(s.tmp_0, "taint");
    r0 = pxsim_Array__push(s.tmp_0, "taira");
    r0 = pxsim_Array__push(s.tmp_0, "taish");
    r0 = pxsim_Array__push(s.tmp_0, "taits");
    r0 = pxsim_Array__push(s.tmp_0, "tajes");
    r0 = pxsim_Array__push(s.tmp_0, "takas");
    r0 = pxsim_Array__push(s.tmp_0, "taken");
    r0 = pxsim_Array__push(s.tmp_0, "taker");
    r0 = pxsim_Array__push(s.tmp_0, "takes");
    r0 = pxsim_Array__push(s.tmp_0, "takhi");
    r0 = pxsim_Array__push(s.tmp_0, "takht");
    r0 = pxsim_Array__push(s.tmp_0, "takin");
    r0 = pxsim_Array__push(s.tmp_0, "takis");
    r0 = pxsim_Array__push(s.tmp_0, "takky");
    r0 = pxsim_Array__push(s.tmp_0, "talak");
    r0 = pxsim_Array__push(s.tmp_0, "talaq");
    r0 = pxsim_Array__push(s.tmp_0, "talar");
    r0 = pxsim_Array__push(s.tmp_0, "talas");
    r0 = pxsim_Array__push(s.tmp_0, "talcs");
    r0 = pxsim_Array__push(s.tmp_0, "talcy");
    r0 = pxsim_Array__push(s.tmp_0, "talea");
    r0 = pxsim_Array__push(s.tmp_0, "taler");
    r0 = pxsim_Array__push(s.tmp_0, "tales");
    r0 = pxsim_Array__push(s.tmp_0, "talik");
    r0 = pxsim_Array__push(s.tmp_0, "talks");
    r0 = pxsim_Array__push(s.tmp_0, "talky");
    r0 = pxsim_Array__push(s.tmp_0, "talls");
    r0 = pxsim_Array__push(s.tmp_0, "tally");
    r0 = pxsim_Array__push(s.tmp_0, "talma");
    r0 = pxsim_Array__push(s.tmp_0, "talon");
    r0 = pxsim_Array__push(s.tmp_0, "talpa");
    r0 = pxsim_Array__push(s.tmp_0, "taluk");
    r0 = pxsim_Array__push(s.tmp_0, "talus");
    r0 = pxsim_Array__push(s.tmp_0, "tamal");
    r0 = pxsim_Array__push(s.tmp_0, "tamas");
    r0 = pxsim_Array__push(s.tmp_0, "tamed");
    r0 = pxsim_Array__push(s.tmp_0, "tamer");
    r0 = pxsim_Array__push(s.tmp_0, "tames");
    r0 = pxsim_Array__push(s.tmp_0, "tamin");
    r0 = pxsim_Array__push(s.tmp_0, "tamis");
    r0 = pxsim_Array__push(s.tmp_0, "tammy");
    r0 = pxsim_Array__push(s.tmp_0, "tamps");
    r0 = pxsim_Array__push(s.tmp_0, "tanas");
    r0 = pxsim_Array__push(s.tmp_0, "tanga");
    r0 = pxsim_Array__push(s.tmp_0, "tangi");
    r0 = pxsim_Array__push(s.tmp_0, "tango");
    r0 = pxsim_Array__push(s.tmp_0, "tangs");
    r0 = pxsim_Array__push(s.tmp_0, "tangy");
    r0 = pxsim_Array__push(s.tmp_0, "tanhs");
    r0 = pxsim_Array__push(s.tmp_0, "tania");
    r0 = pxsim_Array__push(s.tmp_0, "tanka");
    r0 = pxsim_Array__push(s.tmp_0, "tanks");
    r0 = pxsim_Array__push(s.tmp_0, "tanky");
    r0 = pxsim_Array__push(s.tmp_0, "tanna");
    r0 = pxsim_Array__push(s.tmp_0, "tansu");
    r0 = pxsim_Array__push(s.tmp_0, "tansy");
    r0 = pxsim_Array__push(s.tmp_0, "tante");
    r0 = pxsim_Array__push(s.tmp_0, "tanti");
    r0 = pxsim_Array__push(s.tmp_0, "tanto");
    r0 = pxsim_Array__push(s.tmp_0, "tanty");
    r0 = pxsim_Array__push(s.tmp_0, "tapas");
    r0 = pxsim_Array__push(s.tmp_0, "taped");
    r0 = pxsim_Array__push(s.tmp_0, "tapen");
    r0 = pxsim_Array__push(s.tmp_0, "taper");
    r0 = pxsim_Array__push(s.tmp_0, "tapes");
    r0 = pxsim_Array__push(s.tmp_0, "tapet");
    r0 = pxsim_Array__push(s.tmp_0, "tapir");
    r0 = pxsim_Array__push(s.tmp_0, "tapis");
    r0 = pxsim_Array__push(s.tmp_0, "tappa");
    r0 = pxsim_Array__push(s.tmp_0, "tapus");
    r0 = pxsim_Array__push(s.tmp_0, "taras");
    r0 = pxsim_Array__push(s.tmp_0, "tardo");
    r0 = pxsim_Array__push(s.tmp_0, "tards");
    r0 = pxsim_Array__push(s.tmp_0, "tardy");
    r0 = pxsim_Array__push(s.tmp_0, "tared");
    r0 = pxsim_Array__push(s.tmp_0, "tares");
    r0 = pxsim_Array__push(s.tmp_0, "targa");
    r0 = pxsim_Array__push(s.tmp_0, "targe");
    r0 = pxsim_Array__push(s.tmp_0, "tarka");
    r0 = pxsim_Array__push(s.tmp_0, "tarns");
    r0 = pxsim_Array__push(s.tmp_0, "taroc");
    r0 = pxsim_Array__push(s.tmp_0, "tarok");
    r0 = pxsim_Array__push(s.tmp_0, "taros");
    r0 = pxsim_Array__push(s.tmp_0, "tarot");
    r0 = pxsim_Array__push(s.tmp_0, "tarps");
    r0 = pxsim_Array__push(s.tmp_0, "tarre");
    r0 = pxsim_Array__push(s.tmp_0, "tarry");
    r0 = pxsim_Array__push(s.tmp_0, "tarse");
    r0 = pxsim_Array__push(s.tmp_0, "tarsi");
    r0 = pxsim_Array__push(s.tmp_0, "tarte");
    r0 = pxsim_Array__push(s.tmp_0, "tarts");
    r0 = pxsim_Array__push(s.tmp_0, "tarty");
    r0 = pxsim_Array__push(s.tmp_0, "tarzy");
    r0 = pxsim_Array__push(s.tmp_0, "tasar");
    r0 = pxsim_Array__push(s.tmp_0, "tasca");
    r0 = pxsim_Array__push(s.tmp_0, "tased");
    r0 = pxsim_Array__push(s.tmp_0, "taser");
    r0 = pxsim_Array__push(s.tmp_0, "tases");
    r0 = pxsim_Array__push(s.tmp_0, "tasks");
    r0 = pxsim_Array__push(s.tmp_0, "tassa");
    r0 = pxsim_Array__push(s.tmp_0, "tasse");
    r0 = pxsim_Array__push(s.tmp_0, "tasso");
    r0 = pxsim_Array__push(s.tmp_0, "taste");
    r0 = pxsim_Array__push(s.tmp_0, "tasto");
    r0 = pxsim_Array__push(s.tmp_0, "tasty");
    r0 = pxsim_Array__push(s.tmp_0, "tatar");
    r0 = pxsim_Array__push(s.tmp_0, "tater");
    r0 = pxsim_Array__push(s.tmp_0, "tates");
    r0 = pxsim_Array__push(s.tmp_0, "taths");
    r0 = pxsim_Array__push(s.tmp_0, "tatie");
    r0 = pxsim_Array__push(s.tmp_0, "tatou");
    r0 = pxsim_Array__push(s.tmp_0, "tatts");
    r0 = pxsim_Array__push(s.tmp_0, "tatty");
    r0 = pxsim_Array__push(s.tmp_0, "tatus");
    r0 = pxsim_Array__push(s.tmp_0, "taube");
    r0 = pxsim_Array__push(s.tmp_0, "tauld");
    r0 = pxsim_Array__push(s.tmp_0, "taunt");
    r0 = pxsim_Array__push(s.tmp_0, "tauon");
    r0 = pxsim_Array__push(s.tmp_0, "taupe");
    r0 = pxsim_Array__push(s.tmp_0, "tauts");
    r0 = pxsim_Array__push(s.tmp_0, "tauty");
    r0 = pxsim_Array__push(s.tmp_0, "tavah");
    r0 = pxsim_Array__push(s.tmp_0, "tavas");
    r0 = pxsim_Array__push(s.tmp_0, "taver");
    r0 = pxsim_Array__push(s.tmp_0, "tawaf");
    r0 = pxsim_Array__push(s.tmp_0, "tawai");
    r0 = pxsim_Array__push(s.tmp_0, "tawas");
    r0 = pxsim_Array__push(s.tmp_0, "tawed");
    r0 = pxsim_Array__push(s.tmp_0, "tawer");
    r0 = pxsim_Array__push(s.tmp_0, "tawie");
    r0 = pxsim_Array__push(s.tmp_0, "tawny");
    r0 = pxsim_Array__push(s.tmp_0, "tawse");
    r0 = pxsim_Array__push(s.tmp_0, "tawts");
    r0 = pxsim_Array__push(s.tmp_0, "taxed");
    r0 = pxsim_Array__push(s.tmp_0, "taxer");
    r0 = pxsim_Array__push(s.tmp_0, "taxes");
    r0 = pxsim_Array__push(s.tmp_0, "taxis");
    r0 = pxsim_Array__push(s.tmp_0, "taxol");
    r0 = pxsim_Array__push(s.tmp_0, "taxon");
    r0 = pxsim_Array__push(s.tmp_0, "taxor");
    r0 = pxsim_Array__push(s.tmp_0, "taxus");
    r0 = pxsim_Array__push(s.tmp_0, "tayra");
    r0 = pxsim_Array__push(s.tmp_0, "tazza");
    r0 = pxsim_Array__push(s.tmp_0, "tazze");
    r0 = pxsim_Array__push(s.tmp_0, "teach");
    r0 = pxsim_Array__push(s.tmp_0, "teade");
    r0 = pxsim_Array__push(s.tmp_0, "teads");
    r0 = pxsim_Array__push(s.tmp_0, "teaed");
    r0 = pxsim_Array__push(s.tmp_0, "teaks");
    r0 = pxsim_Array__push(s.tmp_0, "teals");
    r0 = pxsim_Array__push(s.tmp_0, "teams");
    r0 = pxsim_Array__push(s.tmp_0, "tears");
    r0 = pxsim_Array__push(s.tmp_0, "teary");
    r0 = pxsim_Array__push(s.tmp_0, "tease");
    r0 = pxsim_Array__push(s.tmp_0, "teats");
    r0 = pxsim_Array__push(s.tmp_0, "teaze");
    r0 = pxsim_Array__push(s.tmp_0, "techs");
    r0 = pxsim_Array__push(s.tmp_0, "techy");
    r0 = pxsim_Array__push(s.tmp_0, "tecta");
    r0 = pxsim_Array__push(s.tmp_0, "tecum");
    r0 = pxsim_Array__push(s.tmp_0, "teddy");
    r0 = pxsim_Array__push(s.tmp_0, "teels");
    r0 = pxsim_Array__push(s.tmp_0, "teems");
    r0 = pxsim_Array__push(s.tmp_0, "teend");
    r0 = pxsim_Array__push(s.tmp_0, "teene");
    r0 = pxsim_Array__push(s.tmp_0, "teens");
    r0 = pxsim_Array__push(s.tmp_0, "teeny");
    r0 = pxsim_Array__push(s.tmp_0, "teers");
    r0 = pxsim_Array__push(s.tmp_0, "teeth");
    r0 = pxsim_Array__push(s.tmp_0, "teets");
    r0 = pxsim_Array__push(s.tmp_0, "teffs");
    r0 = pxsim_Array__push(s.tmp_0, "teggs");
    r0 = pxsim_Array__push(s.tmp_0, "tegua");
    r0 = pxsim_Array__push(s.tmp_0, "tegus");
    r0 = pxsim_Array__push(s.tmp_0, "tehee");
    r0 = pxsim_Array__push(s.tmp_0, "tehrs");
    r0 = pxsim_Array__push(s.tmp_0, "teiid");
    r0 = pxsim_Array__push(s.tmp_0, "teils");
    r0 = pxsim_Array__push(s.tmp_0, "teind");
    r0 = pxsim_Array__push(s.tmp_0, "teins");
    r0 = pxsim_Array__push(s.tmp_0, "tekke");
    r0 = pxsim_Array__push(s.tmp_0, "telae");
    r0 = pxsim_Array__push(s.tmp_0, "telco");
    r0 = pxsim_Array__push(s.tmp_0, "teles");
    r0 = pxsim_Array__push(s.tmp_0, "telex");
    r0 = pxsim_Array__push(s.tmp_0, "telia");
    r0 = pxsim_Array__push(s.tmp_0, "telic");
    r0 = pxsim_Array__push(s.tmp_0, "tells");
    r0 = pxsim_Array__push(s.tmp_0, "telly");
    r0 = pxsim_Array__push(s.tmp_0, "teloi");
    r0 = pxsim_Array__push(s.tmp_0, "telos");
    r0 = pxsim_Array__push(s.tmp_0, "temed");
    r0 = pxsim_Array__push(s.tmp_0, "temes");
    r0 = pxsim_Array__push(s.tmp_0, "tempi");
    r0 = pxsim_Array__push(s.tmp_0, "tempo");
    r0 = pxsim_Array__push(s.tmp_0, "temps");
    r0 = pxsim_Array__push(s.tmp_0, "tempt");
    r0 = pxsim_Array__push(s.tmp_0, "temse");
    r0 = pxsim_Array__push(s.tmp_0, "tench");
    r0 = pxsim_Array__push(s.tmp_0, "tends");
    r0 = pxsim_Array__push(s.tmp_0, "tendu");
    r0 = pxsim_Array__push(s.tmp_0, "tenes");
    r0 = pxsim_Array__push(s.tmp_0, "tenet");
    r0 = pxsim_Array__push(s.tmp_0, "tenge");
    r0 = pxsim_Array__push(s.tmp_0, "tenia");
    r0 = pxsim_Array__push(s.tmp_0, "tenne");
    r0 = pxsim_Array__push(s.tmp_0, "tenno");
    r0 = pxsim_Array__push(s.tmp_0, "tenny");
    r0 = pxsim_Array__push(s.tmp_0, "tenon");
    r0 = pxsim_Array__push(s.tmp_0, "tenor");
    r0 = pxsim_Array__push(s.tmp_0, "tense");
    r0 = pxsim_Array__push(s.tmp_0, "tenth");
    r0 = pxsim_Array__push(s.tmp_0, "tents");
    r0 = pxsim_Array__push(s.tmp_0, "tenty");
    r0 = pxsim_Array__push(s.tmp_0, "tenue");
    r0 = pxsim_Array__push(s.tmp_0, "tepal");
    r0 = pxsim_Array__push(s.tmp_0, "tepas");
    r0 = pxsim_Array__push(s.tmp_0, "tepee");
    r0 = pxsim_Array__push(s.tmp_0, "tepid");
    r0 = pxsim_Array__push(s.tmp_0, "tepoy");
    r0 = pxsim_Array__push(s.tmp_0, "terai");
    r0 = pxsim_Array__push(s.tmp_0, "teras");
    r0 = pxsim_Array__push(s.tmp_0, "terce");
    r0 = pxsim_Array__push(s.tmp_0, "terek");
    r0 = pxsim_Array__push(s.tmp_0, "teres");
    r0 = pxsim_Array__push(s.tmp_0, "terfe");
    r0 = pxsim_Array__push(s.tmp_0, "terfs");
    r0 = pxsim_Array__push(s.tmp_0, "terga");
    r0 = pxsim_Array__push(s.tmp_0, "terms");
    r0 = pxsim_Array__push(s.tmp_0, "terne");
    r0 = pxsim_Array__push(s.tmp_0, "terns");
    r0 = pxsim_Array__push(s.tmp_0, "terra");
    r0 = pxsim_Array__push(s.tmp_0, "terre");
    r0 = pxsim_Array__push(s.tmp_0, "terry");
    r0 = pxsim_Array__push(s.tmp_0, "terse");
    r0 = pxsim_Array__push(s.tmp_0, "terts");
    r0 = pxsim_Array__push(s.tmp_0, "terza");
    r0 = pxsim_Array__push(s.tmp_0, "tesla");
    r0 = pxsim_Array__push(s.tmp_0, "testa");
    r0 = pxsim_Array__push(s.tmp_0, "teste");
    r0 = pxsim_Array__push(s.tmp_0, "tests");
    r0 = pxsim_Array__push(s.tmp_0, "testy");
    r0 = pxsim_Array__push(s.tmp_0, "tetes");
    r0 = pxsim_Array__push(s.tmp_0, "teths");
    r0 = pxsim_Array__push(s.tmp_0, "tetra");
    r0 = pxsim_Array__push(s.tmp_0, "tetri");
    r0 = pxsim_Array__push(s.tmp_0, "teuch");
    r0 = pxsim_Array__push(s.tmp_0, "teugh");
    r0 = pxsim_Array__push(s.tmp_0, "tewed");
    r0 = pxsim_Array__push(s.tmp_0, "tewel");
    r0 = pxsim_Array__push(s.tmp_0, "tewit");
    r0 = pxsim_Array__push(s.tmp_0, "texas");
    r0 = pxsim_Array__push(s.tmp_0, "texes");
    r0 = pxsim_Array__push(s.tmp_0, "texta");
    r0 = pxsim_Array__push(s.tmp_0, "texts");
    r0 = pxsim_Array__push(s.tmp_0, "thack");
    r0 = pxsim_Array__push(s.tmp_0, "thagi");
    r0 = pxsim_Array__push(s.tmp_0, "thaim");
    r0 = pxsim_Array__push(s.tmp_0, "thale");
    r0 = pxsim_Array__push(s.tmp_0, "thali");
    r0 = pxsim_Array__push(s.tmp_0, "thana");
    r0 = pxsim_Array__push(s.tmp_0, "thane");
    r0 = pxsim_Array__push(s.tmp_0, "thang");
    r0 = pxsim_Array__push(s.tmp_0, "thank");
    r0 = pxsim_Array__push(s.tmp_0, "thans");
    r0 = pxsim_Array__push(s.tmp_0, "thanx");
    r0 = pxsim_Array__push(s.tmp_0, "tharm");
    r0 = pxsim_Array__push(s.tmp_0, "thars");
    r0 = pxsim_Array__push(s.tmp_0, "thaws");
    r0 = pxsim_Array__push(s.tmp_0, "thawt");
    r0 = pxsim_Array__push(s.tmp_0, "thawy");
    r0 = pxsim_Array__push(s.tmp_0, "thebe");
    r0 = pxsim_Array__push(s.tmp_0, "theca");
    r0 = pxsim_Array__push(s.tmp_0, "theed");
    r0 = pxsim_Array__push(s.tmp_0, "theek");
    r0 = pxsim_Array__push(s.tmp_0, "thees");
    r0 = pxsim_Array__push(s.tmp_0, "theft");
    r0 = pxsim_Array__push(s.tmp_0, "thegn");
    r0 = pxsim_Array__push(s.tmp_0, "theic");
    r0 = pxsim_Array__push(s.tmp_0, "thein");
    r0 = pxsim_Array__push(s.tmp_0, "their");
    r0 = pxsim_Array__push(s.tmp_0, "thelf");
    r0 = pxsim_Array__push(s.tmp_0, "thema");
    r0 = pxsim_Array__push(s.tmp_0, "theme");
    r0 = pxsim_Array__push(s.tmp_0, "thens");
    r0 = pxsim_Array__push(s.tmp_0, "theor");
    r0 = pxsim_Array__push(s.tmp_0, "theow");
    r0 = pxsim_Array__push(s.tmp_0, "there");
    r0 = pxsim_Array__push(s.tmp_0, "therm");
    r0 = pxsim_Array__push(s.tmp_0, "these");
    r0 = pxsim_Array__push(s.tmp_0, "thesp");
    r0 = pxsim_Array__push(s.tmp_0, "theta");
    r0 = pxsim_Array__push(s.tmp_0, "thete");
    r0 = pxsim_Array__push(s.tmp_0, "thews");
    r0 = pxsim_Array__push(s.tmp_0, "thewy");
    r0 = pxsim_Array__push(s.tmp_0, "thick");
    r0 = pxsim_Array__push(s.tmp_0, "thief");
    r0 = pxsim_Array__push(s.tmp_0, "thigh");
    r0 = pxsim_Array__push(s.tmp_0, "thigs");
    r0 = pxsim_Array__push(s.tmp_0, "thilk");
    r0 = pxsim_Array__push(s.tmp_0, "thill");
    r0 = pxsim_Array__push(s.tmp_0, "thine");
    r0 = pxsim_Array__push(s.tmp_0, "thing");
    r0 = pxsim_Array__push(s.tmp_0, "think");
    r0 = pxsim_Array__push(s.tmp_0, "thins");
    r0 = pxsim_Array__push(s.tmp_0, "thiol");
    r0 = pxsim_Array__push(s.tmp_0, "third");
    r0 = pxsim_Array__push(s.tmp_0, "thirl");
    r0 = pxsim_Array__push(s.tmp_0, "thoft");
    r0 = pxsim_Array__push(s.tmp_0, "thole");
    r0 = pxsim_Array__push(s.tmp_0, "tholi");
    r0 = pxsim_Array__push(s.tmp_0, "thong");
    r0 = pxsim_Array__push(s.tmp_0, "thorn");
    r0 = pxsim_Array__push(s.tmp_0, "thoro");
    r0 = pxsim_Array__push(s.tmp_0, "thorp");
    r0 = pxsim_Array__push(s.tmp_0, "those");
    r0 = pxsim_Array__push(s.tmp_0, "thots");
    r0 = pxsim_Array__push(s.tmp_0, "thous");
    r0 = pxsim_Array__push(s.tmp_0, "thowl");
    r0 = pxsim_Array__push(s.tmp_0, "thrae");
    r0 = pxsim_Array__push(s.tmp_0, "thraw");
    r0 = pxsim_Array__push(s.tmp_0, "three");
    r0 = pxsim_Array__push(s.tmp_0, "threw");
    r0 = pxsim_Array__push(s.tmp_0, "thrid");
    r0 = pxsim_Array__push(s.tmp_0, "thrip");
    r0 = pxsim_Array__push(s.tmp_0, "throb");
    r0 = pxsim_Array__push(s.tmp_0, "throe");
    r0 = pxsim_Array__push(s.tmp_0, "throw");
    r0 = pxsim_Array__push(s.tmp_0, "thrum");
    r0 = pxsim_Array__push(s.tmp_0, "thuds");
    r0 = pxsim_Array__push(s.tmp_0, "thugs");
    r0 = pxsim_Array__push(s.tmp_0, "thuja");
    r0 = pxsim_Array__push(s.tmp_0, "thumb");
    r0 = pxsim_Array__push(s.tmp_0, "thump");
    r0 = pxsim_Array__push(s.tmp_0, "thunk");
    r0 = pxsim_Array__push(s.tmp_0, "thurl");
    r0 = pxsim_Array__push(s.tmp_0, "thuya");
    r0 = pxsim_Array__push(s.tmp_0, "thyme");
    r0 = pxsim_Array__push(s.tmp_0, "thymi");
    r0 = pxsim_Array__push(s.tmp_0, "thymy");
    r0 = pxsim_Array__push(s.tmp_0, "tians");
    r0 = pxsim_Array__push(s.tmp_0, "tiara");
    r0 = pxsim_Array__push(s.tmp_0, "tiare");
    r0 = pxsim_Array__push(s.tmp_0, "tiars");
    r0 = pxsim_Array__push(s.tmp_0, "tibia");
    r0 = pxsim_Array__push(s.tmp_0, "tical");
    r0 = pxsim_Array__push(s.tmp_0, "ticca");
    r0 = pxsim_Array__push(s.tmp_0, "ticed");
    r0 = pxsim_Array__push(s.tmp_0, "tices");
    r0 = pxsim_Array__push(s.tmp_0, "tichy");
    r0 = pxsim_Array__push(s.tmp_0, "ticks");
    r0 = pxsim_Array__push(s.tmp_0, "ticky");
    r0 = pxsim_Array__push(s.tmp_0, "tidal");
    r0 = pxsim_Array__push(s.tmp_0, "tiddy");
    r0 = pxsim_Array__push(s.tmp_0, "tided");
    r0 = pxsim_Array__push(s.tmp_0, "tides");
    r0 = pxsim_Array__push(s.tmp_0, "tiefs");
    r0 = pxsim_Array__push(s.tmp_0, "tiers");
    r0 = pxsim_Array__push(s.tmp_0, "tiffs");
    r0 = pxsim_Array__push(s.tmp_0, "tifos");
    r0 = pxsim_Array__push(s.tmp_0, "tifts");
    r0 = pxsim_Array__push(s.tmp_0, "tiger");
    r0 = pxsim_Array__push(s.tmp_0, "tiges");
    r0 = pxsim_Array__push(s.tmp_0, "tight");
    r0 = pxsim_Array__push(s.tmp_0, "tigon");
    r0 = pxsim_Array__push(s.tmp_0, "tikas");
    r0 = pxsim_Array__push(s.tmp_0, "tikes");
    r0 = pxsim_Array__push(s.tmp_0, "tikia");
    r0 = pxsim_Array__push(s.tmp_0, "tikis");
    r0 = pxsim_Array__push(s.tmp_0, "tikka");
    r0 = pxsim_Array__push(s.tmp_0, "tilak");
    r0 = pxsim_Array__push(s.tmp_0, "tilde");
    r0 = pxsim_Array__push(s.tmp_0, "tiled");
    r0 = pxsim_Array__push(s.tmp_0, "tiler");
    r0 = pxsim_Array__push(s.tmp_0, "tiles");
    r0 = pxsim_Array__push(s.tmp_0, "tills");
    r0 = pxsim_Array__push(s.tmp_0, "tilly");
    r0 = pxsim_Array__push(s.tmp_0, "tilth");
    r0 = pxsim_Array__push(s.tmp_0, "tilts");
    r0 = pxsim_Array__push(s.tmp_0, "timbo");
    r0 = pxsim_Array__push(s.tmp_0, "timed");
    r0 = pxsim_Array__push(s.tmp_0, "timer");
    r0 = pxsim_Array__push(s.tmp_0, "times");
    r0 = pxsim_Array__push(s.tmp_0, "timid");
    r0 = pxsim_Array__push(s.tmp_0, "timon");
    r0 = pxsim_Array__push(s.tmp_0, "timps");
    r0 = pxsim_Array__push(s.tmp_0, "tinas");
    r0 = pxsim_Array__push(s.tmp_0, "tinct");
    r0 = pxsim_Array__push(s.tmp_0, "tinds");
    r0 = pxsim_Array__push(s.tmp_0, "tinea");
    r0 = pxsim_Array__push(s.tmp_0, "tined");
    r0 = pxsim_Array__push(s.tmp_0, "tines");
    r0 = pxsim_Array__push(s.tmp_0, "tinge");
    r0 = pxsim_Array__push(s.tmp_0, "tings");
    r0 = pxsim_Array__push(s.tmp_0, "tinks");
    r0 = pxsim_Array__push(s.tmp_0, "tinny");
    r0 = pxsim_Array__push(s.tmp_0, "tinto");
    r0 = pxsim_Array__push(s.tmp_0, "tints");
    r0 = pxsim_Array__push(s.tmp_0, "tinty");
    r0 = pxsim_Array__push(s.tmp_0, "tipis");
    r0 = pxsim_Array__push(s.tmp_0, "tippy");
    r0 = pxsim_Array__push(s.tmp_0, "tipsy");
    r0 = pxsim_Array__push(s.tmp_0, "tipup");
    r0 = pxsim_Array__push(s.tmp_0, "tired");
    r0 = pxsim_Array__push(s.tmp_0, "tires");
    r0 = pxsim_Array__push(s.tmp_0, "tirls");
    r0 = pxsim_Array__push(s.tmp_0, "tiros");
    r0 = pxsim_Array__push(s.tmp_0, "tirrs");
    r0 = pxsim_Array__push(s.tmp_0, "tirth");
    r0 = pxsim_Array__push(s.tmp_0, "titan");
    r0 = pxsim_Array__push(s.tmp_0, "titar");
    r0 = pxsim_Array__push(s.tmp_0, "titas");
    r0 = pxsim_Array__push(s.tmp_0, "titch");
    r0 = pxsim_Array__push(s.tmp_0, "titer");
    r0 = pxsim_Array__push(s.tmp_0, "tithe");
    r0 = pxsim_Array__push(s.tmp_0, "tithi");
    r0 = pxsim_Array__push(s.tmp_0, "titin");
    r0 = pxsim_Array__push(s.tmp_0, "titir");
    r0 = pxsim_Array__push(s.tmp_0, "titis");
    r0 = pxsim_Array__push(s.tmp_0, "title");
    r0 = pxsim_Array__push(s.tmp_0, "titre");
    r0 = pxsim_Array__push(s.tmp_0, "titty");
    r0 = pxsim_Array__push(s.tmp_0, "titup");
    r0 = pxsim_Array__push(s.tmp_0, "tiyin");
    r0 = pxsim_Array__push(s.tmp_0, "tiyns");
    r0 = pxsim_Array__push(s.tmp_0, "tizes");
    r0 = pxsim_Array__push(s.tmp_0, "tizzy");
    r0 = pxsim_Array__push(s.tmp_0, "toads");
    r0 = pxsim_Array__push(s.tmp_0, "toady");
    r0 = pxsim_Array__push(s.tmp_0, "toast");
    r0 = pxsim_Array__push(s.tmp_0, "toaze");
    r0 = pxsim_Array__push(s.tmp_0, "tocks");
    r0 = pxsim_Array__push(s.tmp_0, "tocky");
    r0 = pxsim_Array__push(s.tmp_0, "tocos");
    r0 = pxsim_Array__push(s.tmp_0, "today");
    r0 = pxsim_Array__push(s.tmp_0, "todde");
    r0 = pxsim_Array__push(s.tmp_0, "toddy");
    r0 = pxsim_Array__push(s.tmp_0, "todea");
    r0 = pxsim_Array__push(s.tmp_0, "todos");
    r0 = pxsim_Array__push(s.tmp_0, "toeas");
    r0 = pxsim_Array__push(s.tmp_0, "toffs");
    r0 = pxsim_Array__push(s.tmp_0, "toffy");
    r0 = pxsim_Array__push(s.tmp_0, "tofts");
    r0 = pxsim_Array__push(s.tmp_0, "tofus");
    r0 = pxsim_Array__push(s.tmp_0, "togae");
    r0 = pxsim_Array__push(s.tmp_0, "togas");
    r0 = pxsim_Array__push(s.tmp_0, "toged");
    r0 = pxsim_Array__push(s.tmp_0, "toges");
    r0 = pxsim_Array__push(s.tmp_0, "togue");
    r0 = pxsim_Array__push(s.tmp_0, "tohos");
    r0 = pxsim_Array__push(s.tmp_0, "toidy");
    r0 = pxsim_Array__push(s.tmp_0, "toile");
    r0 = pxsim_Array__push(s.tmp_0, "toils");
    r0 = pxsim_Array__push(s.tmp_0, "toing");
    r0 = pxsim_Array__push(s.tmp_0, "toise");
    r0 = pxsim_Array__push(s.tmp_0, "toits");
    r0 = pxsim_Array__push(s.tmp_0, "toity");
    r0 = pxsim_Array__push(s.tmp_0, "tokay");
    r0 = pxsim_Array__push(s.tmp_0, "toked");
    r0 = pxsim_Array__push(s.tmp_0, "token");
    r0 = pxsim_Array__push(s.tmp_0, "toker");
    r0 = pxsim_Array__push(s.tmp_0, "tokes");
    r0 = pxsim_Array__push(s.tmp_0, "tokos");
    r0 = pxsim_Array__push(s.tmp_0, "tolan");
    r0 = pxsim_Array__push(s.tmp_0, "tolar");
    r0 = pxsim_Array__push(s.tmp_0, "tolas");
    r0 = pxsim_Array__push(s.tmp_0, "toled");
    r0 = pxsim_Array__push(s.tmp_0, "toles");
    r0 = pxsim_Array__push(s.tmp_0, "tolls");
    r0 = pxsim_Array__push(s.tmp_0, "tolly");
    r0 = pxsim_Array__push(s.tmp_0, "tolts");
    r0 = pxsim_Array__push(s.tmp_0, "tolus");
    r0 = pxsim_Array__push(s.tmp_0, "tolyl");
    r0 = pxsim_Array__push(s.tmp_0, "toman");
    r0 = pxsim_Array__push(s.tmp_0, "tombo");
    r0 = pxsim_Array__push(s.tmp_0, "tombs");
    r0 = pxsim_Array__push(s.tmp_0, "tomen");
    r0 = pxsim_Array__push(s.tmp_0, "tomes");
    r0 = pxsim_Array__push(s.tmp_0, "tomia");
    r0 = pxsim_Array__push(s.tmp_0, "tomin");
    r0 = pxsim_Array__push(s.tmp_0, "tomme");
    r0 = pxsim_Array__push(s.tmp_0, "tommy");
    r0 = pxsim_Array__push(s.tmp_0, "tomos");
    r0 = pxsim_Array__push(s.tmp_0, "tomoz");
    r0 = pxsim_Array__push(s.tmp_0, "tonal");
    r0 = pxsim_Array__push(s.tmp_0, "tondi");
    r0 = pxsim_Array__push(s.tmp_0, "tondo");
    r0 = pxsim_Array__push(s.tmp_0, "toned");
    r0 = pxsim_Array__push(s.tmp_0, "toner");
    r0 = pxsim_Array__push(s.tmp_0, "tones");
    r0 = pxsim_Array__push(s.tmp_0, "toney");
    r0 = pxsim_Array__push(s.tmp_0, "tonga");
    r0 = pxsim_Array__push(s.tmp_0, "tongs");
    r0 = pxsim_Array__push(s.tmp_0, "tonic");
    r0 = pxsim_Array__push(s.tmp_0, "tonka");
    r0 = pxsim_Array__push(s.tmp_0, "tonks");
    r0 = pxsim_Array__push(s.tmp_0, "tonne");
    r0 = pxsim_Array__push(s.tmp_0, "tonus");
    r0 = pxsim_Array__push(s.tmp_0, "tools");
    r0 = pxsim_Array__push(s.tmp_0, "tooms");
    r0 = pxsim_Array__push(s.tmp_0, "toons");
    r0 = pxsim_Array__push(s.tmp_0, "tooth");
    r0 = pxsim_Array__push(s.tmp_0, "toots");
    r0 = pxsim_Array__push(s.tmp_0, "topaz");
    r0 = pxsim_Array__push(s.tmp_0, "toped");
    r0 = pxsim_Array__push(s.tmp_0, "topee");
    r0 = pxsim_Array__push(s.tmp_0, "topek");
    r0 = pxsim_Array__push(s.tmp_0, "toper");
    r0 = pxsim_Array__push(s.tmp_0, "topes");
    r0 = pxsim_Array__push(s.tmp_0, "tophe");
    r0 = pxsim_Array__push(s.tmp_0, "tophi");
    r0 = pxsim_Array__push(s.tmp_0, "tophs");
    r0 = pxsim_Array__push(s.tmp_0, "topic");
    r0 = pxsim_Array__push(s.tmp_0, "topis");
    r0 = pxsim_Array__push(s.tmp_0, "topoi");
    r0 = pxsim_Array__push(s.tmp_0, "topos");
    r0 = pxsim_Array__push(s.tmp_0, "toppy");
    r0 = pxsim_Array__push(s.tmp_0, "toque");
    r0 = pxsim_Array__push(s.tmp_0, "torah");
    r0 = pxsim_Array__push(s.tmp_0, "toran");
    r0 = pxsim_Array__push(s.tmp_0, "toras");
    r0 = pxsim_Array__push(s.tmp_0, "torch");
    r0 = pxsim_Array__push(s.tmp_0, "torcs");
    r0 = pxsim_Array__push(s.tmp_0, "tores");
    r0 = pxsim_Array__push(s.tmp_0, "toric");
    r0 = pxsim_Array__push(s.tmp_0, "torii");
    r0 = pxsim_Array__push(s.tmp_0, "toros");
    r0 = pxsim_Array__push(s.tmp_0, "torot");
    r0 = pxsim_Array__push(s.tmp_0, "torrs");
    r0 = pxsim_Array__push(s.tmp_0, "torse");
    r0 = pxsim_Array__push(s.tmp_0, "torsi");
    r0 = pxsim_Array__push(s.tmp_0, "torsk");
    r0 = pxsim_Array__push(s.tmp_0, "torso");
    r0 = pxsim_Array__push(s.tmp_0, "torta");
    r0 = pxsim_Array__push(s.tmp_0, "torte");
    r0 = pxsim_Array__push(s.tmp_0, "torts");
    r0 = pxsim_Array__push(s.tmp_0, "torus");
    r0 = pxsim_Array__push(s.tmp_0, "tosas");
    r0 = pxsim_Array__push(s.tmp_0, "tosed");
    r0 = pxsim_Array__push(s.tmp_0, "toses");
    r0 = pxsim_Array__push(s.tmp_0, "toshy");
    r0 = pxsim_Array__push(s.tmp_0, "tossy");
    r0 = pxsim_Array__push(s.tmp_0, "tosyl");
    r0 = pxsim_Array__push(s.tmp_0, "total");
    r0 = pxsim_Array__push(s.tmp_0, "toted");
    r0 = pxsim_Array__push(s.tmp_0, "totem");
    r0 = pxsim_Array__push(s.tmp_0, "toter");
    r0 = pxsim_Array__push(s.tmp_0, "totes");
    r0 = pxsim_Array__push(s.tmp_0, "totty");
    r0 = pxsim_Array__push(s.tmp_0, "touch");
    r0 = pxsim_Array__push(s.tmp_0, "tough");
    r0 = pxsim_Array__push(s.tmp_0, "touks");
    r0 = pxsim_Array__push(s.tmp_0, "touns");
    r0 = pxsim_Array__push(s.tmp_0, "tours");
    r0 = pxsim_Array__push(s.tmp_0, "touse");
    r0 = pxsim_Array__push(s.tmp_0, "tousy");
    r0 = pxsim_Array__push(s.tmp_0, "touts");
    r0 = pxsim_Array__push(s.tmp_0, "touze");
    r0 = pxsim_Array__push(s.tmp_0, "touzy");
    r0 = pxsim_Array__push(s.tmp_0, "towai");
    r0 = pxsim_Array__push(s.tmp_0, "towed");
    r0 = pxsim_Array__push(s.tmp_0, "towel");
    r0 = pxsim_Array__push(s.tmp_0, "tower");
    r0 = pxsim_Array__push(s.tmp_0, "towie");
    r0 = pxsim_Array__push(s.tmp_0, "towno");
    r0 = pxsim_Array__push(s.tmp_0, "towns");
    r0 = pxsim_Array__push(s.tmp_0, "towny");
    r0 = pxsim_Array__push(s.tmp_0, "towse");
    r0 = pxsim_Array__push(s.tmp_0, "towsy");
    r0 = pxsim_Array__push(s.tmp_0, "towts");
    r0 = pxsim_Array__push(s.tmp_0, "towze");
    r0 = pxsim_Array__push(s.tmp_0, "towzy");
    r0 = pxsim_Array__push(s.tmp_0, "toxic");
    r0 = pxsim_Array__push(s.tmp_0, "toxin");
    r0 = pxsim_Array__push(s.tmp_0, "toyed");
    r0 = pxsim_Array__push(s.tmp_0, "toyer");
    r0 = pxsim_Array__push(s.tmp_0, "toyon");
    r0 = pxsim_Array__push(s.tmp_0, "toyos");
    r0 = pxsim_Array__push(s.tmp_0, "tozed");
    r0 = pxsim_Array__push(s.tmp_0, "tozes");
    r0 = pxsim_Array__push(s.tmp_0, "tozie");
    r0 = pxsim_Array__push(s.tmp_0, "trabs");
    r0 = pxsim_Array__push(s.tmp_0, "trace");
    r0 = pxsim_Array__push(s.tmp_0, "track");
    r0 = pxsim_Array__push(s.tmp_0, "tract");
    r0 = pxsim_Array__push(s.tmp_0, "trade");
    r0 = pxsim_Array__push(s.tmp_0, "trads");
    r0 = pxsim_Array__push(s.tmp_0, "trady");
    r0 = pxsim_Array__push(s.tmp_0, "traga");
    r0 = pxsim_Array__push(s.tmp_0, "tragi");
    r0 = pxsim_Array__push(s.tmp_0, "trags");
    r0 = pxsim_Array__push(s.tmp_0, "tragu");
    r0 = pxsim_Array__push(s.tmp_0, "traik");
    r0 = pxsim_Array__push(s.tmp_0, "trail");
    r0 = pxsim_Array__push(s.tmp_0, "train");
    r0 = pxsim_Array__push(s.tmp_0, "trait");
    r0 = pxsim_Array__push(s.tmp_0, "tramp");
    r0 = pxsim_Array__push(s.tmp_0, "trams");
    r0 = pxsim_Array__push(s.tmp_0, "trank");
    r0 = pxsim_Array__push(s.tmp_0, "tranq");
    r0 = pxsim_Array__push(s.tmp_0, "trans");
    r0 = pxsim_Array__push(s.tmp_0, "trant");
    r0 = pxsim_Array__push(s.tmp_0, "trape");
    r0 = pxsim_Array__push(s.tmp_0, "trapo");
    r0 = pxsim_Array__push(s.tmp_0, "traps");
    r0 = pxsim_Array__push(s.tmp_0, "trapt");
    r0 = pxsim_Array__push(s.tmp_0, "trash");
    r0 = pxsim_Array__push(s.tmp_0, "trass");
    r0 = pxsim_Array__push(s.tmp_0, "trats");
    r0 = pxsim_Array__push(s.tmp_0, "tratt");
    r0 = pxsim_Array__push(s.tmp_0, "trave");
    r0 = pxsim_Array__push(s.tmp_0, "trawl");
    r0 = pxsim_Array__push(s.tmp_0, "trayf");
    r0 = pxsim_Array__push(s.tmp_0, "trays");
    r0 = pxsim_Array__push(s.tmp_0, "tread");
    r0 = pxsim_Array__push(s.tmp_0, "treat");
    r0 = pxsim_Array__push(s.tmp_0, "treck");
    r0 = pxsim_Array__push(s.tmp_0, "treed");
    r0 = pxsim_Array__push(s.tmp_0, "treen");
    r0 = pxsim_Array__push(s.tmp_0, "trees");
    r0 = pxsim_Array__push(s.tmp_0, "trefa");
    r0 = pxsim_Array__push(s.tmp_0, "treif");
    r0 = pxsim_Array__push(s.tmp_0, "treks");
    r0 = pxsim_Array__push(s.tmp_0, "trema");
    r0 = pxsim_Array__push(s.tmp_0, "trems");
    r0 = pxsim_Array__push(s.tmp_0, "trend");
    r0 = pxsim_Array__push(s.tmp_0, "tress");
    r0 = pxsim_Array__push(s.tmp_0, "trest");
    r0 = pxsim_Array__push(s.tmp_0, "trets");
    r0 = pxsim_Array__push(s.tmp_0, "trews");
    r0 = pxsim_Array__push(s.tmp_0, "treyf");
    r0 = pxsim_Array__push(s.tmp_0, "treys");
    r0 = pxsim_Array__push(s.tmp_0, "triac");
    r0 = pxsim_Array__push(s.tmp_0, "triad");
    r0 = pxsim_Array__push(s.tmp_0, "trial");
    r0 = pxsim_Array__push(s.tmp_0, "tribe");
    r0 = pxsim_Array__push(s.tmp_0, "trice");
    r0 = pxsim_Array__push(s.tmp_0, "trick");
    r0 = pxsim_Array__push(s.tmp_0, "tride");
    r0 = pxsim_Array__push(s.tmp_0, "tried");
    r0 = pxsim_Array__push(s.tmp_0, "trier");
    r0 = pxsim_Array__push(s.tmp_0, "tries");
    r0 = pxsim_Array__push(s.tmp_0, "trifa");
    r0 = pxsim_Array__push(s.tmp_0, "triff");
    r0 = pxsim_Array__push(s.tmp_0, "trigo");
    r0 = pxsim_Array__push(s.tmp_0, "trigs");
    r0 = pxsim_Array__push(s.tmp_0, "trike");
    r0 = pxsim_Array__push(s.tmp_0, "trild");
    r0 = pxsim_Array__push(s.tmp_0, "trill");
    r0 = pxsim_Array__push(s.tmp_0, "trims");
    r0 = pxsim_Array__push(s.tmp_0, "trine");
    r0 = pxsim_Array__push(s.tmp_0, "trins");
    r0 = pxsim_Array__push(s.tmp_0, "triol");
    r0 = pxsim_Array__push(s.tmp_0, "trior");
    r0 = pxsim_Array__push(s.tmp_0, "trios");
    r0 = pxsim_Array__push(s.tmp_0, "tripe");
    r0 = pxsim_Array__push(s.tmp_0, "trips");
    r0 = pxsim_Array__push(s.tmp_0, "tripy");
    r0 = pxsim_Array__push(s.tmp_0, "trist");
    r0 = pxsim_Array__push(s.tmp_0, "trite");
    r0 = pxsim_Array__push(s.tmp_0, "troad");
    r0 = pxsim_Array__push(s.tmp_0, "troak");
    r0 = pxsim_Array__push(s.tmp_0, "troat");
    r0 = pxsim_Array__push(s.tmp_0, "trock");
    r0 = pxsim_Array__push(s.tmp_0, "trode");
    r0 = pxsim_Array__push(s.tmp_0, "trods");
    r0 = pxsim_Array__push(s.tmp_0, "trogs");
    r0 = pxsim_Array__push(s.tmp_0, "trois");
    r0 = pxsim_Array__push(s.tmp_0, "troke");
    r0 = pxsim_Array__push(s.tmp_0, "troll");
    r0 = pxsim_Array__push(s.tmp_0, "tromp");
    r0 = pxsim_Array__push(s.tmp_0, "trona");
    r0 = pxsim_Array__push(s.tmp_0, "tronc");
    r0 = pxsim_Array__push(s.tmp_0, "trone");
    r0 = pxsim_Array__push(s.tmp_0, "tronk");
    r0 = pxsim_Array__push(s.tmp_0, "trons");
    r0 = pxsim_Array__push(s.tmp_0, "troop");
    r0 = pxsim_Array__push(s.tmp_0, "trooz");
    r0 = pxsim_Array__push(s.tmp_0, "trope");
    r0 = pxsim_Array__push(s.tmp_0, "tropo");
    r0 = pxsim_Array__push(s.tmp_0, "troth");
    r0 = pxsim_Array__push(s.tmp_0, "trots");
    r0 = pxsim_Array__push(s.tmp_0, "trout");
    r0 = pxsim_Array__push(s.tmp_0, "trove");
    r0 = pxsim_Array__push(s.tmp_0, "trows");
    r0 = pxsim_Array__push(s.tmp_0, "troys");
    r0 = pxsim_Array__push(s.tmp_0, "truce");
    r0 = pxsim_Array__push(s.tmp_0, "truck");
    r0 = pxsim_Array__push(s.tmp_0, "trued");
    r0 = pxsim_Array__push(s.tmp_0, "truer");
    r0 = pxsim_Array__push(s.tmp_0, "trues");
    r0 = pxsim_Array__push(s.tmp_0, "trugo");
    r0 = pxsim_Array__push(s.tmp_0, "trugs");
    r0 = pxsim_Array__push(s.tmp_0, "trull");
    r0 = pxsim_Array__push(s.tmp_0, "truly");
    r0 = pxsim_Array__push(s.tmp_0, "trump");
    r0 = pxsim_Array__push(s.tmp_0, "trunk");
    r0 = pxsim_Array__push(s.tmp_0, "truss");
    r0 = pxsim_Array__push(s.tmp_0, "trust");
    r0 = pxsim_Array__push(s.tmp_0, "truth");
    r0 = pxsim_Array__push(s.tmp_0, "tryer");
    r0 = pxsim_Array__push(s.tmp_0, "tryke");
    r0 = pxsim_Array__push(s.tmp_0, "tryma");
    r0 = pxsim_Array__push(s.tmp_0, "tryps");
    r0 = pxsim_Array__push(s.tmp_0, "tryst");
    r0 = pxsim_Array__push(s.tmp_0, "tsade");
    r0 = pxsim_Array__push(s.tmp_0, "tsadi");
    r0 = pxsim_Array__push(s.tmp_0, "tsars");
    r0 = pxsim_Array__push(s.tmp_0, "tsked");
    r0 = pxsim_Array__push(s.tmp_0, "tsuba");
    r0 = pxsim_Array__push(s.tmp_0, "tsubo");
    r0 = pxsim_Array__push(s.tmp_0, "tuans");
    r0 = pxsim_Array__push(s.tmp_0, "tuart");
    r0 = pxsim_Array__push(s.tmp_0, "tuath");
    r0 = pxsim_Array__push(s.tmp_0, "tubae");
    r0 = pxsim_Array__push(s.tmp_0, "tubal");
    r0 = pxsim_Array__push(s.tmp_0, "tubar");
    r0 = pxsim_Array__push(s.tmp_0, "tubas");
    r0 = pxsim_Array__push(s.tmp_0, "tubby");
    r0 = pxsim_Array__push(s.tmp_0, "tubed");
    r0 = pxsim_Array__push(s.tmp_0, "tuber");
    r0 = pxsim_Array__push(s.tmp_0, "tubes");
    r0 = pxsim_Array__push(s.tmp_0, "tucks");
    r0 = pxsim_Array__push(s.tmp_0, "tufas");
    r0 = pxsim_Array__push(s.tmp_0, "tuffe");
    r0 = pxsim_Array__push(s.tmp_0, "tuffs");
    r0 = pxsim_Array__push(s.tmp_0, "tufts");
    r0 = pxsim_Array__push(s.tmp_0, "tufty");
    r0 = pxsim_Array__push(s.tmp_0, "tugra");
    r0 = pxsim_Array__push(s.tmp_0, "tuile");
    r0 = pxsim_Array__push(s.tmp_0, "tuina");
    r0 = pxsim_Array__push(s.tmp_0, "tuism");
    r0 = pxsim_Array__push(s.tmp_0, "tuktu");
    r0 = pxsim_Array__push(s.tmp_0, "tules");
    r0 = pxsim_Array__push(s.tmp_0, "tulip");
    r0 = pxsim_Array__push(s.tmp_0, "tulle");
    r0 = pxsim_Array__push(s.tmp_0, "tulpa");
    r0 = pxsim_Array__push(s.tmp_0, "tulps");
    r0 = pxsim_Array__push(s.tmp_0, "tulsi");
    r0 = pxsim_Array__push(s.tmp_0, "tumid");
    r0 = pxsim_Array__push(s.tmp_0, "tummy");
    r0 = pxsim_Array__push(s.tmp_0, "tumor");
    r0 = pxsim_Array__push(s.tmp_0, "tumps");
    r0 = pxsim_Array__push(s.tmp_0, "tumpy");
    r0 = pxsim_Array__push(s.tmp_0, "tunas");
    r0 = pxsim_Array__push(s.tmp_0, "tunds");
    r0 = pxsim_Array__push(s.tmp_0, "tuned");
    r0 = pxsim_Array__push(s.tmp_0, "tuner");
    r0 = pxsim_Array__push(s.tmp_0, "tunes");
    r0 = pxsim_Array__push(s.tmp_0, "tungs");
    r0 = pxsim_Array__push(s.tmp_0, "tunic");
    r0 = pxsim_Array__push(s.tmp_0, "tunny");
    r0 = pxsim_Array__push(s.tmp_0, "tupek");
    r0 = pxsim_Array__push(s.tmp_0, "tupik");
    r0 = pxsim_Array__push(s.tmp_0, "tuple");
    r0 = pxsim_Array__push(s.tmp_0, "tuque");
    r0 = pxsim_Array__push(s.tmp_0, "turbo");
    r0 = pxsim_Array__push(s.tmp_0, "turds");
    r0 = pxsim_Array__push(s.tmp_0, "turfs");
    r0 = pxsim_Array__push(s.tmp_0, "turfy");
    r0 = pxsim_Array__push(s.tmp_0, "turks");
    r0 = pxsim_Array__push(s.tmp_0, "turme");
    r0 = pxsim_Array__push(s.tmp_0, "turms");
    r0 = pxsim_Array__push(s.tmp_0, "turns");
    r0 = pxsim_Array__push(s.tmp_0, "turnt");
    r0 = pxsim_Array__push(s.tmp_0, "turon");
    r0 = pxsim_Array__push(s.tmp_0, "turps");
    r0 = pxsim_Array__push(s.tmp_0, "turrs");
    r0 = pxsim_Array__push(s.tmp_0, "tushy");
    r0 = pxsim_Array__push(s.tmp_0, "tusks");
    r0 = pxsim_Array__push(s.tmp_0, "tusky");
    r0 = pxsim_Array__push(s.tmp_0, "tutee");
    r0 = pxsim_Array__push(s.tmp_0, "tutes");
    r0 = pxsim_Array__push(s.tmp_0, "tutor");
    r0 = pxsim_Array__push(s.tmp_0, "tutti");
    r0 = pxsim_Array__push(s.tmp_0, "tutty");
    r0 = pxsim_Array__push(s.tmp_0, "tutus");
    r0 = pxsim_Array__push(s.tmp_0, "tuxes");
    r0 = pxsim_Array__push(s.tmp_0, "tuyer");
    r0 = pxsim_Array__push(s.tmp_0, "twaes");
    r0 = pxsim_Array__push(s.tmp_0, "twain");
    r0 = pxsim_Array__push(s.tmp_0, "twals");
    r0 = pxsim_Array__push(s.tmp_0, "twang");
    r0 = pxsim_Array__push(s.tmp_0, "twank");
    r0 = pxsim_Array__push(s.tmp_0, "twats");
    r0 = pxsim_Array__push(s.tmp_0, "tways");
    r0 = pxsim_Array__push(s.tmp_0, "tweak");
    r0 = pxsim_Array__push(s.tmp_0, "tweed");
    r0 = pxsim_Array__push(s.tmp_0, "tweel");
    r0 = pxsim_Array__push(s.tmp_0, "tween");
    r0 = pxsim_Array__push(s.tmp_0, "tweep");
    r0 = pxsim_Array__push(s.tmp_0, "tweer");
    r0 = pxsim_Array__push(s.tmp_0, "tweet");
    r0 = pxsim_Array__push(s.tmp_0, "twerk");
    r0 = pxsim_Array__push(s.tmp_0, "twerp");
    r0 = pxsim_Array__push(s.tmp_0, "twice");
    r0 = pxsim_Array__push(s.tmp_0, "twier");
    r0 = pxsim_Array__push(s.tmp_0, "twigs");
    r0 = pxsim_Array__push(s.tmp_0, "twill");
    r0 = pxsim_Array__push(s.tmp_0, "twilt");
    r0 = pxsim_Array__push(s.tmp_0, "twine");
    r0 = pxsim_Array__push(s.tmp_0, "twink");
    r0 = pxsim_Array__push(s.tmp_0, "twins");
    r0 = pxsim_Array__push(s.tmp_0, "twiny");
    r0 = pxsim_Array__push(s.tmp_0, "twire");
    r0 = pxsim_Array__push(s.tmp_0, "twirk");
    r0 = pxsim_Array__push(s.tmp_0, "twirl");
    r0 = pxsim_Array__push(s.tmp_0, "twirp");
    r0 = pxsim_Array__push(s.tmp_0, "twist");
    r0 = pxsim_Array__push(s.tmp_0, "twite");
    r0 = pxsim_Array__push(s.tmp_0, "twits");
    r0 = pxsim_Array__push(s.tmp_0, "twixt");
    r0 = pxsim_Array__push(s.tmp_0, "twocs");
    r0 = pxsim_Array__push(s.tmp_0, "twoer");
    r0 = pxsim_Array__push(s.tmp_0, "twonk");
    r0 = pxsim_Array__push(s.tmp_0, "twyer");
    r0 = pxsim_Array__push(s.tmp_0, "tyees");
    r0 = pxsim_Array__push(s.tmp_0, "tyers");
    r0 = pxsim_Array__push(s.tmp_0, "tying");
    r0 = pxsim_Array__push(s.tmp_0, "tyiyn");
    r0 = pxsim_Array__push(s.tmp_0, "tykes");
    r0 = pxsim_Array__push(s.tmp_0, "tyler");
    r0 = pxsim_Array__push(s.tmp_0, "tymps");
    r0 = pxsim_Array__push(s.tmp_0, "tynde");
    r0 = pxsim_Array__push(s.tmp_0, "tyned");
    r0 = pxsim_Array__push(s.tmp_0, "tynes");
    r0 = pxsim_Array__push(s.tmp_0, "typal");
    r0 = pxsim_Array__push(s.tmp_0, "typed");
    r0 = pxsim_Array__push(s.tmp_0, "types");
    r0 = pxsim_Array__push(s.tmp_0, "typey");
    r0 = pxsim_Array__push(s.tmp_0, "typic");
    r0 = pxsim_Array__push(s.tmp_0, "typos");
    r0 = pxsim_Array__push(s.tmp_0, "typps");
    r0 = pxsim_Array__push(s.tmp_0, "typto");
    r0 = pxsim_Array__push(s.tmp_0, "tyran");
    r0 = pxsim_Array__push(s.tmp_0, "tyred");
    r0 = pxsim_Array__push(s.tmp_0, "tyres");
    r0 = pxsim_Array__push(s.tmp_0, "tyros");
    r0 = pxsim_Array__push(s.tmp_0, "tythe");
    r0 = pxsim_Array__push(s.tmp_0, "tzars");
    r0 = pxsim_Array__push(s.tmp_0, "ubacs");
    r0 = pxsim_Array__push(s.tmp_0, "ubity");
    r0 = pxsim_Array__push(s.tmp_0, "udals");
    r0 = pxsim_Array__push(s.tmp_0, "udder");
    r0 = pxsim_Array__push(s.tmp_0, "udons");
    r0 = pxsim_Array__push(s.tmp_0, "udyog");
    r0 = pxsim_Array__push(s.tmp_0, "ugali");
    r0 = pxsim_Array__push(s.tmp_0, "ugged");
    r0 = pxsim_Array__push(s.tmp_0, "uhlan");
    r0 = pxsim_Array__push(s.tmp_0, "uhuru");
    r0 = pxsim_Array__push(s.tmp_0, "ukase");
    r0 = pxsim_Array__push(s.tmp_0, "ulama");
    r0 = pxsim_Array__push(s.tmp_0, "ulans");
    r0 = pxsim_Array__push(s.tmp_0, "ulcer");
    r0 = pxsim_Array__push(s.tmp_0, "ulema");
    r0 = pxsim_Array__push(s.tmp_0, "ulmin");
    r0 = pxsim_Array__push(s.tmp_0, "ulmos");
    r0 = pxsim_Array__push(s.tmp_0, "ulnad");
    r0 = pxsim_Array__push(s.tmp_0, "ulnae");
    r0 = pxsim_Array__push(s.tmp_0, "ulnar");
    r0 = pxsim_Array__push(s.tmp_0, "ulnas");
    r0 = pxsim_Array__push(s.tmp_0, "ulpan");
    r0 = pxsim_Array__push(s.tmp_0, "ultra");
    r0 = pxsim_Array__push(s.tmp_0, "ulvas");
    r0 = pxsim_Array__push(s.tmp_0, "ulyie");
    r0 = pxsim_Array__push(s.tmp_0, "ulzie");
    r0 = pxsim_Array__push(s.tmp_0, "umami");
    r0 = pxsim_Array__push(s.tmp_0, "umbel");
    r0 = pxsim_Array__push(s.tmp_0, "umber");
    r0 = pxsim_Array__push(s.tmp_0, "umble");
    r0 = pxsim_Array__push(s.tmp_0, "umbos");
    r0 = pxsim_Array__push(s.tmp_0, "umbra");
    r0 = pxsim_Array__push(s.tmp_0, "umbre");
    r0 = pxsim_Array__push(s.tmp_0, "umiac");
    r0 = pxsim_Array__push(s.tmp_0, "umiak");
    r0 = pxsim_Array__push(s.tmp_0, "umiaq");
    r0 = pxsim_Array__push(s.tmp_0, "ummah");
    r0 = pxsim_Array__push(s.tmp_0, "ummas");
    r0 = pxsim_Array__push(s.tmp_0, "ummed");
    r0 = pxsim_Array__push(s.tmp_0, "umped");
    r0 = pxsim_Array__push(s.tmp_0, "umphs");
    r0 = pxsim_Array__push(s.tmp_0, "umpie");
    r0 = pxsim_Array__push(s.tmp_0, "umpty");
    r0 = pxsim_Array__push(s.tmp_0, "umrah");
    r0 = pxsim_Array__push(s.tmp_0, "umras");
    r0 = pxsim_Array__push(s.tmp_0, "unagi");
    r0 = pxsim_Array__push(s.tmp_0, "unais");
    r0 = pxsim_Array__push(s.tmp_0, "unapt");
    r0 = pxsim_Array__push(s.tmp_0, "unarm");
    r0 = pxsim_Array__push(s.tmp_0, "unary");
    r0 = pxsim_Array__push(s.tmp_0, "unaus");
    r0 = pxsim_Array__push(s.tmp_0, "unbag");
    r0 = pxsim_Array__push(s.tmp_0, "unban");
    r0 = pxsim_Array__push(s.tmp_0, "unbar");
    r0 = pxsim_Array__push(s.tmp_0, "unbed");
    r0 = pxsim_Array__push(s.tmp_0, "unbid");
    r0 = pxsim_Array__push(s.tmp_0, "unbox");
    r0 = pxsim_Array__push(s.tmp_0, "uncap");
    r0 = pxsim_Array__push(s.tmp_0, "unces");
    r0 = pxsim_Array__push(s.tmp_0, "uncia");
    r0 = pxsim_Array__push(s.tmp_0, "uncle");
    r0 = pxsim_Array__push(s.tmp_0, "uncos");
    r0 = pxsim_Array__push(s.tmp_0, "uncoy");
    r0 = pxsim_Array__push(s.tmp_0, "uncus");
    r0 = pxsim_Array__push(s.tmp_0, "uncut");
    r0 = pxsim_Array__push(s.tmp_0, "undam");
    r0 = pxsim_Array__push(s.tmp_0, "undee");
    r0 = pxsim_Array__push(s.tmp_0, "under");
    r0 = pxsim_Array__push(s.tmp_0, "undid");
    r0 = pxsim_Array__push(s.tmp_0, "undos");
    r0 = pxsim_Array__push(s.tmp_0, "undue");
    r0 = pxsim_Array__push(s.tmp_0, "undug");
    r0 = pxsim_Array__push(s.tmp_0, "uneth");
    r0 = pxsim_Array__push(s.tmp_0, "unfed");
    r0 = pxsim_Array__push(s.tmp_0, "unfit");
    r0 = pxsim_Array__push(s.tmp_0, "unfix");
    r0 = pxsim_Array__push(s.tmp_0, "ungag");
    r0 = pxsim_Array__push(s.tmp_0, "unget");
    r0 = pxsim_Array__push(s.tmp_0, "ungod");
    r0 = pxsim_Array__push(s.tmp_0, "ungot");
    r0 = pxsim_Array__push(s.tmp_0, "ungum");
    r0 = pxsim_Array__push(s.tmp_0, "unhat");
    r0 = pxsim_Array__push(s.tmp_0, "unhip");
    r0 = pxsim_Array__push(s.tmp_0, "unica");
    r0 = pxsim_Array__push(s.tmp_0, "unify");
    r0 = pxsim_Array__push(s.tmp_0, "union");
    r0 = pxsim_Array__push(s.tmp_0, "unios");
    r0 = pxsim_Array__push(s.tmp_0, "unite");
    r0 = pxsim_Array__push(s.tmp_0, "units");
    r0 = pxsim_Array__push(s.tmp_0, "unity");
    r0 = pxsim_Array__push(s.tmp_0, "unjam");
    r0 = pxsim_Array__push(s.tmp_0, "unked");
    r0 = pxsim_Array__push(s.tmp_0, "unket");
    r0 = pxsim_Array__push(s.tmp_0, "unkey");
    r0 = pxsim_Array__push(s.tmp_0, "unkid");
    r0 = pxsim_Array__push(s.tmp_0, "unkut");
    r0 = pxsim_Array__push(s.tmp_0, "unlap");
    r0 = pxsim_Array__push(s.tmp_0, "unlaw");
    r0 = pxsim_Array__push(s.tmp_0, "unlay");
    r0 = pxsim_Array__push(s.tmp_0, "unled");
    r0 = pxsim_Array__push(s.tmp_0, "unleg");
    r0 = pxsim_Array__push(s.tmp_0, "unlet");
    r0 = pxsim_Array__push(s.tmp_0, "unlid");
    r0 = pxsim_Array__push(s.tmp_0, "unlit");
    r0 = pxsim_Array__push(s.tmp_0, "unmad");
    r0 = pxsim_Array__push(s.tmp_0, "unman");
    r0 = pxsim_Array__push(s.tmp_0, "unmet");
    r0 = pxsim_Array__push(s.tmp_0, "unmew");
    r0 = pxsim_Array__push(s.tmp_0, "unmix");
    r0 = pxsim_Array__push(s.tmp_0, "unode");
    r0 = pxsim_Array__push(s.tmp_0, "unold");
    r0 = pxsim_Array__push(s.tmp_0, "unown");
    r0 = pxsim_Array__push(s.tmp_0, "unpay");
    r0 = pxsim_Array__push(s.tmp_0, "unpeg");
    r0 = pxsim_Array__push(s.tmp_0, "unpen");
    r0 = pxsim_Array__push(s.tmp_0, "unpin");
    r0 = pxsim_Array__push(s.tmp_0, "unply");
    r0 = pxsim_Array__push(s.tmp_0, "unpot");
    r0 = pxsim_Array__push(s.tmp_0, "unput");
    r0 = pxsim_Array__push(s.tmp_0, "unred");
    r0 = pxsim_Array__push(s.tmp_0, "unrid");
    r0 = pxsim_Array__push(s.tmp_0, "unrig");
    r0 = pxsim_Array__push(s.tmp_0, "unrip");
    r0 = pxsim_Array__push(s.tmp_0, "unsaw");
    r0 = pxsim_Array__push(s.tmp_0, "unsay");
    r0 = pxsim_Array__push(s.tmp_0, "unsee");
    r0 = pxsim_Array__push(s.tmp_0, "unset");
    r0 = pxsim_Array__push(s.tmp_0, "unsew");
    r0 = pxsim_Array__push(s.tmp_0, "unsex");
    r0 = pxsim_Array__push(s.tmp_0, "unsod");
    r0 = pxsim_Array__push(s.tmp_0, "unsub");
    r0 = pxsim_Array__push(s.tmp_0, "untag");
    r0 = pxsim_Array__push(s.tmp_0, "untax");
    r0 = pxsim_Array__push(s.tmp_0, "untie");
    r0 = pxsim_Array__push(s.tmp_0, "until");
    r0 = pxsim_Array__push(s.tmp_0, "untin");
    r0 = pxsim_Array__push(s.tmp_0, "unwed");
    r0 = pxsim_Array__push(s.tmp_0, "unwet");
    r0 = pxsim_Array__push(s.tmp_0, "unwit");
    r0 = pxsim_Array__push(s.tmp_0, "unwon");
    r0 = pxsim_Array__push(s.tmp_0, "unzip");
    r0 = pxsim_Array__push(s.tmp_0, "upbow");
    r0 = pxsim_Array__push(s.tmp_0, "upbye");
    r0 = pxsim_Array__push(s.tmp_0, "updos");
    r0 = pxsim_Array__push(s.tmp_0, "updry");
    r0 = pxsim_Array__push(s.tmp_0, "upend");
    r0 = pxsim_Array__push(s.tmp_0, "upful");
    r0 = pxsim_Array__push(s.tmp_0, "upjet");
    r0 = pxsim_Array__push(s.tmp_0, "uplay");
    r0 = pxsim_Array__push(s.tmp_0, "upled");
    r0 = pxsim_Array__push(s.tmp_0, "uplit");
    r0 = pxsim_Array__push(s.tmp_0, "upped");
    r0 = pxsim_Array__push(s.tmp_0, "upper");
    r0 = pxsim_Array__push(s.tmp_0, "upran");
    r0 = pxsim_Array__push(s.tmp_0, "uprun");
    r0 = pxsim_Array__push(s.tmp_0, "upsee");
    r0 = pxsim_Array__push(s.tmp_0, "upset");
    r0 = pxsim_Array__push(s.tmp_0, "upsey");
    r0 = pxsim_Array__push(s.tmp_0, "uptak");
    r0 = pxsim_Array__push(s.tmp_0, "upter");
    r0 = pxsim_Array__push(s.tmp_0, "uptie");
    r0 = pxsim_Array__push(s.tmp_0, "uraei");
    r0 = pxsim_Array__push(s.tmp_0, "urali");
    r0 = pxsim_Array__push(s.tmp_0, "uraos");
    r0 = pxsim_Array__push(s.tmp_0, "urare");
    r0 = pxsim_Array__push(s.tmp_0, "urari");
    r0 = pxsim_Array__push(s.tmp_0, "urase");
    r0 = pxsim_Array__push(s.tmp_0, "urate");
    r0 = pxsim_Array__push(s.tmp_0, "urban");
    r0 = pxsim_Array__push(s.tmp_0, "urbex");
    r0 = pxsim_Array__push(s.tmp_0, "urbia");
    r0 = pxsim_Array__push(s.tmp_0, "urdee");
    r0 = pxsim_Array__push(s.tmp_0, "ureal");
    r0 = pxsim_Array__push(s.tmp_0, "ureas");
    r0 = pxsim_Array__push(s.tmp_0, "uredo");
    r0 = pxsim_Array__push(s.tmp_0, "ureic");
    r0 = pxsim_Array__push(s.tmp_0, "ureid");
    r0 = pxsim_Array__push(s.tmp_0, "urena");
    r0 = pxsim_Array__push(s.tmp_0, "urent");
    r0 = pxsim_Array__push(s.tmp_0, "urged");
    r0 = pxsim_Array__push(s.tmp_0, "urger");
    r0 = pxsim_Array__push(s.tmp_0, "urges");
    r0 = pxsim_Array__push(s.tmp_0, "urial");
    r0 = pxsim_Array__push(s.tmp_0, "urine");
    r0 = pxsim_Array__push(s.tmp_0, "urite");
    r0 = pxsim_Array__push(s.tmp_0, "urman");
    r0 = pxsim_Array__push(s.tmp_0, "urnal");
    r0 = pxsim_Array__push(s.tmp_0, "urned");
    r0 = pxsim_Array__push(s.tmp_0, "urped");
    r0 = pxsim_Array__push(s.tmp_0, "ursae");
    r0 = pxsim_Array__push(s.tmp_0, "ursid");
    r0 = pxsim_Array__push(s.tmp_0, "urson");
    r0 = pxsim_Array__push(s.tmp_0, "urubu");
    r0 = pxsim_Array__push(s.tmp_0, "urupa");
    r0 = pxsim_Array__push(s.tmp_0, "urvas");
    r0 = pxsim_Array__push(s.tmp_0, "usage");
    r0 = pxsim_Array__push(s.tmp_0, "usens");
    r0 = pxsim_Array__push(s.tmp_0, "users");
    r0 = pxsim_Array__push(s.tmp_0, "useta");
    r0 = pxsim_Array__push(s.tmp_0, "usher");
    r0 = pxsim_Array__push(s.tmp_0, "using");
    r0 = pxsim_Array__push(s.tmp_0, "usnea");
    r0 = pxsim_Array__push(s.tmp_0, "usnic");
    r0 = pxsim_Array__push(s.tmp_0, "usque");
    r0 = pxsim_Array__push(s.tmp_0, "ustad");
    r0 = pxsim_Array__push(s.tmp_0, "uster");
    r0 = pxsim_Array__push(s.tmp_0, "usual");
    r0 = pxsim_Array__push(s.tmp_0, "usure");
    r0 = pxsim_Array__push(s.tmp_0, "usurp");
    r0 = pxsim_Array__push(s.tmp_0, "usury");
    r0 = pxsim_Array__push(s.tmp_0, "uteri");
    r0 = pxsim_Array__push(s.tmp_0, "utero");
    r0 = pxsim_Array__push(s.tmp_0, "utile");
    r0 = pxsim_Array__push(s.tmp_0, "utter");
    r0 = pxsim_Array__push(s.tmp_0, "uveal");
    r0 = pxsim_Array__push(s.tmp_0, "uveas");
    r0 = pxsim_Array__push(s.tmp_0, "uvula");
    r0 = pxsim_Array__push(s.tmp_0, "vacas");
    r0 = pxsim_Array__push(s.tmp_0, "vacay");
    r0 = pxsim_Array__push(s.tmp_0, "vacua");
    r0 = pxsim_Array__push(s.tmp_0, "vacui");
    r0 = pxsim_Array__push(s.tmp_0, "vacuo");
    r0 = pxsim_Array__push(s.tmp_0, "vadas");
    r0 = pxsim_Array__push(s.tmp_0, "vaded");
    r0 = pxsim_Array__push(s.tmp_0, "vades");
    r0 = pxsim_Array__push(s.tmp_0, "vadge");
    r0 = pxsim_Array__push(s.tmp_0, "vagal");
    r0 = pxsim_Array__push(s.tmp_0, "vague");
    r0 = pxsim_Array__push(s.tmp_0, "vagus");
    r0 = pxsim_Array__push(s.tmp_0, "vaids");
    r0 = pxsim_Array__push(s.tmp_0, "vails");
    r0 = pxsim_Array__push(s.tmp_0, "vaire");
    r0 = pxsim_Array__push(s.tmp_0, "vairs");
    r0 = pxsim_Array__push(s.tmp_0, "vairy");
    r0 = pxsim_Array__push(s.tmp_0, "vajra");
    r0 = pxsim_Array__push(s.tmp_0, "vakas");
    r0 = pxsim_Array__push(s.tmp_0, "vakil");
    r0 = pxsim_Array__push(s.tmp_0, "vales");
    r0 = pxsim_Array__push(s.tmp_0, "valet");
    r0 = pxsim_Array__push(s.tmp_0, "valid");
    r0 = pxsim_Array__push(s.tmp_0, "valis");
    r0 = pxsim_Array__push(s.tmp_0, "valli");
    r0 = pxsim_Array__push(s.tmp_0, "valor");
    r0 = pxsim_Array__push(s.tmp_0, "valse");
    r0 = pxsim_Array__push(s.tmp_0, "value");
    r0 = pxsim_Array__push(s.tmp_0, "valve");
    r0 = pxsim_Array__push(s.tmp_0, "vamps");
    r0 = pxsim_Array__push(s.tmp_0, "vampy");
    r0 = pxsim_Array__push(s.tmp_0, "vanda");
    r0 = pxsim_Array__push(s.tmp_0, "vaned");
    r0 = pxsim_Array__push(s.tmp_0, "vanes");
    r0 = pxsim_Array__push(s.tmp_0, "vanga");
    r0 = pxsim_Array__push(s.tmp_0, "vangs");
    r0 = pxsim_Array__push(s.tmp_0, "vants");
    r0 = pxsim_Array__push(s.tmp_0, "vaped");
    r0 = pxsim_Array__push(s.tmp_0, "vaper");
    r0 = pxsim_Array__push(s.tmp_0, "vapes");
    r0 = pxsim_Array__push(s.tmp_0, "vapid");
    r0 = pxsim_Array__push(s.tmp_0, "vapor");
    r0 = pxsim_Array__push(s.tmp_0, "varan");
    r0 = pxsim_Array__push(s.tmp_0, "varas");
    r0 = pxsim_Array__push(s.tmp_0, "varda");
    r0 = pxsim_Array__push(s.tmp_0, "vardo");
    r0 = pxsim_Array__push(s.tmp_0, "vardy");
    r0 = pxsim_Array__push(s.tmp_0, "varec");
    r0 = pxsim_Array__push(s.tmp_0, "vares");
    r0 = pxsim_Array__push(s.tmp_0, "varia");
    r0 = pxsim_Array__push(s.tmp_0, "varix");
    r0 = pxsim_Array__push(s.tmp_0, "varna");
    r0 = pxsim_Array__push(s.tmp_0, "varus");
    r0 = pxsim_Array__push(s.tmp_0, "varve");
    r0 = pxsim_Array__push(s.tmp_0, "vasal");
    r0 = pxsim_Array__push(s.tmp_0, "vases");
    r0 = pxsim_Array__push(s.tmp_0, "vasts");
    r0 = pxsim_Array__push(s.tmp_0, "vasty");
    r0 = pxsim_Array__push(s.tmp_0, "vatas");
    r0 = pxsim_Array__push(s.tmp_0, "vatha");
    r0 = pxsim_Array__push(s.tmp_0, "vatic");
    r0 = pxsim_Array__push(s.tmp_0, "vatje");
    r0 = pxsim_Array__push(s.tmp_0, "vatos");
    r0 = pxsim_Array__push(s.tmp_0, "vatus");
    r0 = pxsim_Array__push(s.tmp_0, "vauch");
    r0 = pxsim_Array__push(s.tmp_0, "vault");
    r0 = pxsim_Array__push(s.tmp_0, "vaunt");
    r0 = pxsim_Array__push(s.tmp_0, "vaute");
    r0 = pxsim_Array__push(s.tmp_0, "vauts");
    r0 = pxsim_Array__push(s.tmp_0, "vawte");
    r0 = pxsim_Array__push(s.tmp_0, "vaxes");
    r0 = pxsim_Array__push(s.tmp_0, "veale");
    r0 = pxsim_Array__push(s.tmp_0, "veals");
    r0 = pxsim_Array__push(s.tmp_0, "vealy");
    r0 = pxsim_Array__push(s.tmp_0, "veena");
    r0 = pxsim_Array__push(s.tmp_0, "veeps");
    r0 = pxsim_Array__push(s.tmp_0, "veers");
    r0 = pxsim_Array__push(s.tmp_0, "veery");
    r0 = pxsim_Array__push(s.tmp_0, "vegan");
    r0 = pxsim_Array__push(s.tmp_0, "vegas");
    r0 = pxsim_Array__push(s.tmp_0, "veges");
    r0 = pxsim_Array__push(s.tmp_0, "veggo");
    r0 = pxsim_Array__push(s.tmp_0, "vegie");
    r0 = pxsim_Array__push(s.tmp_0, "vegos");
    r0 = pxsim_Array__push(s.tmp_0, "vehme");
    r0 = pxsim_Array__push(s.tmp_0, "veils");
    r0 = pxsim_Array__push(s.tmp_0, "veily");
    r0 = pxsim_Array__push(s.tmp_0, "veins");
    r0 = pxsim_Array__push(s.tmp_0, "veiny");
    r0 = pxsim_Array__push(s.tmp_0, "velar");
    r0 = pxsim_Array__push(s.tmp_0, "velds");
    r0 = pxsim_Array__push(s.tmp_0, "veldt");
    r0 = pxsim_Array__push(s.tmp_0, "veles");
    r0 = pxsim_Array__push(s.tmp_0, "vells");
    r0 = pxsim_Array__push(s.tmp_0, "velum");
    r0 = pxsim_Array__push(s.tmp_0, "venae");
    r0 = pxsim_Array__push(s.tmp_0, "venal");
    r0 = pxsim_Array__push(s.tmp_0, "venas");
    r0 = pxsim_Array__push(s.tmp_0, "vends");
    r0 = pxsim_Array__push(s.tmp_0, "vendu");
    r0 = pxsim_Array__push(s.tmp_0, "veney");
    r0 = pxsim_Array__push(s.tmp_0, "venge");
    r0 = pxsim_Array__push(s.tmp_0, "venin");
    r0 = pxsim_Array__push(s.tmp_0, "venom");
    r0 = pxsim_Array__push(s.tmp_0, "venti");
    r0 = pxsim_Array__push(s.tmp_0, "vents");
    r0 = pxsim_Array__push(s.tmp_0, "venue");
    r0 = pxsim_Array__push(s.tmp_0, "venus");
    r0 = pxsim_Array__push(s.tmp_0, "verba");
    r0 = pxsim_Array__push(s.tmp_0, "verbs");
    r0 = pxsim_Array__push(s.tmp_0, "verde");
    r0 = pxsim_Array__push(s.tmp_0, "verge");
    r0 = pxsim_Array__push(s.tmp_0, "verra");
    r0 = pxsim_Array__push(s.tmp_0, "verre");
    r0 = pxsim_Array__push(s.tmp_0, "verry");
    r0 = pxsim_Array__push(s.tmp_0, "versa");
    r0 = pxsim_Array__push(s.tmp_0, "verse");
    r0 = pxsim_Array__push(s.tmp_0, "verso");
    r0 = pxsim_Array__push(s.tmp_0, "verst");
    r0 = pxsim_Array__push(s.tmp_0, "verte");
    r0 = pxsim_Array__push(s.tmp_0, "verts");
    r0 = pxsim_Array__push(s.tmp_0, "vertu");
    r0 = pxsim_Array__push(s.tmp_0, "verve");
    r0 = pxsim_Array__push(s.tmp_0, "vespa");
    r0 = pxsim_Array__push(s.tmp_0, "vesta");
    r0 = pxsim_Array__push(s.tmp_0, "vests");
    r0 = pxsim_Array__push(s.tmp_0, "vetch");
    r0 = pxsim_Array__push(s.tmp_0, "veuve");
    r0 = pxsim_Array__push(s.tmp_0, "veves");
    r0 = pxsim_Array__push(s.tmp_0, "vexed");
    r0 = pxsim_Array__push(s.tmp_0, "vexer");
    r0 = pxsim_Array__push(s.tmp_0, "vexes");
    r0 = pxsim_Array__push(s.tmp_0, "vexil");
    r0 = pxsim_Array__push(s.tmp_0, "vezir");
    r0 = pxsim_Array__push(s.tmp_0, "vials");
    r0 = pxsim_Array__push(s.tmp_0, "viand");
    r0 = pxsim_Array__push(s.tmp_0, "vibed");
    r0 = pxsim_Array__push(s.tmp_0, "vibes");
    r0 = pxsim_Array__push(s.tmp_0, "vibex");
    r0 = pxsim_Array__push(s.tmp_0, "vibey");
    r0 = pxsim_Array__push(s.tmp_0, "vicar");
    r0 = pxsim_Array__push(s.tmp_0, "viced");
    r0 = pxsim_Array__push(s.tmp_0, "vices");
    r0 = pxsim_Array__push(s.tmp_0, "vichy");
    r0 = pxsim_Array__push(s.tmp_0, "vicus");
    r0 = pxsim_Array__push(s.tmp_0, "video");
    r0 = pxsim_Array__push(s.tmp_0, "viers");
    r0 = pxsim_Array__push(s.tmp_0, "vieux");
    r0 = pxsim_Array__push(s.tmp_0, "views");
    r0 = pxsim_Array__push(s.tmp_0, "viewy");
    r0 = pxsim_Array__push(s.tmp_0, "vifda");
    r0 = pxsim_Array__push(s.tmp_0, "viffs");
    r0 = pxsim_Array__push(s.tmp_0, "vigas");
    r0 = pxsim_Array__push(s.tmp_0, "vigia");
    r0 = pxsim_Array__push(s.tmp_0, "vigil");
    r0 = pxsim_Array__push(s.tmp_0, "vigor");
    r0 = pxsim_Array__push(s.tmp_0, "vilde");
    r0 = pxsim_Array__push(s.tmp_0, "viler");
    r0 = pxsim_Array__push(s.tmp_0, "villa");
    r0 = pxsim_Array__push(s.tmp_0, "ville");
    r0 = pxsim_Array__push(s.tmp_0, "villi");
    r0 = pxsim_Array__push(s.tmp_0, "vills");
    r0 = pxsim_Array__push(s.tmp_0, "vimen");
    r0 = pxsim_Array__push(s.tmp_0, "vinal");
    r0 = pxsim_Array__push(s.tmp_0, "vinas");
    r0 = pxsim_Array__push(s.tmp_0, "vinca");
    r0 = pxsim_Array__push(s.tmp_0, "vined");
    r0 = pxsim_Array__push(s.tmp_0, "viner");
    r0 = pxsim_Array__push(s.tmp_0, "vines");
    r0 = pxsim_Array__push(s.tmp_0, "vinew");
    r0 = pxsim_Array__push(s.tmp_0, "vinho");
    r0 = pxsim_Array__push(s.tmp_0, "vinic");
    r0 = pxsim_Array__push(s.tmp_0, "vinny");
    r0 = pxsim_Array__push(s.tmp_0, "vinos");
    r0 = pxsim_Array__push(s.tmp_0, "vints");
    r0 = pxsim_Array__push(s.tmp_0, "vinyl");
    r0 = pxsim_Array__push(s.tmp_0, "viola");
    r0 = pxsim_Array__push(s.tmp_0, "viold");
    r0 = pxsim_Array__push(s.tmp_0, "viols");
    r0 = pxsim_Array__push(s.tmp_0, "viper");
    r0 = pxsim_Array__push(s.tmp_0, "viral");
    r0 = pxsim_Array__push(s.tmp_0, "vired");
    r0 = pxsim_Array__push(s.tmp_0, "vireo");
    r0 = pxsim_Array__push(s.tmp_0, "vires");
    r0 = pxsim_Array__push(s.tmp_0, "virga");
    r0 = pxsim_Array__push(s.tmp_0, "virge");
    r0 = pxsim_Array__push(s.tmp_0, "virgo");
    r0 = pxsim_Array__push(s.tmp_0, "virid");
    r0 = pxsim_Array__push(s.tmp_0, "virls");
    r0 = pxsim_Array__push(s.tmp_0, "virtu");
    r0 = pxsim_Array__push(s.tmp_0, "virus");
    r0 = pxsim_Array__push(s.tmp_0, "visas");
    r0 = pxsim_Array__push(s.tmp_0, "vised");
    r0 = pxsim_Array__push(s.tmp_0, "vises");
    r0 = pxsim_Array__push(s.tmp_0, "visie");
    r0 = pxsim_Array__push(s.tmp_0, "visit");
    r0 = pxsim_Array__push(s.tmp_0, "visna");
    r0 = pxsim_Array__push(s.tmp_0, "visne");
    r0 = pxsim_Array__push(s.tmp_0, "vison");
    r0 = pxsim_Array__push(s.tmp_0, "visor");
    r0 = pxsim_Array__push(s.tmp_0, "vista");
    r0 = pxsim_Array__push(s.tmp_0, "visto");
    r0 = pxsim_Array__push(s.tmp_0, "vitae");
    r0 = pxsim_Array__push(s.tmp_0, "vital");
    r0 = pxsim_Array__push(s.tmp_0, "vitas");
    r0 = pxsim_Array__push(s.tmp_0, "vitex");
    r0 = pxsim_Array__push(s.tmp_0, "vitro");
    r0 = pxsim_Array__push(s.tmp_0, "vitta");
    r0 = pxsim_Array__push(s.tmp_0, "vivas");
    r0 = pxsim_Array__push(s.tmp_0, "vivat");
    r0 = pxsim_Array__push(s.tmp_0, "vivda");
    r0 = pxsim_Array__push(s.tmp_0, "viver");
    r0 = pxsim_Array__push(s.tmp_0, "vives");
    r0 = pxsim_Array__push(s.tmp_0, "vivid");
    r0 = pxsim_Array__push(s.tmp_0, "vivos");
    r0 = pxsim_Array__push(s.tmp_0, "vivre");
    r0 = pxsim_Array__push(s.tmp_0, "vixen");
    r0 = pxsim_Array__push(s.tmp_0, "vizir");
    r0 = pxsim_Array__push(s.tmp_0, "vizor");
    r0 = pxsim_Array__push(s.tmp_0, "vlast");
    r0 = pxsim_Array__push(s.tmp_0, "vleis");
    r0 = pxsim_Array__push(s.tmp_0, "vlies");
    r0 = pxsim_Array__push(s.tmp_0, "vlogs");
    r0 = pxsim_Array__push(s.tmp_0, "voars");
    r0 = pxsim_Array__push(s.tmp_0, "vobla");
    r0 = pxsim_Array__push(s.tmp_0, "vocab");
    r0 = pxsim_Array__push(s.tmp_0, "vocal");
    r0 = pxsim_Array__push(s.tmp_0, "voces");
    r0 = pxsim_Array__push(s.tmp_0, "voddy");
    r0 = pxsim_Array__push(s.tmp_0, "vodka");
    r0 = pxsim_Array__push(s.tmp_0, "vodou");
    r0 = pxsim_Array__push(s.tmp_0, "vodun");
    r0 = pxsim_Array__push(s.tmp_0, "voema");
    r0 = pxsim_Array__push(s.tmp_0, "vogie");
    r0 = pxsim_Array__push(s.tmp_0, "vogue");
    r0 = pxsim_Array__push(s.tmp_0, "voice");
    r0 = pxsim_Array__push(s.tmp_0, "voici");
    r0 = pxsim_Array__push(s.tmp_0, "voids");
    r0 = pxsim_Array__push(s.tmp_0, "voila");
    r0 = pxsim_Array__push(s.tmp_0, "voile");
    r0 = pxsim_Array__push(s.tmp_0, "voips");
    r0 = pxsim_Array__push(s.tmp_0, "volae");
    r0 = pxsim_Array__push(s.tmp_0, "volar");
    r0 = pxsim_Array__push(s.tmp_0, "voled");
    r0 = pxsim_Array__push(s.tmp_0, "voles");
    r0 = pxsim_Array__push(s.tmp_0, "volet");
    r0 = pxsim_Array__push(s.tmp_0, "volke");
    r0 = pxsim_Array__push(s.tmp_0, "volks");
    r0 = pxsim_Array__push(s.tmp_0, "volta");
    r0 = pxsim_Array__push(s.tmp_0, "volte");
    r0 = pxsim_Array__push(s.tmp_0, "volti");
    r0 = pxsim_Array__push(s.tmp_0, "volts");
    r0 = pxsim_Array__push(s.tmp_0, "volva");
    r0 = pxsim_Array__push(s.tmp_0, "volve");
    r0 = pxsim_Array__push(s.tmp_0, "vomer");
    r0 = pxsim_Array__push(s.tmp_0, "vomit");
    r0 = pxsim_Array__push(s.tmp_0, "voted");
    r0 = pxsim_Array__push(s.tmp_0, "voter");
    r0 = pxsim_Array__push(s.tmp_0, "votes");
    r0 = pxsim_Array__push(s.tmp_0, "vouch");
    r0 = pxsim_Array__push(s.tmp_0, "vouge");
    r0 = pxsim_Array__push(s.tmp_0, "voulu");
    r0 = pxsim_Array__push(s.tmp_0, "vowed");
    r0 = pxsim_Array__push(s.tmp_0, "vowel");
    r0 = pxsim_Array__push(s.tmp_0, "vower");
    r0 = pxsim_Array__push(s.tmp_0, "voxel");
    r0 = pxsim_Array__push(s.tmp_0, "voxes");
    r0 = pxsim_Array__push(s.tmp_0, "vozhd");
    r0 = pxsim_Array__push(s.tmp_0, "vraic");
    r0 = pxsim_Array__push(s.tmp_0, "vrils");
    r0 = pxsim_Array__push(s.tmp_0, "vroom");
    r0 = pxsim_Array__push(s.tmp_0, "vrous");
    r0 = pxsim_Array__push(s.tmp_0, "vrouw");
    r0 = pxsim_Array__push(s.tmp_0, "vrows");
    r0 = pxsim_Array__push(s.tmp_0, "vuggs");
    r0 = pxsim_Array__push(s.tmp_0, "vuggy");
    r0 = pxsim_Array__push(s.tmp_0, "vughs");
    r0 = pxsim_Array__push(s.tmp_0, "vughy");
    r0 = pxsim_Array__push(s.tmp_0, "vulgo");
    r0 = pxsim_Array__push(s.tmp_0, "vulns");
    r0 = pxsim_Array__push(s.tmp_0, "vulva");
    r0 = pxsim_Array__push(s.tmp_0, "vutty");
    r0 = pxsim_Array__push(s.tmp_0, "vygie");
    r0 = pxsim_Array__push(s.tmp_0, "vying");
    r0 = pxsim_Array__push(s.tmp_0, "waacs");
    r0 = pxsim_Array__push(s.tmp_0, "wacke");
    r0 = pxsim_Array__push(s.tmp_0, "wacko");
    r0 = pxsim_Array__push(s.tmp_0, "wacks");
    r0 = pxsim_Array__push(s.tmp_0, "wacky");
    r0 = pxsim_Array__push(s.tmp_0, "wadas");
    r0 = pxsim_Array__push(s.tmp_0, "wadds");
    r0 = pxsim_Array__push(s.tmp_0, "waddy");
    r0 = pxsim_Array__push(s.tmp_0, "waded");
    r0 = pxsim_Array__push(s.tmp_0, "wader");
    r0 = pxsim_Array__push(s.tmp_0, "wades");
    r0 = pxsim_Array__push(s.tmp_0, "wadge");
    r0 = pxsim_Array__push(s.tmp_0, "wadis");
    r0 = pxsim_Array__push(s.tmp_0, "wadts");
    r0 = pxsim_Array__push(s.tmp_0, "wafer");
    r0 = pxsim_Array__push(s.tmp_0, "waffs");
    r0 = pxsim_Array__push(s.tmp_0, "wafts");
    r0 = pxsim_Array__push(s.tmp_0, "waged");
    r0 = pxsim_Array__push(s.tmp_0, "wager");
    r0 = pxsim_Array__push(s.tmp_0, "wages");
    r0 = pxsim_Array__push(s.tmp_0, "wagga");
    r0 = pxsim_Array__push(s.tmp_0, "wagon");
    r0 = pxsim_Array__push(s.tmp_0, "wagyu");
    r0 = pxsim_Array__push(s.tmp_0, "wahay");
    r0 = pxsim_Array__push(s.tmp_0, "wahey");
    r0 = pxsim_Array__push(s.tmp_0, "wahoo");
    r0 = pxsim_Array__push(s.tmp_0, "waide");
    r0 = pxsim_Array__push(s.tmp_0, "waifs");
    r0 = pxsim_Array__push(s.tmp_0, "waift");
    r0 = pxsim_Array__push(s.tmp_0, "wails");
    r0 = pxsim_Array__push(s.tmp_0, "wains");
    r0 = pxsim_Array__push(s.tmp_0, "wairs");
    r0 = pxsim_Array__push(s.tmp_0, "waist");
    r0 = pxsim_Array__push(s.tmp_0, "waite");
    r0 = pxsim_Array__push(s.tmp_0, "waits");
    r0 = pxsim_Array__push(s.tmp_0, "waive");
    r0 = pxsim_Array__push(s.tmp_0, "wakas");
    r0 = pxsim_Array__push(s.tmp_0, "waked");
    r0 = pxsim_Array__push(s.tmp_0, "waken");
    r0 = pxsim_Array__push(s.tmp_0, "waker");
    r0 = pxsim_Array__push(s.tmp_0, "wakes");
    r0 = pxsim_Array__push(s.tmp_0, "wakfs");
    r0 = pxsim_Array__push(s.tmp_0, "waldo");
    r0 = pxsim_Array__push(s.tmp_0, "walds");
    r0 = pxsim_Array__push(s.tmp_0, "waled");
    r0 = pxsim_Array__push(s.tmp_0, "waler");
    r0 = pxsim_Array__push(s.tmp_0, "wales");
    r0 = pxsim_Array__push(s.tmp_0, "walie");
    r0 = pxsim_Array__push(s.tmp_0, "walis");
    r0 = pxsim_Array__push(s.tmp_0, "walks");
    r0 = pxsim_Array__push(s.tmp_0, "walla");
    r0 = pxsim_Array__push(s.tmp_0, "walls");
    r0 = pxsim_Array__push(s.tmp_0, "wally");
    r0 = pxsim_Array__push(s.tmp_0, "walty");
    r0 = pxsim_Array__push(s.tmp_0, "waltz");
    r0 = pxsim_Array__push(s.tmp_0, "wamed");
    r0 = pxsim_Array__push(s.tmp_0, "wames");
    r0 = pxsim_Array__push(s.tmp_0, "wamus");
    r0 = pxsim_Array__push(s.tmp_0, "wands");
    r0 = pxsim_Array__push(s.tmp_0, "waned");
    r0 = pxsim_Array__push(s.tmp_0, "wanes");
    r0 = pxsim_Array__push(s.tmp_0, "waney");
    r0 = pxsim_Array__push(s.tmp_0, "wangs");
    r0 = pxsim_Array__push(s.tmp_0, "wanks");
    r0 = pxsim_Array__push(s.tmp_0, "wanky");
    r0 = pxsim_Array__push(s.tmp_0, "wanle");
    r0 = pxsim_Array__push(s.tmp_0, "wanly");
    r0 = pxsim_Array__push(s.tmp_0, "wanna");
    r0 = pxsim_Array__push(s.tmp_0, "wanta");
    r0 = pxsim_Array__push(s.tmp_0, "wants");
    r0 = pxsim_Array__push(s.tmp_0, "wanty");
    r0 = pxsim_Array__push(s.tmp_0, "wanze");
    r0 = pxsim_Array__push(s.tmp_0, "waqfs");
    r0 = pxsim_Array__push(s.tmp_0, "warbs");
    r0 = pxsim_Array__push(s.tmp_0, "warby");
    r0 = pxsim_Array__push(s.tmp_0, "wards");
    r0 = pxsim_Array__push(s.tmp_0, "wared");
    r0 = pxsim_Array__push(s.tmp_0, "wares");
    r0 = pxsim_Array__push(s.tmp_0, "warez");
    r0 = pxsim_Array__push(s.tmp_0, "warks");
    r0 = pxsim_Array__push(s.tmp_0, "warms");
    r0 = pxsim_Array__push(s.tmp_0, "warns");
    r0 = pxsim_Array__push(s.tmp_0, "warps");
    r0 = pxsim_Array__push(s.tmp_0, "warre");
    r0 = pxsim_Array__push(s.tmp_0, "warst");
    r0 = pxsim_Array__push(s.tmp_0, "warts");
    r0 = pxsim_Array__push(s.tmp_0, "warty");
    r0 = pxsim_Array__push(s.tmp_0, "wases");
    r0 = pxsim_Array__push(s.tmp_0, "washi");
    r0 = pxsim_Array__push(s.tmp_0, "washy");
    r0 = pxsim_Array__push(s.tmp_0, "wasms");
    r0 = pxsim_Array__push(s.tmp_0, "wasps");
    r0 = pxsim_Array__push(s.tmp_0, "waspy");
    r0 = pxsim_Array__push(s.tmp_0, "waste");
    r0 = pxsim_Array__push(s.tmp_0, "wasts");
    r0 = pxsim_Array__push(s.tmp_0, "watap");
    r0 = pxsim_Array__push(s.tmp_0, "watch");
    r0 = pxsim_Array__push(s.tmp_0, "water");
    r0 = pxsim_Array__push(s.tmp_0, "watts");
    r0 = pxsim_Array__push(s.tmp_0, "wauff");
    r0 = pxsim_Array__push(s.tmp_0, "waugh");
    r0 = pxsim_Array__push(s.tmp_0, "wauks");
    r0 = pxsim_Array__push(s.tmp_0, "waulk");
    r0 = pxsim_Array__push(s.tmp_0, "wauls");
    r0 = pxsim_Array__push(s.tmp_0, "waurs");
    r0 = pxsim_Array__push(s.tmp_0, "waved");
    r0 = pxsim_Array__push(s.tmp_0, "waver");
    r0 = pxsim_Array__push(s.tmp_0, "waves");
    r0 = pxsim_Array__push(s.tmp_0, "wavey");
    r0 = pxsim_Array__push(s.tmp_0, "wawas");
    r0 = pxsim_Array__push(s.tmp_0, "wawes");
    r0 = pxsim_Array__push(s.tmp_0, "wawls");
    r0 = pxsim_Array__push(s.tmp_0, "waxed");
    r0 = pxsim_Array__push(s.tmp_0, "waxen");
    r0 = pxsim_Array__push(s.tmp_0, "waxer");
    r0 = pxsim_Array__push(s.tmp_0, "waxes");
    r0 = pxsim_Array__push(s.tmp_0, "wayed");
    r0 = pxsim_Array__push(s.tmp_0, "wazir");
    r0 = pxsim_Array__push(s.tmp_0, "wazoo");
    r0 = pxsim_Array__push(s.tmp_0, "weald");
    r0 = pxsim_Array__push(s.tmp_0, "weals");
    r0 = pxsim_Array__push(s.tmp_0, "weamb");
    r0 = pxsim_Array__push(s.tmp_0, "weans");
    r0 = pxsim_Array__push(s.tmp_0, "wears");
    r0 = pxsim_Array__push(s.tmp_0, "weary");
    r0 = pxsim_Array__push(s.tmp_0, "weave");
    r0 = pxsim_Array__push(s.tmp_0, "webby");
    r0 = pxsim_Array__push(s.tmp_0, "weber");
    r0 = pxsim_Array__push(s.tmp_0, "wecht");
    r0 = pxsim_Array__push(s.tmp_0, "wedel");
    r0 = pxsim_Array__push(s.tmp_0, "wedge");
    r0 = pxsim_Array__push(s.tmp_0, "wedgy");
    r0 = pxsim_Array__push(s.tmp_0, "weeds");
    r0 = pxsim_Array__push(s.tmp_0, "weedy");
    r0 = pxsim_Array__push(s.tmp_0, "weeis");
    r0 = pxsim_Array__push(s.tmp_0, "weeke");
    r0 = pxsim_Array__push(s.tmp_0, "weeks");
    r0 = pxsim_Array__push(s.tmp_0, "weels");
    r0 = pxsim_Array__push(s.tmp_0, "weems");
    r0 = pxsim_Array__push(s.tmp_0, "weens");
    r0 = pxsim_Array__push(s.tmp_0, "weeny");
    r0 = pxsim_Array__push(s.tmp_0, "weeps");
    r0 = pxsim_Array__push(s.tmp_0, "weepy");
    r0 = pxsim_Array__push(s.tmp_0, "weest");
    r0 = pxsim_Array__push(s.tmp_0, "weete");
    r0 = pxsim_Array__push(s.tmp_0, "weets");
    r0 = pxsim_Array__push(s.tmp_0, "wefte");
    r0 = pxsim_Array__push(s.tmp_0, "wefts");
    r0 = pxsim_Array__push(s.tmp_0, "weids");
    r0 = pxsim_Array__push(s.tmp_0, "weigh");
    r0 = pxsim_Array__push(s.tmp_0, "weils");
    r0 = pxsim_Array__push(s.tmp_0, "weird");
    r0 = pxsim_Array__push(s.tmp_0, "weirs");
    r0 = pxsim_Array__push(s.tmp_0, "weise");
    r0 = pxsim_Array__push(s.tmp_0, "weize");
    r0 = pxsim_Array__push(s.tmp_0, "wekas");
    r0 = pxsim_Array__push(s.tmp_0, "welch");
    r0 = pxsim_Array__push(s.tmp_0, "welds");
    r0 = pxsim_Array__push(s.tmp_0, "welke");
    r0 = pxsim_Array__push(s.tmp_0, "welks");
    r0 = pxsim_Array__push(s.tmp_0, "welkt");
    r0 = pxsim_Array__push(s.tmp_0, "wells");
    r0 = pxsim_Array__push(s.tmp_0, "welly");
    r0 = pxsim_Array__push(s.tmp_0, "welsh");
    r0 = pxsim_Array__push(s.tmp_0, "welts");
    r0 = pxsim_Array__push(s.tmp_0, "wembs");
    r0 = pxsim_Array__push(s.tmp_0, "wench");
    r0 = pxsim_Array__push(s.tmp_0, "wends");
    r0 = pxsim_Array__push(s.tmp_0, "wenge");
    r0 = pxsim_Array__push(s.tmp_0, "wenny");
    r0 = pxsim_Array__push(s.tmp_0, "wents");
    r0 = pxsim_Array__push(s.tmp_0, "werfs");
    r0 = pxsim_Array__push(s.tmp_0, "weros");
    r0 = pxsim_Array__push(s.tmp_0, "wersh");
    r0 = pxsim_Array__push(s.tmp_0, "wests");
    r0 = pxsim_Array__push(s.tmp_0, "wetas");
    r0 = pxsim_Array__push(s.tmp_0, "wetly");
    r0 = pxsim_Array__push(s.tmp_0, "wexed");
    r0 = pxsim_Array__push(s.tmp_0, "wexes");
    r0 = pxsim_Array__push(s.tmp_0, "whack");
    r0 = pxsim_Array__push(s.tmp_0, "whale");
    r0 = pxsim_Array__push(s.tmp_0, "whamo");
    r0 = pxsim_Array__push(s.tmp_0, "whams");
    r0 = pxsim_Array__push(s.tmp_0, "whang");
    r0 = pxsim_Array__push(s.tmp_0, "whaps");
    r0 = pxsim_Array__push(s.tmp_0, "whare");
    r0 = pxsim_Array__push(s.tmp_0, "wharf");
    r0 = pxsim_Array__push(s.tmp_0, "whata");
    r0 = pxsim_Array__push(s.tmp_0, "whats");
    r0 = pxsim_Array__push(s.tmp_0, "whaup");
    r0 = pxsim_Array__push(s.tmp_0, "whaur");
    r0 = pxsim_Array__push(s.tmp_0, "wheal");
    r0 = pxsim_Array__push(s.tmp_0, "whear");
    r0 = pxsim_Array__push(s.tmp_0, "wheat");
    r0 = pxsim_Array__push(s.tmp_0, "wheek");
    r0 = pxsim_Array__push(s.tmp_0, "wheel");
    r0 = pxsim_Array__push(s.tmp_0, "wheen");
    r0 = pxsim_Array__push(s.tmp_0, "wheep");
    r0 = pxsim_Array__push(s.tmp_0, "wheft");
    r0 = pxsim_Array__push(s.tmp_0, "whelk");
    r0 = pxsim_Array__push(s.tmp_0, "whelm");
    r0 = pxsim_Array__push(s.tmp_0, "whelp");
    r0 = pxsim_Array__push(s.tmp_0, "whens");
    r0 = pxsim_Array__push(s.tmp_0, "where");
    r0 = pxsim_Array__push(s.tmp_0, "whets");
    r0 = pxsim_Array__push(s.tmp_0, "whews");
    r0 = pxsim_Array__push(s.tmp_0, "wheys");
    r0 = pxsim_Array__push(s.tmp_0, "which");
    r0 = pxsim_Array__push(s.tmp_0, "whids");
    r0 = pxsim_Array__push(s.tmp_0, "whies");
    r0 = pxsim_Array__push(s.tmp_0, "whiff");
    r0 = pxsim_Array__push(s.tmp_0, "whift");
    r0 = pxsim_Array__push(s.tmp_0, "whigs");
    r0 = pxsim_Array__push(s.tmp_0, "while");
    r0 = pxsim_Array__push(s.tmp_0, "whilk");
    r0 = pxsim_Array__push(s.tmp_0, "whims");
    r0 = pxsim_Array__push(s.tmp_0, "whine");
    r0 = pxsim_Array__push(s.tmp_0, "whins");
    r0 = pxsim_Array__push(s.tmp_0, "whiny");
    r0 = pxsim_Array__push(s.tmp_0, "whios");
    r0 = pxsim_Array__push(s.tmp_0, "whips");
    r0 = pxsim_Array__push(s.tmp_0, "whipt");
    r0 = pxsim_Array__push(s.tmp_0, "whirl");
    r0 = pxsim_Array__push(s.tmp_0, "whirr");
    r0 = pxsim_Array__push(s.tmp_0, "whirs");
    r0 = pxsim_Array__push(s.tmp_0, "whish");
    r0 = pxsim_Array__push(s.tmp_0, "whisk");
    r0 = pxsim_Array__push(s.tmp_0, "whiss");
    r0 = pxsim_Array__push(s.tmp_0, "whist");
    r0 = pxsim_Array__push(s.tmp_0, "white");
    r0 = pxsim_Array__push(s.tmp_0, "whits");
    r0 = pxsim_Array__push(s.tmp_0, "whity");
    r0 = pxsim_Array__push(s.tmp_0, "whizz");
    r0 = pxsim_Array__push(s.tmp_0, "whole");
    r0 = pxsim_Array__push(s.tmp_0, "whomp");
    r0 = pxsim_Array__push(s.tmp_0, "whoof");
    r0 = pxsim_Array__push(s.tmp_0, "whoop");
    r0 = pxsim_Array__push(s.tmp_0, "whoot");
    r0 = pxsim_Array__push(s.tmp_0, "whops");
    r0 = pxsim_Array__push(s.tmp_0, "whore");
    r0 = pxsim_Array__push(s.tmp_0, "whorl");
    r0 = pxsim_Array__push(s.tmp_0, "whort");
    r0 = pxsim_Array__push(s.tmp_0, "whose");
    r0 = pxsim_Array__push(s.tmp_0, "whoso");
    r0 = pxsim_Array__push(s.tmp_0, "whows");
    r0 = pxsim_Array__push(s.tmp_0, "whump");
    r0 = pxsim_Array__push(s.tmp_0, "whups");
    r0 = pxsim_Array__push(s.tmp_0, "whyda");
    r0 = pxsim_Array__push(s.tmp_0, "wicca");
    r0 = pxsim_Array__push(s.tmp_0, "wicks");
    r0 = pxsim_Array__push(s.tmp_0, "wicky");
    r0 = pxsim_Array__push(s.tmp_0, "widdy");
    r0 = pxsim_Array__push(s.tmp_0, "widen");
    r0 = pxsim_Array__push(s.tmp_0, "wider");
    r0 = pxsim_Array__push(s.tmp_0, "wides");
    r0 = pxsim_Array__push(s.tmp_0, "widow");
    r0 = pxsim_Array__push(s.tmp_0, "width");
    r0 = pxsim_Array__push(s.tmp_0, "wield");
    r0 = pxsim_Array__push(s.tmp_0, "wiels");
    r0 = pxsim_Array__push(s.tmp_0, "wifed");
    r0 = pxsim_Array__push(s.tmp_0, "wifes");
    r0 = pxsim_Array__push(s.tmp_0, "wifey");
    r0 = pxsim_Array__push(s.tmp_0, "wifie");
    r0 = pxsim_Array__push(s.tmp_0, "wifts");
    r0 = pxsim_Array__push(s.tmp_0, "wifty");
    r0 = pxsim_Array__push(s.tmp_0, "wigan");
    r0 = pxsim_Array__push(s.tmp_0, "wigga");
    r0 = pxsim_Array__push(s.tmp_0, "wiggy");
    r0 = pxsim_Array__push(s.tmp_0, "wight");
    r0 = pxsim_Array__push(s.tmp_0, "wikis");
    r0 = pxsim_Array__push(s.tmp_0, "wilco");
    r0 = pxsim_Array__push(s.tmp_0, "wilds");
    r0 = pxsim_Array__push(s.tmp_0, "wiled");
    r0 = pxsim_Array__push(s.tmp_0, "wiles");
    r0 = pxsim_Array__push(s.tmp_0, "wilga");
    r0 = pxsim_Array__push(s.tmp_0, "wilis");
    r0 = pxsim_Array__push(s.tmp_0, "wilja");
    r0 = pxsim_Array__push(s.tmp_0, "wills");
    r0 = pxsim_Array__push(s.tmp_0, "willy");
    r0 = pxsim_Array__push(s.tmp_0, "wilts");
    r0 = pxsim_Array__push(s.tmp_0, "wimps");
    r0 = pxsim_Array__push(s.tmp_0, "wimpy");
    r0 = pxsim_Array__push(s.tmp_0, "wince");
    r0 = pxsim_Array__push(s.tmp_0, "winch");
    r0 = pxsim_Array__push(s.tmp_0, "winds");
    r0 = pxsim_Array__push(s.tmp_0, "windy");
    r0 = pxsim_Array__push(s.tmp_0, "wined");
    r0 = pxsim_Array__push(s.tmp_0, "wines");
    r0 = pxsim_Array__push(s.tmp_0, "winey");
    r0 = pxsim_Array__push(s.tmp_0, "winge");
    r0 = pxsim_Array__push(s.tmp_0, "wings");
    r0 = pxsim_Array__push(s.tmp_0, "wingy");
    r0 = pxsim_Array__push(s.tmp_0, "winks");
    r0 = pxsim_Array__push(s.tmp_0, "winky");
    r0 = pxsim_Array__push(s.tmp_0, "winna");
    r0 = pxsim_Array__push(s.tmp_0, "winns");
    r0 = pxsim_Array__push(s.tmp_0, "winos");
    r0 = pxsim_Array__push(s.tmp_0, "winze");
    r0 = pxsim_Array__push(s.tmp_0, "wiped");
    r0 = pxsim_Array__push(s.tmp_0, "wiper");
    r0 = pxsim_Array__push(s.tmp_0, "wipes");
    r0 = pxsim_Array__push(s.tmp_0, "wired");
    r0 = pxsim_Array__push(s.tmp_0, "wirer");
    r0 = pxsim_Array__push(s.tmp_0, "wires");
    r0 = pxsim_Array__push(s.tmp_0, "wirra");
    r0 = pxsim_Array__push(s.tmp_0, "wirri");
    r0 = pxsim_Array__push(s.tmp_0, "wised");
    r0 = pxsim_Array__push(s.tmp_0, "wiser");
    r0 = pxsim_Array__push(s.tmp_0, "wises");
    r0 = pxsim_Array__push(s.tmp_0, "wisha");
    r0 = pxsim_Array__push(s.tmp_0, "wisht");
    r0 = pxsim_Array__push(s.tmp_0, "wisps");
    r0 = pxsim_Array__push(s.tmp_0, "wispy");
    r0 = pxsim_Array__push(s.tmp_0, "wists");
    r0 = pxsim_Array__push(s.tmp_0, "witan");
    r0 = pxsim_Array__push(s.tmp_0, "witch");
    r0 = pxsim_Array__push(s.tmp_0, "wited");
    r0 = pxsim_Array__push(s.tmp_0, "wites");
    r0 = pxsim_Array__push(s.tmp_0, "withe");
    r0 = pxsim_Array__push(s.tmp_0, "withs");
    r0 = pxsim_Array__push(s.tmp_0, "withy");
    r0 = pxsim_Array__push(s.tmp_0, "witty");
    r0 = pxsim_Array__push(s.tmp_0, "wived");
    r0 = pxsim_Array__push(s.tmp_0, "wiver");
    r0 = pxsim_Array__push(s.tmp_0, "wives");
    r0 = pxsim_Array__push(s.tmp_0, "wizen");
    r0 = pxsim_Array__push(s.tmp_0, "wizes");
    r0 = pxsim_Array__push(s.tmp_0, "wizzo");
    r0 = pxsim_Array__push(s.tmp_0, "woads");
    r0 = pxsim_Array__push(s.tmp_0, "woady");
    r0 = pxsim_Array__push(s.tmp_0, "woald");
    r0 = pxsim_Array__push(s.tmp_0, "wocks");
    r0 = pxsim_Array__push(s.tmp_0, "wodge");
    r0 = pxsim_Array__push(s.tmp_0, "wodgy");
    r0 = pxsim_Array__push(s.tmp_0, "woful");
    r0 = pxsim_Array__push(s.tmp_0, "wojus");
    r0 = pxsim_Array__push(s.tmp_0, "woken");
    r0 = pxsim_Array__push(s.tmp_0, "woker");
    r0 = pxsim_Array__push(s.tmp_0, "wokka");
    r0 = pxsim_Array__push(s.tmp_0, "wolds");
    r0 = pxsim_Array__push(s.tmp_0, "wolfs");
    r0 = pxsim_Array__push(s.tmp_0, "wolly");
    r0 = pxsim_Array__push(s.tmp_0, "wolve");
    r0 = pxsim_Array__push(s.tmp_0, "woman");
    r0 = pxsim_Array__push(s.tmp_0, "womas");
    r0 = pxsim_Array__push(s.tmp_0, "wombs");
    r0 = pxsim_Array__push(s.tmp_0, "womby");
    r0 = pxsim_Array__push(s.tmp_0, "women");
    r0 = pxsim_Array__push(s.tmp_0, "womyn");
    r0 = pxsim_Array__push(s.tmp_0, "wonga");
    r0 = pxsim_Array__push(s.tmp_0, "wongi");
    r0 = pxsim_Array__push(s.tmp_0, "wonks");
    r0 = pxsim_Array__push(s.tmp_0, "wonky");
    r0 = pxsim_Array__push(s.tmp_0, "wonts");
    r0 = pxsim_Array__push(s.tmp_0, "woods");
    r0 = pxsim_Array__push(s.tmp_0, "woody");
    r0 = pxsim_Array__push(s.tmp_0, "wooed");
    r0 = pxsim_Array__push(s.tmp_0, "wooer");
    r0 = pxsim_Array__push(s.tmp_0, "woofs");
    r0 = pxsim_Array__push(s.tmp_0, "woofy");
    r0 = pxsim_Array__push(s.tmp_0, "woold");
    r0 = pxsim_Array__push(s.tmp_0, "wools");
    r0 = pxsim_Array__push(s.tmp_0, "wooly");
    r0 = pxsim_Array__push(s.tmp_0, "woons");
    r0 = pxsim_Array__push(s.tmp_0, "woops");
    r0 = pxsim_Array__push(s.tmp_0, "woopy");
    r0 = pxsim_Array__push(s.tmp_0, "woose");
    r0 = pxsim_Array__push(s.tmp_0, "woosh");
    r0 = pxsim_Array__push(s.tmp_0, "wootz");
    r0 = pxsim_Array__push(s.tmp_0, "woozy");
    r0 = pxsim_Array__push(s.tmp_0, "words");
    r0 = pxsim_Array__push(s.tmp_0, "wordy");
    r0 = pxsim_Array__push(s.tmp_0, "works");
    r0 = pxsim_Array__push(s.tmp_0, "worky");
    r0 = pxsim_Array__push(s.tmp_0, "world");
    r0 = pxsim_Array__push(s.tmp_0, "worms");
    r0 = pxsim_Array__push(s.tmp_0, "wormy");
    r0 = pxsim_Array__push(s.tmp_0, "worry");
    r0 = pxsim_Array__push(s.tmp_0, "worse");
    r0 = pxsim_Array__push(s.tmp_0, "worst");
    r0 = pxsim_Array__push(s.tmp_0, "worth");
    r0 = pxsim_Array__push(s.tmp_0, "worts");
    r0 = pxsim_Array__push(s.tmp_0, "would");
    r0 = pxsim_Array__push(s.tmp_0, "wound");
    r0 = pxsim_Array__push(s.tmp_0, "woven");
    r0 = pxsim_Array__push(s.tmp_0, "wowed");
    r0 = pxsim_Array__push(s.tmp_0, "wowee");
    r0 = pxsim_Array__push(s.tmp_0, "wowse");
    r0 = pxsim_Array__push(s.tmp_0, "woxen");
    r0 = pxsim_Array__push(s.tmp_0, "wrack");
    r0 = pxsim_Array__push(s.tmp_0, "wrang");
    r0 = pxsim_Array__push(s.tmp_0, "wraps");
    r0 = pxsim_Array__push(s.tmp_0, "wrapt");
    r0 = pxsim_Array__push(s.tmp_0, "wrast");
    r0 = pxsim_Array__push(s.tmp_0, "wrate");
    r0 = pxsim_Array__push(s.tmp_0, "wrath");
    r0 = pxsim_Array__push(s.tmp_0, "wrawl");
    r0 = pxsim_Array__push(s.tmp_0, "wreak");
    r0 = pxsim_Array__push(s.tmp_0, "wreck");
    r0 = pxsim_Array__push(s.tmp_0, "wrens");
    r0 = pxsim_Array__push(s.tmp_0, "wrest");
    r0 = pxsim_Array__push(s.tmp_0, "wrick");
    r0 = pxsim_Array__push(s.tmp_0, "wried");
    r0 = pxsim_Array__push(s.tmp_0, "wrier");
    r0 = pxsim_Array__push(s.tmp_0, "wries");
    r0 = pxsim_Array__push(s.tmp_0, "wring");
    r0 = pxsim_Array__push(s.tmp_0, "wrist");
    r0 = pxsim_Array__push(s.tmp_0, "write");
    r0 = pxsim_Array__push(s.tmp_0, "writs");
    r0 = pxsim_Array__push(s.tmp_0, "wroke");
    r0 = pxsim_Array__push(s.tmp_0, "wrong");
    r0 = pxsim_Array__push(s.tmp_0, "wroot");
    r0 = pxsim_Array__push(s.tmp_0, "wrote");
    r0 = pxsim_Array__push(s.tmp_0, "wroth");
    r0 = pxsim_Array__push(s.tmp_0, "wrung");
    r0 = pxsim_Array__push(s.tmp_0, "wryer");
    r0 = pxsim_Array__push(s.tmp_0, "wryly");
    r0 = pxsim_Array__push(s.tmp_0, "wuddy");
    r0 = pxsim_Array__push(s.tmp_0, "wudus");
    r0 = pxsim_Array__push(s.tmp_0, "wuffs");
    r0 = pxsim_Array__push(s.tmp_0, "wulls");
    r0 = pxsim_Array__push(s.tmp_0, "wunga");
    r0 = pxsim_Array__push(s.tmp_0, "wurst");
    r0 = pxsim_Array__push(s.tmp_0, "wuses");
    r0 = pxsim_Array__push(s.tmp_0, "wushu");
    r0 = pxsim_Array__push(s.tmp_0, "wussy");
    r0 = pxsim_Array__push(s.tmp_0, "wuxia");
    r0 = pxsim_Array__push(s.tmp_0, "wyled");
    r0 = pxsim_Array__push(s.tmp_0, "wyles");
    r0 = pxsim_Array__push(s.tmp_0, "wynds");
    r0 = pxsim_Array__push(s.tmp_0, "wynns");
    r0 = pxsim_Array__push(s.tmp_0, "wyted");
    r0 = pxsim_Array__push(s.tmp_0, "wytes");
    r0 = pxsim_Array__push(s.tmp_0, "wythe");
    r0 = pxsim_Array__push(s.tmp_0, "xebec");
    r0 = pxsim_Array__push(s.tmp_0, "xenia");
    r0 = pxsim_Array__push(s.tmp_0, "xenic");
    r0 = pxsim_Array__push(s.tmp_0, "xenon");
    r0 = pxsim_Array__push(s.tmp_0, "xeric");
    r0 = pxsim_Array__push(s.tmp_0, "xerox");
    r0 = pxsim_Array__push(s.tmp_0, "xerus");
    r0 = pxsim_Array__push(s.tmp_0, "xoana");
    r0 = pxsim_Array__push(s.tmp_0, "xolos");
    r0 = pxsim_Array__push(s.tmp_0, "xrays");
    r0 = pxsim_Array__push(s.tmp_0, "xviii");
    r0 = pxsim_Array__push(s.tmp_0, "xylan");
    r0 = pxsim_Array__push(s.tmp_0, "xylem");
    r0 = pxsim_Array__push(s.tmp_0, "xylic");
    r0 = pxsim_Array__push(s.tmp_0, "xylol");
    r0 = pxsim_Array__push(s.tmp_0, "xylyl");
    r0 = pxsim_Array__push(s.tmp_0, "xysti");
    r0 = pxsim_Array__push(s.tmp_0, "xysts");
    r0 = pxsim_Array__push(s.tmp_0, "yaars");
    r0 = pxsim_Array__push(s.tmp_0, "yaass");
    r0 = pxsim_Array__push(s.tmp_0, "yabas");
    r0 = pxsim_Array__push(s.tmp_0, "yabba");
    r0 = pxsim_Array__push(s.tmp_0, "yabby");
    r0 = pxsim_Array__push(s.tmp_0, "yacca");
    r0 = pxsim_Array__push(s.tmp_0, "yacht");
    r0 = pxsim_Array__push(s.tmp_0, "yacka");
    r0 = pxsim_Array__push(s.tmp_0, "yacks");
    r0 = pxsim_Array__push(s.tmp_0, "yadda");
    r0 = pxsim_Array__push(s.tmp_0, "yaffs");
    r0 = pxsim_Array__push(s.tmp_0, "yager");
    r0 = pxsim_Array__push(s.tmp_0, "yages");
    r0 = pxsim_Array__push(s.tmp_0, "yagis");
    r0 = pxsim_Array__push(s.tmp_0, "yagna");
    r0 = pxsim_Array__push(s.tmp_0, "yahoo");
    r0 = pxsim_Array__push(s.tmp_0, "yaird");
    r0 = pxsim_Array__push(s.tmp_0, "yajna");
    r0 = pxsim_Array__push(s.tmp_0, "yakka");
    r0 = pxsim_Array__push(s.tmp_0, "yakow");
    r0 = pxsim_Array__push(s.tmp_0, "yales");
    r0 = pxsim_Array__push(s.tmp_0, "yamen");
    r0 = pxsim_Array__push(s.tmp_0, "yampa");
    r0 = pxsim_Array__push(s.tmp_0, "yampy");
    r0 = pxsim_Array__push(s.tmp_0, "yamun");
    r0 = pxsim_Array__push(s.tmp_0, "yandy");
    r0 = pxsim_Array__push(s.tmp_0, "yangs");
    r0 = pxsim_Array__push(s.tmp_0, "yanks");
    r0 = pxsim_Array__push(s.tmp_0, "yapok");
    r0 = pxsim_Array__push(s.tmp_0, "yapon");
    r0 = pxsim_Array__push(s.tmp_0, "yapps");
    r0 = pxsim_Array__push(s.tmp_0, "yappy");
    r0 = pxsim_Array__push(s.tmp_0, "yarak");
    r0 = pxsim_Array__push(s.tmp_0, "yarco");
    r0 = pxsim_Array__push(s.tmp_0, "yards");
    r0 = pxsim_Array__push(s.tmp_0, "yarer");
    r0 = pxsim_Array__push(s.tmp_0, "yarfa");
    r0 = pxsim_Array__push(s.tmp_0, "yarks");
    r0 = pxsim_Array__push(s.tmp_0, "yarns");
    r0 = pxsim_Array__push(s.tmp_0, "yarra");
    r0 = pxsim_Array__push(s.tmp_0, "yarrs");
    r0 = pxsim_Array__push(s.tmp_0, "yarta");
    r0 = pxsim_Array__push(s.tmp_0, "yarto");
    r0 = pxsim_Array__push(s.tmp_0, "yates");
    r0 = pxsim_Array__push(s.tmp_0, "yatra");
    r0 = pxsim_Array__push(s.tmp_0, "yauds");
    r0 = pxsim_Array__push(s.tmp_0, "yauld");
    r0 = pxsim_Array__push(s.tmp_0, "yaups");
    r0 = pxsim_Array__push(s.tmp_0, "yawed");
    r0 = pxsim_Array__push(s.tmp_0, "yawey");
    r0 = pxsim_Array__push(s.tmp_0, "yawls");
    r0 = pxsim_Array__push(s.tmp_0, "yawns");
    r0 = pxsim_Array__push(s.tmp_0, "yawny");
    r0 = pxsim_Array__push(s.tmp_0, "yawps");
    r0 = pxsim_Array__push(s.tmp_0, "yayas");
    r0 = pxsim_Array__push(s.tmp_0, "ybore");
    r0 = pxsim_Array__push(s.tmp_0, "yclad");
    r0 = pxsim_Array__push(s.tmp_0, "ycled");
    r0 = pxsim_Array__push(s.tmp_0, "ycond");
    r0 = pxsim_Array__push(s.tmp_0, "ydrad");
    r0 = pxsim_Array__push(s.tmp_0, "ydred");
    r0 = pxsim_Array__push(s.tmp_0, "yeads");
    r0 = pxsim_Array__push(s.tmp_0, "yeahs");
    r0 = pxsim_Array__push(s.tmp_0, "yealm");
    r0 = pxsim_Array__push(s.tmp_0, "yeans");
    r0 = pxsim_Array__push(s.tmp_0, "yeard");
    r0 = pxsim_Array__push(s.tmp_0, "yearn");
    r0 = pxsim_Array__push(s.tmp_0, "years");
    r0 = pxsim_Array__push(s.tmp_0, "yeast");
    r0 = pxsim_Array__push(s.tmp_0, "yecch");
    r0 = pxsim_Array__push(s.tmp_0, "yechs");
    r0 = pxsim_Array__push(s.tmp_0, "yechy");
    r0 = pxsim_Array__push(s.tmp_0, "yedes");
    r0 = pxsim_Array__push(s.tmp_0, "yeeds");
    r0 = pxsim_Array__push(s.tmp_0, "yeeek");
    r0 = pxsim_Array__push(s.tmp_0, "yeesh");
    r0 = pxsim_Array__push(s.tmp_0, "yeggs");
    r0 = pxsim_Array__push(s.tmp_0, "yelks");
    r0 = pxsim_Array__push(s.tmp_0, "yells");
    r0 = pxsim_Array__push(s.tmp_0, "yelms");
    r0 = pxsim_Array__push(s.tmp_0, "yelps");
    r0 = pxsim_Array__push(s.tmp_0, "yelts");
    r0 = pxsim_Array__push(s.tmp_0, "yenta");
    r0 = pxsim_Array__push(s.tmp_0, "yente");
    r0 = pxsim_Array__push(s.tmp_0, "yerba");
    r0 = pxsim_Array__push(s.tmp_0, "yerds");
    r0 = pxsim_Array__push(s.tmp_0, "yerks");
    r0 = pxsim_Array__push(s.tmp_0, "yeses");
    r0 = pxsim_Array__push(s.tmp_0, "yesks");
    r0 = pxsim_Array__push(s.tmp_0, "yests");
    r0 = pxsim_Array__push(s.tmp_0, "yesty");
    r0 = pxsim_Array__push(s.tmp_0, "yetis");
    r0 = pxsim_Array__push(s.tmp_0, "yetts");
    r0 = pxsim_Array__push(s.tmp_0, "yeuch");
    r0 = pxsim_Array__push(s.tmp_0, "yeuks");
    r0 = pxsim_Array__push(s.tmp_0, "yeuky");
    r0 = pxsim_Array__push(s.tmp_0, "yeven");
    r0 = pxsim_Array__push(s.tmp_0, "yeves");
    r0 = pxsim_Array__push(s.tmp_0, "yewen");
    r0 = pxsim_Array__push(s.tmp_0, "yexed");
    r0 = pxsim_Array__push(s.tmp_0, "yexes");
    r0 = pxsim_Array__push(s.tmp_0, "yfere");
    r0 = pxsim_Array__push(s.tmp_0, "yield");
    r0 = pxsim_Array__push(s.tmp_0, "yiked");
    r0 = pxsim_Array__push(s.tmp_0, "yikes");
    r0 = pxsim_Array__push(s.tmp_0, "yills");
    r0 = pxsim_Array__push(s.tmp_0, "yince");
    r0 = pxsim_Array__push(s.tmp_0, "yipes");
    r0 = pxsim_Array__push(s.tmp_0, "yippy");
    r0 = pxsim_Array__push(s.tmp_0, "yirds");
    r0 = pxsim_Array__push(s.tmp_0, "yirks");
    r0 = pxsim_Array__push(s.tmp_0, "yirrs");
    r0 = pxsim_Array__push(s.tmp_0, "yirth");
    r0 = pxsim_Array__push(s.tmp_0, "yites");
    r0 = pxsim_Array__push(s.tmp_0, "yitie");
    r0 = pxsim_Array__push(s.tmp_0, "ylems");
    r0 = pxsim_Array__push(s.tmp_0, "ylide");
    r0 = pxsim_Array__push(s.tmp_0, "ylids");
    r0 = pxsim_Array__push(s.tmp_0, "ylike");
    r0 = pxsim_Array__push(s.tmp_0, "ylkes");
    r0 = pxsim_Array__push(s.tmp_0, "ymolt");
    r0 = pxsim_Array__push(s.tmp_0, "ympes");
    r0 = pxsim_Array__push(s.tmp_0, "yobbo");
    r0 = pxsim_Array__push(s.tmp_0, "yobby");
    r0 = pxsim_Array__push(s.tmp_0, "yocks");
    r0 = pxsim_Array__push(s.tmp_0, "yodel");
    r0 = pxsim_Array__push(s.tmp_0, "yodhs");
    r0 = pxsim_Array__push(s.tmp_0, "yodle");
    r0 = pxsim_Array__push(s.tmp_0, "yogas");
    r0 = pxsim_Array__push(s.tmp_0, "yogee");
    r0 = pxsim_Array__push(s.tmp_0, "yoghs");
    r0 = pxsim_Array__push(s.tmp_0, "yogic");
    r0 = pxsim_Array__push(s.tmp_0, "yogin");
    r0 = pxsim_Array__push(s.tmp_0, "yogis");
    r0 = pxsim_Array__push(s.tmp_0, "yohah");
    r0 = pxsim_Array__push(s.tmp_0, "yohay");
    r0 = pxsim_Array__push(s.tmp_0, "yoick");
    r0 = pxsim_Array__push(s.tmp_0, "yojan");
    r0 = pxsim_Array__push(s.tmp_0, "yokan");
    r0 = pxsim_Array__push(s.tmp_0, "yoked");
    r0 = pxsim_Array__push(s.tmp_0, "yokeg");
    r0 = pxsim_Array__push(s.tmp_0, "yokel");
    r0 = pxsim_Array__push(s.tmp_0, "yoker");
    r0 = pxsim_Array__push(s.tmp_0, "yokes");
    r0 = pxsim_Array__push(s.tmp_0, "yokul");
    r0 = pxsim_Array__push(s.tmp_0, "yolks");
    r0 = pxsim_Array__push(s.tmp_0, "yolky");
    r0 = pxsim_Array__push(s.tmp_0, "yolps");
    r0 = pxsim_Array__push(s.tmp_0, "yomim");
    r0 = pxsim_Array__push(s.tmp_0, "yomps");
    r0 = pxsim_Array__push(s.tmp_0, "yonic");
    r0 = pxsim_Array__push(s.tmp_0, "yonis");
    r0 = pxsim_Array__push(s.tmp_0, "yonks");
    r0 = pxsim_Array__push(s.tmp_0, "yonny");
    r0 = pxsim_Array__push(s.tmp_0, "yoofs");
    r0 = pxsim_Array__push(s.tmp_0, "yoops");
    r0 = pxsim_Array__push(s.tmp_0, "yopos");
    r0 = pxsim_Array__push(s.tmp_0, "yoppo");
    r0 = pxsim_Array__push(s.tmp_0, "yores");
    r0 = pxsim_Array__push(s.tmp_0, "yorga");
    r0 = pxsim_Array__push(s.tmp_0, "yorks");
    r0 = pxsim_Array__push(s.tmp_0, "yorps");
    r0 = pxsim_Array__push(s.tmp_0, "youks");
    r0 = pxsim_Array__push(s.tmp_0, "young");
    r0 = pxsim_Array__push(s.tmp_0, "yourn");
    r0 = pxsim_Array__push(s.tmp_0, "yours");
    r0 = pxsim_Array__push(s.tmp_0, "yourt");
    r0 = pxsim_Array__push(s.tmp_0, "youse");
    r0 = pxsim_Array__push(s.tmp_0, "youth");
    r0 = pxsim_Array__push(s.tmp_0, "yowed");
    r0 = pxsim_Array__push(s.tmp_0, "yowes");
    r0 = pxsim_Array__push(s.tmp_0, "yowie");
    r0 = pxsim_Array__push(s.tmp_0, "yowls");
    r0 = pxsim_Array__push(s.tmp_0, "yowsa");
    r0 = pxsim_Array__push(s.tmp_0, "yowza");
    r0 = pxsim_Array__push(s.tmp_0, "yoyos");
    r0 = pxsim_Array__push(s.tmp_0, "yrapt");
    r0 = pxsim_Array__push(s.tmp_0, "yrent");
    r0 = pxsim_Array__push(s.tmp_0, "yrivd");
    r0 = pxsim_Array__push(s.tmp_0, "yrneh");
    r0 = pxsim_Array__push(s.tmp_0, "ysame");
    r0 = pxsim_Array__push(s.tmp_0, "ytost");
    r0 = pxsim_Array__push(s.tmp_0, "yuans");
    r0 = pxsim_Array__push(s.tmp_0, "yucas");
    r0 = pxsim_Array__push(s.tmp_0, "yucca");
    r0 = pxsim_Array__push(s.tmp_0, "yucch");
    r0 = pxsim_Array__push(s.tmp_0, "yucko");
    r0 = pxsim_Array__push(s.tmp_0, "yucks");
    r0 = pxsim_Array__push(s.tmp_0, "yucky");
    r0 = pxsim_Array__push(s.tmp_0, "yufts");
    r0 = pxsim_Array__push(s.tmp_0, "yugas");
    r0 = pxsim_Array__push(s.tmp_0, "yuked");
    r0 = pxsim_Array__push(s.tmp_0, "yukes");
    r0 = pxsim_Array__push(s.tmp_0, "yukky");
    r0 = pxsim_Array__push(s.tmp_0, "yukos");
    r0 = pxsim_Array__push(s.tmp_0, "yulan");
    r0 = pxsim_Array__push(s.tmp_0, "yules");
    r0 = pxsim_Array__push(s.tmp_0, "yummo");
    r0 = pxsim_Array__push(s.tmp_0, "yummy");
    r0 = pxsim_Array__push(s.tmp_0, "yumps");
    r0 = pxsim_Array__push(s.tmp_0, "yupon");
    r0 = pxsim_Array__push(s.tmp_0, "yuppy");
    r0 = pxsim_Array__push(s.tmp_0, "yurta");
    r0 = pxsim_Array__push(s.tmp_0, "yurts");
    r0 = pxsim_Array__push(s.tmp_0, "yuzus");
    r0 = pxsim_Array__push(s.tmp_0, "zabra");
    r0 = pxsim_Array__push(s.tmp_0, "zacks");
    r0 = pxsim_Array__push(s.tmp_0, "zaida");
    r0 = pxsim_Array__push(s.tmp_0, "zaide");
    r0 = pxsim_Array__push(s.tmp_0, "zaidy");
    r0 = pxsim_Array__push(s.tmp_0, "zaire");
    r0 = pxsim_Array__push(s.tmp_0, "zakat");
    r0 = pxsim_Array__push(s.tmp_0, "zamac");
    r0 = pxsim_Array__push(s.tmp_0, "zamak");
    r0 = pxsim_Array__push(s.tmp_0, "zaman");
    r0 = pxsim_Array__push(s.tmp_0, "zambo");
    r0 = pxsim_Array__push(s.tmp_0, "zamia");
    r0 = pxsim_Array__push(s.tmp_0, "zamis");
    r0 = pxsim_Array__push(s.tmp_0, "zanja");
    r0 = pxsim_Array__push(s.tmp_0, "zante");
    r0 = pxsim_Array__push(s.tmp_0, "zanza");
    r0 = pxsim_Array__push(s.tmp_0, "zanze");
    r0 = pxsim_Array__push(s.tmp_0, "zappy");
    r0 = pxsim_Array__push(s.tmp_0, "zarda");
    r0 = pxsim_Array__push(s.tmp_0, "zarfs");
    r0 = pxsim_Array__push(s.tmp_0, "zaris");
    r0 = pxsim_Array__push(s.tmp_0, "zatis");
    r0 = pxsim_Array__push(s.tmp_0, "zawns");
    r0 = pxsim_Array__push(s.tmp_0, "zaxes");
    r0 = pxsim_Array__push(s.tmp_0, "zayde");
    r0 = pxsim_Array__push(s.tmp_0, "zayin");
    r0 = pxsim_Array__push(s.tmp_0, "zazen");
    r0 = pxsim_Array__push(s.tmp_0, "zeals");
    r0 = pxsim_Array__push(s.tmp_0, "zebec");
    r0 = pxsim_Array__push(s.tmp_0, "zebra");
    r0 = pxsim_Array__push(s.tmp_0, "zebub");
    r0 = pxsim_Array__push(s.tmp_0, "zebus");
    r0 = pxsim_Array__push(s.tmp_0, "zedas");
    r0 = pxsim_Array__push(s.tmp_0, "zeera");
    r0 = pxsim_Array__push(s.tmp_0, "zeins");
    r0 = pxsim_Array__push(s.tmp_0, "zendo");
    r0 = pxsim_Array__push(s.tmp_0, "zerda");
    r0 = pxsim_Array__push(s.tmp_0, "zerks");
    r0 = pxsim_Array__push(s.tmp_0, "zeros");
    r0 = pxsim_Array__push(s.tmp_0, "zests");
    r0 = pxsim_Array__push(s.tmp_0, "zesty");
    r0 = pxsim_Array__push(s.tmp_0, "zetas");
    r0 = pxsim_Array__push(s.tmp_0, "zexes");
    r0 = pxsim_Array__push(s.tmp_0, "zezes");
    r0 = pxsim_Array__push(s.tmp_0, "zhomo");
    r0 = pxsim_Array__push(s.tmp_0, "zhush");
    r0 = pxsim_Array__push(s.tmp_0, "zhuzh");
    r0 = pxsim_Array__push(s.tmp_0, "zibet");
    r0 = pxsim_Array__push(s.tmp_0, "ziffs");
    r0 = pxsim_Array__push(s.tmp_0, "zigan");
    r0 = pxsim_Array__push(s.tmp_0, "zikrs");
    r0 = pxsim_Array__push(s.tmp_0, "zilas");
    r0 = pxsim_Array__push(s.tmp_0, "zilch");
    r0 = pxsim_Array__push(s.tmp_0, "zilla");
    r0 = pxsim_Array__push(s.tmp_0, "zills");
    r0 = pxsim_Array__push(s.tmp_0, "zimbi");
    r0 = pxsim_Array__push(s.tmp_0, "zimbs");
    r0 = pxsim_Array__push(s.tmp_0, "zinco");
    r0 = pxsim_Array__push(s.tmp_0, "zincs");
    r0 = pxsim_Array__push(s.tmp_0, "zincy");
    r0 = pxsim_Array__push(s.tmp_0, "zineb");
    r0 = pxsim_Array__push(s.tmp_0, "zines");
    r0 = pxsim_Array__push(s.tmp_0, "zings");
    r0 = pxsim_Array__push(s.tmp_0, "zingy");
    r0 = pxsim_Array__push(s.tmp_0, "zinke");
    r0 = pxsim_Array__push(s.tmp_0, "zinky");
    r0 = pxsim_Array__push(s.tmp_0, "zinos");
    r0 = pxsim_Array__push(s.tmp_0, "zippo");
    r0 = pxsim_Array__push(s.tmp_0, "zippy");
    r0 = pxsim_Array__push(s.tmp_0, "ziram");
    r0 = pxsim_Array__push(s.tmp_0, "zitis");
    r0 = pxsim_Array__push(s.tmp_0, "zitty");
    r0 = pxsim_Array__push(s.tmp_0, "zizel");
    r0 = pxsim_Array__push(s.tmp_0, "zizit");
    r0 = pxsim_Array__push(s.tmp_0, "zlote");
    r0 = pxsim_Array__push(s.tmp_0, "zloty");
    r0 = pxsim_Array__push(s.tmp_0, "zoaea");
    r0 = pxsim_Array__push(s.tmp_0, "zobos");
    r0 = pxsim_Array__push(s.tmp_0, "zobus");
    r0 = pxsim_Array__push(s.tmp_0, "zocco");
    r0 = pxsim_Array__push(s.tmp_0, "zoeae");
    r0 = pxsim_Array__push(s.tmp_0, "zoeal");
    r0 = pxsim_Array__push(s.tmp_0, "zoeas");
    r0 = pxsim_Array__push(s.tmp_0, "zoism");
    r0 = pxsim_Array__push(s.tmp_0, "zoist");
    r0 = pxsim_Array__push(s.tmp_0, "zokor");
    r0 = pxsim_Array__push(s.tmp_0, "zolle");
    r0 = pxsim_Array__push(s.tmp_0, "zombi");
    r0 = pxsim_Array__push(s.tmp_0, "zonae");
    r0 = pxsim_Array__push(s.tmp_0, "zonal");
    r0 = pxsim_Array__push(s.tmp_0, "zonda");
    r0 = pxsim_Array__push(s.tmp_0, "zoned");
    r0 = pxsim_Array__push(s.tmp_0, "zoner");
    r0 = pxsim_Array__push(s.tmp_0, "zones");
    r0 = pxsim_Array__push(s.tmp_0, "zonks");
    r0 = pxsim_Array__push(s.tmp_0, "zooea");
    r0 = pxsim_Array__push(s.tmp_0, "zooey");
    r0 = pxsim_Array__push(s.tmp_0, "zooid");
    r0 = pxsim_Array__push(s.tmp_0, "zooks");
    r0 = pxsim_Array__push(s.tmp_0, "zooms");
    r0 = pxsim_Array__push(s.tmp_0, "zoomy");
    r0 = pxsim_Array__push(s.tmp_0, "zoons");
    r0 = pxsim_Array__push(s.tmp_0, "zooty");
    r0 = pxsim_Array__push(s.tmp_0, "zoppa");
    r0 = pxsim_Array__push(s.tmp_0, "zoppo");
    r0 = pxsim_Array__push(s.tmp_0, "zoril");
    r0 = pxsim_Array__push(s.tmp_0, "zoris");
    r0 = pxsim_Array__push(s.tmp_0, "zorro");
    r0 = pxsim_Array__push(s.tmp_0, "zorse");
    r0 = pxsim_Array__push(s.tmp_0, "zouks");
    r0 = pxsim_Array__push(s.tmp_0, "zowee");
    r0 = pxsim_Array__push(s.tmp_0, "zowie");
    r0 = pxsim_Array__push(s.tmp_0, "zulus");
    r0 = pxsim_Array__push(s.tmp_0, "zupan");
    r0 = pxsim_Array__push(s.tmp_0, "zupas");
    r0 = pxsim_Array__push(s.tmp_0, "zuppa");
    r0 = pxsim_Array__push(s.tmp_0, "zurfs");
    r0 = pxsim_Array__push(s.tmp_0, "zuzim");
    r0 = pxsim_Array__push(s.tmp_0, "zygal");
    r0 = pxsim_Array__push(s.tmp_0, "zygon");
    r0 = pxsim_Array__push(s.tmp_0, "zymes");
    r0 = pxsim_Array__push(s.tmp_0, "zymic");
    globals.words___4094 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(GuessesUI__C4050_VT);
    s.tmp_0 = r0;
    s.tmp_1 = GuessesUI_constructor__P4062_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 163; s.pc = 33; return s.tmp_1;
  case 33:
    r0 = s.retval;
    globals.ui___4090 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(Keyboard__C4068_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Keyboard_constructor__P4078_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.ui___4090;
    s.callLocIdx = 164; s.pc = 34; return s.tmp_1;
  case 34:
    r0 = s.retval;
    globals.keyboard___4091 = (s.tmp_0);
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.up___1910;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P7337;
    s.callLocIdx = 166; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.up___1910;
    s.tmp_0.arg1 = 2054;
    s.tmp_0.arg2 = inline__P7344;
    s.callLocIdx = 168; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.down___1912;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P7350;
    s.callLocIdx = 170; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.down___1912;
    s.tmp_0.arg1 = 2054;
    s.tmp_0.arg2 = inline__P7356;
    s.callLocIdx = 172; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.left___1909;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P7362;
    s.callLocIdx = 174; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.left___1909;
    s.tmp_0.arg1 = 2054;
    s.tmp_0.arg2 = inline__P7368;
    s.callLocIdx = 176; s.pc = 40; return s.tmp_0;
  case 40:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.right___1911;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P7374;
    s.callLocIdx = 178; s.pc = 41; return s.tmp_0;
  case 41:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.right___1911;
    s.tmp_0.arg1 = 2054;
    s.tmp_0.arg2 = inline__P7380;
    s.callLocIdx = 180; s.pc = 42; return s.tmp_0;
  case 42:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.A___1907;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P7386;
    s.callLocIdx = 182; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.B___1908;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = inline__P7392;
    s.callLocIdx = 184; s.pc = 44; return s.tmp_0;
  case 44:
    r0 = s.retval;
    s.tmp_0 = controller_setRepeatDefault__P1994_mk(s);
    s.tmp_0.arg0 = 250;
    s.tmp_0.arg1 = 100;
    s.callLocIdx = 185; s.pc = 45; return s.tmp_0;
  case 45:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_main___P21938.info = {"start":0,"length":0,"line":0,"column":0,"endLine":0,"endColumn":0,"fileName":"pxt_modules/arcade-text/main.ts","functionName":"<main>","argumentNames":[]}
_main___P21938.continuations = [  ]

function _main___P21938_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _main___P21938, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
} }

const _hex4208 = pxsim.BufferMethods.createBufferFromHex("1f00210023002500270029002c002e003100340037003a003e004100450049004e00520057005c00620068006e0075007b0083008b0093009c00a500af00b900c400d000dc00e900f70006011501260137014a015d01720188019f01b801d201ee010b022a024b026e029302ba02e40210033f037003a403dc03170455049704dd0427057505c80520067d06e0064907b8072d08a9082d09b9094d0aea0a900b400cfa0cc00d910e6f0f5a1053115b1272139a14d41520178018f519801b231dde1e")
const _hex8326 = pxsim.BufferMethods.createBufferFromHex("")
const _hex8714 = pxsim.BufferMethods.createBufferFromHex("20000000000000000000000000000000000000000000000000002100000000000006fc0000000000000000000000000000000000220000001c00000000001c0000000000000000000000000000002300a000f807a000f807a00000000000000000000000000000002400000018022404460c8803000000000000000000000000000025003802c4017800200390040803000000000000000000000000260080037804a4041803800340040000000000000000000000002700000000001c00000000000000000000000000000000000000280000000000f8010606010800000000000000000000000000002900000001080606f801000000000000000000000000000000002a00040014000e001400040000000000000000000000000000002b0040004000f8034000400000000000000000000000000000002c000000000000090006000000000000000000000000000000002d000000800080008000000000000000000000000000000000002e000000000000060000000000000000000000000000000000002f00000c800360001c000300000000000000000000000000000030000000f80304040404f80300000000000000000000000000003100000004040404fc07000400040000000000000000000000003200000008060405c4043804000000000000000000000000000033000000080244044404b803000000000000000000000000000034000000800170010801fc070001000000000000000000000000350000023c0424042404c403000000000000000000000000000036000000f0034804440488030000000000000000000000000000370000000400c40734000c00000000000000000000000000000038000000b80344044404b803000000000000000000000000000039000000780284048802f00100000000000000000000000000003a000000000030060000000000000000000000000000000000003b000000000018090006000000000000000000000000000000003c004000a000a000a000100100000000000000000000000000003d002001200120012001200100000000000000000000000000003e0000001001a000a000a00040000000000000000000000000003f000000080084066400180000000000000000000000000000004000f0030c04c20822092409f80900000000000000000000000041000007f8008400f8000007000000000000000000000000000042000000fc0744044404b803000000000000000000000000000043000000f001080204040404080200000000000000000000000044000000fc0704040802f001000000000000000000000000000045000000fc07440444044404000000000000000000000000000046000000fc07440044004400000000000000000000000000000047000000f00108024404c803000000000000000000000000000048000000fc0740004000fc070000000000000000000000000000490000000404fc070404040400000000000000000000000000004a000000000200040004fc0300000000000000000000000000004b000000fc074000f0000c0304040000000000000000000000004c000000fc0700040004000400000000000000000000000000004d000000fc0738007000fc0700000000000000000000000000004e000000fc073800c003fc0700000000000000000000000000004f000000f80304040404f803000000000000000000000000000050000000fc07840084004400780000000000000000000000000051000000fc0102020206fc09000000000000000000000000000052000000fc074400c4013806000000000000000000000000000053000000180224044404880300000000000000000000000000005400000004000400fc070400040000000000000000000000000055000000fc0300040004fc03000000000000000000000000000056000c00f0030004f0030c00000000000000000000000000000057007c008007e001f0010007fc0000000000000000000000000058000404b8034000b80304040000000000000000000000000000590004003800c00730000c0000000000000000000000000000005a0004040407e4041c04040400000000000000000000000000005b0000000000ff0f0108010800000000000000000000000000005c0003001c0060008003000c00000000000000000000000000005d00000001080108ff0f000000000000000000000000000000005e004000380004003800400000000000000000000000000000005f00000800080008000800080000000000000000000000000000600000000000020004000000000000000000000000000000000061000000200390049004e007000000000000000000000000000062000000fc0710041004e003000000000000000000000000000063000000c001200210043004000200000000000000000000000064000000e00310041004fc07000000000000000000000000000065000000e00390049004e0040000000000000000000000000000660000001000f80714001400000000000000000000000000000067000000b806440944093c09040600000000000000000000000068000000fc0710001000e0070000000000000000000000000000690000000000f4070000000000000000000000000000000000006a00000800080008fd07000000000000000000000000000000006b000000fe078000e001100610040000000000000000000000006c0000000000fc030004000400000000000000000000000000006d00f00710001000e0071000e0070000000000000000000000006e000000f00710001000e00700000000000000000000000000006f000000e00310041004e003000000000000000000000000000070000000fc0f04010401f800000000000000000000000000000071000000f80004010401fc0f000000000000000000000000000072000000f00720001000100000000000000000000000000000007300000060029004900420030000000000000000000000000000740000001000fc0310041004000000000000000000000000000075000000f00300040004f007000000000000000000000000000076003000c0030004c003300000000000000000000000000000007700f0000007e003c0010007f000000000000000000000000000780010046003800060031004000000000000000000000000000079000c0870088007f0000c0000000000000000000000000000007a000000000410079004700410040000000000000000000000007b0000004000be070108010800000000000000000000000000007c0000000000ff0f0000000000000000000000000000000000007d00000001080108be07400000000000000000000000000000007e00800040004000800080004000000000000000000000000000")
const _hex15852 = pxsim.BufferMethods.createBufferFromHex("20000000000000002100001700000000220000030003000023000a1f0a1f0a0024000a17151d0a00250013090412190026000a15150a100027000003000000002800000e11000000290000110e0000002a00000a040a00002b0000040e0400002c000010080000002d000004040400002e000008000000002f0010080402010030000e11110e0000310000121f100000320019151512000033000911150b000034000c0a091f080035001715151509003600081416150800370011090503010038000a1515150a00390002150d0502003a00000a000000003b0000100a0000003c0000040a1100003d00000a0a0a00003e0000110a0400003f0002011505020040000e1115090e0041001e05051e000042001f15150a000043000e111111000044001f11110e000045001f151511000046001f050501000047000e1111150c0048001f04041f00004900111f110000004a000911110f01004b001f040a1100004c001f10101000004d001f0204021f004e001f0204081f004f000e11110e000050001f0505020000510006091916000052001f05050a10005300121515090000540001011f01010055000f10100f0000560007081008070057001f0804081f0058001b04041b0000590001021c0201005a001915131100005b00001f111100005c000102040810005d000011111f00005e000002010200005f00101010101000600000010200000061000c12121e100062001f141408000063000c121212000064000814141f000065000e15151200006600041e0501000067000215150f000068001f04041800006900001d000000006a000010100d00006b001f040a1000006c00000f101000006d001e0204021e006e001e02021c00006f000c12120c000070001e0a0a0400007100040a0a1e000072001c0202020000730010140a0200007400000f1414100075000e10101e1000760006081008060077001e1008101e007800120c0c12000079001214080402007a00121a161200007b0000041f1100007c00001f000000007d00111f040000007e00000404080800d3000c1213130c00f3000c12130d000004010e05051e100005010609191f080006010c121313120007010c121313000018010f0b1b19000019010e151d1a000041011f14121000004201100f1412000043011f0205081f0044011e03031c00005a0110140b0302005b0110140b0300007901121a171300007a01121a171300007b01121b171200007c01121b17120000")
const _hex4283 = pxsim.BufferMethods.createBufferFromHex("000000ffffffff2121ff93c4ff8135fff609249ca378dc52003fad87f2ff8e2ec4a4839f5c406ce5cdc491463d000000")
const _hex4813 = pxsim.BufferMethods.createBufferFromHex
const _hex4815 = pxsim.BufferMethods.createBufferFromHex
const _hex4817 = pxsim.BufferMethods.createBufferFromHex
const _hex4819 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d00000000000000000000000070666607000000000000000000000000006776000000000000000000000000660700007066000000000000000000006766777766760000000000000000000060666666660600000000000000000066006766667600660000000000000000667600000000676600000000000000006766767777676676000000000000000060666666666666060000000000000000006766666666760000000000000000000000676666760000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4821 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0bb000000000000000000000000b000404500b0000000000000000000005b0b000400540b0000000000000000b0550400000054b5000000000000000000440040bb0040040000000000000000000040d4ddbb0000000000000000000000004055ddbd000000000000000000004b005455d5dd0b400b000000000000005b045411d5dd0b540b000000000000004b005411d5dd0b400b0000000000000000004055ddbd00000000000000000000000040d4ddbb0000000000000000000000440040bb0040040000000000000000b0550400000054b50000000000000000005b04000400540b000000000000000000b000404500b0000000000000000000000000b0bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4823 = pxsim.BufferMethods.createBufferFromHex
const _hex4825 = pxsim.BufferMethods.createBufferFromHex("8704200020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c0fcff0f000000000000000000000000bcddddfb000000000000000000000000dcbbbbfd000000000000000000000000ccbbbbfc0000000000000000000000c0bcd1bdfb0f00000000000000000000c01b11ddbb0f00000000000000000000c0bcbbbbcb0f00000000000000000000bc11d1ddddcb000000000000000000c01d11ddddddd10c0000000000000000bcd1cbbcfbcf1dcb00000000000000001ccdccddbdffdfc100000000000000001cccccdbcbffcfc10000000000000000dbcbccccfcffbfcd0000000000000000bbbdccccffcfdbbb0000000000000000b0dbbdbbbbdbbd0b000000000000000000b0cbccccbc0b000000000000000000000000000000000000000000000000000000d007700d0000000000000000000000007066660700000000000000000000000000677600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4827 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0cbcc0c0000000000000000000000b0db55d5cd0c00000000000000000000db555555ddcd000000000000000000b055555555d59d0b0000000000000000db55555555d59db900000000000000005b55555555d5ddb900000000000000b05db5cccc5bdddd990b000000000000b055ccccccccdddd9d0b000000000000b0b5ccccccccdbdd9d0b000000000000b0c5ccccccccdcdd9d0b000000000000b0c5ccdccbccdcdd9d0c000000000000b0cdcc5b55ccdcdd9d0c00000000000000ccdc55b5ccdcddc90000000000000000cccc5b55ccdbddc90000000000000000c0ccdccbccdd9d0c000000000000000000ccccccdbddcd00000000000000000000c0dcddddcd0c0000000000000000000000c0cccc0c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4829 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cc00000000000000b0bbbbbbbbcb00c0cd000000000000001bddddddddbd0c1ccd000000000000b011cbccccccbc0c1ccd000000000000b01d6c666666bc0cbccd000000000000b01d6c616661bc0c1ccd000000000000b01d6c161666bccc1bcd000000000000b01d6c666166bcccbbcd000000000000b01d6c666666bccc1bcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666661bcccbbcd000000000000b01d6c666661bccc1bcd000000000000b01d6c666666bc0c1ccd000000000000b01dcbccccccbc0cbccd000000000000c0b1bbbbbbbbbb0cdccb000000000000c0bbbbbbbbbbcb00dc0c00000000000000cccccccccc0c00cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4831 = pxsim.BufferMethods.createBufferFromHex("87042000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004004000000000000000000000000000054450000000000000000000000440b00bbbb00b0440000000000000040550b00000000b0550400000000000040b5000044bb00005b04000000000000b00b0044ddddbb00b00b0000000000000000405d55d5dd0b00000000000000000000d4555555ddbd0000000000000000000054555555d5bd0000000000000000b44055555555d5dd0b4b000000000040b54055555555d5dd0b5b040000000040b54055555555d5dd0b5b040000000000b44055115555d5dd0b4b000000000000000054115555d5bd00000000000000000000d4555555ddbd00000000000000000000405d55d5dd0b0000000000000000b00b0044ddddbb00b00b00000000000040b5000044bb00005b0400000000000040550b00000000b0550400000000000000440b00bbbb00b0440000000000000000000000544500000000000000000000000000004004000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
const _hex4833 = pxsim.BufferMethods.createBufferFromHex("870420002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bbbb00000000000000000000000000b055bb00bbbbbb000000000000000000b0b5bdbcbbbbddcb0000000000000000b0dbcb5b5555bbdd0c00000000000000b0cbdcbdbb5b55dbcd0000000000000000c0dddb11d15bb5bd0c00000000000000bbbd111111b155bb0c00000000000000db1b111111115bb5cb00000000000000db1bb11d1199b9d5cb00000000000000db1b11bb9199b955cb000000000000005b1b11b19b99995bcb000000000000005b1d1111bb99995ccb00000000000000b0b511bbbb99995ccb00000000000000b0d51d919999d95b0b00000000000000005bdb919999c9d50b0000000000000000b0d51b99d9bcb5000000000000000000005bd5bbbc550b00000000000000000000b05b5555bd000000000000000000000000b0bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000")




function control___screen_inline__P4272(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

  case 1:
    r0 = pxsim_numops_toBoolDecr(true);
    if (!r0) { step = 4; continue; }
    globals.__updated___4269 = (false);
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 200;
    s.callLocIdx = 2; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.__updated___4269);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_2 = control___screen_update__P1790_mk(s);
    s.callLocIdx = 3; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    globals.__updated___4269 = (true);
  case 2:
  case 3:
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_inline__P4272.info = {"start":396,"length":211,"line":17,"column":26,"endLine":26,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"inline","argumentNames":[]}

function control___screen_inline__P4272_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_inline__P4272, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function _screen_internal_inline__P4290(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore.updateScreen(globals.screen___1829);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_inline__P4290.info = {"start":753,"length":26,"line":22,"column":33,"endLine":22,"endColumn":59,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"inline","argumentNames":[]}

function _screen_internal_inline__P4290_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_inline__P4290, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function _screen_internal_inline__P4295(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore.updateStats(s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
_screen_internal_inline__P4295.info = {"start":816,"length":56,"line":23,"column":35,"endLine":25,"endColumn":5,"fileName":"pxt_modules/screen/targetoverrides.ts","functionName":"inline","argumentNames":["msg"]}

function _screen_internal_inline__P4295_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: _screen_internal_inline__P4295, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function info_inline__P4425(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals.infoState___4421);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(globals.infoStateStack___4423);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals.infoStateStack___4423 = (r0);
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "state", globals.infoState___4421);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "scene", s.arg0);
    r0 = pxsim_Array__push(globals.infoStateStack___4423, s.tmp_0);
    globals.infoState___4421 = (undefined);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_inline__P4425.info = {"start":1996,"length":259,"line":75,"column":29,"endLine":84,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["oldScene"]}

function info_inline__P4425_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_inline__P4425, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function info_inline__P4440(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___4441 = undefined;
    s.nextState___4450 = undefined;
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 19; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___4441 = (r0);
    globals.infoState___4421 = (undefined);
    s.tmp_0 = r0 = globals.infoStateStack___4423;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals.infoStateStack___4423);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array_.pop(globals.infoStateStack___4423);
    s.nextState___4450 = (r0);
    s.tmp_2 = if_scene_1_mk(s);
    s.tmp_2.arg0 = s.nextState___4450;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "scene");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["scene"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["scene"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 20; s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.scene___4441);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = if_state_1_mk(s);
    s.tmp_3.arg0 = s.nextState___4450;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "state");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["state"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["state"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 21; s.pc = 9; return s.tmp_3; }
    }
  case 9:
    r0 = s.retval;
    globals.infoState___4421 = (r0);
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__push(globals.infoStateStack___4423, s.nextState___4450);
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_inline__P4440.info = {"start":2287,"length":376,"line":86,"column":28,"endLine":97,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":[]}

function info_inline__P4440_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_inline__P4440, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___4441: undefined,
  nextState___4450: undefined,
} }





function inline__P7337(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_up__P4080_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 165; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7337.info = {"start":9041,"length":28,"line":306,"column":53,"endLine":308,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7337_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7337, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7344(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_up__P4080_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 167; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7344.info = {"start":9126,"length":28,"line":309,"column":54,"endLine":311,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7344_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7344, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7350(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_down__P4081_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 169; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7350.info = {"start":9212,"length":30,"line":312,"column":55,"endLine":314,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7350_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7350, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7356(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_down__P4081_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 171; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7356.info = {"start":9301,"length":30,"line":315,"column":56,"endLine":317,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7356_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7356, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7362(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_left__P4082_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 173; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7362.info = {"start":9389,"length":30,"line":318,"column":55,"endLine":320,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7362_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7362, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_left__P4082_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 175; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7368.info = {"start":9478,"length":30,"line":321,"column":56,"endLine":323,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7374(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_right__P4083_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 177; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7374.info = {"start":9567,"length":31,"line":324,"column":56,"endLine":326,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7374_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7374, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7380(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_right__P4083_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 179; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7380.info = {"start":9658,"length":31,"line":327,"column":57,"endLine":329,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7380_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7380, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7386(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_putLetter__P4084_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 181; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7386.info = {"start":9744,"length":35,"line":330,"column":52,"endLine":332,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7386_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7386, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function inline__P7392(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = Keyboard_del__P4085_mk(s);
    s.tmp_0.arg0 = globals.keyboard___4091;
    s.callLocIdx = 183; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
inline__P7392.info = {"start":9834,"length":29,"line":333,"column":52,"endLine":335,"endColumn":1,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function inline__P7392_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: inline__P7392, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_setRepeatDefault__P1994(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    globals.defaultRepeatDelay___4357 = (s.arg0);
    globals.defaultRepeatInterval___4359 = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_setRepeatDefault__P1994.info = {"start":9726,"length":151,"line":278,"column":4,"endLine":281,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setRepeatDefault","argumentNames":["delay","interval"]}

function controller_setRepeatDefault__P1994_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_setRepeatDefault__P1994, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Keyboard_del__P4085(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = s.arg0.fields["disabled"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_1 = GuessesUI_del__P4064_mk(s);
    r0 = s.arg0.fields["ui"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 140; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = s.arg0.fields["_asking"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = Keyboard_stopAsking__P4087_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 141; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
  case 3:
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_del__P4085.info = {"start":7236,"length":147,"line":242,"column":4,"endLine":248,"endColumn":5,"fileName":"main.ts","functionName":"del","argumentNames":["this"]}

function Keyboard_del__P4085_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_del__P4085, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Keyboard_stopAsking__P4087(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_asking"] = (false);
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["keys"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = Keyboard_stopAsking_inline__P7226;
    s.callLocIdx = 148; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_scale__P2162_mk(s);
    r0 = s.arg0.fields["confirmText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 149; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = Keyboard_select__P4088_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg0.fields["selected"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 150; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_stopAsking__P4087.info = {"start":7613,"length":262,"line":260,"column":4,"endLine":269,"endColumn":5,"fileName":"main.ts","functionName":"stopAsking","argumentNames":["this"]}

function Keyboard_stopAsking__P4087_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_stopAsking__P4087, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Keyboard_stopAsking_inline__P7226(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = Keyboard_stopAsking_inline__P7230;
    s.callLocIdx = 147; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_stopAsking_inline__P7226.info = {"start":7691,"length":104,"line":262,"column":26,"endLine":266,"endColumn":9,"fileName":"main.ts","functionName":"inline","argumentNames":["column"]}

function Keyboard_stopAsking_inline__P7226_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_stopAsking_inline__P7226, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Keyboard_stopAsking_inline__P7230(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_scale__P2162_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 146; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_stopAsking_inline__P7230.info = {"start":7730,"length":53,"line":263,"column":27,"endLine":265,"endColumn":13,"fileName":"main.ts","functionName":"inline","argumentNames":["key"]}

function Keyboard_stopAsking_inline__P7230_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_stopAsking_inline__P7230, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Keyboard_select__P4088(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.column___7244 = undefined;
    s.keyIndex___7254 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = s.arg0.fields["_asking"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_1 = Math_constrain__P284_mk(s);
    s.tmp_2 = if_column_1_mk(s);
    s.tmp_2.arg0 = s.arg1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "column");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["column"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["column"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 151; s.pc = 5; return s.tmp_2; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    r0 = s.arg0.fields["keys"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 152; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.column___7244 = (r0);
    s.tmp_0 = Math_constrain__P284_mk(s);
    s.tmp_1 = if_keyIndex_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "keyIndex");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["keyIndex"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["keyIndex"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 153; s.pc = 7; return s.tmp_1; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    r0 = s.arg0.fields["keys"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.column___7244);
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 154; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.keyIndex___7254 = (r0);
    s.tmp_0 = Keyboard_updateKeyColors__P4089_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 155; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = s.arg0.fields["keys"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.column___7244);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.keyIndex___7254);
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["fg"] = (3);
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    r0 = s.arg0.fields["keys"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.column___7244);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.keyIndex___7254);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 156; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "column", s.column___7244);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "keyIndex", s.keyIndex___7254);
    r0 = (s.arg0).fields["selected"] = (s.tmp_0);
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_select__P4088.info = {"start":7881,"length":450,"line":271,"column":4,"endLine":282,"endColumn":5,"fileName":"main.ts","functionName":"select","argumentNames":["this","coord"]}

function Keyboard_select__P4088_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_select__P4088, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  column___7244: undefined,
  keyIndex___7254: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function TextSprite_update__P4039(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.borderAndPadding___15199 = undefined;
    s.iconWidth___15211 = undefined;
    s.iconHeight___15225 = undefined;
    s.font___15232 = undefined;
    s.width___15240 = undefined;
    s.height___15253 = undefined;
    s.img___15263 = undefined;
    s.iconHeightOffset___15294 = undefined;
    s.textHeightOffset___15306 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSprite__C4037_VT)) failedCast(r0);
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["padding"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["outlineWidth"];
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.borderAndPadding___15199 = (r0);
    r0 = s.arg0.fields["icon"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["icon"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["padding"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["outlineWidth"];
    s.tmp_5 = r0;
    r0 = (s.tmp_1 + s.tmp_5);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.iconWidth___15211 = (s.tmp_6);
    r0 = s.arg0.fields["icon"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["icon"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_1);
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.iconHeight___15225 = (s.tmp_2);
    s.tmp_0 = textsprite_getFontForTextAndHeight__P4047_mk(s);
    r0 = s.arg0.fields["text"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxFontHeight"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1500; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.font___15232 = (r0);
    s.tmp_1 = r0 = s.iconWidth___15211;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = s.font___15232;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1501; s.pc = 10; return s.tmp_4; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["text"];
    s.tmp_6 = r0;
    r0 = pxsim_String_.length(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (2 * s.borderAndPadding___15199);
    s.tmp_7 = r0;
    r0 = (s.tmp_0 + s.tmp_7);
    s.width___15240 = (r0);
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = s.iconHeight___15225;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___15232;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1502; s.pc = 12; return s.tmp_2; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1503; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (2 * s.borderAndPadding___15199);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.height___15253 = (r0);
    r0 = pxsim.image.create(s.width___15240, s.height___15253);
    s.img___15263 = (r0);
    r0 = s.arg0.fields["borderColor"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.fill(s.img___15263, s.tmp_0);
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = s.img___15263;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_0.arg2 = r0;
    s.tmp_1 = r0 = s.width___15240;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg3 = r0;
    s.tmp_4 = r0 = s.height___15253;
    r0 = s.arg0.fields["borderWidth"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["bg"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1504; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    r0 = s.arg0.fields["icon"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = (s.height___15253 - s.iconHeight___15225);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 2);
    s.iconHeightOffset___15294 = (r0);
    s.tmp_0 = textsprite_renderScaledImage__P4046_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.img___15263;
    s.tmp_0.arg2 = s.borderAndPadding___15199;
    s.tmp_0.arg3 = s.iconHeightOffset___15294;
    s.tmp_0.arg4 = 0;
    s.callLocIdx = 1505; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
  case 6:
    s.tmp_1 = r0 = s.height___15253;
    s.tmp_3 = if_charHeight_1_mk(s);
    s.tmp_3.arg0 = s.font___15232;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1506; s.pc = 15; return s.tmp_3; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    s.textHeightOffset___15306 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = s.img___15263;
    r0 = s.arg0.fields["text"];
    s.tmp_0.arg1 = r0;
    r0 = (s.iconWidth___15211 + s.borderAndPadding___15199);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.textHeightOffset___15306;
    r0 = s.arg0.fields["fg"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___15232;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1507; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    r0 = s.arg0.fields["outlineWidth"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_2 = textsprite_outlineOtherColor__P4049_mk(s);
    s.tmp_2.arg0 = s.img___15263;
    r0 = s.arg0.fields["fg"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["outlineWidth"];
    s.tmp_2.arg2 = r0;
    r0 = s.arg0.fields["outlineColor"];
    s.tmp_2.arg3 = r0;
    s.callLocIdx = 1508; s.pc = 17; return s.tmp_2;
  case 17:
    r0 = s.retval;
  case 7:
  case 8:
    s.tmp_0 = Sprite_setImage__P2178_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.img___15263;
    s.callLocIdx = 1509; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSprite_update__P4039.info = {"start":678,"length":1260,"line":26,"column":4,"endLine":45,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"update","argumentNames":["this"]}

function TextSprite_update__P4039_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSprite_update__P4039, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  borderAndPadding___15199: undefined,
  iconWidth___15211: undefined,
  iconHeight___15225: undefined,
  font___15232: undefined,
  width___15240: undefined,
  height___15253: undefined,
  img___15263: undefined,
  iconHeightOffset___15294: undefined,
  textHeightOffset___15306: undefined,
  arg0: undefined,
} }





function textsprite_outlineOtherColor__P4049(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.toOutlineX___15343 = undefined;
    s.toOutlineY___15345 = undefined;
    s.x___15347 = undefined;
    s.y___15353 = undefined;
    s.sx___15359 = undefined;
    s.sy___15364 = undefined;
    s.i___15443 = undefined;
    s.x___15449 = undefined;
    s.y___15453 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.toOutlineX___15343 = (r0);
    r0 = pxsim_Array__mk();
    s.toOutlineY___15345 = (r0);
    s.x___15347 = (0);
  case 1:
    s.tmp_1 = r0 = s.x___15347;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 21; continue; }
    s.y___15353 = (0);
  case 2:
    s.tmp_1 = r0 = s.y___15353;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.sx___15359 = (0);
  case 3:
    r0 = (s.sx___15359 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.sy___15364 = (0);
  case 4:
    r0 = (s.sy___15364 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = (s.sx___15359 + s.sy___15364);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    { step = 17; continue; }
  case 5:
  case 6:
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.x___15347, s.y___15353);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 === s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    { step = 17; continue; }
  case 7:
  case 8:
    s.tmp_7 = r0 = s.arg0;
    r0 = (s.x___15347 + s.sx___15359);
    s.tmp_8 = r0;
    r0 = (s.y___15353 + s.sy___15364);
    s.tmp_9 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_7, s.tmp_8, s.tmp_9);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 === s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_5;
    { step = 10; continue; }
  case 9:
    s.tmp_11 = r0 = s.arg0;
    r0 = (s.x___15347 - s.sx___15359);
    s.tmp_12 = r0;
    r0 = (s.y___15353 + s.sy___15364);
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_11, s.tmp_12, s.tmp_13);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 === s.arg1);
  case 10:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBool(s.tmp_14);
    if (!r0) { step = 11; continue; }
    r0 = s.tmp_14;
    { step = 12; continue; }
  case 11:
    s.tmp_16 = r0 = s.arg0;
    r0 = (s.x___15347 + s.sx___15359);
    s.tmp_17 = r0;
    r0 = (s.y___15353 - s.sy___15364);
    s.tmp_18 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_16, s.tmp_17, s.tmp_18);
    s.tmp_15 = r0;
    r0 = (s.tmp_15 === s.arg1);
  case 12:
    // jmp value (already in r0)
    s.tmp_19 = r0;
    r0 = pxsim_numops_toBool(s.tmp_19);
    if (!r0) { step = 13; continue; }
    r0 = s.tmp_19;
    { step = 14; continue; }
  case 13:
    s.tmp_21 = r0 = s.arg0;
    r0 = (s.x___15347 - s.sx___15359);
    s.tmp_22 = r0;
    r0 = (s.y___15353 - s.sy___15364);
    s.tmp_23 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_21, s.tmp_22, s.tmp_23);
    s.tmp_20 = r0;
    r0 = (s.tmp_20 === s.arg1);
  case 14:
    // jmp value (already in r0)
    s.tmp_24 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_24);
    if (!r0) { step = 15; continue; }
    r0 = pxsim_Array__push(s.toOutlineX___15343, s.x___15347);
    r0 = pxsim_Array__push(s.toOutlineY___15345, s.y___15353);
  case 15:
  case 16:
  case 17:
    r0 = (s.sy___15364 + 1);
    s.sy___15364 = (r0);
    { step = 4; continue; }
  case 18:
    r0 = (s.sx___15359 + 1);
    s.sx___15359 = (r0);
    { step = 3; continue; }
  case 19:
    r0 = (s.y___15353 + 1);
    s.y___15353 = (r0);
    { step = 2; continue; }
  case 20:
    r0 = (s.x___15347 + 1);
    s.x___15347 = (r0);
    { step = 1; continue; }
  case 21:
    s.i___15443 = (0);
  case 22:
    s.tmp_1 = r0 = s.i___15443;
    r0 = pxsim_Array__length(s.toOutlineX___15343);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    r0 = pxsim_Array__getAt(s.toOutlineX___15343, s.i___15443);
    s.x___15449 = (r0);
    r0 = pxsim_Array__getAt(s.toOutlineY___15345, s.i___15443);
    s.y___15453 = (r0);
    r0 = pxsim_ImageMethods.setPixel(s.arg0, s.x___15449, s.y___15453, s.arg3);
    r0 = (s.i___15443 + 1);
    s.i___15443 = (r0);
    { step = 22; continue; }
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
textsprite_outlineOtherColor__P4049.info = {"start":5293,"length":1299,"line":148,"column":4,"endLine":176,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"outlineOtherColor","argumentNames":["img","targetColor","outlineWidth","outlineColor"]}

function textsprite_outlineOtherColor__P4049_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: textsprite_outlineOtherColor__P4049, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  toOutlineX___15343: undefined,
  toOutlineY___15345: undefined,
  x___15347: undefined,
  y___15353: undefined,
  sx___15359: undefined,
  sy___15364: undefined,
  i___15443: undefined,
  x___15449: undefined,
  y___15453: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function textsprite_getFontForTextAndHeight__P4047(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.baseFont___15526 = undefined;
    s.hasUnicode___15530 = undefined;
    s.availableFonts___15534 = undefined;
    s.remainders___15542 = undefined;
    s.fontIdx___15552 = undefined;
    s.font___15567 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = image_getFontForText__P1774_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1511; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.baseFont___15526 = (r0);
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = s.baseFont___15526;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1512; s.pc = 4; return s.tmp_1; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 === 12);
    s.hasUnicode___15530 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.hasUnicode___15530);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.baseFont___15526);
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_1, globals.font8___1772);
    r0 = pxsim_Array__push(s.tmp_1, globals.font5___1777);
    r0 = s.tmp_1;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.availableFonts___15534 = (s.tmp_2);
    r0 = pxsim_pxtcore_mkAction(1, remainders_inline__P15544);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayMap__P106_mk(s);
    s.tmp_1.arg0 = s.availableFonts___15534;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1514; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.remainders___15542 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, fontIdx_inline__P15556);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.remainders___15542);
    s.tmp_1 = helpers_arrayReduce__P112_mk(s);
    s.tmp_1.arg0 = s.remainders___15542;
    s.tmp_1.arg1 = s.tmp_0;
    s.tmp_1.arg2 = 99;
    s.callLocIdx = 1515; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.fontIdx___15552 = (r0);
    r0 = pxsim_Array__getAt(s.availableFonts___15534, s.fontIdx___15552);
    s.font___15567 = (r0);
    s.tmp_0 = image_scaledFont__P1776_mk(s);
    s.tmp_0.arg0 = s.font___15567;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = if_charHeight_1_mk(s);
    s.tmp_3.arg0 = s.font___15567;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1516; s.pc = 8; return s.tmp_3; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1517; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
textsprite_getFontForTextAndHeight__P4047.info = {"start":4027,"length":663,"line":116,"column":4,"endLine":126,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"getFontForTextAndHeight","argumentNames":["text","maxHeight"]}

function textsprite_getFontForTextAndHeight__P4047_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: textsprite_getFontForTextAndHeight__P4047, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  baseFont___15526: undefined,
  hasUnicode___15530: undefined,
  availableFonts___15534: undefined,
  remainders___15542: undefined,
  fontIdx___15552: undefined,
  font___15567: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function remainders_inline__P15544(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.caps[0];
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1513; s.pc = 1; return s.tmp_2; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 % s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
remainders_inline__P15544.info = {"start":4455,"length":29,"line":122,"column":46,"endLine":122,"endColumn":75,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"inline","argumentNames":["s"]}

function remainders_inline__P15544_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: remainders_inline__P15544, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function fontIdx_inline__P15556(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__getAt(s.caps[0], s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg2;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
fontIdx_inline__P15556.info = {"start":4528,"length":39,"line":123,"column":42,"endLine":123,"endColumn":81,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"inline","argumentNames":["p","n","i"]}

function fontIdx_inline__P15556_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: fontIdx_inline__P15556, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function image_scaledFont__P1776(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 | 0);
    s.arg1 = (r0);
    r0 = (s.arg1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = s.arg0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 132; s.pc = 6; return s.tmp_4; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charWidth", s.tmp_2);
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.arg0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 133; s.pc = 7; return s.tmp_7; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 * s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "charHeight", s.tmp_5);
    s.tmp_9 = if_data_1_mk(s);
    s.tmp_9.arg0 = s.arg0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "data");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["data"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["data"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 134; s.pc = 8; return s.tmp_9; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "data", s.tmp_8);
    s.tmp_11 = if_multiplier_1_mk(s);
    s.tmp_11.arg0 = s.arg0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "multiplier");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["multiplier"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["multiplier"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 135; s.pc = 9; return s.tmp_11; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_10);
    if (!r0) { step = 3; continue; }
    s.tmp_12 = r0 = s.arg1;
    s.tmp_14 = if_multiplier_1_mk(s);
    s.tmp_14.arg0 = s.arg0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "multiplier");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["multiplier"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["multiplier"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 136; s.pc = 10; return s.tmp_14; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 * s.tmp_13);
    { step = 4; continue; }
  case 3:
    r0 = s.arg1;
  case 4:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_1, "multiplier", s.tmp_15);
    r0 = s.tmp_1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_scaledFont__P1776.info = {"start":12096,"length":331,"line":150,"column":4,"endLine":160,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"scaledFont","argumentNames":["f","size"]}

function image_scaledFont__P1776_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_scaledFont__P1776, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function image_getFontForText__P1774(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___8697 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.i___8697 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___8697;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___8697);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 > 8192);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    r0 = globals.font12___1773;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.i___8697 + 1);
    s.i___8697 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = globals.font8___1772;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
image_getFontForText__P1774.info = {"start":11713,"length":259,"line":136,"column":4,"endLine":143,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"getFontForText","argumentNames":["text"]}

function image_getFontForText__P1774_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_getFontForText__P1774, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___8697: undefined,
  arg0: undefined,
} }





function helpers_arrayReduce__P112(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___15073 = undefined;
    s.i___15076 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.len___15073 = (r0);
    s.i___15076 = (0);
  case 1:
    r0 = (s.i___15076 < s.len___15073);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = lambda_4_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.arg2;
    r0 = pxsim_Array__getAt(s.arg0, s.i___15076);
    s.tmp_1.arg1 = r0;
    s.tmp_1.arg2 = s.i___15076;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 8; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.arg2 = (r0);
    r0 = (s.i___15076 + 1);
    s.i___15076 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = s.arg2;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayReduce__P112.info = {"start":8316,"length":317,"line":280,"column":4,"endLine":286,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayReduce","argumentNames":["arr","callbackfn","initialValue"]}

function helpers_arrayReduce__P112_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayReduce__P112, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___15073: undefined,
  i___15076: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_arrayMap__P106(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___15604 = undefined;
    s.len___15606 = undefined;
    s.i___15609 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___15604 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___15606 = (r0);
    s.i___15609 = (0);
  case 1:
    r0 = (s.i___15609 < s.len___15606);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.res___15604;
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___15609);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.i___15609;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 4; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = (s.i___15609 + 1);
    s.i___15609 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = s.res___15604;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayMap__P106.info = {"start":6528,"length":299,"line":229,"column":4,"endLine":236,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayMap","argumentNames":["arr","callbackfn"]}

function helpers_arrayMap__P106_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayMap__P106, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  res___15604: undefined,
  len___15606: undefined,
  i___15609: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function textsprite_renderScaledImage__P4046(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___15470 = undefined;
    s.tile___15472 = undefined;
    s.i___15474 = undefined;
    s.j___15480 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.scale___15470 = (s.arg4);
    s.tile___15472 = (s.arg0);
    s.i___15474 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___15474;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.j___15480 = (0);
  case 2:
    s.tmp_1 = r0 = s.j___15480;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.i___15474, s.j___15480);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 != 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.tmp_5 = r0 = s.arg1;
    s.tmp_7 = r0 = s.arg2;
    r0 = (s.i___15474 >> s.scale___15470);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_6 = r0;
    s.tmp_10 = r0 = s.arg3;
    r0 = (s.j___15480 >> s.scale___15470);
    s.tmp_11 = r0;
    r0 = (s.tmp_10 + s.tmp_11);
    s.tmp_9 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.i___15474, s.j___15480);
    s.tmp_12 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_5, s.tmp_6, s.tmp_9, s.tmp_12);
  case 3:
  case 4:
    s.tmp_0 = r0 = s.j___15480;
    r0 = (1 << s.scale___15470);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.j___15480 = (r0);
    { step = 2; continue; }
  case 5:
    s.tmp_0 = r0 = s.i___15474;
    r0 = (1 << s.scale___15470);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.i___15474 = (r0);
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
textsprite_renderScaledImage__P4046.info = {"start":3500,"length":521,"line":104,"column":4,"endLine":114,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"renderScaledImage","argumentNames":["source","destination","x","y","downScalePowerOfTwo"]}

function textsprite_renderScaledImage__P4046_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: textsprite_renderScaledImage__P4046, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  scale___15470: undefined,
  tile___15472: undefined,
  i___15474: undefined,
  j___15480: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function Sprite_setImage__P2178(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = (s.arg1 === s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    s.tmp_0 = Sprite__C2128_v5_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2128_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.recalcSize;
    s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setImage__P2178.info = {"start":9273,"length":131,"line":332,"column":4,"endLine":336,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setImage","argumentNames":["this","img"]}

function Sprite_setImage__P2178_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setImage__P2178, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_recalcSize__P4367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_sx__P2157_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 387; s.pc = 1; return s.tmp_6;
  case 1:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_3 = r0;
    s.tmp_6 = Sprite_sy__P2159_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 389; s.pc = 2; return s.tmp_6;
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    s.tmp_0 = Sprite_resetHitbox__P2180_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 391; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_recalcSize__P4367.info = {"start":11085,"length":178,"line":396,"column":4,"endLine":400,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"recalcSize","argumentNames":["this"]}

function Sprite_recalcSize__P4367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_recalcSize__P4367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function Sprite_resetHitbox__P2180(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_hitbox"] = (null);
    s.tmp_0 = Sprite__C2128_v4_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2128_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.setHitbox;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_resetHitbox__P2180.info = {"start":9532,"length":76,"line":342,"column":4,"endLine":345,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"resetHitbox","argumentNames":["this"]}

function Sprite_resetHitbox__P2180_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_resetHitbox__P2180, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_setHitbox__P2181(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.newHitBox___7694 = undefined;
    s.oMinX___7708 = undefined;
    s.oMinY___7712 = undefined;
    s.oMaxX___7716 = undefined;
    s.oMaxY___7723 = undefined;
    s.nMinX___7730 = undefined;
    s.nMinY___7733 = undefined;
    s.nMaxX___7736 = undefined;
    s.nMaxY___7742 = undefined;
    s.xDiff___7748 = undefined;
    s.yDiff___7759 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = game_calculateHitBox__P2013_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 369; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.newHitBox___7694 = (r0);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = game_Hitbox_isValid__P2010_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 370; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = (s.arg0).fields["_hitbox"] = (s.newHitBox___7694);
    { step = 9; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["ox"];
    s.oMinX___7708 = (r0);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["oy"];
    s.oMinY___7712 = (r0);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["width"];
    s.tmp_0 = r0;
    r0 = (s.oMinX___7708 + s.tmp_0);
    s.oMaxX___7716 = (r0);
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["height"];
    s.tmp_0 = r0;
    r0 = (s.oMinY___7712 + s.tmp_0);
    s.oMaxY___7723 = (r0);
    r0 = s.newHitBox___7694.fields["ox"];
    s.nMinX___7730 = (r0);
    r0 = s.newHitBox___7694.fields["oy"];
    s.nMinY___7733 = (r0);
    r0 = s.newHitBox___7694.fields["width"];
    s.tmp_0 = r0;
    r0 = (s.nMinX___7730 + s.tmp_0);
    s.nMaxX___7736 = (r0);
    r0 = s.newHitBox___7694.fields["height"];
    s.tmp_0 = r0;
    r0 = (s.nMinY___7733 + s.tmp_0);
    s.nMaxY___7742 = (r0);
    s.tmp_1 = Fx_abs__P165_mk(s);
    r0 = (s.oMinX___7708 - s.nMinX___7730);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 376; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Fx_abs__P165_mk(s);
    r0 = (s.oMaxX___7716 - s.nMaxX___7736);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 378; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    s.xDiff___7748 = (r0);
    s.tmp_1 = Fx_abs__P165_mk(s);
    r0 = (s.oMinY___7712 - s.nMinY___7733);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 381; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Fx_abs__P165_mk(s);
    r0 = (s.oMaxY___7723 - s.nMaxY___7742);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 383; s.pc = 15; return s.tmp_3;
  case 15:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    s.yDiff___7759 = (r0);
    r0 = (s.arg0).fields["_hitbox"] = (s.newHitBox___7694);
    r0 = (s.xDiff___7748 <= 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1).fields["ox"] = (s.oMinX___7708);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    r0 = (s.oMaxX___7716 - s.oMinX___7708);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["width"] = (s.tmp_1);
  case 5:
  case 6:
    r0 = (s.yDiff___7759 <= 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1).fields["oy"] = (s.oMinY___7712);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    r0 = (s.oMaxY___7723 - s.oMinY___7712);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["height"] = (s.tmp_1);
  case 7:
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setHitbox__P2181.info = {"start":9614,"length":1324,"line":347,"column":4,"endLine":386,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setHitbox","argumentNames":["this"]}

function Sprite_setHitbox__P2181_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setHitbox__P2181, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  newHitBox___7694: undefined,
  oMinX___7708: undefined,
  oMinY___7712: undefined,
  oMaxX___7716: undefined,
  oMaxY___7723: undefined,
  nMinX___7730: undefined,
  nMinY___7733: undefined,
  nMaxX___7736: undefined,
  nMaxY___7742: undefined,
  xDiff___7748: undefined,
  yDiff___7759: undefined,
  arg0: undefined,
} }





function game_calculateHitBox__P2013(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___7855 = undefined;
    s.minX___7858 = undefined;
    s.minY___7862 = undefined;
    s.maxX___7866 = undefined;
    s.maxY___7868 = undefined;
    s.c___7870 = undefined;
    s.fxc___7871 = undefined;
    s.r___7878 = undefined;
    s.fxr___7879 = undefined;
    s.width___7943 = undefined;
    s.height___7951 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = game_Hitbox_isValid__P2010_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 287; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["_hitbox"];
    { step = 11; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["_image"];
    s.i___7855 = (r0);
    r0 = pxsim_ImageMethods.width(s.i___7855);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * 256);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 | 0);
    s.minX___7858 = (r0);
    r0 = pxsim_ImageMethods.height(s.i___7855);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * 256);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 | 0);
    s.minY___7862 = (r0);
    s.maxX___7866 = (0);
    s.maxY___7868 = (0);
    s.c___7870 = (0);
    s.fxc___7871 = (0);
  case 5:
    s.tmp_1 = r0 = s.c___7870;
    r0 = pxsim_ImageMethods.width(s.i___7855);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.r___7878 = (0);
    s.fxr___7879 = (0);
  case 6:
    s.tmp_1 = r0 = s.r___7878;
    r0 = pxsim_ImageMethods.height(s.i___7855);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_ImageMethods.getPixel(s.i___7855, s.c___7870, s.r___7878);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.tmp_4 = Fx_min__P166_mk(s);
    s.tmp_4.arg0 = s.minX___7858;
    s.tmp_4.arg1 = s.fxc___7871;
    s.callLocIdx = 291; s.pc = 13; return s.tmp_4;
  case 13:
    r0 = s.retval;
    s.minX___7858 = (r0);
    s.tmp_0 = Fx_min__P166_mk(s);
    s.tmp_0.arg0 = s.minY___7862;
    s.tmp_0.arg1 = s.fxr___7879;
    s.callLocIdx = 292; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.minY___7862 = (r0);
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_0.arg0 = s.maxX___7866;
    s.tmp_0.arg1 = s.fxc___7871;
    s.callLocIdx = 293; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.maxX___7866 = (r0);
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_0.arg0 = s.maxY___7868;
    s.tmp_0.arg1 = s.fxr___7879;
    s.callLocIdx = 294; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.maxY___7868 = (r0);
  case 7:
  case 8:
    r0 = (s.r___7878 + 1);
    s.r___7878 = (r0);
    r0 = (s.fxr___7879 + 256);
    s.tmp_0 = r0;
    s.fxr___7879 = (r0);
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 9:
    r0 = (s.c___7870 + 1);
    s.c___7870 = (r0);
    r0 = (s.fxc___7871 + 256);
    s.tmp_0 = r0;
    s.fxc___7871 = (r0);
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 10:
    r0 = s.arg0.fields["_sx"];
    s.tmp_0 = r0;
    r0 = pxsim.Math_.imul(s.minX___7858, s.tmp_0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >> 8);
    s.minX___7858 = (r0);
    r0 = s.arg0.fields["_sy"];
    s.tmp_0 = r0;
    r0 = pxsim.Math_.imul(s.minY___7862, s.tmp_0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >> 8);
    s.minY___7862 = (r0);
    r0 = s.arg0.fields["_sx"];
    s.tmp_0 = r0;
    r0 = pxsim.Math_.imul(s.maxX___7866, s.tmp_0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >> 8);
    s.maxX___7866 = (r0);
    r0 = s.arg0.fields["_sy"];
    s.tmp_0 = r0;
    r0 = pxsim.Math_.imul(s.maxY___7868, s.tmp_0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >> 8);
    s.maxY___7868 = (r0);
    r0 = (s.maxX___7866 - s.minX___7858);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_sx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.width___7943 = (r0);
    r0 = (s.maxY___7868 - s.minY___7862);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_sy"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.height___7951 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(game_Hitbox__C1998_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_Hitbox_constructor__P2005_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.width___7943;
    s.tmp_1.arg3 = s.height___7951;
    r0 = (s.minX___7858 & -256);
    s.tmp_1.arg4 = r0;
    r0 = (s.minY___7862 & -256);
    s.tmp_1.arg5 = r0;
    s.callLocIdx = 307; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    r0 = s.tmp_0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
game_calculateHitBox__P2013.info = {"start":1820,"length":1086,"line":62,"column":4,"endLine":91,"endColumn":5,"fileName":"pxt_modules/game/hitbox.ts","functionName":"calculateHitBox","argumentNames":["s"]}

function game_calculateHitBox__P2013_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_calculateHitBox__P2013, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  i___7855: undefined,
  minX___7858: undefined,
  minY___7862: undefined,
  maxX___7866: undefined,
  maxY___7868: undefined,
  c___7870: undefined,
  fxc___7871: undefined,
  r___7878: undefined,
  fxr___7879: undefined,
  width___7943: undefined,
  height___7951: undefined,
  arg0: undefined,
} }





function Sprite_image__P2177(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_image__P2177.info = {"start":8997,"length":54,"line":322,"column":4,"endLine":324,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"image","argumentNames":["this"]}
Sprite_image__P2177.isGetter = true;

function Sprite_image__P2177_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_image__P2177, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_Hitbox_constructor__P2005(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1998_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Sprite_calcDimensionalHash__P2179_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 249; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["hash"] = (s.tmp_1);
    r0 = (s.arg0).fields["parent"] = (s.arg1);
    r0 = (s.arg0).fields["width"] = (s.arg2);
    r0 = (s.arg0).fields["height"] = (s.arg3);
    r0 = (s.arg0).fields["ox"] = (s.arg4);
    r0 = (s.arg0).fields["oy"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_constructor__P2005.info = {"start":170,"length":288,"line":9,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"inline","argumentNames":["this","parent","width","height","ox","oy"]}

function game_Hitbox_constructor__P2005_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_constructor__P2005, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function Sprite_calcDimensionalHash__P2179(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_width"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_height"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.imul(s.tmp_1, s.tmp_2);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 8);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.revision(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * 256);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 | 0);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.imul(s.tmp_0, s.tmp_4);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Sprite_calcDimensionalHash__P2179.info = {"start":9410,"length":116,"line":338,"column":4,"endLine":340,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"calcDimensionalHash","argumentNames":["this"]}

function Sprite_calcDimensionalHash__P2179_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_calcDimensionalHash__P2179, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function Fx_floor__P168(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 & -256);
    return leave(s, r0)
  default: oops()
} } }
Fx_floor__P168.info = {"start":1919,"length":103,"line":62,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"floor","argumentNames":["v"]}

function Fx_floor__P168_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_floor__P168, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Fx_max__P167(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_max__P167.info = {"start":1797,"length":117,"line":56,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"max","argumentNames":["a","b"]}

function Fx_max__P167_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_max__P167, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_min__P166(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    r0 = s.arg1;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_min__P166.info = {"start":1675,"length":117,"line":50,"column":4,"endLine":55,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"min","argumentNames":["a","b"]}

function Fx_min__P166_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_min__P166, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_mul__P160(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_mul__P160.info = {"start":872,"length":133,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"mul","argumentNames":["a","b"]}

function Fx_mul__P160_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_mul__P160, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_isValid__P2010(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1998_VT)) failedCast(r0);
    r0 = s.arg0.fields["hash"];
    s.tmp_0 = r0;
    s.tmp_2 = Sprite_calcDimensionalHash__P2179_mk(s);
    r0 = s.arg0.fields["parent"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 258; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_isValid__P2010.info = {"start":932,"length":89,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"isValid","argumentNames":["this"]}

function game_Hitbox_isValid__P2010_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_isValid__P2010, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_abs__P165(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (0 - s.arg0);
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Fx_abs__P165.info = {"start":1506,"length":164,"line":44,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"abs","argumentNames":["a"]}

function Fx_abs__P165_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_abs__P165, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_sub__P159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_sub__P159.info = {"start":749,"length":118,"line":26,"column":4,"endLine":28,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"sub","argumentNames":["a","b"]}

function Fx_sub__P159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_sub__P159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_add__P157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_add__P157.info = {"start":511,"length":118,"line":20,"column":4,"endLine":22,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"add","argumentNames":["a","b"]}

function Fx_add__P157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_add__P157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_sy__P2159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_sy"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_sy__P2159.info = {"start":5719,"length":61,"line":209,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sy","argumentNames":["this"]}
Sprite_sy__P2159.isGetter = true;

function Sprite_sy__P2159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sy__P2159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_toFloat__P173(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 / 256);
    return leave(s, r0)
  default: oops()
} } }
Fx_toFloat__P173.info = {"start":2470,"length":81,"line":77,"column":4,"endLine":79,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toFloat","argumentNames":["v"]}

function Fx_toFloat__P173_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toFloat__P173, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Sprite_sx__P2157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_sx"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_sx__P2157.info = {"start":5287,"length":61,"line":196,"column":4,"endLine":198,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sx","argumentNames":["this"]}
Sprite_sx__P2157.isGetter = true;

function Sprite_sx__P2157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sx__P2157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_imagePrint__P1787(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x0___8379 = undefined;
    s.cp___8381 = undefined;
    s.mult___8382 = undefined;
    s.dataW___8387 = undefined;
    s.dataH___8393 = undefined;
    s.byteHeight___8399 = undefined;
    s.charSize___8405 = undefined;
    s.dataSize___8409 = undefined;
    s.fontdata___8413 = undefined;
    s.lastchar___8416 = undefined;
    s.imgBuf___8423 = undefined;
    s.xOffset___8447 = undefined;
    s.yOffset___8448 = undefined;
    s.ch___8463 = undefined;
    s.l___8482 = undefined;
    s.r___8483 = undefined;
    s.off___8485 = undefined;
    s.guess___8486 = undefined;
    s.m___8505 = undefined;
    s.v___8514 = undefined;
    s.i___8570 = undefined;
    s.j___8575 = undefined;
    s.mask___8576 = undefined;
    s.c___8577 = undefined;
    s.n___8594 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg2 | 0);
    s.arg2 = (r0);
    r0 = (s.arg3 | 0);
    s.arg3 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg5);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = image_getFontForText__P1774_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 140; s.pc = 39; return s.tmp_2;
  case 39:
    r0 = s.retval;
    s.arg5 = (r0);
  case 1:
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.arg4 = (1);
  case 3:
  case 4:
    s.x0___8379 = (s.arg2);
    s.cp___8381 = (0);
    s.tmp_1 = if_multiplier_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "multiplier");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["multiplier"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["multiplier"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 141; s.pc = 40; return s.tmp_1; }
    }
  case 40:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = if_multiplier_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "multiplier");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["multiplier"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["multiplier"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 142; s.pc = 41; return s.tmp_2; }
    }
  case 41:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    r0 = 1;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.mult___8382 = (s.tmp_3);
    s.tmp_1 = if_charWidth_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charWidth");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charWidth"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charWidth"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 143; s.pc = 42; return s.tmp_1; }
    }
  case 42:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___8382);
    s.dataW___8387 = (r0);
    s.tmp_1 = if_charHeight_1_mk(s);
    s.tmp_1.arg0 = s.arg5;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "charHeight");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["charHeight"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["charHeight"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 144; s.pc = 43; return s.tmp_1; }
    }
  case 43:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.mult___8382);
    s.dataH___8393 = (r0);
    r0 = (s.dataH___8393 + 7);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 3);
    s.byteHeight___8399 = (r0);
    r0 = (s.byteHeight___8399 * s.dataW___8387);
    s.charSize___8405 = (r0);
    r0 = (2 + s.charSize___8405);
    s.dataSize___8409 = (r0);
    s.tmp_0 = if_data_1_mk(s);
    s.tmp_0.arg0 = s.arg5;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "data");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["data"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["data"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 145; s.pc = 44; return s.tmp_0; }
    }
  case 44:
    r0 = s.retval;
    s.fontdata___8413 = (r0);
    r0 = pxsim.BufferMethods.length(s.fontdata___8413);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, s.dataSize___8409);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.lastchar___8416 = (r0);
    r0 = (s.mult___8382 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = (8 + s.charSize___8405);
    s.tmp_1 = r0;
    r0 = pxsim.control.createBuffer(s.tmp_1);
    s.imgBuf___8423 = (r0);
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___8423, 0, 135);
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___8423, 1, 1);
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___8423, 2, s.dataW___8387);
    r0 = pxsim.BufferMethods.setByte(s.imgBuf___8423, 4, s.dataH___8393);
  case 7:
  case 8:
  case 9:
    s.tmp_1 = r0 = s.cp___8381;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 38; continue; }
    s.xOffset___8447 = (0);
    s.yOffset___8448 = (0);
    s.tmp_0 = r0 = s.arg6;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.cp___8381;
    r0 = pxsim_Array__length(s.arg6);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.tmp_4 = if_xOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___8381);
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "xOffset");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["xOffset"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["xOffset"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 146; s.pc = 45; return s.tmp_4; }
    }
  case 45:
    r0 = s.retval;
    s.xOffset___8447 = (r0);
    s.tmp_0 = if_yOffset_1_mk(s);
    r0 = pxsim_Array__getAt(s.arg6, s.cp___8381);
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "yOffset");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["yOffset"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["yOffset"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 147; s.pc = 46; return s.tmp_0; }
    }
  case 46:
    r0 = s.retval;
    s.yOffset___8448 = (r0);
  case 12:
  case 13:
    s.tmp_0 = r0 = s.cp___8381;
    r0 = (s.tmp_0 + 1);
    s.cp___8381 = (r0);
    r0 = pxsim_String_.charCodeAt(s.arg1, s.tmp_0);
    s.ch___8463 = (r0);
    r0 = (s.ch___8463 == 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_1 = r0 = s.arg3;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = s.arg5;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 148; s.pc = 47; return s.tmp_4; }
    }
  case 47:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.arg3 = (r0);
    s.arg2 = (s.x0___8379);
  case 14:
  case 15:
    r0 = (s.ch___8463 < 32);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    { step = 9; continue; }
  case 16:
  case 17:
    s.l___8482 = (0);
    s.r___8483 = (s.lastchar___8416);
    s.off___8485 = (0);
    r0 = (s.ch___8463 - 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.dataSize___8409);
    s.guess___8486 = (r0);
    r0 = pxsim.BufferMethods.getNumber(s.fontdata___8413, 4, s.guess___8486);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.ch___8463);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.off___8485 = (s.guess___8486);
    { step = 25; continue; }
  case 18:
  case 19:
    r0 = (s.l___8482 <= s.r___8483);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 24; continue; }
    s.tmp_1 = r0 = s.l___8482;
    r0 = (s.r___8483 - s.l___8482);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.m___8505 = (r0);
    s.tmp_0 = r0 = s.fontdata___8413;
    r0 = (s.m___8505 * s.dataSize___8409);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_0, 4, s.tmp_1);
    s.v___8514 = (r0);
    r0 = (s.v___8514 == s.ch___8463);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = (s.m___8505 * s.dataSize___8409);
    s.off___8485 = (r0);
    { step = 24; continue; }
  case 20:
  case 21:
    r0 = (s.v___8514 < s.ch___8463);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    r0 = (s.m___8505 + 1);
    s.l___8482 = (r0);
    { step = 23; continue; }
  case 22:
    r0 = (s.m___8505 - 1);
    s.r___8483 = (r0);
  case 23:
    { step = 19; continue; }
  case 24:
  case 25:
    r0 = (s.mult___8382 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 26; continue; }
    s.tmp_1 = r0 = s.imgBuf___8423;
    s.tmp_3 = r0 = s.fontdata___8413;
    r0 = (s.off___8485 + 2);
    s.tmp_4 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_3, s.tmp_4, s.charSize___8405);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.write(s.tmp_1, 8, s.tmp_2);
    s.tmp_0 = helpers_imageDrawIcon__P1754_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.imgBuf___8423;
    r0 = (s.arg2 + s.xOffset___8447);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg3 + s.yOffset___8448);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg4;
    s.callLocIdx = 149; s.pc = 48; return s.tmp_0;
  case 48:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg2;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg5;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 150; s.pc = 49; return s.tmp_2; }
    }
  case 49:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg2 = (r0);
    { step = 37; continue; }
  case 26:
    r0 = (s.off___8485 + 2);
    s.off___8485 = (r0);
    s.i___8570 = (0);
  case 27:
    r0 = (s.i___8570 < s.dataW___8387);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 36; continue; }
    s.j___8575 = (0);
    s.mask___8576 = (1);
    s.tmp_0 = r0 = s.off___8485;
    r0 = (s.tmp_0 + 1);
    s.off___8485 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___8413, s.tmp_0);
    s.c___8577 = (r0);
  case 28:
    r0 = (s.j___8575 < s.dataH___8393);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 35; continue; }
    r0 = (s.mask___8576 == 256);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 29; continue; }
    s.tmp_2 = r0 = s.off___8485;
    r0 = (s.tmp_2 + 1);
    s.off___8485 = (r0);
    r0 = pxsim.BufferMethods.getByte(s.fontdata___8413, s.tmp_2);
    s.c___8577 = (r0);
    s.mask___8576 = (1);
  case 29:
  case 30:
    s.n___8594 = (0);
  case 31:
    r0 = (s.c___8577 & s.mask___8576);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 32; continue; }
    r0 = (s.n___8594 + 1);
    s.n___8594 = (r0);
    r0 = (s.mask___8576 << 1);
    s.mask___8576 = (r0);
    { step = 31; continue; }
  case 32:
    r0 = pxsim_numops_toBoolDecr(s.n___8594);
    if (!r0) { step = 33; continue; }
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.xOffset___8447 * s.mult___8382);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.tmp_3 = r0 = s.arg3;
    r0 = (s.j___8575 + s.yOffset___8448);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 * s.mult___8382);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.mult___8382;
    r0 = (s.mult___8382 * s.n___8594);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg4;
    s.callLocIdx = 151; s.pc = 50; return s.tmp_0;
  case 50:
    r0 = s.retval;
    r0 = (s.j___8575 + s.n___8594);
    s.j___8575 = (r0);
    { step = 34; continue; }
  case 33:
    r0 = (s.mask___8576 << 1);
    s.mask___8576 = (r0);
    r0 = (s.j___8575 + 1);
    s.j___8575 = (r0);
  case 34:
    { step = 28; continue; }
  case 35:
    r0 = (s.arg2 + s.mult___8382);
    s.arg2 = (r0);
    r0 = (s.i___8570 + 1);
    s.i___8570 = (r0);
    { step = 27; continue; }
  case 36:
  case 37:
    { step = 9; continue; }
  case 38:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrint__P1787.info = {"start":15326,"length":3300,"line":213,"column":4,"endLine":306,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"imagePrint","argumentNames":["img","text","x","y","color","font","offsets"]}

function helpers_imagePrint__P1787_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrint__P1787, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  x0___8379: undefined,
  cp___8381: undefined,
  mult___8382: undefined,
  dataW___8387: undefined,
  dataH___8393: undefined,
  byteHeight___8399: undefined,
  charSize___8405: undefined,
  dataSize___8409: undefined,
  fontdata___8413: undefined,
  lastchar___8416: undefined,
  imgBuf___8423: undefined,
  xOffset___8447: undefined,
  yOffset___8448: undefined,
  ch___8463: undefined,
  l___8482: undefined,
  r___8483: undefined,
  off___8485: undefined,
  guess___8486: undefined,
  m___8505: undefined,
  v___8514: undefined,
  i___8570: undefined,
  j___8575: undefined,
  mask___8576: undefined,
  c___8577: undefined,
  n___8594: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function helpers_imageDrawIcon__P1754(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = helpers_pack__P4261_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg3;
    s.callLocIdx = 121; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods._drawIcon(s.tmp_0, s.tmp_1, s.tmp_2, s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawIcon__P1754.info = {"start":4684,"length":145,"line":155,"column":4,"endLine":157,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawIcon","argumentNames":["img","icon","x","y","c"]}

function helpers_imageDrawIcon__P1754_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawIcon__P1754, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function helpers_pack__P4261(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = -30000;
    s.tmp_2.arg1 = 30000;
    r0 = (s.arg0 | 0);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 119; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 65535);
    s.tmp_0 = r0;
    s.tmp_5 = Math_clamp__P127_mk(s);
    s.tmp_5.arg0 = -30000;
    s.tmp_5.arg1 = 30000;
    r0 = (s.arg1 | 0);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 120; s.pc = 2; return s.tmp_5;
  case 2:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 16);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 | s.tmp_3);
    return leave(s, r0)
  default: oops()
} } }
helpers_pack__P4261.info = {"start":3658,"length":145,"line":130,"column":4,"endLine":132,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"pack","argumentNames":["x","y"]}

function helpers_pack__P4261_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_pack__P4261, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_clamp__P127(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg2;
    s.callLocIdx = 17; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 18; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
Math_clamp__P127.info = {"start":15643,"length":130,"line":528,"column":4,"endLine":530,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"clamp","argumentNames":["min","max","value"]}

function Math_clamp__P127_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_clamp__P127, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_min__P131(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_min__P131.info = {"start":16779,"length":105,"line":565,"column":4,"endLine":568,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"min","argumentNames":["a","b"]}

function Math_min__P131_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_min__P131, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageFillRect__P1755(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P4261_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 122; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P4261_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 123; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._fillRect(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageFillRect__P1755.info = {"start":4834,"length":159,"line":158,"column":4,"endLine":160,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageFillRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageFillRect__P1755_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageFillRect__P1755, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function Math_max__P130(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 >= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg1;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
Math_max__P130.info = {"start":16564,"length":105,"line":556,"column":4,"endLine":559,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"max","argumentNames":["a","b"]}

function Math_max__P130_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_max__P130, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Keyboard_updateKeyColors__P4089(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["keys"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = Keyboard_updateKeyColors_inline__P7287;
    s.callLocIdx = 162; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_updateKeyColors__P4089.info = {"start":8337,"length":587,"line":284,"column":4,"endLine":300,"endColumn":5,"fileName":"main.ts","functionName":"updateKeyColors","argumentNames":["this"]}

function Keyboard_updateKeyColors__P4089_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_updateKeyColors__P4089, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Keyboard_updateKeyColors_inline__P7287(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = Keyboard_updateKeyColors_inline__P7291;
    s.callLocIdx = 161; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_updateKeyColors_inline__P7287.info = {"start":8383,"length":533,"line":285,"column":26,"endLine":299,"endColumn":9,"fileName":"main.ts","functionName":"inline","argumentNames":["column"]}

function Keyboard_updateKeyColors_inline__P7287_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_updateKeyColors_inline__P7287, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Keyboard_updateKeyColors_inline__P7291(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0).fields["bg"] = (0);
    r0 = globals.ui___4090.fields["greenLetters"];
    s.tmp_1 = r0;
    s.tmp_3 = helpers_stringToLowerCase__P121_mk(s);
    r0 = s.arg0.fields["text"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 157; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String_.includes(s.tmp_1, s.tmp_2, undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["fg"] = (7);
    { step = 6; continue; }
  case 1:
    r0 = globals.ui___4090.fields["yellowLetters"];
    s.tmp_1 = r0;
    s.tmp_3 = helpers_stringToLowerCase__P121_mk(s);
    r0 = s.arg0.fields["text"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 158; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String_.includes(s.tmp_1, s.tmp_2, undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = (s.arg0).fields["fg"] = (5);
    { step = 5; continue; }
  case 2:
    r0 = globals.ui___4090.fields["grayLetters"];
    s.tmp_1 = r0;
    s.tmp_3 = helpers_stringToLowerCase__P121_mk(s);
    r0 = s.arg0.fields["text"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 159; s.pc = 9; return s.tmp_3;
  case 9:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String_.includes(s.tmp_1, s.tmp_2, undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = (s.arg0).fields["fg"] = (12);
    { step = 4; continue; }
  case 3:
    r0 = (s.arg0).fields["fg"] = (1);
  case 4:
  case 5:
  case 6:
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 160; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_updateKeyColors_inline__P7291.info = {"start":8422,"length":482,"line":286,"column":27,"endLine":298,"endColumn":13,"fileName":"main.ts","functionName":"inline","argumentNames":["key"]}

function Keyboard_updateKeyColors_inline__P7291_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_updateKeyColors_inline__P7291, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function helpers_stringToLowerCase__P121(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___15144 = undefined;
    s.prev___15145 = undefined;
    s.i___15146 = undefined;
    s.c___15152 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.mkEmpty();
    s.r___15144 = (r0);
    s.prev___15145 = (0);
    s.i___15146 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___15146;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___15146);
    s.c___15152 = (r0);
    r0 = (65 <= s.c___15152);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.c___15152 <= 90);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    if ((s.r___15144) && (s.r___15144).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.r___15144);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___15144) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_7 = helpers_stringSlice__P119_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.tmp_7.arg1 = s.prev___15145;
    s.tmp_7.arg2 = s.i___15146;
    s.callLocIdx = 11; s.pc = 8; return s.tmp_7;
  case 8:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.c___15152 + 32);
    s.tmp_10 = r0;
    r0 = pxsim_String_.fromCharCode(s.tmp_10);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_3);
    s.r___15144 = (r0);
    r0 = (s.i___15146 + 1);
    s.prev___15145 = (r0);
  case 4:
  case 5:
    r0 = (s.i___15146 + 1);
    s.i___15146 = (r0);
    { step = 1; continue; }
  case 6:
    if ((s.r___15144) && (s.r___15144).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.r___15144);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___15144) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = helpers_stringSlice__P119_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.prev___15145;
    s.tmp_3.arg2 = undefined;
    s.callLocIdx = 12; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 14);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 14:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.r___15144 = (r0);
    r0 = s.r___15144;
    return leave(s, r0)
  default: oops()
} } }
helpers_stringToLowerCase__P121.info = {"start":12527,"length":386,"line":420,"column":4,"endLine":432,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringToLowerCase","argumentNames":["s"]}

function helpers_stringToLowerCase__P121_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringToLowerCase__P121, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  r___15144: undefined,
  prev___15145: undefined,
  i___15146: undefined,
  c___15152: undefined,
  arg0: undefined,
} }





function helpers_stringSlice__P119(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___13292 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.length(s.arg0);
    s.len___13292 = (r0);
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = Math_max__P130_mk(s);
    r0 = (s.len___13292 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 10; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.arg1 = (r0);
  case 1:
  case 2:
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.arg2 = (s.len___13292);
    { step = 6; continue; }
  case 3:
    r0 = (s.arg2 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.arg2 = (0);
  case 4:
  case 5:
  case 6:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = (s.len___13292 + s.arg2);
    s.arg2 = (r0);
  case 7:
  case 8:
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = (s.arg2 - s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_String_.substr(s.tmp_0, s.tmp_1, s.tmp_2);
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSlice__P119.info = {"start":11496,"length":440,"line":384,"column":4,"endLine":402,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSlice","argumentNames":["s","start","end"]}

function helpers_stringSlice__P119_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSlice__P119, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___13292: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_constrain__P284(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg1;
    { step = 4; continue; }
  case 1:
    r0 = (s.arg0 > s.arg2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = s.arg2;
    { step = 3; continue; }
  case 2:
    r0 = s.arg0;
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
Math_constrain__P284.info = {"start":1679,"length":147,"line":34,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/base/math.ts","functionName":"constrain","argumentNames":["value","low","high"]}

function Math_constrain__P284_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_constrain__P284, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_scale__P2162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Sprite_sy__P2160_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 353; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_2 = Sprite_sx__P2158_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 354; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_scale__P2162.info = {"start":6306,"length":59,"line":227,"column":4,"endLine":229,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"scale","argumentNames":["this","v"]}

function Sprite_scale__P2162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_scale__P2162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_sy__P2160(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.y___7656 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Sprite_y__P2143_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 345; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.y___7656 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 346; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sy"] = (s.tmp_1);
    s.tmp_0 = Sprite__C2128_v5_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2128_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.recalcSize;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_top__P2191_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.y___7656;
    s.tmp_4 = Sprite_height__P2185_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 348; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 349; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_sy__P2160.info = {"start":5879,"length":158,"line":214,"column":4,"endLine":219,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sy","argumentNames":["this","v"]}

function Sprite_sy__P2160_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sy__P2160, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  y___7656: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_top__P2191(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___15677 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 403; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___15677 = (r0);
    s.tmp_0 = PhysicsEngine__C2298_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___15677;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = 0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_y"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2298_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_top__P2191.info = {"start":12790,"length":256,"line":454,"column":4,"endLine":464,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this","value"]}

function Sprite_top__P2191_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P2191, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  physics___15677: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_moveSprite__P2302(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2298_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_moveSprite__P2302.info = {"start":230,"length":43,"line":13,"column":4,"endLine":13,"endColumn":47,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function PhysicsEngine_moveSprite__P2302_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_moveSprite__P2302, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_top__P2190(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_top__P2190.info = {"start":12647,"length":53,"line":449,"column":4,"endLine":451,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"top","argumentNames":["this"]}
Sprite_top__P2190.isGetter = true;

function Sprite_top__P2190_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_top__P2190, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_height__P2185(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_height"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_height__P2185.info = {"start":11644,"length":61,"line":413,"column":4,"endLine":415,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"height","argumentNames":["this"]}
Sprite_height__P2185.isGetter = true;

function Sprite_height__P2185_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_height__P2185, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_y__P2143(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_y"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_height"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << 8);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_4, 512);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_y__P2143.info = {"start":2893,"length":100,"line":121,"column":4,"endLine":123,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this"]}
Sprite_y__P2143.isGetter = true;

function Sprite_y__P2143_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P2143, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function Fx_div__P162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_div__P162.info = {"start":1145,"length":129,"line":35,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"div","argumentNames":["a","b"]}

function Fx_div__P162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_div__P162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_sx__P2158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___8050 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Sprite_x__P2141_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 339; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.x___8050 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 340; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sx"] = (s.tmp_1);
    s.tmp_0 = Sprite__C2128_v5_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2128_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.recalcSize;
    s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_left__P2187_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.x___8050;
    s.tmp_4 = Sprite_width__P2184_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 342; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 343; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_sx__P2158.info = {"start":5447,"length":158,"line":201,"column":4,"endLine":206,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"sx","argumentNames":["this","v"]}

function Sprite_sx__P2158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_sx__P2158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  x___8050: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P2187(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.physics___15703 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 395; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.physics___15703 = (r0);
    s.tmp_0 = PhysicsEngine__C2298_v2_4_mk(s);
    s.tmp_0.arg0 = s.physics___15703;
    s.tmp_0.arg1 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_x"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2298_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.moveSprite;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_left__P2187.info = {"start":11956,"length":257,"line":424,"column":4,"endLine":434,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this","value"]}

function Sprite_left__P2187_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P2187, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  physics___15703: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_left__P2186(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_left__P2186.info = {"start":11812,"length":53,"line":419,"column":4,"endLine":421,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"left","argumentNames":["this"]}
Sprite_left__P2186.isGetter = true;

function Sprite_left__P2186_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_left__P2186, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_width__P2184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_width"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_width__P2184.info = {"start":11477,"length":59,"line":408,"column":4,"endLine":410,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"width","argumentNames":["this"]}
Sprite_width__P2184.isGetter = true;

function Sprite_width__P2184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_width__P2184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_x__P2141(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_x"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_width"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 << 8);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_4, 512);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_x__P2141.info = {"start":2537,"length":99,"line":110,"column":4,"endLine":112,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this"]}
Sprite_x__P2141.isGetter = true;

function Sprite_x__P2141_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P2141, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function Sprite_scale__P2161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_1 = Sprite_sx__P2157_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 350; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_2 = Sprite_sy__P2159_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 351; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 352; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_scale__P2161.info = {"start":6144,"length":70,"line":222,"column":4,"endLine":224,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"scale","argumentNames":["this"]}
Sprite_scale__P2161.isGetter = true;

function Sprite_scale__P2161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_scale__P2161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function helpers_arrayForEach__P109(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___7634 = undefined;
    s.i___7637 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.len___7634 = (r0);
    s.i___7637 = (0);
  case 1:
    r0 = (s.i___7637 < s.len___7634);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___7637);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___7637;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 6; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.i___7637 + 1);
    s.i___7637 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayForEach__P109.info = {"start":7439,"length":250,"line":254,"column":4,"endLine":259,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayForEach","argumentNames":["arr","callbackfn"]}

function helpers_arrayForEach__P109_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayForEach__P109, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  len___7634: undefined,
  i___7637: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function GuessesUI_del__P4064(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, GuessesUI__C4050_VT)) failedCast(r0);
    s.tmp_0 = TextSprite_setText__P4042_mk(s);
    r0 = s.arg0.fields["guessChars"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["selected"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = "_";
    s.callLocIdx = 69; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = s.arg0.fields["selected"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["guesses"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_5 = GuessesUI_select__P4065_mk(s);
    s.tmp_5.arg0 = s.arg0;
    r0 = s.arg0.fields["selected"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 70; s.pc = 4; return s.tmp_5;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GuessesUI_del__P4064.info = {"start":1749,"length":187,"line":64,"column":4,"endLine":69,"endColumn":5,"fileName":"main.ts","functionName":"del","argumentNames":["this"]}

function GuessesUI_del__P4064_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GuessesUI_del__P4064, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function GuessesUI_select__P4065(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___6738 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, GuessesUI__C4050_VT)) failedCast(r0);
    r0 = s.arg0.fields["guesses"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.i___6738 = (r0);
  case 1:
    s.tmp_1 = r0 = s.i___6738;
    r0 = s.arg0.fields["guesses"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = s.arg0.fields["guessChars"];
    s.tmp_7 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.i___6738);
    s.tmp_6 = r0;
    r0 = (s.tmp_6).fields["fg"] = (1);
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    r0 = s.arg0.fields["guessChars"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.i___6738);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 71; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = (s.i___6738 + 1);
    s.i___6738 = (r0);
    { step = 1; continue; }
  case 2:
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg0.fields["guessChars"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["guessChars"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_5).fields["fg"] = (3);
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    r0 = s.arg0.fields["guessChars"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.arg1);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 72; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = (s.arg0).fields["selected"] = (s.arg1);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GuessesUI_select__P4065.info = {"start":1942,"length":377,"line":71,"column":4,"endLine":83,"endColumn":5,"fileName":"main.ts","functionName":"select","argumentNames":["this","num"]}

function GuessesUI_select__P4065_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GuessesUI_select__P4065, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  i___6738: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function TextSprite_setText__P4042(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSprite__C4037_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg1;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.mkEmpty();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["text"] = (s.tmp_1);
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1510; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSprite_setText__P4042.info = {"start":2447,"length":89,"line":66,"column":4,"endLine":69,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"setText","argumentNames":["this","text"]}

function TextSprite_setText__P4042_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSprite_setText__P4042, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Keyboard_putLetter__P4084(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___7179 = undefined;
    s.letter___7187 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = s.arg0.fields["disabled"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_1 = GuessesUI_putLetter__P4063_mk(s);
    r0 = s.arg0.fields["ui"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg0;
    r0 = s.arg0.fields["keys"];
    s.tmp_3 = r0;
    s.tmp_5 = if_column_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "column");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["column"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["column"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 137; s.pc = 7; return s.tmp_5; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    s.tmp_7 = if_keyIndex_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "keyIndex");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["keyIndex"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["keyIndex"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 138; s.pc = 8; return s.tmp_7; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_6);
    r0 = r0.fields["text"];
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 139; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.i___7179 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___7179;
    r0 = globals.ui___4090.fields["grayLetters"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = globals.ui___4090.fields["grayLetters"];
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_4, s.i___7179);
    s.letter___7187 = (r0);
    r0 = (s.i___7179 + 1);
    s.i___7179 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_putLetter__P4084.info = {"start":6959,"length":271,"line":233,"column":4,"endLine":240,"endColumn":5,"fileName":"main.ts","functionName":"putLetter","argumentNames":["this"]}

function Keyboard_putLetter__P4084_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_putLetter__P4084, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  i___7179: undefined,
  letter___7187: undefined,
  arg0: undefined,
} }





function GuessesUI_putLetter__P4063(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, GuessesUI__C4050_VT)) failedCast(r0);
    r0 = s.arg1.fields["_asking"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_4 = GuessesUI_checkWord__P4066_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 62; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    { step = 11; continue; }
  case 1:
  case 2:
    s.tmp_5 = GuessesUI_select__P4065_mk(s);
    s.tmp_5.arg0 = s.arg0;
    r0 = s.arg0.fields["selected"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 1);
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 63; s.pc = 13; return s.tmp_5;
  case 13:
    r0 = s.retval;
    s.tmp_0 = GuessesUI_assignLetterColors__P4067_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 64; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.tmp_0 = Keyboard_stopAsking__P4087_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 65; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["guesses"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["guesses"] = (s.tmp_1);
    { step = 11; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["selected"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["guessChars"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = (s.arg1).fields["disabled"] = (true);
    { step = 11; continue; }
  case 5:
  case 6:
    r0 = s.arg0.fields["guessChars"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["selected"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    r0 = r0.fields["text"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== "_");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_4 = GuessesUI_select__P4065_mk(s);
    s.tmp_4.arg0 = s.arg0;
    r0 = s.arg0.fields["selected"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + 1);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 66; s.pc = 16; return s.tmp_4;
  case 16:
    r0 = s.retval;
  case 7:
  case 8:
    s.tmp_0 = TextSprite_setText__P4042_mk(s);
    r0 = s.arg0.fields["guessChars"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["selected"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 67; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = s.arg0.fields["selected"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 % s.tmp_3);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_1 === s.tmp_4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_6 = Keyboard_ask__P4086_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 68; s.pc = 18; return s.tmp_6;
  case 18:
    r0 = s.retval;
  case 9:
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GuessesUI_putLetter__P4063.info = {"start":1025,"length":718,"line":35,"column":4,"endLine":62,"endColumn":5,"fileName":"main.ts","functionName":"putLetter","argumentNames":["this","keyboard","letter"]}

function GuessesUI_putLetter__P4063_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GuessesUI_putLetter__P4063, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Keyboard_ask__P4086(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["keys"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = Keyboard_ask_inline__P7207;
    s.callLocIdx = 144; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_scale__P2162_mk(s);
    r0 = s.arg0.fields["confirmText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    s.callLocIdx = 145; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = (s.arg0).fields["_asking"] = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_ask__P4086.info = {"start":7389,"length":218,"line":250,"column":4,"endLine":258,"endColumn":5,"fileName":"main.ts","functionName":"ask","argumentNames":["this"]}

function Keyboard_ask__P4086_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_ask__P4086, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Keyboard_ask_inline__P7207(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = Keyboard_ask_inline__P7211;
    s.callLocIdx = 143; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_ask_inline__P7207.info = {"start":7430,"length":104,"line":251,"column":26,"endLine":255,"endColumn":9,"fileName":"main.ts","functionName":"inline","argumentNames":["column"]}

function Keyboard_ask_inline__P7207_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_ask_inline__P7207, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Keyboard_ask_inline__P7211(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_scale__P2162_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 142; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_ask_inline__P7211.info = {"start":7469,"length":53,"line":252,"column":27,"endLine":254,"endColumn":13,"fileName":"main.ts","functionName":"inline","argumentNames":["key"]}

function Keyboard_ask_inline__P7211_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_ask_inline__P7211, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function GuessesUI_assignLetterColors__P4067(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___6883 = undefined;
    s.char___6900 = undefined;
    s.letter___6905 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, GuessesUI__C4050_VT)) failedCast(r0);
    r0 = s.arg0.fields["guesses"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.i___6883 = (r0);
  case 1:
    s.tmp_1 = r0 = s.i___6883;
    r0 = s.arg0.fields["guesses"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    r0 = s.arg0.fields["guessChars"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.i___6883);
    s.char___6900 = (r0);
    s.tmp_0 = helpers_stringToLowerCase__P121_mk(s);
    r0 = s.char___6900.fields["text"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 83; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.letter___6905 = (r0);
    r0 = s.arg0.fields["word"];
    s.tmp_2 = r0;
    s.tmp_4 = r0 = s.i___6883;
    r0 = s.arg0.fields["guesses"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 * s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_String_.charAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.letter___6905);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = (s.char___6900).fields["fg"] = (7);
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    s.tmp_0.arg0 = s.char___6900;
    s.callLocIdx = 84; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = s.arg0.fields["greenLetters"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.includes(s.tmp_3, s.letter___6905, undefined);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_4 = r0 = s.arg0;
    r0 = s.arg0.fields["greenLetters"];
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.letter___6905) && (s.letter___6905).vtable) {
    setupResume(s, 16);
    pxsim_String__stringConv(s.letter___6905);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.letter___6905) + ""; }
  case 16:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_8);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["greenLetters"] = (s.tmp_5);
  case 2:
  case 3:
    { step = 11; continue; }
  case 4:
    r0 = s.arg0.fields["word"];
    s.tmp_1 = r0;
    r0 = pxsim_String_.includes(s.tmp_1, s.letter___6905, undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = (s.char___6900).fields["fg"] = (5);
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    s.tmp_0.arg0 = s.char___6900;
    s.callLocIdx = 85; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    r0 = s.arg0.fields["yellowLetters"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.includes(s.tmp_3, s.letter___6905, undefined);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_4 = r0 = s.arg0;
    r0 = s.arg0.fields["yellowLetters"];
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.letter___6905) && (s.letter___6905).vtable) {
    setupResume(s, 19);
    pxsim_String__stringConv(s.letter___6905);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.letter___6905) + ""; }
  case 19:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_8);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["yellowLetters"] = (s.tmp_5);
  case 5:
  case 6:
    { step = 10; continue; }
  case 7:
    r0 = (s.char___6900).fields["fg"] = (12);
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    s.tmp_0.arg0 = s.char___6900;
    s.callLocIdx = 86; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    r0 = s.arg0.fields["grayLetters"];
    s.tmp_3 = r0;
    r0 = pxsim_String_.includes(s.tmp_3, s.letter___6905, undefined);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_4 = r0 = s.arg0;
    r0 = s.arg0.fields["grayLetters"];
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 21);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 21:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.letter___6905) && (s.letter___6905).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.letter___6905);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.letter___6905) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_8);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["grayLetters"] = (s.tmp_5);
  case 8:
  case 9:
  case 10:
  case 11:
    r0 = (s.i___6883 + 1);
    s.i___6883 = (r0);
    { step = 1; continue; }
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GuessesUI_assignLetterColors__P4067.info = {"start":3357,"length":892,"line":116,"column":4,"endLine":135,"endColumn":5,"fileName":"main.ts","functionName":"assignLetterColors","argumentNames":["this"]}

function GuessesUI_assignLetterColors__P4067_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GuessesUI_assignLetterColors__P4067, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  i___6883: undefined,
  char___6900: undefined,
  letter___6905: undefined,
  arg0: undefined,
} }





function GuessesUI_checkWord__P4066(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.chosenWord___6786 = undefined;
    s.i___6787 = undefined;
    s.letter___6804 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, GuessesUI__C4050_VT)) failedCast(r0);
    r0 = pxsim_String_.mkEmpty();
    s.chosenWord___6786 = (r0);
    r0 = s.arg0.fields["guesses"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.i___6787 = (r0);
  case 1:
    s.tmp_1 = r0 = s.i___6787;
    r0 = s.arg0.fields["guesses"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_5 = r0;
    r0 = (s.tmp_3 * s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_6 = helpers_stringToLowerCase__P121_mk(s);
    r0 = s.arg0.fields["guessChars"];
    s.tmp_7 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.i___6787);
    r0 = r0.fields["text"];
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 73; s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
    s.letter___6804 = (r0);
    if ((s.chosenWord___6786) && (s.chosenWord___6786).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.chosenWord___6786);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.chosenWord___6786) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.letter___6804) && (s.letter___6804).vtable) {
    setupResume(s, 12);
    pxsim_String__stringConv(s.letter___6804);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.letter___6804) + ""; }
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.chosenWord___6786 = (r0);
    r0 = (s.i___6787 + 1);
    s.i___6787 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = pxsim_Array_.indexOf(globals.words___4094, s.chosenWord___6786, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = game_splash__P2687_mk(s);
    if ((s.chosenWord___6786) && (s.chosenWord___6786).vtable) {
    setupResume(s, 14);
    pxsim_String__stringConv(s.chosenWord___6786);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.chosenWord___6786) + ""; }
  case 14:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("\"", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "\" is not a word");
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 74; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    r0 = false;
    { step = 9; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["word"];
    s.tmp_1 = r0;
    r0 = (s.chosenWord___6786 === s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = (globals.keyboard___4091).fields["disabled"] = (true);
    r0 = pxsim_pxtcore_mkAction(1, GuessesUI_checkWord_inline__P6844);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = setTimeout__P423_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 250;
    s.callLocIdx = 78; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    { step = 8; continue; }
  case 5:
    r0 = s.arg0.fields["selected"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["guessChars"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = (globals.keyboard___4091).fields["disabled"] = (true);
    r0 = pxsim_pxtcore_mkAction(1, GuessesUI_checkWord_inline__P6868);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = setTimeout__P423_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 250;
    s.callLocIdx = 82; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
  case 6:
  case 7:
  case 8:
    r0 = true;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
GuessesUI_checkWord__P4066.info = {"start":2325,"length":1026,"line":85,"column":4,"endLine":114,"endColumn":5,"fileName":"main.ts","functionName":"checkWord","argumentNames":["this"]}

function GuessesUI_checkWord__P4066_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GuessesUI_checkWord__P4066, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  chosenWord___6786: undefined,
  i___6787: undefined,
  letter___6804: undefined,
  arg0: undefined,
} }





function GuessesUI_checkWord_inline__P6844(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_splash__P2687_mk(s);
    s.tmp_0.arg0 = "Congrats!";
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 75; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = game_splash__P2687_mk(s);
    r0 = s.caps[0].fields["word"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("The word was \"", s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, "!\"");
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 76; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = game_over__P2703_mk(s);
    s.tmp_0.arg0 = true;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 77; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GuessesUI_checkWord_inline__P6844.info = {"start":2842,"length":157,"line":99,"column":23,"endLine":103,"endColumn":13,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function GuessesUI_checkWord_inline__P6844_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GuessesUI_checkWord_inline__P6844, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function GuessesUI_checkWord_inline__P6868(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_splash__P2687_mk(s);
    s.tmp_0.arg0 = "You ran out of guesses!";
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 79; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = game_splash__P2687_mk(s);
    r0 = s.caps[0].fields["word"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat("The word was \"", s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, ".\"");
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 80; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = game_over__P2703_mk(s);
    s.tmp_0.arg0 = false;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 81; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GuessesUI_checkWord_inline__P6868.info = {"start":3134,"length":172,"line":106,"column":23,"endLine":110,"endColumn":13,"fileName":"main.ts","functionName":"inline","argumentNames":[]}

function GuessesUI_checkWord_inline__P6868_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GuessesUI_checkWord_inline__P6868, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function game_over__P2703(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scoreInfo___8095 = undefined;
    s.highScore___8099 = undefined;
    s.overDialog___8128 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = game_init__P4547_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1145; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.__isOver___4546);
    if (!r0) { step = 1; continue; }
    { step = 17; continue; }
  case 1:
  case 2:
    globals.__isOver___4546 = (true);
    r0 = pxsim_numops_toBoolDecr(globals.__gameOverHandler___4544);
    if (!r0) { step = 3; continue; }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = globals.__gameOverHandler___4544;
    s.tmp_0.arg0 = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1146; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    { step = 16; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 4; continue; }
    r0 = globals.winEffect___2691;
    { step = 5; continue; }
  case 4:
    r0 = globals.loseEffect___2692;
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg1 = (s.tmp_2);
  case 6:
  case 7:
    s.tmp_0 = info_PlayerInfo_getState__P2382_mk(s);
    s.tmp_0.arg0 = globals.player1___2400;
    s.callLocIdx = 1147; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    s.scoreInfo___8095 = (r0);
    s.tmp_0 = info_highScore__P2348_mk(s);
    s.callLocIdx = 1148; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.highScore___8099 = (r0);
    r0 = s.scoreInfo___8095.fields["score"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.highScore___8099);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.tmp_2 = info_saveHighScore__P2345_mk(s);
    s.callLocIdx = 1149; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
  case 8:
  case 9:
  case 10:
    s.tmp_0 = r0 = globals._sceneStack___4540;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    r0 = pxsim_Array__length(globals._sceneStack___4540);
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 13; continue; }
    s.tmp_2 = scene_Scene_destroy__P2606_mk(s);
    s.tmp_2.arg0 = globals._scene___4539;
    s.callLocIdx = 1150; s.pc = 23; return s.tmp_2;
  case 23:
    r0 = s.retval;
    s.tmp_0 = game_popScene__P2698_mk(s);
    s.callLocIdx = 1151; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    { step = 10; continue; }
  case 13:
    s.tmp_0 = game_pushScene__P2697_mk(s);
    s.callLocIdx = 1152; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.tmp_0 = scene_setBackgroundImage__P2620_mk(s);
    r0 = pxsim_ImageMethods.clone(globals.screen___1829);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1153; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 14; continue; }
    s.tmp_0 = music_Melody_play__P1619_mk(s);
    s.tmp_0.arg0 = globals.winSound___4538;
    s.tmp_0.arg1 = 255;
    s.callLocIdx = 1154; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    { step = 15; continue; }
  case 14:
    s.tmp_0 = music_Melody_play__P1619_mk(s);
    s.tmp_0.arg0 = globals.loseSound___4536;
    s.tmp_0.arg1 = 255;
    s.callLocIdx = 1155; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
  case 15:
    s.tmp_0 = if_startScreenEffect_1_mk(s);
    s.tmp_0.arg0 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "startScreenEffect"), 1);
      s.callLocIdx = 1156; s.pc = 29; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["startScreenEffect"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["startScreenEffect"], 1); s.callLocIdx = 1156; s.pc = 29; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1156; s.pc = 29; return s.tmp_0;; }
     else { s.callLocIdx = 1156; s.pc = 29; return s.tmp_0; }
    }
  case 29:
    r0 = s.retval;
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 400;
    s.callLocIdx = 1157; s.pc = 30; return s.tmp_0;
  case 30:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(game_GameOverDialog__C2677_VT);
    s.tmp_0 = r0;
    s.tmp_1 = game_GameOverDialog_constructor__P2678_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    r0 = s.scoreInfo___8095.fields["score"];
    s.tmp_1.arg2 = r0;
    s.tmp_1.arg3 = s.highScore___8099;
    s.callLocIdx = 1158; s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    s.overDialog___8128 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkAction(1, game_over_inline__P8138);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.overDialog___8128);
    s.tmp_1 = scene_createRenderable__P2543_mk(s);
    s.tmp_1.arg0 = 100;
    s.tmp_1.arg1 = s.tmp_0;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1159; s.pc = 32; return s.tmp_1;
  case 32:
    r0 = s.retval;
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 500;
    s.callLocIdx = 1160; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    s.tmp_0 = game_GameOverDialog_displayCursor__P2679_mk(s);
    s.tmp_0.arg0 = s.overDialog___8128;
    s.callLocIdx = 1161; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.tmp_0 = game_waitAnyButton__P2695_mk(s);
    s.callLocIdx = 1162; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    setupResume(s, 36);
    pxsim.control.reset();
    checkResumeConsumed();
    return;
  case 36:
    r0 = s.retval;
  case 16:
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_over__P2703.info = {"start":5382,"length":1774,"line":181,"column":4,"endLine":232,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"over","argumentNames":["win","effect"]}

function game_over__P2703_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_over__P2703, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  scoreInfo___8095: undefined,
  highScore___8099: undefined,
  overDialog___8128: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_over_inline__P8138(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = game_GameOverDialog__C2677_v0_1_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    if (!checkSubtype(s.tmp_0.arg0, game_GameOverDialog__C2677_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.update;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = s.caps[0].fields["image"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_4 = r0;
    r0 = s.caps[0].fields["image"];
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, 0, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_over_inline__P8138.info = {"start":6721,"length":254,"line":218,"column":48,"endLine":225,"endColumn":13,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["target"]}

function game_over_inline__P8138_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_over_inline__P8138, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function game_init__P4547(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals._scene___4539);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(scene_Scene__C2579_VT);
    s.tmp_3 = r0;
    s.tmp_4 = scene_Scene_constructor__P2601_mk(s);
    s.tmp_4.arg0 = s.tmp_3;
    s.tmp_5 = control_pushEventContext__P409_mk(s);
    s.callLocIdx = 1130; s.pc = 14; return s.tmp_5;
  case 14:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.tmp_4.arg2 = globals._scene___4539;
    s.callLocIdx = 1131; s.pc = 13; return s.tmp_4;
  case 13:
    r0 = s.retval;
    globals._scene___4539 = (s.tmp_3);
  case 3:
  case 4:
    s.tmp_0 = scene_Scene_init__P2602_mk(s);
    s.tmp_0.arg0 = globals._scene___4539;
    s.callLocIdx = 1132; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals.winEffect___2691);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    globals.winEffect___2691 = (globals.confetti___2963);
  case 5:
  case 6:
    r0 = pxsim_numops_toBoolDecr(globals.loseEffect___2692);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    globals.loseEffect___2692 = (globals.melt___2984);
  case 7:
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.winSound___4538);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    globals.winSound___4538 = (globals.powerUp___1632);
  case 9:
  case 10:
    r0 = pxsim_numops_toBoolDecr(globals.loseSound___4536);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    globals.loseSound___4536 = (globals.wawawawaa___1629);
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_init__P4547.info = {"start":1202,"length":452,"line":45,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"init","argumentNames":["forceNewScene"]}

function game_init__P4547_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_init__P4547, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function melt_inline__P12018(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rounds___12021 = undefined;
    s.j___12029 = undefined;
    s.x___12034 = undefined;
    s.y___12040 = undefined;
    s.c___12046 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.rounds___12021 = (r0);
    s.j___12029 = (0);
  case 1:
    r0 = (s.j___12029 < s.rounds___12021);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P2752_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 45; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___12034 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P2752_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 46; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___12040 = (r0);
    r0 = pxsim_ImageMethods.getPixel(s.arg0, s.x___12034, s.y___12040);
    s.c___12046 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___12034;
    r0 = (s.y___12040 + 1);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___12046);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.x___12034;
    r0 = (s.y___12040 + 2);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_2, s.c___12046);
    r0 = (s.j___12029 + 1);
    s.j___12029 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
melt_inline__P12018.info = {"start":2652,"length":386,"line":72,"column":45,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function melt_inline__P12018_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: melt_inline__P12018, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  rounds___12021: undefined,
  j___12029: undefined,
  x___12034: undefined,
  y___12040: undefined,
  c___12046: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_FastRandom_randomRange__P2752(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2748_VT)) failedCast(r0);
    r0 = (s.arg2 > s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = Math_FastRandom_next__P2751_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1172; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.arg2 - s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 % s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = (s.arg1 + s.tmp_5);
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_randomRange__P2752.info = {"start":2079,"length":131,"line":62,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"randomRange","argumentNames":["this","min","max"]}

function Math_FastRandom_randomRange__P2752_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_randomRange__P2752, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Math_FastRandom_next__P2751(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2748_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["lfsr"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 & 1);
    s.tmp_6 = r0;
    r0 = (0 - s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 46080);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 ^ s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lfsr"] = (s.tmp_1);
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_next__P2751.info = {"start":1713,"length":107,"line":53,"column":8,"endLine":55,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"next","argumentNames":["this"]}

function Math_FastRandom_next__P2751_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_next__P2751, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function effects_ImageEffect_constructor__P2979(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C2978_VT)) failedCast(r0);
    r0 = (s.arg0).fields["effect"] = (s.arg2);
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C2748_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P2750_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1473; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["fastRandom"] = (s.tmp_0);
    r0 = (s.arg0).fields["preferredDelay"] = (s.arg1);
    r0 = (s.arg0).fields["times"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_constructor__P2979.info = {"start":410,"length":290,"line":10,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["this","defaultRate","effectFactory"]}

function effects_ImageEffect_constructor__P2979_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_constructor__P2979, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function confetti_inline__P12126(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.factory___12129 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(particles_ConfettiFactory__C2907_VT);
    s.tmp_0 = r0;
    s.tmp_2 = if_width_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "width");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["width"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["width"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 33; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_width_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "width");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["width"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["width"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 34; s.pc = 4; return s.tmp_3; }
    }
  case 4:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = 16;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = particles_ConfettiFactory_constructor__P2908_mk(s);
    s.tmp_5.arg0 = s.tmp_0;
    s.tmp_5.arg1 = s.tmp_4;
    s.tmp_5.arg2 = 16;
    s.callLocIdx = 35; s.pc = 5; return s.tmp_5;
  case 5:
    r0 = s.retval;
    s.factory___12129 = (s.tmp_0);
    s.tmp_0 = particles_SprayFactory_setSpeed__P2884_mk(s);
    s.tmp_0.arg0 = s.factory___12129;
    s.tmp_0.arg1 = 30;
    s.callLocIdx = 36; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(particles_ParticleSource__C2840_VT);
    s.tmp_0 = r0;
    s.tmp_1 = particles_ParticleSource_constructor__P2845_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.factory___12129;
    s.callLocIdx = 37; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
confetti_inline__P12126.info = {"start":7534,"length":284,"line":191,"column":59,"endLine":195,"endColumn":5,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["anchor","particlesPerSecond"]}

function confetti_inline__P12126_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: confetti_inline__P12126, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  factory___12129: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_constructor__P2845(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___12150 = undefined;
    s.removedSource___12159 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    s.tmp_0 = sprites_BaseSprite_constructor__P1890_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1341; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = particles_init__P4882_mk(s);
    s.callLocIdx = 1342; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = particles_particleSources__P4888_mk(s);
    s.callLocIdx = 1343; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.sources___12150 = (r0);
    r0 = pxsim_Array__length(s.sources___12150);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= globals.MAX_SOURCES___4874);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = particles_sortSources__P4885_mk(s);
    s.tmp_2.arg0 = s.sources___12150;
    s.callLocIdx = 1344; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    r0 = pxsim_Array_.removeAt(s.sources___12150, 0);
    s.removedSource___12159 = (r0);
    s.tmp_0 = particles_ParticleSource_clear__P2855_mk(s);
    s.tmp_0.arg0 = s.removedSource___12159;
    s.callLocIdx = 1346; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = particles_ParticleSource_destroy__P2854_mk(s);
    s.tmp_0.arg0 = s.removedSource___12159;
    s.callLocIdx = 1347; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = (s.arg0).fields["pFlags"] = (0);
    s.tmp_0 = particles_ParticleSource_setRate__P2857_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 1348; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.tmp_0 = particles_ParticleSource_setAcceleration__P2849_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    s.callLocIdx = 1349; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_0 = particles_ParticleSource_setAnchor__P2856_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1350; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    r0 = (s.arg0).fields["_dt"] = (0);
    r0 = (s.arg0).fields["priority"] = (0);
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = globals.defaultFactory___2860;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = particles_ParticleSource_setFactory__P2859_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 1351; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.sources___12150, s.arg0);
    s.tmp_0 = particles_ParticleSource_enabled__P2853_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1352; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_constructor__P2845.info = {"start":2307,"length":899,"line":87,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["this","anchor","particlesPerSecond","factory"]}

function particles_ParticleSource_constructor__P2845_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_constructor__P2845, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  sources___12150: undefined,
  removedSource___12159: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_particleSources__P4888(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___10121 = undefined;
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1403; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = r0.fields["particleSources"];
    s.sources___10121 = (r0);
    r0 = s.sources___10121;
    return leave(s, r0)
  default: oops()
} } }
particles_particleSources__P4888.info = {"start":12848,"length":119,"line":421,"column":4,"endLine":424,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"particleSources","argumentNames":[]}

function particles_particleSources__P4888_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_particleSources__P4888, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___10121: undefined,
} }





function particles_sortSources__P4885(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = helpers_arraySort__P105_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = particles_sortSources_inline__P12363;
    s.callLocIdx = 1390; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources__P4885.info = {"start":10026,"length":129,"line":332,"column":4,"endLine":334,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"sortSources","argumentNames":["sources"]}

function particles_sortSources__P4885_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources__P4885, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_sortSources_inline__P12363(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["priority"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["priority"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg1.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
particles_sortSources_inline__P12363.info = {"start":10097,"length":50,"line":333,"column":21,"endLine":333,"endColumn":71,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["a","b"]}

function particles_sortSources_inline__P12363_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_sortSources_inline__P12363, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySort__P105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.arg1 = (helpers_arraySort_inline__P12386);
  case 3:
  case 4:
    s.tmp_0 = helpers_sortHelper__P4103_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 3; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort__P105.info = {"start":5663,"length":859,"line":207,"column":4,"endLine":227,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySort","argumentNames":["arr","callbackfn"]}

function helpers_arraySort__P105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort__P105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arraySort_inline__P12386(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.aIsUndef___12389 = undefined;
    s.bIsUndef___12393 = undefined;
    s.aIsNull___12404 = undefined;
    s.bIsNull___12408 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 === undefined);
    s.aIsUndef___12389 = (r0);
    r0 = (s.arg1 === undefined);
    s.bIsUndef___12393 = (r0);
    s.tmp_0 = r0 = s.aIsUndef___12389;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.bIsUndef___12393;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 17; continue; }
    { step = 8; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.aIsUndef___12389);
    if (!r0) { step = 4; continue; }
    r0 = 1;
    { step = 17; continue; }
    { step = 7; continue; }
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.bIsUndef___12393);
    if (!r0) { step = 5; continue; }
    r0 = -1;
    { step = 17; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = (s.arg0 === null);
    s.aIsNull___12404 = (r0);
    r0 = (s.arg1 === null);
    s.bIsNull___12408 = (r0);
    s.tmp_0 = r0 = s.aIsNull___12404;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = s.bIsNull___12408;
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    r0 = 0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 11:
    r0 = pxsim_numops_toBoolDecr(s.aIsNull___12404);
    if (!r0) { step = 12; continue; }
    r0 = 1;
    { step = 17; continue; }
    { step = 15; continue; }
  case 12:
    r0 = pxsim_numops_toBoolDecr(s.bIsNull___12408);
    if (!r0) { step = 13; continue; }
    r0 = -1;
    { step = 17; continue; }
  case 13:
  case 14:
  case 15:
  case 16:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 19);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 19:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_7);
    s.tmp_5 = r0;
    r0 = pxsim_String_.compare(s.tmp_2, s.tmp_5);
  case 17:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySort_inline__P12386.info = {"start":5826,"length":636,"line":209,"column":25,"endLine":224,"endColumn":13,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"inline","argumentNames":["a","b"]}

function helpers_arraySort_inline__P12386_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySort_inline__P12386, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  aIsUndef___12389: undefined,
  bIsUndef___12393: undefined,
  aIsNull___12404: undefined,
  bIsNull___12408: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_sortHelper__P4103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___12443 = undefined;
    s.i___12446 = undefined;
    s.j___12452 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0;
    { step = 11; continue; }
  case 3:
  case 4:
    r0 = pxsim_Array__length(s.arg0);
    s.len___12443 = (r0);
    s.i___12446 = (0);
  case 5:
    s.tmp_1 = r0 = s.i___12446;
    r0 = (s.len___12443 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = (s.i___12446 + 1);
    s.j___12452 = (r0);
  case 6:
    r0 = (s.j___12452 < s.len___12443);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_3 = lambda_3_mk(s);
    s.tmp_3.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___12446);
    s.tmp_3.arg0 = r0;
    r0 = pxsim_Array__getAt(s.arg0, s.j___12452);
    s.tmp_3.arg1 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 1; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.tmp_4 = helpers_swap__P4102_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.i___12446;
    s.tmp_4.arg2 = s.j___12452;
    s.callLocIdx = 2; s.pc = 13; return s.tmp_4;
  case 13:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = (s.j___12452 + 1);
    s.j___12452 = (r0);
    { step = 6; continue; }
  case 9:
    r0 = (s.i___12446 + 1);
    s.i___12446 = (r0);
    { step = 5; continue; }
  case 10:
    r0 = s.arg0;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
helpers_sortHelper__P4103.info = {"start":5176,"length":481,"line":191,"column":4,"endLine":205,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sortHelper","argumentNames":["arr","callbackfn"]}

function helpers_sortHelper__P4103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_sortHelper__P4103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  len___12443: undefined,
  i___12446: undefined,
  j___12452: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_swap__P4102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.temp___12481 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__getAt(s.arg0, s.arg1);
    s.temp___12481 = (r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.tmp_2);
    r0 = pxsim_Array_.setAt(s.arg0, s.arg2, s.temp___12481);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_swap__P4102.info = {"start":5030,"length":140,"line":185,"column":4,"endLine":189,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"swap","argumentNames":["arr","i","j"]}

function helpers_swap__P4102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_swap__P4102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  temp___12481: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_init__P4882(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___12508 = undefined;
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1380; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.scene___12508 = (r0);
    r0 = s.scene___12508.fields["particleSources"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_1 = r0 = s.scene___12508;
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["particleSources"] = (s.tmp_2);
    r0 = pxsim.control.millis();
    globals.lastUpdate___4877 = (r0);
    s.tmp_0 = game_onUpdate__P2712_mk(s);
    s.tmp_0.arg0 = particles_updateParticles__P4883;
    s.callLocIdx = 1381; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = game_onUpdateInterval__P2713_mk(s);
    s.tmp_0.arg0 = 250;
    s.tmp_0.arg1 = particles_pruneParticles__P4884;
    s.callLocIdx = 1382; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_init__P4882.info = {"start":9236,"length":276,"line":304,"column":4,"endLine":311,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"init","argumentNames":[]}

function particles_init__P4882_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_init__P4882, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  scene___12508: undefined,
} }





function particles_pruneParticles__P4884(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___9958 = undefined;
    s.tmp_0 = particles_particleSources__P4888_mk(s);
    s.callLocIdx = 1386; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.sources___9958 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.sources___9958);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1 = helpers_arraySlice__P115_mk(s);
    s.tmp_1.arg0 = s.sources___9958;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_Array__length(s.sources___9958);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 1387; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = particles_pruneParticles_inline__P9967;
    s.callLocIdx = 1389; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles__P4884.info = {"start":9864,"length":156,"line":327,"column":4,"endLine":330,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"pruneParticles","argumentNames":[]}

function particles_pruneParticles__P4884_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles__P4884, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sources___9958: undefined,
} }





function particles_pruneParticles_inline__P9967(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource__prune__P2848_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1388; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_pruneParticles_inline__P9967.info = {"start":9997,"length":15,"line":329,"column":62,"endLine":329,"endColumn":77,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_pruneParticles_inline__P9967_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_pruneParticles_inline__P9967, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_ParticleSource__prune__P2848(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___9997 = undefined;
    s.sources___10005 = undefined;
    s.current___10019 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
  case 1:
    r0 = s.arg0.fields["head"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    r0 = s.arg0.fields["head"];
    r0 = r0.fields["next"];
    s.tmp_3 = r0;
    r0 = (s.arg0).fields["head"] = (s.tmp_3);
    { step = 1; continue; }
  case 4:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["head"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 13; continue; }
    s.tmp_5 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1361; s.pc = 21; return s.tmp_5;
  case 21:
    r0 = s.retval;
    s.scene___9997 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.scene___9997);
    if (!r0) { step = 7; continue; }
    r0 = s.scene___9997.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
  case 7:
  case 8:
    s.tmp_0 = particles_particleSources__P4888_mk(s);
    s.callLocIdx = 1362; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    s.sources___10005 = (r0);
    s.tmp_0 = r0 = s.sources___10005;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_Array__length(s.sources___10005);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 11; continue; }
    r0 = pxsim_Array_.removeElement(s.sources___10005, s.arg0);
  case 11:
  case 12:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == undefined);
  case 13:
  case 14:
    r0 = s.arg0.fields["head"];
    s.current___10019 = (r0);
  case 15:
    s.tmp_0 = r0 = s.current___10019;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    r0 = s.current___10019.fields["next"];
  case 17:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 20; continue; }
    r0 = s.current___10019.fields["next"];
    r0 = r0.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 <= 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 18; continue; }
    r0 = s.current___10019.fields["next"];
    r0 = r0.fields["next"];
    s.tmp_4 = r0;
    r0 = (s.current___10019).fields["next"] = (s.tmp_4);
    { step = 19; continue; }
  case 18:
    r0 = s.current___10019.fields["next"];
    s.current___10019 = (r0);
  case 19:
    { step = 15; continue; }
  case 20:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__prune__P2848.info = {"start":5104,"length":830,"line":166,"column":8,"endLine":189,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_prune","argumentNames":["this"]}

function particles_ParticleSource__prune__P2848_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__prune__P2848, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  scene___9997: undefined,
  sources___10005: undefined,
  current___10019: undefined,
  arg0: undefined,
} }





function helpers_arraySlice__P115(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___10042 = undefined;
    s.len___10044 = undefined;
    s.i___10078 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___10042 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___10044 = (r0);
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.arg1 = (0);
    { step = 4; continue; }
  case 1:
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_max__P130_mk(s);
    r0 = (s.len___10044 + s.arg1);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 9; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.arg1 = (r0);
  case 2:
  case 3:
  case 4:
    r0 = (s.arg1 > s.len___10044);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.res___10042;
    { step = 15; continue; }
  case 5:
  case 6:
    r0 = (s.arg2 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    s.arg2 = (s.len___10044);
    { step = 10; continue; }
  case 7:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = (s.len___10044 + s.arg2);
    s.arg2 = (r0);
  case 8:
  case 9:
  case 10:
    r0 = (s.arg2 > s.len___10044);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.arg2 = (s.len___10044);
  case 11:
  case 12:
    s.i___10078 = (s.arg1);
  case 13:
    r0 = (s.i___10078 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_1 = r0 = s.res___10042;
    r0 = pxsim_Array__getAt(s.arg0, s.i___10078);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = (s.i___10078 + 1);
    s.i___10078 = (r0);
    { step = 13; continue; }
  case 14:
    r0 = s.res___10042;
  case 15:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySlice__P115.info = {"start":9027,"length":690,"line":303,"column":4,"endLine":328,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySlice","argumentNames":["arr","start","end"]}

function helpers_arraySlice__P115_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySlice__P115, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  res___10042: undefined,
  len___10044: undefined,
  i___10078: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_updateParticles__P4883(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___12596 = undefined;
    s.time___12603 = undefined;
    s.dt___12606 = undefined;
    s.i___12612 = undefined;
    s.tmp_0 = particles_particleSources__P4888_mk(s);
    s.callLocIdx = 1383; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.sources___12596 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.sources___12596);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_2 = particles_sortSources__P4885_mk(s);
    s.tmp_2.arg0 = s.sources___12596;
    s.callLocIdx = 1384; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = pxsim.control.millis();
    s.time___12603 = (r0);
    r0 = (s.time___12603 - globals.lastUpdate___4877);
    s.dt___12606 = (r0);
    globals.lastUpdate___4877 = (s.time___12603);
    s.i___12612 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___12612;
    r0 = pxsim_Array__length(s.sources___12596);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = particles_ParticleSource__update__P2847_mk(s);
    r0 = pxsim_Array__getAt(s.sources___12596, s.i___12612);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.dt___12606;
    s.callLocIdx = 1385; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    r0 = (s.i___12612 + 1);
    s.i___12612 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_updateParticles__P4883.info = {"start":9518,"length":340,"line":313,"column":4,"endLine":325,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticles","argumentNames":[]}

function particles_updateParticles__P4883_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_updateParticles__P4883, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  sources___12596: undefined,
  time___12603: undefined,
  dt___12606: undefined,
  i___12612: undefined,
} }





function particles_ParticleSource__update__P2847(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___12675 = undefined;
    s.current___12694 = undefined;
    s.fixedDt___12702 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timer"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timer"] = (s.tmp_1);
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.tmp_0 = particles_ParticleSource_destroy__P2854_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1356; s.pc = 28; return s.tmp_0;
  case 28:
    r0 = s.retval;
  case 1:
  case 2:
    { step = 10; continue; }
  case 3:
    r0 = s.arg0.fields["anchor"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    s.tmp_2 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "flags");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["flags"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["flags"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1357; s.pc = 29; return s.tmp_2; }
    }
  case 29:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_3;
    { step = 7; continue; }
  case 6:
    s.tmp_5 = if_flags_1_mk(s);
    r0 = s.arg0.fields["anchor"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "flags");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["flags"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["flags"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1358; s.pc = 30; return s.tmp_5; }
    }
  case 30:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 2);
  case 7:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 8; continue; }
    r0 = (s.arg0).fields["lifespan"] = (750);
  case 8:
  case 9:
  case 10:
  case 11:
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = s.tmp_0;
    { step = 13; continue; }
  case 12:
    s.tmp_2 = particles_ParticleSource_enabled__P2852_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 1359; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
  case 13:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 16; continue; }
    s.tmp_4 = r0 = s.arg0;
    r0 = s.tmp_4.fields["timer"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["period"];
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["timer"] = (s.tmp_5);
    s.tmp_0 = particles_ParticleFactory__C2876_v0_2_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["anchor"];
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C2876_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.createParticle;
    s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.p___12675 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.p___12675);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    { step = 11; continue; }
  case 14:
  case 15:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = (s.p___12675).fields["next"] = (s.tmp_2);
    r0 = (s.arg0).fields["head"] = (s.p___12675);
    { step = 11; continue; }
  case 16:
    r0 = s.arg0.fields["head"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    { step = 27; continue; }
  case 17:
  case 18:
    r0 = s.arg0.fields["head"];
    s.current___12694 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["_dt"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_dt"] = (s.tmp_1);
    r0 = s.arg0.fields["_dt"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * 256);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 | 0);
    s.fixedDt___12702 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.fixedDt___12702);
    if (!r0) { step = 23; continue; }
  case 19:
    r0 = s.current___12694.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.tmp_2 = r0 = s.current___12694;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    s.tmp_0 = particles_ParticleSource__C2840_v4_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.current___12694;
    s.tmp_0.arg2 = s.fixedDt___12702;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleSource__C2840_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.updateParticle;
    s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
  case 20:
  case 21:
    r0 = s.current___12694.fields["next"];
    s.tmp_0 = r0;
    s.current___12694 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    { step = 19; continue; }
  case 22:
    r0 = (s.arg0).fields["_dt"] = (0);
    { step = 26; continue; }
  case 23:
  case 24:
    s.tmp_0 = r0 = s.current___12694;
    r0 = s.tmp_0.fields["lifespan"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    r0 = s.current___12694.fields["next"];
    s.tmp_0 = r0;
    s.current___12694 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 25; continue; }
    { step = 24; continue; }
  case 25:
  case 26:
  case 27:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource__update__P2847.info = {"start":3694,"length":1400,"line":124,"column":8,"endLine":164,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"_update","argumentNames":["this","dt"]}

function particles_ParticleSource__update__P2847_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource__update__P2847, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  p___12675: undefined,
  current___12694: undefined,
  fixedDt___12702: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_updateParticle__P4879(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    r0 = (s.arg2 >> 10);
    s.arg2 = (r0);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["vx"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["ax"];
    s.tmp_4 = r0;
    r0 = pxsim.Math_.imul(s.tmp_4, s.arg2);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 8);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["vy"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["ay"];
    s.tmp_4 = r0;
    r0 = pxsim.Math_.imul(s.tmp_4, s.arg2);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 8);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["_x"];
    s.tmp_2 = r0;
    r0 = s.arg1.fields["vx"];
    s.tmp_4 = r0;
    r0 = pxsim.Math_.imul(s.tmp_4, s.arg2);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 8);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["_y"];
    s.tmp_2 = r0;
    r0 = s.arg1.fields["vy"];
    s.tmp_4 = r0;
    r0 = pxsim.Math_.imul(s.tmp_4, s.arg2);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 8);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_updateParticle__P4879.info = {"start":8248,"length":357,"line":277,"column":8,"endLine":285,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"updateParticle","argumentNames":["this","p","fixedDt"]}

function particles_ParticleSource_updateParticle__P4879_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_updateParticle__P4879, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Fx_rightShift__P171(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 >> s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_rightShift__P171.info = {"start":2266,"length":108,"line":71,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"rightShift","argumentNames":["a","n"]}

function Fx_rightShift__P171_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_rightShift__P171, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleFactory_createParticle__P2878(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___12785 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C2876_VT)) failedCast(r0);
    r0 = pxsim_pxtcore_mkClassInstance(particles_Particle__C2821_VT);
    s.p___12785 = (r0);
    s.tmp_0 = r0 = s.p___12785;
    s.tmp_3 = if_x_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "x");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["x"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["x"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1410; s.pc = 1; return s.tmp_3; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.p___12785;
    s.tmp_3 = if_y_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "y");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["y"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["y"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1412; s.pc = 2; return s.tmp_3; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    r0 = (s.p___12785).fields["vx"] = (0);
    r0 = (s.p___12785).fields["vy"] = (0);
    r0 = (s.p___12785).fields["lifespan"] = (500);
    r0 = s.p___12785;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_createParticle__P2878.info = {"start":1822,"length":282,"line":67,"column":8,"endLine":77,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ParticleFactory_createParticle__P2878_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_createParticle__P2878, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  p___12785: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdateInterval__P2713(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.timer___12530 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = pxsim_pxtrt.mklocRef();
    s.timer___12530 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.timer___12530, 0);
    r0 = pxsim_pxtcore_mkAction(3, game_onUpdateInterval_inline__P12534);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.timer___12530);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg1);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_2 = game_eventContext__P2696_mk(s);
    s.callLocIdx = 1167; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 19;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1171; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval__P2713.info = {"start":891,"length":401,"line":28,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"onUpdateInterval","argumentNames":["period","a"]}

function game_onUpdateInterval__P2713_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval__P2713, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  timer___12530: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_onUpdateInterval_inline__P12534(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.time___12535 = undefined;
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1168; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["_millis"];
    s.time___12535 = (r0);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.time___12535);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = r0 = s.caps[0];
    r0 = (s.time___12535 + s.caps[1]);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.caps[2];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1170; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdateInterval_inline__P12534.info = {"start":1105,"length":179,"line":31,"column":81,"endLine":37,"endColumn":9,"fileName":"pxt_modules/game/gameutil.ts","functionName":"inline","argumentNames":[]}

function game_onUpdateInterval_inline__P12534_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdateInterval_inline__P12534, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  time___12535: undefined,
} }





function scene_Scene_millis__P2604(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2579_VT)) failedCast(r0);
    r0 = s.arg0.fields["_millis"];
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_millis__P2604.info = {"start":6898,"length":61,"line":191,"column":8,"endLine":193,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"millis","argumentNames":["this"]}

function scene_Scene_millis__P2604_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_millis__P2604, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function control_EventContext_registerFrameHandler__P403(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.fn___12557 = undefined;
    s.i___12566 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["frameCallbacks"] = (s.tmp_4);
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P4180_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 60; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = pxsim_pxtcore_mkClassInstance(control_FrameCallback__C392_VT);
    s.fn___12557 = (r0);
    r0 = (s.fn___12557).fields["order"] = (s.arg1);
    r0 = (s.fn___12557).fields["handler"] = (s.arg2);
    s.i___12566 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___12566;
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.i___12566);
    r0 = r0.fields["order"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > s.arg1);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 4; continue; }
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_7 = r0;
    r0 = pxsim_Array_.insertAt(s.tmp_7, s.i___12566, s.fn___12557);
    r0 = s.fn___12557;
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.i___12566 + 1);
    s.i___12566 = (r0);
    { step = 3; continue; }
  case 6:
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.fn___12557);
    r0 = s.fn___12557;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameHandler__P403.info = {"start":4675,"length":643,"line":143,"column":8,"endLine":160,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameHandler","argumentNames":["this","order","handler"]}

function control_EventContext_registerFrameHandler__P403_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameHandler__P403, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  fn___12557: undefined,
  i___12566: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_EventContext_registerFrameCallbacks__P4180(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.worker___10211 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    r0 = s.arg0.fields["frameCallbacks"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["frameWorker"];
    s.worker___10211 = (r0);
    r0 = pxsim_pxtcore_mkAction(2, control_EventContext_registerFrameCallbacks_inline__P10217);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.worker___10211);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks__P4180.info = {"start":3481,"length":895,"line":105,"column":8,"endLine":129,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerFrameCallbacks","argumentNames":["this"]}

function control_EventContext_registerFrameCallbacks__P4180_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks__P4180, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  worker___10211: undefined,
  arg0: undefined,
} }





function control_EventContext_registerFrameCallbacks_inline__P10217(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___10247 = undefined;
    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkAction(1, control_EventContext_registerFrameCallbacks_inline__P10223);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.caps[0]);
    s.tmp_2 = pauseUntil__P367_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 54; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (true);
    r0 = (s.caps[0]).fields["framesInSample"] = (0);
    r0 = (s.caps[0]).fields["timeInSample"] = (0);
    r0 = (s.caps[0]).fields["deltaTimeMillis"] = (0);
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim.control.millis();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["prevTimeMillis"] = (s.tmp_1);
  case 3:
    r0 = s.caps[0].fields["frameWorker"];
    s.tmp_1 = r0;
    r0 = (s.caps[1] == s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_2 = control_EventContext_runCallbacks__P4179_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.callLocIdx = 55; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.delay___10247 = (r0);
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = s.delay___10247;
    s.callLocIdx = 56; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    { step = 3; continue; }
  case 4:
    r0 = (s.caps[0]).fields["runningCallbacks"] = (false);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks_inline__P10217.info = {"start":3642,"length":723,"line":109,"column":34,"endLine":128,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventContext_registerFrameCallbacks_inline__P10217_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks_inline__P10217, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  delay___10247: undefined,
} }





function control_EventContext_registerFrameCallbacks_inline__P10223(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["runningCallbacks"];
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerFrameCallbacks_inline__P10223.info = {"start":3873,"length":28,"line":113,"column":31,"endLine":113,"endColumn":59,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventContext_registerFrameCallbacks_inline__P10223_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerFrameCallbacks_inline__P10223, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function control_EventContext_runCallbacks__P4179(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.loopStart___10256 = undefined;
    s.f___10269 = undefined;
    s.unnamed54___U2 = undefined;
    s.unnamed55___U3 = undefined;
    s.runtime___10274 = undefined;
    s.fps___10294 = undefined;
    s.delay___10356 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    r0 = pxsim.control.millis();
    s.loopStart___10256 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["prevTimeMillis"];
    s.tmp_2 = r0;
    r0 = (s.loopStart___10256 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["deltaTimeMillis"] = (s.tmp_1);
    r0 = (s.arg0).fields["prevTimeMillis"] = (s.loopStart___10256);
    s.f___10269 = (undefined);
    r0 = s.arg0.fields["frameCallbacks"];
    s.unnamed54___U2 = (r0);
    s.unnamed55___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed55___U3;
    r0 = pxsim_Array__length(s.unnamed54___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed54___U2, s.unnamed55___U3);
    s.f___10269 = (r0);
    s.tmp_2 = if_handler_1_mk(s);
    s.tmp_2.arg0 = s.f___10269;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "handler"), 1);
      s.callLocIdx = 51; s.pc = 13; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["handler"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["handler"], 1); s.callLocIdx = 51; s.pc = 13; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 51; s.pc = 13; return s.tmp_2;; }
     else { s.callLocIdx = 51; s.pc = 13; return s.tmp_2; }
    }
  case 13:
    r0 = s.retval;
    r0 = (s.unnamed55___U3 + 1);
    s.unnamed55___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed54___U2 = (undefined);
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.loopStart___10256);
    s.runtime___10274 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["timeInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.runtime___10274);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["timeInSample"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["framesInSample"] = (s.tmp_1);
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 30);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["timeInSample"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 / 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 / s.tmp_5);
    s.fps___10294 = (r0);
    r0 = pxsim.Math_.round(s.fps___10294);
    s.tmp_1 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 14);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat("fps:", s.tmp_0);
    globals.control_EventContext_lastStats___397 = (r0);
    r0 = (s.fps___10294 < 99);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    if ((globals.control_EventContext_lastStats___397) && (globals.control_EventContext_lastStats___397).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___397);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___397) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.fps___10294 * 10);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.round(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 % 10);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 16);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(".", s.tmp_4);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    globals.control_EventContext_lastStats___397 = (r0);
  case 5:
  case 6:
    s.tmp_2 = control_ramSize__P346_mk(s);
    s.callLocIdx = 52; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 2000000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = pxsim.control.profilingEnabled();
  case 8:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_String_.mkEmpty();
    s.tmp_8 = r0;
    r0 = (s.fps___10294 * 100);
    s.tmp_11 = r0;
    r0 = (s.tmp_11 | 0);
    s.tmp_10 = r0;
    if ((s.tmp_10) && (s.tmp_10).vtable) {
    setupResume(s, 19);
    pxsim_String__stringConv(s.tmp_10);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_10) + ""; }
  case 19:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String__concat(s.tmp_8, s.tmp_9);
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_7, "/100 fps - ");
    s.tmp_6 = r0;
    r0 = s.arg0.fields["framesInSample"];
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 20);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 20:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_12);
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_5, " frames");
    s.tmp_4 = r0;
    r0 = pxsim.control.dmesg(s.tmp_4);
    r0 = pxsim.control.gc();
    r0 = pxsim_pxtcore.dumpPerfCounters();
  case 9:
  case 10:
    r0 = (s.arg0).fields["timeInSample"] = (0);
    r0 = (s.arg0).fields["framesInSample"] = (0);
  case 11:
  case 12:
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 1;
    r0 = (20 - s.runtime___10274);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 53; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.delay___10356 = (r0);
    r0 = s.delay___10356;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_runCallbacks__P4179.info = {"start":2182,"length":1246,"line":74,"column":8,"endLine":102,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"runCallbacks","argumentNames":["this"]}

function control_EventContext_runCallbacks__P4179_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_runCallbacks__P4179, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  loopStart___10256: undefined,
  f___10269: undefined,
  unnamed54___U2: undefined,
  unnamed55___U3: undefined,
  runtime___10274: undefined,
  fps___10294: undefined,
  delay___10356: undefined,
  arg0: undefined,
} }





function control_ramSize__P346(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore.getConfig(205, 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 33554432;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
control_ramSize__P346.info = {"start":4847,"length":100,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"ramSize","argumentNames":[]}

function control_ramSize__P346_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_ramSize__P346, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function control__ramSize__P4145(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = 33554432;
    return leave(s, r0)
  default: oops()
} } }
control__ramSize__P4145.info = {"start":4727,"length":60,"line":160,"column":4,"endLine":162,"endColumn":5,"fileName":"pxt_modules/base/control.ts","functionName":"_ramSize","argumentNames":[]}

function control__ramSize__P4145_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control__ramSize__P4145, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function pauseUntil__P367(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = lambda_1_mk(s);
    s.tmp_2.argL = s.arg0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 38; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 5; continue; }
    s.arg1 = (0);
  case 5:
  case 6:
    s.tmp_0 = control___queuePollEvent__P366_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 39; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pauseUntil__P367.info = {"start":2224,"length":227,"line":73,"column":0,"endLine":77,"endColumn":1,"fileName":"pxt_modules/base/poll.ts","functionName":"pauseUntil","argumentNames":["condition","timeOut"]}

function pauseUntil__P367_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pauseUntil__P367, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control___queuePollEvent__P366(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ev___10388 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(control_PollEvent__C4153_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_PollEvent_constructor__P4154_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 1023;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1.arg2 = r0;
    r0 = pxsim.control.millis();
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.arg0;
    s.tmp_1.arg5 = s.arg1;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1.arg6 = r0;
    s.callLocIdx = 36; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.ev___10388 = (s.tmp_0);
    r0 = pxsim_numops_toBoolDecr(globals._pollEventQueue___4156);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_2, s.ev___10388);
    globals._pollEventQueue___4156 = (s.tmp_2);
    r0 = pxsim.control.runInParallel(control_pollEvents__P4157);
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__push(globals._pollEventQueue___4156, s.ev___10388);
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 3; continue; }
    s.tmp_0 = control_onEvent__P391_mk(s);
    r0 = s.ev___10388.fields["eid"];
    s.tmp_0.arg0 = r0;
    r0 = s.ev___10388.fields["vid"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 16;
    s.callLocIdx = 37; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    r0 = s.ev___10388.fields["eid"];
    s.tmp_0 = r0;
    r0 = s.ev___10388.fields["vid"];
    s.tmp_1 = r0;
    setupResume(s, 7);
    pxsim.control.waitForEvent(s.tmp_0, s.tmp_1);
    checkResumeConsumed();
    return;
  case 7:
    r0 = s.retval;
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___queuePollEvent__P366.info = {"start":1262,"length":758,"line":39,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"__queuePollEvent","argumentNames":["timeOut","condition","handler"]}

function control___queuePollEvent__P366_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___queuePollEvent__P366, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ev___10388: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_pollEvents__P4157(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.now___10431 = undefined;
    s.i___10434 = undefined;
    s.ev___10440 = undefined;
  case 1:
    r0 = pxsim_Array__length(globals._pollEventQueue___4156);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    r0 = pxsim.control.millis();
    s.now___10431 = (r0);
    s.i___10434 = (0);
  case 2:
    s.tmp_1 = r0 = s.i___10434;
    r0 = pxsim_Array__length(globals._pollEventQueue___4156);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = pxsim_Array__getAt(globals._pollEventQueue___4156, s.i___10434);
    s.ev___10440 = (r0);
    s.tmp_1 = if_condition_1_mk(s);
    s.tmp_1.arg0 = s.ev___10440;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "condition"), 1);
      s.callLocIdx = 33; s.pc = 13; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["condition"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["condition"], 1); s.callLocIdx = 33; s.pc = 13; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 33; s.pc = 13; return s.tmp_1;; }
     else { s.callLocIdx = 33; s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 3:
    r0 = s.ev___10440.fields["timeOut"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 4:
    r0 = s.ev___10440.fields["start"];
    s.tmp_5 = r0;
    r0 = (s.now___10431 - s.tmp_5);
    s.tmp_4 = r0;
    r0 = s.ev___10440.fields["timeOut"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 9; continue; }
    r0 = s.ev___10440.fields["eid"];
    s.tmp_9 = r0;
    r0 = s.ev___10440.fields["vid"];
    s.tmp_10 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_9, s.tmp_10);
    r0 = s.ev___10440.fields["once"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_1 = helpers_arraySplice__P100_mk(s);
    s.tmp_1.arg0 = globals._pollEventQueue___4156;
    s.tmp_1.arg1 = s.i___10434;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 34; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    r0 = (s.i___10434 - 1);
    s.i___10434 = (r0);
  case 7:
  case 8:
  case 9:
  case 10:
    r0 = (s.i___10434 + 1);
    s.i___10434 = (r0);
    { step = 2; continue; }
  case 11:
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 50;
    s.callLocIdx = 35; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    { step = 1; continue; }
  case 12:
    globals._pollEventQueue___4156 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_pollEvents__P4157.info = {"start":618,"length":638,"line":20,"column":4,"endLine":37,"endColumn":5,"fileName":"pxt_modules/base/poll.ts","functionName":"pollEvents","argumentNames":[]}

function control_pollEvents__P4157_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pollEvents__P4157, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  now___10431: undefined,
  i___10434: undefined,
  ev___10440: undefined,
} }





function helpers_arraySplice__P100(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___10488 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.i___10488 = (0);
  case 3:
    r0 = (s.i___10488 < s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array_.removeAt(s.arg0, s.arg1);
    r0 = (s.i___10488 + 1);
    s.i___10488 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySplice__P100.info = {"start":3642,"length":213,"line":137,"column":4,"endLine":144,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySplice","argumentNames":["arr","start","len"]}

function helpers_arraySplice__P100_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySplice__P100, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  i___10488: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_PollEvent_constructor__P4154(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_PollEvent__C4153_VT)) failedCast(r0);
    r0 = (s.arg0).fields["eid"] = (s.arg1);
    r0 = (s.arg0).fields["vid"] = (s.arg2);
    r0 = (s.arg0).fields["start"] = (s.arg3);
    r0 = (s.arg0).fields["timeOut"] = (s.arg4);
    r0 = (s.arg0).fields["condition"] = (s.arg5);
    r0 = (s.arg0).fields["once"] = (s.arg6);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_PollEvent_constructor__P4154.info = {"start":239,"length":316,"line":8,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/base/poll.ts","functionName":"inline","argumentNames":["this","eid","vid","start","timeOut","condition","once"]}

function control_PollEvent_constructor__P4154_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_PollEvent_constructor__P4154, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
} }





function control_onEvent__P391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___7525 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = control_eventContext__P408_mk(s);
    s.callLocIdx = 48; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.ctx___7525 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.ctx___7525);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.control.internalOnEvent(s.arg0, s.arg1, s.arg2, s.arg3);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = control_EventContext_registerHandler__P405_mk(s);
    s.tmp_0.arg0 = s.ctx___7525;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.callLocIdx = 49; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_onEvent__P391.info = {"start":336,"length":325,"line":9,"column":4,"endLine":15,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"onEvent","argumentNames":["src","value","handler","flags"]}

function control_onEvent__P391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_onEvent__P391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___7525: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_eventContext__P408(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4182);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = globals.eventContexts___4182;
    r0 = pxsim_Array__length(globals.eventContexts___4182);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
control_eventContext__P408.info = {"start":6907,"length":136,"line":209,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"eventContext","argumentNames":[]}

function control_eventContext__P408_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_eventContext__P408, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function control_EventContext_registerHandler__P405(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___7548 = undefined;
    s.unnamed60___U1 = undefined;
    s.unnamed61___U2 = undefined;
    s.hn___7571 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.h___7548 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed60___U1 = (r0);
    s.unnamed61___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed61___U2;
    r0 = pxsim_Array__length(s.unnamed60___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed60___U1, s.unnamed61___U2);
    s.h___7548 = (r0);
    r0 = s.h___7548.fields["src"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = s.h___7548.fields["value"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == s.arg2);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    r0 = (s.h___7548).fields["flags"] = (s.arg4);
    r0 = (s.h___7548).fields["handler"] = (s.arg3);
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.unnamed61___U2 + 1);
    s.unnamed61___U2 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed60___U1 = (undefined);
    r0 = pxsim_pxtcore_mkClassInstance(control_EventHandler__C4174_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventHandler_constructor__P4177_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg3;
    s.tmp_1.arg4 = s.arg4;
    s.callLocIdx = 61; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.hn___7571 = (s.tmp_0);
    r0 = s.arg0.fields["handlers"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.hn___7571);
    s.tmp_0 = control_EventHandler_register__P4175_mk(s);
    s.tmp_0.arg0 = s.hn___7571;
    s.callLocIdx = 62; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_registerHandler__P405.info = {"start":5573,"length":525,"line":169,"column":8,"endLine":182,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"registerHandler","argumentNames":["this","src","value","handler","flags"]}

function control_EventContext_registerHandler__P405_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_registerHandler__P405, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  h___7548: undefined,
  unnamed60___U1: undefined,
  unnamed61___U2: undefined,
  hn___7571: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_constructor__P4177(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4174_VT)) failedCast(r0);
    r0 = (s.arg0).fields["src"] = (s.arg1);
    r0 = (s.arg0).fields["value"] = (s.arg2);
    r0 = (s.arg0).fields["handler"] = (s.arg3);
    r0 = (s.arg0).fields["flags"] = (s.arg4);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_constructor__P4177.info = {"start":786,"length":165,"line":23,"column":8,"endLine":28,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this","src","value","handler","flags"]}

function control_EventHandler_constructor__P4177_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_constructor__P4177, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function control_EventHandler_register__P4175(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4174_VT)) failedCast(r0);
    r0 = pxsim_pxtcore_mkAction(1, control_EventHandler_register_inline__P7592);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["src"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_1, s.tmp_2, s.tmp_0, s.tmp_3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register__P4175.info = {"start":961,"length":165,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventHandler_register__P4175_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register__P4175, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function control_EventHandler_register_inline__P7592(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["handler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if_handler_1_mk(s);
    s.tmp_1.arg0 = s.caps[0];
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "handler"), 1);
      s.callLocIdx = 50; s.pc = 3; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["handler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["handler"], 1); s.callLocIdx = 50; s.pc = 3; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 50; s.pc = 3; return s.tmp_1;; }
     else { s.callLocIdx = 50; s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_register_inline__P7592.info = {"start":1032,"length":71,"line":31,"column":58,"endLine":33,"endColumn":13,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":[]}

function control_EventHandler_register_inline__P7592_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_register_inline__P7592, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function game_onUpdate__P2712(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_2 = control_EventContext_registerFrameHandler__P403_mk(s);
    s.tmp_3 = game_eventContext__P2696_mk(s);
    s.callLocIdx = 1165; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 20;
    s.tmp_2.arg2 = s.arg0;
    s.callLocIdx = 1166; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onUpdate__P2712.info = {"start":405,"length":153,"line":15,"column":4,"endLine":18,"endColumn":5,"fileName":"pxt_modules/game/gameutil.ts","functionName":"onUpdate","argumentNames":["a"]}

function game_onUpdate__P2712_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onUpdate__P2712, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function MAX_SOURCES_inline__P12494(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sz___12495 = undefined;
    s.tmp_0 = control_ramSize__P346_mk(s);
    s.callLocIdx = 29; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.sz___12495 = (r0);
    r0 = (s.sz___12495 <= 102400);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 8;
    { step = 5; continue; }
    { step = 4; continue; }
  case 1:
    r0 = (s.sz___12495 <= 204800);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = 16;
    { step = 5; continue; }
    { step = 3; continue; }
  case 2:
    r0 = 50;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
MAX_SOURCES_inline__P12494.info = {"start":240,"length":217,"line":9,"column":25,"endLine":18,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":[]}

function MAX_SOURCES_inline__P12494_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MAX_SOURCES_inline__P12494, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sz___12495: undefined,
} }





function particles_SprayFactory_constructor__P2881(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2880_VT)) failedCast(r0);
    r0 = undefined;
    s.tmp_0 = particles_initTrig__P4903_mk(s);
    s.callLocIdx = 1417; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = particles_SprayFactory_setSpeed__P2884_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1418; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = particles_SprayFactory_setDirection__P2885_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.tmp_0.arg2 = s.arg3;
    s.callLocIdx = 1419; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_constructor__P2881.info = {"start":2623,"length":218,"line":98,"column":8,"endLine":103,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","speed","centerDegrees","arcDegrees"]}

function particles_SprayFactory_constructor__P2881_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_constructor__P2881, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_initTrig__P4903(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.cachedSin___4889);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = particles_cacheSin__P2874_mk(s);
    s.tmp_2.arg0 = 100;
    s.callLocIdx = 1405; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    globals.cachedSin___4889 = (r0);
    s.tmp_0 = particles_cacheCos__P2875_mk(s);
    s.tmp_0.arg0 = 100;
    s.callLocIdx = 1406; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    globals.cachedCos___4890 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_initTrig__P4903.info = {"start":291,"length":155,"line":11,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"initTrig","argumentNames":[]}

function particles_initTrig__P4903_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_initTrig__P4903, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function particles_cacheCos__P2875(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cos___12259 = undefined;
    s.anglePerSlice___12261 = undefined;
    s.i___12267 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.cos___12259 = (r0);
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___12261 = (r0);
    s.i___12267 = (0);
  case 1:
    r0 = (s.i___12267 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.cos___12259;
    r0 = (s.i___12267 * s.anglePerSlice___12261);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.cos(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 256);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 0);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = (s.i___12267 + 1);
    s.i___12267 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = s.cos___12259;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheCos__P2875.info = {"start":1005,"length":263,"line":35,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheCos","argumentNames":["slices"]}

function particles_cacheCos__P2875_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheCos__P2875, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  cos___12259: undefined,
  anglePerSlice___12261: undefined,
  i___12267: undefined,
  arg0: undefined,
} }





function particles_cacheSin__P2874(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sin___12285 = undefined;
    s.anglePerSlice___12287 = undefined;
    s.i___12293 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.sin___12285 = (r0);
    r0 = (6.283185307179586 / s.arg0);
    s.anglePerSlice___12287 = (r0);
    s.i___12293 = (0);
  case 1:
    r0 = (s.i___12293 < s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.sin___12285;
    r0 = (s.i___12293 * s.anglePerSlice___12287);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.sin(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 * 256);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 0);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_1, s.tmp_2);
    r0 = (s.i___12293 + 1);
    s.i___12293 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = s.sin___12285;
    return leave(s, r0)
  default: oops()
} } }
particles_cacheSin__P2874.info = {"start":594,"length":263,"line":22,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"cacheSin","argumentNames":["slices"]}

function particles_cacheSin__P2874_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_cacheSin__P2874, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  sin___12285: undefined,
  anglePerSlice___12287: undefined,
  i___12293: undefined,
  arg0: undefined,
} }





function particles_SprayFactory_setDirection__P2885(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2880_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P4908_mk(s);
    s.tmp_5 = r0 = s.arg1;
    r0 = (s.arg2 >> 1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1427; s.pc = 1; return s.tmp_4;
  case 1:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___4902);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minAngle"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_4 = particles_toRadians__P4908_mk(s);
    s.tmp_4.arg0 = s.arg2;
    s.callLocIdx = 1428; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / globals.angleSlice___4902);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spread"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setDirection__P2885.info = {"start":3424,"length":228,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setDirection","argumentNames":["this","centerDegrees","arcDegrees"]}

function particles_SprayFactory_setDirection__P2885_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setDirection__P2885, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function particles_toRadians__P4908(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = Math_abs__P128_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1409; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 360);
    s.tmp_1 = r0;
    r0 = (360 - s.tmp_1);
    s.arg0 = (r0);
    { step = 2; continue; }
  case 1:
    r0 = (s.arg0 % 360);
    s.arg0 = (r0);
  case 2:
    r0 = (s.arg0 * 0.017453292519943295);
    return leave(s, r0)
  default: oops()
} } }
particles_toRadians__P4908.info = {"start":1307,"length":206,"line":45,"column":4,"endLine":52,"endColumn":5,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"toRadians","argumentNames":["degrees"]}

function particles_toRadians__P4908_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_toRadians__P4908, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Math_abs__P128(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (0 - s.arg0);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
Math_abs__P128.info = {"start":16095,"length":77,"line":538,"column":4,"endLine":540,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"abs","argumentNames":["x"]}

function Math_abs__P128_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_abs__P128, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function particles_ParticleFactory_constructor__P2877(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C2876_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_constructor__P2877.info = {"start":1617,"length":78,"line":59,"column":8,"endLine":61,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this"]}

function particles_ParticleFactory_constructor__P2877_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_constructor__P2877, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ParticleSource_setFactory__P2859(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["_factory"] = (s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setFactory__P2859.info = {"start":8124,"length":114,"line":272,"column":8,"endLine":275,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setFactory","argumentNames":["this","factory"]}

function particles_ParticleSource_setFactory__P2859_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setFactory__P2859, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setRate__P2857(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (1000 / s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.ceil(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["period"] = (s.tmp_1);
    r0 = (s.arg0).fields["timer"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRate__P2857.info = {"start":7802,"length":139,"line":259,"column":8,"endLine":262,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRate","argumentNames":["this","particlesPerSecond"]}

function particles_ParticleSource_setRate__P2857_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRate__P2857, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_setAnchor__P2856(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    r0 = (s.arg0).fields["anchor"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAnchor__P2856.info = {"start":7594,"length":79,"line":251,"column":8,"endLine":253,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAnchor","argumentNames":["this","anchor"]}

function particles_ParticleSource_setAnchor__P2856_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAnchor__P2856, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_clear__P2855(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    r0 = (s.arg0).fields["head"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_clear__P2855.info = {"start":7424,"length":54,"line":243,"column":8,"endLine":245,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"clear","argumentNames":["this"]}

function particles_ParticleSource_clear__P2855_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_clear__P2855, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ParticleSource_destroy__P2854(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    s.tmp_0 = particles_ParticleSource_enabled__P2853_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1366; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    s.tmp_0 = particles_ParticleSource__prune__P2848_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1367; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_destroy__P2854.info = {"start":7094,"length":240,"line":233,"column":8,"endLine":238,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"destroy","argumentNames":["this"]}

function particles_ParticleSource_destroy__P2854_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_destroy__P2854, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_enabled__P2853(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = particles_ParticleSource_enabled__P2852_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 1365; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 1);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["pFlags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 ^ 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["pFlags"] = (s.tmp_6);
    r0 = (s.arg0).fields["timer"] = (0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P2853.info = {"start":6816,"length":214,"line":223,"column":8,"endLine":228,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this","v"]}

function particles_ParticleSource_enabled__P2853_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P2853, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_enabled__P2852(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
particles_ParticleSource_enabled__P2852.info = {"start":6622,"length":76,"line":216,"column":8,"endLine":218,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"enabled","argumentNames":["this"]}
particles_ParticleSource_enabled__P2852.isGetter = true;

function particles_ParticleSource_enabled__P2852_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_enabled__P2852, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function particles_ParticleSource_setAcceleration__P2849(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ax"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg2 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setAcceleration__P2849.info = {"start":6026,"length":113,"line":194,"column":8,"endLine":197,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setAcceleration","argumentNames":["this","ax","ay"]}

function particles_ParticleSource_setAcceleration__P2849_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setAcceleration__P2849, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_BaseSprite_constructor__P1890(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1888_VT)) failedCast(r0);
    s.tmp_0 = sprites_BaseSprite_z__P1893_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 170; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = scene_Scene_addSprite__P2605_mk(s);
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 171; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 172; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_constructor__P1890.info = {"start":344,"length":170,"line":15,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"inline","argumentNames":["this","z"]}

function sprites_BaseSprite_constructor__P1890_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_constructor__P1890, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Scene_addSprite__P2605(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2579_VT)) failedCast(r0);
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["spriteNextId"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spriteNextId"] = (s.tmp_1);
    s.tmp_3 = if_id_2_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.tmp_3.arg1 = s.tmp_2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_3.arg0, "id", s.tmp_3.arg1);
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["set/id"];
      if (s.tmp_3.fn === null) { s.tmp_3.arg0.fields["id"] = s.tmp_3.arg1; }
      else if (s.tmp_3.fn === undefined) { failedCast(s.tmp_3.arg0) } 
     else { s.callLocIdx = 1042; s.pc = 1; return s.tmp_3; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_addSprite__P2605.info = {"start":6969,"length":128,"line":195,"column":8,"endLine":198,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function scene_Scene_addSprite__P2605_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_addSprite__P2605, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P1893(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1888_VT)) failedCast(r0);
    r0 = s.arg0.fields["_z"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["_z"] = (s.arg1);
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 173; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_2);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P1893.info = {"start":656,"length":174,"line":30,"column":8,"endLine":35,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this","v"]}

function sprites_BaseSprite_z__P1893_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P1893, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite_z__P1892(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1888_VT)) failedCast(r0);
    r0 = s.arg0.fields["_z"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_BaseSprite_z__P1892.info = {"start":591,"length":55,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"z","argumentNames":["this"]}
sprites_BaseSprite_z__P1892.isGetter = true;

function sprites_BaseSprite_z__P1892_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite_z__P1892, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function helpers_arrayShift__P102(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array_.removeAt(s.arg0, 0);
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayShift__P102.info = {"start":4045,"length":82,"line":153,"column":4,"endLine":155,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayShift","argumentNames":["arr"]}

function helpers_arrayShift__P102_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayShift__P102, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_SprayFactory_setSpeed__P2884(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2880_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["speed"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_setSpeed__P2884.info = {"start":3322,"length":92,"line":119,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"setSpeed","argumentNames":["this","pixelsPerSecond"]}

function particles_SprayFactory_setSpeed__P2884_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_setSpeed__P2884, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ConfettiFactory_constructor__P2908(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.confetti___12824 = undefined;
    s.i___12840 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ConfettiFactory__C2907_VT)) failedCast(r0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim.image.ofBuffer(_hex12827);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim.image.ofBuffer(_hex12829);
    s.tmp_2 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_2);
    r0 = pxsim.image.ofBuffer(_hex12831);
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    r0 = pxsim.image.ofBuffer(_hex12833);
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_4);
    r0 = pxsim.image.ofBuffer(_hex12835);
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_5);
    s.confetti___12824 = (s.tmp_0);
    s.tmp_0 = particles_ShapeFactory_constructor__P2903_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = pxsim_Array__getAt(s.confetti___12824, 0);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1451; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.i___12840 = (1);
  case 1:
    s.tmp_1 = r0 = s.i___12840;
    r0 = pxsim_Array__length(s.confetti___12824);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_3 = particles_ShapeFactory_addShape__P2904_mk(s);
    s.tmp_3.arg0 = s.arg0;
    r0 = pxsim_Array__getAt(s.confetti___12824, s.i___12840);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 1452; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    r0 = (s.i___12840 + 1);
    s.i___12840 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = (s.arg0).fields["minLifespan"] = (1000);
    r0 = (s.arg0).fields["maxLifespan"] = (4500);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ConfettiFactory_constructor__P2908.info = {"start":7755,"length":706,"line":247,"column":8,"endLine":274,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange"]}

function particles_ConfettiFactory_constructor__P2908_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ConfettiFactory_constructor__P2908, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  confetti___12824: undefined,
  i___12840: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }

const _hex12827 = pxsim.BufferMethods.createBufferFromHex("87040100010000000f000000")
const _hex12829 = pxsim.BufferMethods.createBufferFromHex("8704010002000000ff000000")
const _hex12831 = pxsim.BufferMethods.createBufferFromHex("87040200010000000f0000000f000000")
const _hex12833 = pxsim.BufferMethods.createBufferFromHex("8704020002000000ff0000000f000000")
const _hex12835 = pxsim.BufferMethods.createBufferFromHex("87040200020000000f000000ff000000")




function particles_ShapeFactory_addShape__P2904(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C2902_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["sources"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_addShape__P2904.info = {"start":7079,"length":83,"line":225,"column":8,"endLine":227,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"addShape","argumentNames":["this","shape"]}

function particles_ShapeFactory_addShape__P2904_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_addShape__P2904, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ShapeFactory_constructor__P2903(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C2902_VT)) failedCast(r0);
    s.tmp_0 = particles_AreaFactory_constructor__P2891_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.tmp_0.arg4 = undefined;
    s.callLocIdx = 1441; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg3);
    r0 = (s.arg0).fields["sources"] = (s.tmp_0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["ox"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.height(s.arg3);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["oy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_constructor__P2903.info = {"start":6668,"length":285,"line":212,"column":8,"endLine":219,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","source"]}

function particles_ShapeFactory_constructor__P2903_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_constructor__P2903, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_AreaFactory_constructor__P2891(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C2886_VT)) failedCast(r0);
    s.tmp_0 = particles_SprayFactory_constructor__P2881_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 40;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 90;
    s.callLocIdx = 1429; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = (s.arg0).fields["xRange"] = (s.arg1);
    r0 = (s.arg0).fields["yRange"] = (s.arg2);
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 1; continue; }
    r0 = s.arg3;
    { step = 2; continue; }
  case 1:
    r0 = 150;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["minLifespan"] = (s.tmp_0);
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    if (!r0) { step = 3; continue; }
    r0 = s.arg4;
    { step = 4; continue; }
  case 3:
    r0 = 850;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["maxLifespan"] = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(Math_FastRandom__C2748_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Math_FastRandom_constructor__P2750_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1430; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = (s.arg0).fields["galois"] = (s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_constructor__P2891.info = {"start":3950,"length":374,"line":139,"column":8,"endLine":146,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"inline","argumentNames":["this","xRange","yRange","minLifespan","maxLifespan"]}

function particles_AreaFactory_constructor__P2891_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_constructor__P2891, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function effects_ScreenEffect_constructor__P2956(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C2955_VT)) failedCast(r0);
    s.tmp_0 = effects_ParticleEffect_constructor__P2952_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = s.arg4;
    s.callLocIdx = 1461; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["sceneDefaultRate"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_constructor__P2956.info = {"start":2911,"length":332,"line":81,"column":8,"endLine":85,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","anchorDefault","sceneDefault","defaultLifespan","sourceFactory"]}

function effects_ScreenEffect_constructor__P2956_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_constructor__P2956, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function effects_ParticleEffect_constructor__P2952(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C2951_VT)) failedCast(r0);
    r0 = (s.arg0).fields["sourceFactory"] = (s.arg3);
    r0 = (s.arg0).fields["defaultRate"] = (s.arg1);
    r0 = (s.arg0).fields["defaultLifespan"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_constructor__P2952.info = {"start":384,"length":364,"line":13,"column":8,"endLine":18,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this","defaultParticlesPerSecond","defaultLifespan","sourceFactory"]}

function effects_ParticleEffect_constructor__P2952_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_constructor__P2952, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Scene_init__P2602(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2579_VT)) failedCast(r0);
    r0 = s.arg0.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_1 = power_poke__P1730_mk(s);
    s.callLocIdx = 1022; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["allSprites"] = (s.tmp_1);
    r0 = (s.arg0).fields["spriteNextId"] = (0);
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P12959);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 8;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1025; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 13;
    s.tmp_0.arg2 = controller__moveSprites__P1927;
    s.callLocIdx = 1026; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P12982);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 15;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1028; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P12995);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 55;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1032; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P13016);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 90;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1034; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P13024);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 150;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1038; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = control_EventContext_registerFrameHandler__P403_mk(s);
    r0 = s.arg0.fields["eventContext"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 200;
    s.tmp_0.arg2 = control___screen_update__P1790;
    s.callLocIdx = 1039; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_Scene_init_inline__P13053);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals.scene_Scene_initializers___2600;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1041; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init__P2602.info = {"start":4278,"length":2477,"line":124,"column":8,"endLine":182,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"init","argumentNames":["this"]}

function scene_Scene_init__P2602_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init__P2602, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_Scene_init_inline__P12959(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = r0 = s.caps[0];
    r0 = s.tmp_0.fields["_millis"];
    s.tmp_2 = r0;
    r0 = s.caps[0].fields["eventContext"];
    r0 = r0.fields["deltaTimeMillis"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_millis"] = (s.tmp_1);
    s.tmp_0 = controller___update__P1955_mk(s);
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["deltaTimeMillis"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 1000);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1024; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P12959.info = {"start":4568,"length":217,"line":131,"column":72,"endLine":135,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P12959_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P12959, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_Scene_init_inline__P12982(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = PhysicsEngine__C2298_v4_2_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["deltaTimeMillis"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 1000);
    s.tmp_0.arg1 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2298_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.move;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P12982.info = {"start":5080,"length":159,"line":140,"column":69,"endLine":143,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P12982_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P12982, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_Scene_init_inline__P12995(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dt___12996 = undefined;
    s.s___13004 = undefined;
    s.unnamed86___U2 = undefined;
    s.unnamed87___U3 = undefined;
    r0 = s.caps[0].fields["eventContext"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["deltaTimeMillis"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.dt___12996 = (r0);
    s.tmp_0 = scene_Camera_update__P2536_mk(s);
    r0 = s.caps[0].fields["camera"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1030; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.s___13004 = (undefined);
    r0 = s.caps[0].fields["allSprites"];
    s.unnamed86___U2 = (r0);
    s.unnamed87___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed87___U3;
    r0 = pxsim_Array__length(s.unnamed86___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed86___U2, s.unnamed87___U3);
    s.s___13004 = (r0);
    s.tmp_2 = if___update_3_mk(s);
    s.tmp_2.arg0 = s.s___13004;
    r0 = s.caps[0].fields["camera"];
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.dt___12996;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__update"), 3);
      s.callLocIdx = 1031; s.pc = 4; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__update"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__update"], 3); s.callLocIdx = 1031; s.pc = 4; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1031; s.pc = 4; return s.tmp_2;; }
     else { s.callLocIdx = 1031; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    r0 = (s.unnamed87___U3 + 1);
    s.unnamed87___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed86___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P12995.info = {"start":5428,"length":214,"line":149,"column":79,"endLine":155,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P12995_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P12995, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dt___12996: undefined,
  s___13004: undefined,
  unnamed86___U2: undefined,
  unnamed87___U3: undefined,
} }





function scene_Scene_init_inline__P13016(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_Scene_render__P2607_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1033; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P13016.info = {"start":5783,"length":109,"line":160,"column":76,"endLine":163,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P13016_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P13016, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_Scene_init_inline__P13024(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = r0 = globals.stats___2690;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___398;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = lambda_2_mk(s);
    s.tmp_2.argL = globals.control_EventContext_onStats___398;
    if ((globals.control_EventContext_lastStats___397) && (globals.control_EventContext_lastStats___397).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(globals.control_EventContext_lastStats___397);
    checkResumeConsumed();
    return;
    } else { s.retval = (globals.control_EventContext_lastStats___397) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.caps[0].fields["allSprites"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__length(s.tmp_8);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(" sprites:", s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 10);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 10:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 1035; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2689);
    if (!r0) { step = 5; continue; }
    s.tmp_0 = PhysicsEngine__C2298_v3_1_mk(s);
    r0 = s.caps[0].fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2298_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 5:
  case 6:
    s.tmp_0 = game_consoleOverlay_draw__P2816_mk(s);
    s.callLocIdx = 1036; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_0 = power_checkDeepSleep__P1731_mk(s);
    s.callLocIdx = 1037; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P13024.info = {"start":6009,"length":504,"line":165,"column":80,"endLine":177,"endColumn":13,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":[]}

function scene_Scene_init_inline__P13024_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P13024, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
} }





function scene_Scene_init_inline__P13053(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1040; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_init_inline__P13053.info = {"start":6731,"length":12,"line":181,"column":39,"endLine":181,"endColumn":51,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["f"]}

function scene_Scene_init_inline__P13053_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_init_inline__P13053, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_consoleOverlay_draw__P2816(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.height___13102 = undefined;
    s.top___13107 = undefined;
    s.i___13113 = undefined;
    s.t___13126 = undefined;
    s.tOff___13133 = undefined;
    s.tab___13135 = undefined;
    s.unnamed90___U6 = undefined;
    s.unnamed91___U7 = undefined;
    s.padding___13137 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4837);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(globals.instance___4791);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 3; continue; }
    { step = 13; continue; }
  case 3:
  case 4:
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = globals.consoleFont___4845;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1334; s.pc = 14; return s.tmp_7; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.height___13102 = (r0);
    r0 = pxsim_numops_toBoolDecr(globals.stats___2690);
    if (!r0) { step = 5; continue; }
    r0 = s.height___13102;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (2 + s.tmp_0);
    s.top___13107 = (r0);
    s.i___13113 = (0);
  case 7:
    s.tmp_1 = r0 = s.i___13113;
    r0 = pxsim_Array__length(globals.consoleStrings___4837);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_Array__getAt(globals.consoleStrings___4837, s.i___13113);
    s.tmp_5 = r0;
    r0 = pxsim_String_.indexOf(s.tmp_5, "\t", undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >= 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    s.tmp_6 = helpers_stringSplit__P122_mk(s);
    r0 = pxsim_Array__getAt(globals.consoleStrings___4837, s.i___13113);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = "\t";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1335; s.pc = 15; return s.tmp_6;
  case 15:
    r0 = s.retval;
    s.t___13126 = (r0);
    s.tOff___13133 = (0);
    s.tab___13135 = (undefined);
    s.unnamed90___U6 = (s.t___13126);
    s.unnamed91___U7 = (0);
  case 8:
    s.tmp_0 = r0 = s.unnamed91___U7;
    r0 = pxsim_Array__length(s.unnamed90___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_Array__getAt(s.unnamed90___U6, s.unnamed91___U7);
    s.tab___13135 = (r0);
    s.tmp_2 = r0 = globals.tabSize___4839;
    s.tmp_5 = r0 = s.tOff___13133;
    r0 = pxsim_String_.length(s.tab___13135);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 % globals.tabSize___4839);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.padding___13137 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.tab___13135;
    s.tmp_2 = r0 = s.tOff___13133;
    s.tmp_4 = if_charWidth_1_mk(s);
    s.tmp_4.arg0 = globals.consoleFont___4845;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charWidth");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charWidth"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charWidth"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1336; s.pc = 17; return s.tmp_4; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (4 + s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.tmp_5 = r0 = s.top___13107;
    r0 = (s.i___13113 * s.height___13102);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___4836;
    s.tmp_0.arg5 = globals.consoleFont___4845;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1337; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.tmp_0 = r0 = s.tOff___13133;
    r0 = pxsim_String_.length(s.tab___13135);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.padding___13137);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.tOff___13133 = (r0);
    r0 = (s.unnamed91___U7 + 1);
    s.unnamed91___U7 = (r0);
    { step = 8; continue; }
  case 9:
    s.unnamed90___U6 = (undefined);
    { step = 11; continue; }
  case 10:
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    r0 = pxsim_Array__getAt(globals.consoleStrings___4837, s.i___13113);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 4;
    s.tmp_1 = r0 = s.top___13107;
    r0 = (s.i___13113 * s.height___13102);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = globals.consoleColor___4836;
    s.tmp_0.arg5 = globals.consoleFont___4845;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1338; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 11:
    r0 = (s.i___13113 + 1);
    s.i___13113 = (r0);
    { step = 7; continue; }
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_draw__P2816.info = {"start":1364,"length":859,"line":44,"column":4,"endLine":61,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"draw","argumentNames":[]}

function game_consoleOverlay_draw__P2816_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_draw__P2816, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  height___13102: undefined,
  top___13107: undefined,
  i___13113: undefined,
  t___13126: undefined,
  tOff___13133: undefined,
  tab___13135: undefined,
  unnamed90___U6: undefined,
  unnamed91___U7: undefined,
  padding___13137: undefined,
} }





function scene_systemMenu_isVisible__P2797(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.instance___4791);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_isVisible__P2797.info = {"start":13170,"length":62,"line":395,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"isVisible","argumentNames":[]}

function scene_systemMenu_isVisible__P2797_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_isVisible__P2797, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function helpers_stringSplit__P122(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___13191 = undefined;
    s.lim___13193 = undefined;
    s.s___13209 = undefined;
    s.p___13212 = undefined;
    s.R___13213 = undefined;
    s.z___13227 = undefined;
    s.T___13240 = undefined;
    s.q___13241 = undefined;
    s.e___13247 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.A___13191 = (r0);
    s.lim___13193 = (0);
    r0 = (s.arg2 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (536870912 - 1);
    s.lim___13193 = (r0);
    { step = 4; continue; }
  case 1:
    r0 = (s.arg2 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.lim___13193 = (0);
    { step = 3; continue; }
  case 2:
    r0 = (s.arg2 | 0);
    s.lim___13193 = (r0);
  case 3:
  case 4:
    r0 = pxsim_String_.length(s.arg0);
    s.s___13209 = (r0);
    s.p___13212 = (0);
    s.R___13213 = (s.arg1);
    r0 = (s.lim___13193 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.A___13191;
    { step = 21; continue; }
  case 5:
  case 6:
    r0 = (s.arg1 === undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_Array_.setAt(s.A___13191, 0, s.arg0);
    r0 = s.A___13191;
    { step = 21; continue; }
  case 7:
  case 8:
    r0 = (s.s___13209 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.tmp_1 = helpers_splitMatch__P4105_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = 0;
    s.tmp_1.arg2 = s.R___13213;
    s.callLocIdx = 13; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.z___13227 = (r0);
    r0 = (s.z___13227 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.A___13191;
    { step = 21; continue; }
  case 9:
  case 10:
    r0 = pxsim_Array_.setAt(s.A___13191, 0, s.arg0);
    r0 = s.A___13191;
    { step = 21; continue; }
  case 11:
  case 12:
    s.q___13241 = (s.p___13212);
  case 13:
    r0 = (s.q___13241 != s.s___13209);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    s.tmp_1 = helpers_splitMatch__P4105_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.q___13241;
    s.tmp_1.arg2 = s.R___13213;
    s.callLocIdx = 14; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.e___13247 = (r0);
    r0 = (s.e___13247 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = (s.q___13241 + 1);
    s.q___13241 = (r0);
    { step = 19; continue; }
  case 14:
    r0 = (s.e___13247 == s.p___13212);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = (s.q___13241 + 1);
    s.q___13241 = (r0);
    { step = 18; continue; }
  case 15:
    s.tmp_0 = helpers_stringSlice__P119_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___13212;
    s.tmp_0.arg2 = s.q___13241;
    s.callLocIdx = 15; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.T___13240 = (r0);
    r0 = pxsim_Array__push(s.A___13191, s.T___13240);
    r0 = pxsim_Array__length(s.A___13191);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.lim___13193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 16; continue; }
    r0 = s.A___13191;
    { step = 21; continue; }
  case 16:
  case 17:
    s.p___13212 = (s.e___13247);
    s.q___13241 = (s.p___13212);
  case 18:
  case 19:
    { step = 13; continue; }
  case 20:
    s.tmp_0 = helpers_stringSlice__P119_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.p___13212;
    s.tmp_0.arg2 = s.q___13241;
    s.callLocIdx = 16; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.T___13240 = (r0);
    r0 = pxsim_Array__push(s.A___13191, s.T___13240);
    r0 = s.A___13191;
  case 21:
    return leave(s, r0)
  default: oops()
} } }
helpers_stringSplit__P122.info = {"start":12919,"length":1319,"line":434,"column":4,"endLine":478,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"stringSplit","argumentNames":["S","separator","limit"]}

function helpers_stringSplit__P122_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_stringSplit__P122, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  A___13191: undefined,
  lim___13193: undefined,
  s___13209: undefined,
  p___13212: undefined,
  R___13213: undefined,
  z___13227: undefined,
  T___13240: undefined,
  q___13241: undefined,
  e___13247: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_splitMatch__P4105(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___13327 = undefined;
    s.s___13330 = undefined;
    s.i___13340 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_String_.length(s.arg2);
    s.r___13327 = (r0);
    r0 = pxsim_String_.length(s.arg0);
    s.s___13330 = (r0);
    r0 = (s.arg1 + s.r___13327);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.s___13330);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = -1;
    { step = 7; continue; }
  case 1:
  case 2:
    s.i___13340 = (0);
  case 3:
    r0 = (s.i___13340 < s.r___13327);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_3 = r0 = s.arg0;
    r0 = (s.arg1 + s.i___13340);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String_.charAt(s.arg2, s.i___13340);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 != s.tmp_5);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = -1;
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = (s.i___13340 + 1);
    s.i___13340 = (r0);
    { step = 3; continue; }
  case 6:
    r0 = (s.arg1 + s.r___13327);
  case 7:
    return leave(s, r0)
  default: oops()
} } }
helpers_splitMatch__P4105.info = {"start":14244,"length":289,"line":480,"column":4,"endLine":489,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"splitMatch","argumentNames":["S","q","R"]}

function helpers_splitMatch__P4105_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_splitMatch__P4105, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  r___13327: undefined,
  s___13330: undefined,
  i___13340: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Scene_render__P2607(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___13424 = undefined;
    s.unnamed88___U1 = undefined;
    s.unnamed89___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2579_VT)) failedCast(r0);
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 11; continue; }
  case 1:
  case 2:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 4);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["previousScene"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    s.tmp_3 = scene_Scene_render__P2607_mk(s);
    r0 = s.arg0.fields["previousScene"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1043; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.tmp_0 = scene_Background_draw__P2417_mk(s);
    r0 = s.arg0.fields["background"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1044; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 6:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_2 = helpers_arraySort__P105_mk(s);
    r0 = s.arg0.fields["allSprites"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = scene_Scene_render_inline__P13401;
    s.callLocIdx = 1049; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 7:
  case 8:
    s.s___13424 = (undefined);
    r0 = s.arg0.fields["allSprites"];
    s.unnamed88___U1 = (r0);
    s.unnamed89___U2 = (0);
  case 9:
    s.tmp_0 = r0 = s.unnamed89___U2;
    r0 = pxsim_Array__length(s.unnamed88___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed88___U1, s.unnamed89___U2);
    s.s___13424 = (r0);
    s.tmp_2 = if___draw_2_mk(s);
    s.tmp_2.arg0 = s.s___13424;
    r0 = s.arg0.fields["camera"];
    s.tmp_2.arg1 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "__draw"), 2);
      s.callLocIdx = 1050; s.pc = 15; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["__draw"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["__draw"], 2); s.callLocIdx = 1050; s.pc = 15; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1050; s.pc = 15; return s.tmp_2;; }
     else { s.callLocIdx = 1050; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    r0 = (s.unnamed89___U2 + 1);
    s.unnamed89___U2 = (r0);
    { step = 9; continue; }
  case 10:
    s.unnamed88___U1 = (undefined);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render__P2607.info = {"start":7954,"length":917,"line":223,"column":8,"endLine":247,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"render","argumentNames":["this"]}

function scene_Scene_render__P2607_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render__P2607, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  s___13424: undefined,
  unnamed88___U1: undefined,
  unnamed89___U2: undefined,
  arg0: undefined,
} }





function scene_Scene_render_inline__P13401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_2 = if_z_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "z");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["z"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["z"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1045; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = if_z_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "z");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["z"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["z"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1046; s.pc = 4; return s.tmp_4; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_6 = if_id_1_mk(s);
    s.tmp_6.arg0 = s.arg0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "id");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["id"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["id"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1047; s.pc = 5; return s.tmp_6; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_5 = r0;
    s.tmp_8 = if_id_1_mk(s);
    s.tmp_8.arg0 = s.arg1;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "id");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["id"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["id"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 1048; s.pc = 6; return s.tmp_8; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_5 - s.tmp_7);
  case 2:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = s.tmp_9;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_render_inline__P13401.info = {"start":8532,"length":52,"line":237,"column":37,"endLine":237,"endColumn":89,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["a","b"]}

function scene_Scene_render_inline__P13401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_render_inline__P13401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_draw__P2417(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2408_VT)) failedCast(r0);
    r0 = s.arg0.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.fill(globals.screen___1829, s.tmp_0);
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["_image"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___1829, s.tmp_1, 0, 0);
  case 1:
  case 2:
    r0 = s.arg0.fields["_layers"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtcore_mkAction(1, scene_Background_draw_inline__P13456);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["_layers"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 912; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw__P2417.info = {"start":1166,"length":545,"line":48,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this"]}

function scene_Background_draw__P2417_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw__P2417, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Background_draw_inline__P13456(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___13458 = undefined;
    s.oy___13469 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetX"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.ox___13458 = (r0);
    r0 = s.caps[0].fields["camera"];
    r0 = r0.fields["drawOffsetY"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["distance"];
    s.tmp_3 = r0;
    r0 = (1 + s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 / s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.round(s.tmp_0);
    s.oy___13469 = (r0);
    s.tmp_0 = scene_BackgroundLayer_draw__P2426_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ox___13458;
    s.tmp_0.arg2 = s.oy___13469;
    s.callLocIdx = 911; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_draw_inline__P13456.info = {"start":1373,"length":312,"line":53,"column":37,"endLine":58,"endColumn":17,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["layer"]}

function scene_Background_draw_inline__P13456_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_draw_inline__P13456, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ox___13458: undefined,
  oy___13469: undefined,
  arg0: undefined,
} }





function scene_BackgroundLayer_draw__P2426(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___13487 = undefined;
    s.h___13490 = undefined;
    s.pw___13493 = undefined;
    s.ph___13497 = undefined;
    s.rx___13506 = undefined;
    s.ry___13509 = undefined;
    s.y___13578 = undefined;
    s.py___13579 = undefined;
    s.dh___13588 = undefined;
    s.x___13596 = undefined;
    s.rxl___13597 = undefined;
    s.px___13603 = undefined;
    s.dw___13607 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C2418_VT)) failedCast(r0);
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.w___13487 = (r0);
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.h___13490 = (r0);
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    s.pw___13493 = (r0);
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    s.ph___13497 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.pw___13493);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.ph___13497);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 23; continue; }
  case 3:
  case 4:
    r0 = (0 - s.arg1);
    s.rx___13506 = (r0);
    r0 = (0 - s.arg2);
    s.ry___13509 = (r0);
    r0 = s.arg0.fields["alignX"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 5:
    s.tmp_1 = r0 = s.rx___13506;
    r0 = (s.w___13487 + s.pw___13493);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.rx___13506 = (r0);
    { step = 7; continue; }
  case 6:
    s.tmp_0 = r0 = s.rx___13506;
    r0 = (s.w___13487 + s.pw___13493);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.rx___13506 = (r0);
  case 7:
    r0 = s.arg0.fields["alignY"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 8:
    s.tmp_1 = r0 = s.ry___13509;
    r0 = (s.h___13490 + s.ph___13497);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.ry___13509 = (r0);
    { step = 10; continue; }
  case 9:
    s.tmp_0 = r0 = s.ry___13509;
    r0 = (s.h___13490 + s.ph___13497);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.ry___13509 = (r0);
  case 10:
    r0 = (s.rx___13506 % s.w___13487);
    s.rx___13506 = (r0);
    r0 = (s.rx___13506 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = (s.rx___13506 + s.w___13487);
    s.rx___13506 = (r0);
  case 11:
  case 12:
    r0 = (s.ry___13509 % s.h___13490);
    s.ry___13509 = (r0);
    r0 = (s.ry___13509 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = (s.ry___13509 + s.h___13490);
    s.ry___13509 = (r0);
  case 13:
  case 14:
    r0 = pxsim.Math_.floor(s.rx___13506);
    s.rx___13506 = (r0);
    r0 = pxsim.Math_.floor(s.ry___13509);
    s.ry___13509 = (r0);
    s.y___13578 = (0);
    s.py___13579 = (0);
  case 15:
    r0 = (s.y___13578 < s.h___13490);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    r0 = (s.y___13578 % s.ph___13497);
    s.py___13579 = (r0);
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = (s.ph___13497 - s.py___13579);
    s.tmp_0.arg0 = r0;
    r0 = (s.h___13490 - s.ry___13509);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 914; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.dh___13588 = (r0);
    s.x___13596 = (0);
    s.rxl___13597 = (s.rx___13506);
  case 16:
    r0 = (s.x___13596 < s.w___13487);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    r0 = (s.x___13596 % s.pw___13493);
    s.px___13603 = (r0);
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = (s.pw___13493 - s.px___13603);
    s.tmp_0.arg0 = r0;
    r0 = (s.w___13487 - s.rxl___13597);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 915; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.dw___13607 = (r0);
    r0 = s.arg0.fields["img"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.drawImage(globals.screen___1829, s.tmp_0, s.rxl___13597, s.ry___13509);
    r0 = (s.rxl___13597 + s.dw___13607);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.w___13487);
    s.rxl___13597 = (r0);
    r0 = s.arg0.fields["repeatX"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = s.dw___13607;
    { step = 18; continue; }
  case 17:
    r0 = s.w___13487;
  case 18:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.x___13596 + s.tmp_1);
    s.x___13596 = (r0);
    { step = 16; continue; }
  case 19:
    r0 = (s.ry___13509 + s.dh___13588);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.h___13490);
    s.ry___13509 = (r0);
    r0 = s.arg0.fields["repeatY"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = s.dh___13588;
    { step = 21; continue; }
  case 20:
    r0 = s.h___13490;
  case 21:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.y___13578 + s.tmp_1);
    s.y___13578 = (r0);
    { step = 15; continue; }
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_draw__P2426.info = {"start":3063,"length":1537,"line":99,"column":8,"endLine":144,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"draw","argumentNames":["this","offsetX","offsetY"]}

function scene_BackgroundLayer_draw__P2426_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_draw__P2426, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  w___13487: undefined,
  h___13490: undefined,
  pw___13493: undefined,
  ph___13497: undefined,
  rx___13506: undefined,
  ry___13509: undefined,
  y___13578: undefined,
  py___13579: undefined,
  dh___13588: undefined,
  x___13596: undefined,
  rxl___13597: undefined,
  px___13603: undefined,
  dw___13607: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_update__P2536(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.elapsed___13688 = undefined;
    s.percentComplete___13702 = undefined;
    s.damp___13709 = undefined;
    s.f___13718 = undefined;
    s.x___13724 = undefined;
    s.y___13731 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    r0 = s.arg0.fields["sprite"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = scene_Camera_offsetX__P2526_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_3 = Sprite_x__P2141_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 1004; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1005; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = scene_Camera_offsetY__P2528_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_y__P2143_mk(s);
    r0 = s.arg0.fields["sprite"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1006; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1007; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 1:
  case 2:
    s.tmp_0 = scene_Camera_offsetX__P2526_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    r0 = s.tmp_1.fields["_offsetX"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1009; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.tmp_0 = scene_Camera_offsetY__P2528_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    r0 = s.tmp_1.fields["_offsetY"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1011; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["_offsetX"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["_offsetY"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = s.arg0.fields["shakeStartTime"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.elapsed___13688 = (r0);
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_1 = r0;
    r0 = (s.elapsed___13688 >= s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = (s.arg0).fields["shakeStartTime"] = (undefined);
    { step = 6; continue; }
  case 3:
    r0 = s.arg0.fields["shakeDuration"];
    s.tmp_0 = r0;
    r0 = (s.elapsed___13688 / s.tmp_0);
    s.percentComplete___13702 = (r0);
    s.damp___13709 = (1);
    r0 = (s.percentComplete___13702 >= 0.75);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = (1 - s.percentComplete___13702);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1014; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.damp___13709 = (r0);
  case 4:
  case 5:
    r0 = s.arg0.fields["shakeAmplitude"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.damp___13709);
    s.f___13718 = (r0);
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___13718);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.x___13724 = (r0);
    r0 = pxsim.Math_.random();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.f___13718);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 0);
    s.y___13731 = (r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetX"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.x___13724);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetX"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["drawOffsetY"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.y___13731);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["drawOffsetY"] = (s.tmp_1);
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_update__P2536.info = {"start":2297,"length":1397,"line":77,"column":8,"endLine":112,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"update","argumentNames":["this"]}

function scene_Camera_update__P2536_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_update__P2536, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  elapsed___13688: undefined,
  percentComplete___13702: undefined,
  damp___13709: undefined,
  f___13718: undefined,
  x___13724: undefined,
  y___13731: undefined,
  arg0: undefined,
} }





function scene_Camera_offsetY__P2528(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___13750 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1001; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.scene___13750 = (r0);
    r0 = s.scene___13750.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___13750.fields["tileMap"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["_map"];
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 3; continue; }
    s.tmp_7 = r0 = s.arg0;
    s.tmp_9 = tiles_TileMap_offsetY__P2481_mk(s);
    r0 = s.scene___13750.fields["tileMap"];
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = s.arg1;
    s.callLocIdx = 1003; s.pc = 6; return s.tmp_9;
  case 6:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["_offsetY"] = (s.tmp_8);
    { step = 4; continue; }
  case 3:
    r0 = (s.arg0).fields["_offsetY"] = (s.arg1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P2528.info = {"start":1034,"length":267,"line":37,"column":8,"endLine":44,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this","v"]}

function scene_Camera_offsetY__P2528_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P2528, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  scene___13750: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_enabled__P2486(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg0.fields["_map"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_enabled__P2486.info = {"start":10141,"length":66,"line":351,"column":8,"endLine":353,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"enabled","argumentNames":["this"]}
tiles_TileMap_enabled__P2486.isGetter = true;

function tiles_TileMap_enabled__P2486_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_enabled__P2486, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_TileMap_offsetY__P2481(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_3 = tiles_TileMap_areaHeight__P2483_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 940; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 941; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 942; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetY__P2481.info = {"start":9594,"length":123,"line":329,"column":8,"endLine":331,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetY","argumentNames":["this","value"]}

function tiles_TileMap_offsetY__P2481_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetY__P2481, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaHeight__P2483(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["_map"];
    s.tmp_2 = r0;
    r0 = s.tmp_2.fields["_height"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaHeight__P2483.info = {"start":9828,"length":93,"line":337,"column":8,"endLine":339,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaHeight","argumentNames":["this"]}

function tiles_TileMap_areaHeight__P2483_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaHeight__P2483, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function tiles_TileMap_scale__P2477(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P2477.info = {"start":9169,"length":55,"line":310,"column":8,"endLine":312,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMap_scale__P2477.isGetter = true;

function tiles_TileMap_scale__P2477_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P2477, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMapData_height__P2459(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    r0 = s.arg0.fields["_height"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_height__P2459.info = {"start":6453,"length":65,"line":218,"column":8,"endLine":220,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"height","argumentNames":["this"]}
tiles_TileMapData_height__P2459.isGetter = true;

function tiles_TileMapData_height__P2459_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_height__P2459, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetY__P2527(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    r0 = s.arg0.fields["_offsetY"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetY__P2527.info = {"start":966,"length":59,"line":34,"column":8,"endLine":36,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetY","argumentNames":["this"]}
scene_Camera_offsetY__P2527.isGetter = true;

function scene_Camera_offsetY__P2527_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetY__P2527, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P2526(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___13806 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 998; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.scene___13806 = (r0);
    r0 = s.scene___13806.fields["tileMap"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___13806.fields["tileMap"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["_map"];
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 3; continue; }
    s.tmp_7 = r0 = s.arg0;
    s.tmp_9 = tiles_TileMap_offsetX__P2480_mk(s);
    r0 = s.scene___13806.fields["tileMap"];
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = s.arg1;
    s.callLocIdx = 1000; s.pc = 6; return s.tmp_9;
  case 6:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["_offsetX"] = (s.tmp_8);
    { step = 4; continue; }
  case 3:
    r0 = (s.arg0).fields["_offsetX"] = (s.arg1);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P2526.info = {"start":690,"length":267,"line":26,"column":8,"endLine":33,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this","v"]}

function scene_Camera_offsetX__P2526_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P2526, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  scene___13806: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_offsetX__P2480(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_3 = tiles_TileMap_areaWidth__P2482_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 937; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 0;
    s.callLocIdx = 938; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 939; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_offsetX__P2480.info = {"start":9463,"length":121,"line":325,"column":8,"endLine":327,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"offsetX","argumentNames":["this","value"]}

function tiles_TileMap_offsetX__P2480_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_offsetX__P2480, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_areaWidth__P2482(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["_map"];
    s.tmp_2 = r0;
    r0 = s.tmp_2.fields["_width"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 << s.tmp_3);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_areaWidth__P2482.info = {"start":9727,"length":91,"line":333,"column":8,"endLine":335,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"areaWidth","argumentNames":["this"]}

function tiles_TileMap_areaWidth__P2482_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_areaWidth__P2482, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function tiles_TileMapData_width__P2458(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    r0 = s.arg0.fields["_width"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_width__P2458.info = {"start":6380,"length":63,"line":214,"column":8,"endLine":216,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"width","argumentNames":["this"]}
tiles_TileMapData_width__P2458.isGetter = true;

function tiles_TileMapData_width__P2458_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_width__P2458, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_offsetX__P2525(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    r0 = s.arg0.fields["_offsetX"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_offsetX__P2525.info = {"start":622,"length":59,"line":23,"column":8,"endLine":25,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"offsetX","argumentNames":["this"]}
scene_Camera_offsetX__P2525.isGetter = true;

function scene_Camera_offsetX__P2525_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_offsetX__P2525, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function PhysicsEngine_move__P2304(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2298_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_move__P2304.info = {"start":351,"length":20,"line":18,"column":4,"endLine":18,"endColumn":24,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function PhysicsEngine_move__P2304_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_move__P2304, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function PhysicsEngine_draw__P2303(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2298_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_draw__P2303.info = {"start":279,"length":10,"line":15,"column":4,"endLine":15,"endColumn":14,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function PhysicsEngine_draw__P2303_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_draw__P2303, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller___update__P1955(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtms___14166 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 * 1000);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    s.dtms___14166 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, controller___update_inline__P14173);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.dtms___14166);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_2 = controller_players__P1923_mk(s);
    s.callLocIdx = 223; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 225; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update__P1955.info = {"start":11751,"length":137,"line":361,"column":4,"endLine":364,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["dt"]}

function controller___update__P1955_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update__P1955, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  dtms___14166: undefined,
  arg0: undefined,
} }





function controller___update_inline__P14173(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___update__P1953_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.callLocIdx = 224; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller___update_inline__P14173.info = {"start":11853,"length":27,"line":363,"column":26,"endLine":363,"endColumn":53,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller___update_inline__P14173_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller___update_inline__P14173, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___update__P1953(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 0);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    r0 = pxsim_pxtcore_mkAction(1, controller_Controller___update_inline__P14186);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["buttons"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 222; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update__P1953.info = {"start":11229,"length":124,"line":343,"column":8,"endLine":346,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Controller___update__P1953_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update__P1953, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller___update_inline__P14186(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Button___update__P1993_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 221; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___update_inline__P14186.info = {"start":11316,"length":25,"line":345,"column":33,"endLine":345,"endColumn":58,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["btn"]}

function controller_Controller___update_inline__P14186_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___update_inline__P14186, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button___update__P1993(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.delay___14202 = undefined;
    s.interval___14211 = undefined;
    s.count___14224 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = s.arg0.fields["_pressed"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 11; continue; }
  case 1:
  case 2:
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + s.arg1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_pressedElasped"] = (s.tmp_4);
    r0 = s.arg0.fields["repeatDelay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = globals.defaultRepeatDelay___4357;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["repeatDelay"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.delay___14202 = (s.tmp_2);
    r0 = s.arg0.fields["repeatInterval"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = globals.defaultRepeatInterval___4359;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["repeatInterval"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.interval___14211 = (s.tmp_2);
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < s.delay___14202);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    { step = 11; continue; }
  case 7:
  case 8:
    r0 = s.arg0.fields["_pressedElasped"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.delay___14202);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.interval___14211);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / s.interval___14211);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.count___14224 = (r0);
    r0 = s.arg0.fields["_repeatCount"];
    s.tmp_1 = r0;
    r0 = (s.count___14224 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_2 = controller_Button_raiseButtonRepeat__P4346_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 237; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    r0 = (s.arg0).fields["_repeatCount"] = (s.count___14224);
  case 9:
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button___update__P1993.info = {"start":7291,"length":704,"line":217,"column":8,"endLine":234,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"__update","argumentNames":["this","dtms"]}

function controller_Button___update__P1993_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button___update__P1993, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  delay___14202: undefined,
  interval___14211: undefined,
  count___14224: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonRepeat__P4346(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___4355);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2054, s.tmp_0);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2055, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonRepeat__P4346.info = {"start":3303,"length":211,"line":110,"column":8,"endLine":115,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonRepeat","argumentNames":["this"]}

function controller_Button_raiseButtonRepeat__P4346_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonRepeat__P4346, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_players__P1923(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller__player1__P1922_mk(s);
    s.callLocIdx = 182; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = helpers_arrayFilter__P110_mk(s);
    s.tmp_0.arg0 = globals._players___4338;
    s.tmp_0.arg1 = controller_players_inline__P14061;
    s.callLocIdx = 183; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
controller_players__P1923.info = {"start":748,"length":144,"line":29,"column":4,"endLine":32,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"players","argumentNames":[]}

function controller_players__P1923_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players__P1923, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_players_inline__P14061(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
controller_players_inline__P14061.info = {"start":870,"length":14,"line":31,"column":31,"endLine":31,"endColumn":45,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller_players_inline__P14061_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_players_inline__P14061, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller__player1__P1922(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals._players___4338);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__getAt(globals._players___4338, 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(controller_Controller__C1928_VT);
    s.tmp_5 = r0;
    r0 = pxsim_Array__mk();
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, globals.left___1909);
    r0 = pxsim_Array__push(s.tmp_6, globals.up___1910);
    r0 = pxsim_Array__push(s.tmp_6, globals.right___1911);
    r0 = pxsim_Array__push(s.tmp_6, globals.down___1912);
    r0 = pxsim_Array__push(s.tmp_6, globals.A___1907);
    r0 = pxsim_Array__push(s.tmp_6, globals.B___1908);
    r0 = pxsim_Array__push(s.tmp_6, globals.menu___1913);
    s.tmp_7 = controller_Controller_constructor__P1932_mk(s);
    s.tmp_7.arg0 = s.tmp_5;
    s.tmp_7.arg1 = 1;
    s.tmp_7.arg2 = s.tmp_6;
    s.callLocIdx = 181; s.pc = 5; return s.tmp_7;
  case 5:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = pxsim_Array__getAt(globals._players___4338, 0);
    return leave(s, r0)
  default: oops()
} } }
controller__player1__P1922.info = {"start":484,"length":258,"line":23,"column":4,"endLine":27,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_player1","argumentNames":[]}

function controller__player1__P1922_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__player1__P1922, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
} }





function controller_Controller_constructor__P1932(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.leftId___14108 = undefined;
    s.i___14116 = undefined;
    s.i___14134 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.control.allocateNotifyEvent();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_id"] = (s.tmp_1);
    r0 = (s.arg0).fields["_connected"] = (false);
    r0 = (s.arg0).fields["playerIndex"] = (s.arg1);
    r0 = (s.arg0).fields["analog"] = (false);
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["buttons"] = (s.arg2);
    { step = 4; continue; }
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttons"] = (s.tmp_1);
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 7);
    s.tmp_0 = r0;
    r0 = (1 + s.tmp_0);
    s.leftId___14108 = (r0);
    s.i___14116 = (0);
  case 2:
    r0 = (s.i___14116 < 7);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(controller_Button__C1979_VT);
    s.tmp_1 = r0;
    s.tmp_2 = controller_Button_constructor__P1985_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    r0 = (s.leftId___14108 + s.i___14116);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = -1;
    s.callLocIdx = 187; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_1);
    r0 = (s.i___14116 + 1);
    s.i___14116 = (r0);
    { step = 2; continue; }
  case 3:
  case 4:
    s.i___14134 = (0);
  case 5:
    s.tmp_1 = r0 = s.i___14134;
    r0 = s.arg0.fields["buttons"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = s.arg0.fields["buttons"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___14134);
    s.tmp_4 = r0;
    r0 = (s.tmp_4).fields["_owner"] = (s.arg0);
    r0 = (s.i___14134 + 1);
    s.i___14134 = (r0);
    { step = 5; continue; }
  case 6:
    s.tmp_0 = controller_addController__P4339_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 188; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_constructor__P1932.info = {"start":1555,"length":696,"line":58,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["this","playerIndex","buttons"]}

function controller_Controller_constructor__P1932_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_constructor__P1932, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  leftId___14108: undefined,
  i___14116: undefined,
  i___14134: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_addController__P4339(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals._players___4338);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals._players___4338 = (r0);
  case 1:
  case 2:
    s.tmp_0 = r0 = globals._players___4338;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_addController__P4339.info = {"start":321,"length":157,"line":16,"column":4,"endLine":21,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"addController","argumentNames":["ctrl"]}

function controller_addController__P4339_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_addController__P4339, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function helpers_arrayFilter__P110(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___10892 = undefined;
    s.len___10894 = undefined;
    s.i___10897 = undefined;
    s.v___10902 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___10892 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___10894 = (r0);
    s.i___10897 = (0);
  case 1:
    r0 = (s.i___10897 < s.len___10894);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.arg0, s.i___10897);
    s.v___10902 = (r0);
    s.tmp_1 = lambda_3_mk(s);
    s.tmp_1.argL = s.arg1;
    s.tmp_1.arg0 = s.v___10902;
    s.tmp_1.arg1 = s.i___10897;
    setupLambda(s.tmp_1, s.tmp_1.argL);
    s.callLocIdx = 7; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__push(s.res___10892, s.v___10902);
  case 2:
  case 3:
    r0 = (s.i___10897 + 1);
    s.i___10897 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = s.res___10892;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayFilter__P110.info = {"start":7695,"length":317,"line":261,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayFilter","argumentNames":["arr","callbackfn"]}

function helpers_arrayFilter__P110_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayFilter__P110, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  res___10892: undefined,
  len___10894: undefined,
  i___10897: undefined,
  v___10902: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller__moveSprites__P1927(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1 = controller_players__P1923_mk(s);
    s.callLocIdx = 184; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = controller__moveSprites_inline__P13856;
    s.callLocIdx = 186; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites__P1927.info = {"start":1108,"length":180,"line":43,"column":4,"endLine":47,"endColumn":5,"fileName":"pxt_modules/game/controller.ts","functionName":"_moveSprites","argumentNames":[]}

function controller__moveSprites__P1927_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites__P1927, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function controller__moveSprites_inline__P13856(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = controller_Controller___preUpdate__P1952_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 185; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__moveSprites_inline__P13856.info = {"start":1254,"length":26,"line":46,"column":26,"endLine":46,"endColumn":52,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["ctrl"]}

function controller__moveSprites_inline__P13856_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__moveSprites_inline__P13856, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate__P1952(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.deadSprites___13863 = undefined;
    s.svx___13864 = undefined;
    s.svy___13865 = undefined;
    s.svxInCricle___13900 = undefined;
    s.svyInCircle___13902 = undefined;
    s.sq___13904 = undefined;
    s.scale___13919 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    s.tmp_3 = controller_Controller__controlledSprites__P1933_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 196; s.pc = 18; return s.tmp_3;
  case 18:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 17; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtrt.mklocRef();
    s.deadSprites___13863 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.deadSprites___13863, false);
    r0 = pxsim_pxtrt.mklocRef();
    s.svx___13864 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.svx___13864, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.svy___13865 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.svy___13865, 0);
    r0 = s.arg0.fields["analog"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = r0 = s.svx___13864;
    s.tmp_5 = controller_Button_pressureLevel__P1991_mk(s);
    s.tmp_6 = controller_Controller_right__P1938_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 197; s.pc = 20; return s.tmp_6;
  case 20:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 198; s.pc = 19; return s.tmp_5;
  case 19:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_8 = controller_Button_pressureLevel__P1991_mk(s);
    s.tmp_9 = controller_Controller_left__P1937_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.callLocIdx = 199; s.pc = 22; return s.tmp_9;
  case 22:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    s.callLocIdx = 200; s.pc = 21; return s.tmp_8;
  case 21:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_4 - s.tmp_7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0 = s.svy___13865;
    s.tmp_4 = controller_Button_pressureLevel__P1991_mk(s);
    s.tmp_5 = controller_Controller_down__P1940_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.callLocIdx = 201; s.pc = 24; return s.tmp_5;
  case 24:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 202; s.pc = 23; return s.tmp_4;
  case 23:
    r0 = s.retval;
    s.tmp_3 = r0;
    s.tmp_7 = controller_Button_pressureLevel__P1991_mk(s);
    s.tmp_8 = controller_Controller_up__P1939_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 203; s.pc = 26; return s.tmp_8;
  case 26:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 204; s.pc = 25; return s.tmp_7;
  case 25:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_3 - s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 12; continue; }
  case 3:
    s.tmp_1 = controller_Button__C1979_v0_1_mk(s);
    s.tmp_2 = controller_Controller_right__P1938_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 205; s.pc = 28; return s.tmp_2;
  case 28:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C1979_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = 256;
    { step = 5; continue; }
  case 4:
    r0 = 0;
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C1979_v0_1_mk(s);
    s.tmp_6 = controller_Controller_left__P1937_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 206; s.pc = 30; return s.tmp_6;
  case 30:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C1979_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 29; return s.tmp_5;
  case 29:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 6; continue; }
    r0 = 256;
    { step = 7; continue; }
  case 6:
    r0 = 0;
  case 7:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svx___13864;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
    s.tmp_1 = controller_Button__C1979_v0_1_mk(s);
    s.tmp_2 = controller_Controller_down__P1940_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 207; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    if (!checkSubtype(s.tmp_1.arg0, controller_Button__C1979_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.isPressed;
    s.pc = 31; return s.tmp_1;
  case 31:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = 256;
    { step = 9; continue; }
  case 8:
    r0 = 0;
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_5 = controller_Button__C1979_v0_1_mk(s);
    s.tmp_6 = controller_Controller_up__P1939_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 208; s.pc = 34; return s.tmp_6;
  case 34:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    if (!checkSubtype(s.tmp_5.arg0, controller_Button__C1979_VT)) failedCast(s.tmp_5.arg0);
    s.tmp_5.fn = s.tmp_5.arg0.vtable.methods.isPressed;
    s.pc = 33; return s.tmp_5;
  case 33:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 10; continue; }
    r0 = 256;
    { step = 11; continue; }
  case 10:
    r0 = 0;
  case 11:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.svy___13865;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_9 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_8, s.tmp_9);
  case 12:
    r0 = pxsim_pxtrt.mklocRef();
    s.svxInCricle___13900 = (r0);
    s.tmp_0 = r0 = s.svxInCricle___13900;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13864);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.svyInCircle___13902 = (r0);
    s.tmp_0 = r0 = s.svyInCircle___13902;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13865);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13864);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13864);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13865);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13865);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 + s.tmp_3);
    s.sq___13904 = (r0);
    r0 = (s.sq___13904 > 65536);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = (65536 / s.sq___13904);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.sqrt(s.tmp_1);
    s.scale___13919 = (r0);
    s.tmp_0 = r0 = s.svxInCricle___13900;
    s.tmp_3 = r0 = s.scale___13919;
    r0 = pxsim_pxtrt_ldlocRef(s.svx___13864);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.tmp_0 = r0 = s.svyInCircle___13902;
    s.tmp_3 = r0 = s.scale___13919;
    r0 = pxsim_pxtrt_ldlocRef(s.svy___13865);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 13:
  case 14:
    r0 = pxsim_pxtcore_mkAction(5, controller_Controller___preUpdate_inline__P13937);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.deadSprites___13863);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.svx___13864);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.svy___13865);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.svxInCricle___13900);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.svyInCircle___13902);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_2 = controller_Controller__controlledSprites__P1933_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 209; s.pc = 36; return s.tmp_2;
  case 36:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 217; s.pc = 35; return s.tmp_1;
  case 35:
    r0 = s.retval;
    r0 = pxsim_pxtrt_ldlocRef(s.deadSprites___13863);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.tmp_1 = controller_Controller__controlledSprites__P1934_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3 = controller_Controller__controlledSprites__P1933_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 218; s.pc = 39; return s.tmp_3;
  case 39:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = controller_Controller___preUpdate_inline__P13994;
    s.callLocIdx = 219; s.pc = 38; return s.tmp_2;
  case 38:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 220; s.pc = 37; return s.tmp_1;
  case 37:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate__P1952.info = {"start":8684,"length":2535,"line":277,"column":8,"endLine":341,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"__preUpdate","argumentNames":["this"]}

function controller_Controller___preUpdate__P1952_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate__P1952, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  deadSprites___13863: undefined,
  svx___13864: undefined,
  svy___13865: undefined,
  svxInCricle___13900: undefined,
  svyInCircle___13902: undefined,
  sq___13904: undefined,
  scale___13919: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate_inline__P13937(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___13940 = undefined;
    s.vx___13941 = undefined;
    s.vy___13942 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_s_1_mk(s);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_0.arg0 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "s");
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["s"];
      if (s.tmp_0.fn == null) { s.retval = s.tmp_0.arg0.fields["s"]; }
      else if (!s.tmp_0.fn.isGetter) { s.retval = bind(s.tmp_0); }
     else { s.callLocIdx = 210; s.pc = 22; return s.tmp_0; }
    }
  case 22:
    r0 = s.retval;
    s.s___13940 = (r0);
    s.tmp_2 = if_vx_1_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "vx");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["vx"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["vx"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 211; s.pc = 23; return s.tmp_2; }
    }
  case 23:
    r0 = s.retval;
    s.vx___13941 = (r0);
    s.tmp_3 = if_vy_1_mk(s);
    s.tmp_3.arg0 = s.tmp_1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "vy");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["vy"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["vy"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 212; s.pc = 24; return s.tmp_3; }
    }
  case 24:
    r0 = s.retval;
    s.vy___13942 = (r0);
    r0 = s.s___13940.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtrt_stlocRef(s.caps[0], true);
    { step = 21; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["_inputLastFrame"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_numops_toBoolDecr(s.vx___13941);
    if (!r0) { step = 3; continue; }
    r0 = (s.s___13940).fields["_vx"] = (0);
  case 3:
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.vy___13942);
    if (!r0) { step = 5; continue; }
    r0 = (s.s___13940).fields["_vy"] = (0);
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 19; continue; }
    s.tmp_2 = r0 = s.vx___13941;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_2;
    { step = 12; continue; }
  case 11:
    r0 = s.vy___13942;
  case 12:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 13; continue; }
    s.tmp_4 = r0 = s.s___13940;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_6 = r0;
    r0 = pxsim.Math_.imul(s.tmp_6, s.vx___13941);
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["_vx"] = (s.tmp_5);
    s.tmp_0 = r0 = s.s___13940;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[4]);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.imul(s.tmp_2, s.vy___13942);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    { step = 18; continue; }
  case 13:
    r0 = pxsim_numops_toBoolDecr(s.vx___13941);
    if (!r0) { step = 14; continue; }
    s.tmp_0 = r0 = s.s___13940;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.imul(s.tmp_2, s.vx___13941);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    { step = 17; continue; }
  case 14:
    r0 = pxsim_numops_toBoolDecr(s.vy___13942);
    if (!r0) { step = 15; continue; }
    s.tmp_0 = r0 = s.s___13940;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.imul(s.tmp_2, s.vy___13942);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
  case 15:
  case 16:
  case 17:
  case 18:
    r0 = (s.arg0).fields["_inputLastFrame"] = (true);
    { step = 20; continue; }
  case 19:
    r0 = (s.arg0).fields["_inputLastFrame"] = (false);
  case 20:
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate_inline__P13937.info = {"start":9867,"length":1171,"line":308,"column":44,"endLine":336,"endColumn":13,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["controlledSprite"]}

function controller_Controller___preUpdate_inline__P13937_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate_inline__P13937, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  s___13940: undefined,
  vx___13941: undefined,
  vy___13942: undefined,
  arg0: undefined,
} }





function controller_Controller___preUpdate_inline__P13994(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["s"];
    r0 = r0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller___preUpdate_inline__P13994.info = {"start":11165,"length":42,"line":340,"column":28,"endLine":340,"endColumn":70,"fileName":"pxt_modules/game/controller.ts","functionName":"inline","argumentNames":["s"]}

function controller_Controller___preUpdate_inline__P13994_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller___preUpdate_inline__P13994, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function controller_Button_pressureLevel__P1991(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = pxsim.control.deviceDalVersion();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "sim");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = controller_Button__C1979_v0_1_mk(s);
    s.tmp_3.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C1979_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = 512;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    { step = 5; continue; }
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtcore.pressureLevelByButtonId(s.tmp_5, -1);
    { step = 5; continue; }
  case 4:
    r0 = undefined;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_pressureLevel__P1991.info = {"start":6453,"length":311,"line":192,"column":8,"endLine":199,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"pressureLevel","argumentNames":["this"]}

function controller_Button_pressureLevel__P1991_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_pressureLevel__P1991, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function controller_Button_isPressed__P1990(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = s.arg0.fields["_pressed"];
    return leave(s, r0)
  default: oops()
} } }
controller_Button_isPressed__P1990.info = {"start":6303,"length":57,"line":185,"column":8,"endLine":187,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_Button_isPressed__P1990_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_isPressed__P1990, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Controller_down__P1940(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (4 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_down__P1940.info = {"start":3234,"length":77,"line":121,"column":8,"endLine":123,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"down","argumentNames":["this"]}
controller_Controller_down__P1940.isGetter = true;

function controller_Controller_down__P1940_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_down__P1940, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_Controller_button__P4340(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (s.arg1 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_button__P4340.info = {"start":5274,"length":105,"line":184,"column":8,"endLine":186,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"button","argumentNames":["this","button"]}

function controller_Controller_button__P4340_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_button__P4340, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_up__P1939(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_up__P1939.info = {"start":3082,"length":73,"line":113,"column":8,"endLine":115,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"up","argumentNames":["this"]}
controller_Controller_up__P1939.isGetter = true;

function controller_Controller_up__P1939_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_up__P1939, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_Controller_right__P1938(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (3 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_right__P1938.info = {"start":2926,"length":79,"line":105,"column":8,"endLine":107,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"right","argumentNames":["this"]}
controller_Controller_right__P1938.isGetter = true;

function controller_Controller_right__P1938_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_right__P1938, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_Controller_left__P1937(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = s.arg0.fields["buttons"];
    s.tmp_0 = r0;
    r0 = (1 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_left__P1937.info = {"start":2769,"length":77,"line":97,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"left","argumentNames":["this"]}
controller_Controller_left__P1937.isGetter = true;

function controller_Controller_left__P1937_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_left__P1937, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function controller_Controller__controlledSprites__P1934(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 190; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_2, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P1934.info = {"start":2403,"length":134,"line":81,"column":8,"endLine":83,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this","cps"]}

function controller_Controller__controlledSprites__P1934_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P1934, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller__controlledSprites__P1933(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 189; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = r0.fields["controlledSprites"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["playerIndex"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller__controlledSprites__P1933.info = {"start":2261,"length":132,"line":77,"column":8,"endLine":79,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"_controlledSprites","argumentNames":["this"]}
controller_Controller__controlledSprites__P1933.isGetter = true;

function controller_Controller__controlledSprites__P1933_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller__controlledSprites__P1933, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function Fx_imul__P161(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.Math_.imul(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_imul__P161.info = {"start":1010,"length":130,"line":32,"column":4,"endLine":34,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"imul","argumentNames":["a","b"]}

function Fx_imul__P161_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_imul__P161, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function power_checkDeepSleep__P1731(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___13057 = undefined;
    s.to___13060 = undefined;
    s.tmp_0 = power_init__P4251_mk(s);
    s.callLocIdx = 118; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0 = globals._poked___4249;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.p___13057 = (s.tmp_1);
    s.tmp_0 = r0 = globals._timeout___4250;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.to___13060 = (s.tmp_1);
    r0 = (s.to___13060 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = pxsim.control.millis();
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.p___13057);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.to___13060);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_3;
    { step = 8; continue; }
  case 7:
    r0 = pxsim.control.isUSBInitialized();
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 8:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.deepSleep();
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_checkDeepSleep__P1731.info = {"start":1087,"length":298,"line":36,"column":4,"endLine":46,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"checkDeepSleep","argumentNames":[]}

function power_checkDeepSleep__P1731_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_checkDeepSleep__P1731, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  p___13057: undefined,
  to___13060: undefined,
} }





function power_init__P4251(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = (globals._timeout___4250 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 7; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtcore.getConfig(212, -1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 1000);
    globals._timeout___4250 = (r0);
    r0 = (globals._timeout___4250 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (globals._timeout___4250 < 300000);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    globals._timeout___4250 = (300000);
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_init__P4251.info = {"start":1610,"length":376,"line":57,"column":4,"endLine":66,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"init","argumentNames":[]}

function power_init__P4251_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_init__P4251, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function power_poke__P1730(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = power_init__P4251_mk(s);
    s.callLocIdx = 117; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim.control.millis();
    globals._poked___4249 = (r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
power_poke__P1730.info = {"start":795,"length":81,"line":26,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/power/power.ts","functionName":"poke","argumentNames":[]}

function power_poke__P1730_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: power_poke__P1730, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_EventContext_deltaTime__P400(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    r0 = s.arg0.fields["deltaTimeMillis"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 1000);
    return leaveAccessor(s, r0)
  default: oops()
} } }
control_EventContext_deltaTime__P400.info = {"start":2097,"length":75,"line":70,"column":8,"endLine":72,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"deltaTime","argumentNames":["this"]}
control_EventContext_deltaTime__P400.isGetter = true;

function control_EventContext_deltaTime__P400_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_deltaTime__P400, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Scene_constructor__P2601(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2579_VT)) failedCast(r0);
    r0 = (s.arg0).fields["previousScene"] = (s.arg2);
    r0 = (s.arg0).fields["eventContext"] = (s.arg1);
    r0 = (s.arg0).fields["flags"] = (0);
    r0 = pxsim_pxtcore_mkClassInstance(ArcadePhysicsEngine__C2314_VT);
    s.tmp_0 = r0;
    s.tmp_1 = ArcadePhysicsEngine_constructor__P2315_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = 500;
    s.tmp_1.arg2 = 2;
    s.tmp_1.arg3 = 4;
    s.callLocIdx = 1019; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["physicsEngine"] = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(scene_Camera__C2520_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Camera_constructor__P2524_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1020; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = (s.arg0).fields["camera"] = (s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(scene_Background__C2408_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_Background_constructor__P2412_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    r0 = s.arg0.fields["camera"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1021; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["background"] = (s.tmp_0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["destroyedHandlers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["createdHandlers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapHandlers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["overlapMap"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["tileOverlapHandlers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["collisionHandlers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["wallCollisionHandlers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["gameForeverHandlers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["spritesByKind"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["controlledSprites"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buttonEventHandlers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_data"] = (s.tmp_1);
    r0 = (s.arg0).fields["_millis"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_constructor__P2601.info = {"start":3432,"length":836,"line":103,"column":8,"endLine":122,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"inline","argumentNames":["this","eventContext","previousScene"]}

function scene_Scene_constructor__P2601_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_constructor__P2601, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_Camera_constructor__P2524(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_offsetX"] = (0);
    r0 = (s.arg0).fields["_offsetY"] = (0);
    r0 = (s.arg0).fields["drawOffsetX"] = (0);
    r0 = (s.arg0).fields["drawOffsetY"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Camera_constructor__P2524.info = {"start":456,"length":156,"line":15,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"inline","argumentNames":["this"]}

function scene_Camera_constructor__P2524_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_constructor__P2524, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Background_constructor__P2412(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2408_VT)) failedCast(r0);
    r0 = (s.arg0).fields["color"] = (0);
    r0 = (s.arg0).fields["camera"] = (s.arg1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_layers"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_constructor__P2412.info = {"start":367,"length":132,"line":20,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","camera"]}

function scene_Background_constructor__P2412_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_constructor__P2412, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_constructor__P2315(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = undefined;
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["sprites"] = (s.tmp_1);
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteMap__C2233_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_SpriteMap_constructor__P2234_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 593; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["map"] = (s.tmp_0);
    s.tmp_0 = ArcadePhysicsEngine_maxSpeed__P2317_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 594; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P2321_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 595; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = ArcadePhysicsEngine_minStep__P2319_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 596; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constructor__P2315.info = {"start":1601,"length":277,"line":58,"column":4,"endLine":65,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","maxVelocity","minSingleStep","maxSingleStep"]}

function ArcadePhysicsEngine_constructor__P2315_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constructor__P2315, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_maxStep__P2321(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P2321.info = {"start":2329,"length":67,"line":88,"column":4,"endLine":90,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxStep__P2321_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P2321, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_maxStep__P2320(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 128);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >> 8);
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxStep__P2320.info = {"start":2249,"length":74,"line":84,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxStep","argumentNames":["this"]}
ArcadePhysicsEngine_maxStep__P2320.isGetter = true;

function ArcadePhysicsEngine_maxStep__P2320_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxStep__P2320, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx_toInt__P172(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 + 128);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 8);
    return leave(s, r0)
  default: oops()
} } }
Fx_toInt__P172.info = {"start":2379,"length":86,"line":74,"column":4,"endLine":76,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toInt","argumentNames":["v"]}

function Fx_toInt__P172_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toInt__P172, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_minStep__P2319(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["minSingleStep"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P2319.info = {"start":2176,"length":67,"line":80,"column":4,"endLine":82,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this","v"]}

function ArcadePhysicsEngine_minStep__P2319_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P2319, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_minStep__P2318(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 128);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >> 8);
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_minStep__P2318.info = {"start":2096,"length":74,"line":76,"column":4,"endLine":78,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"minStep","argumentNames":["this"]}
ArcadePhysicsEngine_minStep__P2318.isGetter = true;

function ArcadePhysicsEngine_minStep__P2318_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_minStep__P2318, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P2317(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxVelocity"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_2 = r0;
    r0 = (0 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxNegativeVelocity"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P2317.info = {"start":1963,"length":127,"line":71,"column":4,"endLine":74,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this","v"]}

function ArcadePhysicsEngine_maxSpeed__P2317_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P2317, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_neg__P155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (0 - s.arg0);
    return leave(s, r0)
  default: oops()
} } }
Fx_neg__P155.info = {"start":311,"length":88,"line":14,"column":4,"endLine":16,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"neg","argumentNames":["a"]}

function Fx_neg__P155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_neg__P155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function ArcadePhysicsEngine_maxSpeed__P2316(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 128);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >> 8);
    return leaveAccessor(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_maxSpeed__P2316.info = {"start":1884,"length":73,"line":67,"column":4,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"maxSpeed","argumentNames":["this"]}
ArcadePhysicsEngine_maxSpeed__P2316.isGetter = true;

function ArcadePhysicsEngine_maxSpeed__P2316_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_maxSpeed__P2316, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function PhysicsEngine_constructor__P2299(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2298_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_constructor__P2299.info = {"start":26,"length":21,"line":1,"column":4,"endLine":2,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this"]}

function PhysicsEngine_constructor__P2299_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_constructor__P2299, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteMap_constructor__P2234(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_constructor__P2234.info = {"start":237,"length":56,"line":8,"column":8,"endLine":10,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteMap_constructor__P2234_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_constructor__P2234, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function music_Melody_constructor__P1615(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1612_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_text"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_constructor__P1615.info = {"start":6328,"length":67,"line":199,"column":8,"endLine":201,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":["this","text"]}

function music_Melody_constructor__P1615_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_constructor__P1615, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function control_pushEventContext__P409(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___14265 = undefined;
    s.n___14271 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4182);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals.eventContexts___4182 = (r0);
  case 1:
  case 2:
    s.tmp_0 = control_eventContext__P408_mk(s);
    s.callLocIdx = 63; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.ctx___14265 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.ctx___14265);
    if (!r0) { step = 3; continue; }
    s.tmp_0 = control_EventContext_unregister__P402_mk(s);
    s.tmp_0.arg0 = s.ctx___14265;
    s.callLocIdx = 64; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = pxsim_pxtcore_mkClassInstance(control_EventContext__C395_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_EventContext_constructor__P399_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 65; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.n___14271 = (s.tmp_0);
    r0 = pxsim_Array__push(globals.eventContexts___4182, s.n___14271);
    r0 = s.n___14271;
    return leave(s, r0)
  default: oops()
} } }
control_pushEventContext__P409.info = {"start":7123,"length":340,"line":216,"column":4,"endLine":227,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"pushEventContext","argumentNames":[]}

function control_pushEventContext__P409_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_pushEventContext__P409, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  ctx___14265: undefined,
  n___14271: undefined,
} }





function control_EventContext_unregister__P402(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___10527 = undefined;
    s.unnamed58___U1 = undefined;
    s.unnamed59___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.h___10527 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed58___U1 = (r0);
    s.unnamed59___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed59___U2;
    r0 = pxsim_Array__length(s.unnamed58___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed58___U1, s.unnamed59___U2);
    s.h___10527 = (r0);
    s.tmp_2 = control_EventHandler_unregister__P4176_mk(s);
    s.tmp_2.arg0 = s.h___10527;
    s.callLocIdx = 59; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    r0 = (s.unnamed59___U2 + 1);
    s.unnamed59___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed58___U1 = (undefined);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["frameWorker"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["frameWorker"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_unregister__P402.info = {"start":4534,"length":131,"line":137,"column":8,"endLine":141,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventContext_unregister__P402_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_unregister__P402, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___10527: undefined,
  unnamed58___U1: undefined,
  unnamed59___U2: undefined,
  arg0: undefined,
} }





function control_EventHandler_unregister__P4176(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventHandler__C4174_VT)) failedCast(r0);
    r0 = s.arg0.fields["src"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["value"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(s.tmp_0, s.tmp_1, control_doNothing__P4178, s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventHandler_unregister__P4176.info = {"start":1136,"length":106,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"unregister","argumentNames":["this"]}

function control_EventHandler_unregister__P4176_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventHandler_unregister__P4176, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function control_doNothing__P4178(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_doNothing__P4178.info = {"start":1254,"length":24,"line":41,"column":4,"endLine":41,"endColumn":28,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"doNothing","argumentNames":[]}

function control_doNothing__P4178_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_doNothing__P4178, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function control_EventContext_constructor__P399(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["handlers"] = (s.tmp_1);
    r0 = (s.arg0).fields["framesInSample"] = (0);
    r0 = (s.arg0).fields["timeInSample"] = (0);
    r0 = (s.arg0).fields["deltaTimeMillis"] = (0);
    r0 = (s.arg0).fields["frameWorker"] = (0);
    r0 = (s.arg0).fields["idleCallbacks"] = (undefined);
    r0 = pxsim_numops_toBoolDecr(globals.control_EventContext_lastStats___397);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_String_.mkEmpty();
    globals.control_EventContext_lastStats___397 = (r0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_constructor__P399.info = {"start":1740,"length":347,"line":58,"column":8,"endLine":68,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"inline","argumentNames":["this"]}

function control_EventContext_constructor__P399_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_constructor__P399, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_popScene__P2698(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___10141 = undefined;
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1139; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.oldScene___10141 = (r0);
    s.tmp_0 = r0 = globals._sceneStack___4540;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(globals._sceneStack___4540);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array_.pop(globals._sceneStack___4540);
    globals._scene___4539 = (r0);
    s.tmp_0 = control_popEventContext__P410_mk(s);
    s.callLocIdx = 1140; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    { step = 6; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(globals._scene___4539);
    if (!r0) { step = 4; continue; }
    s.tmp_0 = control_popEventContext__P410_mk(s);
    s.callLocIdx = 1141; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    globals._scene___4539 = (undefined);
  case 4:
  case 5:
  case 6:
    r0 = pxsim_numops_toBoolDecr(globals._scene___4539);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = particles_enableAll__P2872_mk(s);
    s.callLocIdx = 1142; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___4542);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_pxtcore_mkAction(1, game_popScene_inline__P10162);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___10141);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals._scenePopHandlers___4542;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1144; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene__P2698.info = {"start":2033,"length":548,"line":75,"column":4,"endLine":93,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"popScene","argumentNames":[]}

function game_popScene__P2698_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene__P2698, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___10141: undefined,
} }





function game_popScene_inline__P10162(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1143; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_popScene_inline__P10162.info = {"start":2545,"length":18,"line":91,"column":38,"endLine":91,"endColumn":56,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function game_popScene_inline__P10162_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_popScene_inline__P10162, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_enableAll__P2872(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___10166 = undefined;
    s.tmp_0 = particles_particleSources__P4888_mk(s);
    s.callLocIdx = 1399; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.sources___10166 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.sources___10166);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___10166;
    s.tmp_0.arg1 = particles_enableAll_inline__P10172;
    s.callLocIdx = 1401; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = particles_pruneParticles__P4884_mk(s);
    s.callLocIdx = 1402; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll__P2872.info = {"start":12649,"length":193,"line":413,"column":4,"endLine":419,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"enableAll","argumentNames":[]}

function particles_enableAll__P2872_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll__P2872, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___10166: undefined,
} }





function particles_enableAll_inline__P10172(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P2853_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 1400; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
particles_enableAll_inline__P10172.info = {"start":12773,"length":21,"line":416,"column":28,"endLine":416,"endColumn":49,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_enableAll_inline__P10172_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_enableAll_inline__P10172, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function control_popEventContext__P410(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctx___10179 = undefined;
    s.context___10187 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals.eventContexts___4182);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 7; continue; }
  case 1:
  case 2:
    r0 = pxsim_Array_.pop(globals.eventContexts___4182);
    s.ctx___10179 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.ctx___10179);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    { step = 7; continue; }
  case 3:
  case 4:
    s.tmp_2 = control_EventContext_unregister__P402_mk(s);
    s.tmp_2.arg0 = s.ctx___10179;
    s.callLocIdx = 66; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0 = globals.eventContexts___4182;
    r0 = pxsim_Array__length(globals.eventContexts___4182);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    s.context___10187 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.context___10187);
    if (!r0) { step = 5; continue; }
    s.tmp_0 = control_EventContext_register__P401_mk(s);
    s.tmp_0.arg0 = s.context___10187;
    s.callLocIdx = 67; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    globals.eventContexts___4182 = (undefined);
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_popEventContext__P410.info = {"start":7568,"length":413,"line":232,"column":4,"endLine":246,"endColumn":5,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"popEventContext","argumentNames":[]}

function control_popEventContext__P410_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_popEventContext__P410, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  ctx___10179: undefined,
  context___10187: undefined,
} }





function control_EventContext_register__P401(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.h___10200 = undefined;
    s.unnamed56___U1 = undefined;
    s.unnamed57___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_EventContext__C395_VT)) failedCast(r0);
    s.h___10200 = (undefined);
    r0 = s.arg0.fields["handlers"];
    s.unnamed56___U1 = (r0);
    s.unnamed57___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed57___U2;
    r0 = pxsim_Array__length(s.unnamed56___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed56___U1, s.unnamed57___U2);
    s.h___10200 = (r0);
    s.tmp_2 = control_EventHandler_register__P4175_mk(s);
    s.tmp_2.arg0 = s.h___10200;
    s.callLocIdx = 57; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    r0 = (s.unnamed57___U2 + 1);
    s.unnamed57___U2 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed56___U1 = (undefined);
    s.tmp_0 = control_EventContext_registerFrameCallbacks__P4180_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 58; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_EventContext_register__P401.info = {"start":4386,"length":138,"line":131,"column":8,"endLine":135,"endColumn":9,"fileName":"pxt_modules/base/eventcontext.ts","functionName":"register","argumentNames":["this"]}

function control_EventContext_register__P401_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_EventContext_register__P401, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  h___10200: undefined,
  unnamed56___U1: undefined,
  unnamed57___U2: undefined,
  arg0: undefined,
} }





function game_pushScene__P2697(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.oldScene___9926 = undefined;
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1133; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.oldScene___9926 = (r0);
    s.tmp_0 = particles_clearAll__P2870_mk(s);
    s.callLocIdx = 1134; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = particles_disableAll__P2871_mk(s);
    s.callLocIdx = 1135; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals._sceneStack___4540);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals._sceneStack___4540 = (r0);
  case 1:
  case 2:
    r0 = pxsim_Array__push(globals._sceneStack___4540, globals._scene___4539);
    s.tmp_0 = game_init__P4547_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1136; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___4541);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtcore_mkAction(1, game_pushScene_inline__P9943);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.oldScene___9926);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = globals._scenePushHandlers___4541;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 1138; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene__P2697.info = {"start":1660,"length":367,"line":62,"column":4,"endLine":73,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"pushScene","argumentNames":[]}

function game_pushScene__P2697_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene__P2697, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  oldScene___9926: undefined,
} }





function game_pushScene_inline__P9943(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = lambda_2_mk(s);
    s.tmp_0.argL = s.arg0;
    s.tmp_0.arg0 = s.caps[0];
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1137; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_pushScene_inline__P9943.info = {"start":1991,"length":18,"line":71,"column":39,"endLine":71,"endColumn":57,"fileName":"pxt_modules/game/game.ts","functionName":"inline","argumentNames":["cb"]}

function game_pushScene_inline__P9943_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_pushScene_inline__P9943, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_disableAll__P2871(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___9947 = undefined;
    s.tmp_0 = particles_particleSources__P4888_mk(s);
    s.callLocIdx = 1395; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.sources___9947 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.sources___9947);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___9947;
    s.tmp_0.arg1 = particles_disableAll_inline__P9953;
    s.callLocIdx = 1397; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = particles_pruneParticles__P4884_mk(s);
    s.callLocIdx = 1398; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll__P2871.info = {"start":12370,"length":195,"line":402,"column":4,"endLine":408,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"disableAll","argumentNames":[]}

function particles_disableAll__P2871_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll__P2871, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___9947: undefined,
} }





function particles_disableAll_inline__P9953(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_enabled__P2853_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 1396; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = false;
    return leave(s, r0)
  default: oops()
} } }
particles_disableAll_inline__P9953.info = {"start":12495,"length":22,"line":405,"column":28,"endLine":405,"endColumn":50,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_disableAll_inline__P9953_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_disableAll_inline__P9953, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function particles_clearAll__P2870(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sources___10126 = undefined;
    s.tmp_0 = particles_particleSources__P4888_mk(s);
    s.callLocIdx = 1391; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.sources___10126 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.sources___10126);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.sources___10126;
    s.tmp_0.arg1 = particles_clearAll_inline__P10132;
    s.callLocIdx = 1393; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = particles_pruneParticles__P4884_mk(s);
    s.callLocIdx = 1394; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll__P2870.info = {"start":12098,"length":185,"line":391,"column":4,"endLine":397,"endColumn":5,"fileName":"pxt_modules/game/particles.ts","functionName":"clearAll","argumentNames":[]}

function particles_clearAll__P2870_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll__P2870, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  sources___10126: undefined,
} }





function particles_clearAll_inline__P10132(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = particles_ParticleSource_clear__P2855_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1392; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_clearAll_inline__P10132.info = {"start":12221,"length":14,"line":394,"column":28,"endLine":394,"endColumn":42,"fileName":"pxt_modules/game/particles.ts","functionName":"inline","argumentNames":["s"]}

function particles_clearAll_inline__P10132_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_clearAll_inline__P10132, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_waitAnyButton__P2695(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.__waitAnyButton___4543);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = globals.__waitAnyButton___4543;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 1127; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = pause__P413_mk(s);
    s.tmp_0.arg0 = 3000;
    s.callLocIdx = 1128; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_waitAnyButton__P2695.info = {"start":967,"length":111,"line":35,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"waitAnyButton","argumentNames":[]}

function game_waitAnyButton__P2695_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_waitAnyButton__P2695, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_GameOverDialog_update__P2680(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverDialog__C2677_VT)) failedCast(r0);
    s.tmp_0 = game_BaseDialog_clearInterior__P4514_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1107; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = game_GameOverDialog__C2677_v2_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, game_GameOverDialog__C2677_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawTextCore;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = s.arg0.fields["cursorOn"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = game_BaseDialog_drawCursorRow__P2654_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 1108; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverDialog_update__P2680.info = {"start":11515,"length":173,"line":352,"column":8,"endLine":359,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"update","argumentNames":["this"]}

function game_GameOverDialog_update__P2680_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverDialog_update__P2680, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_BaseDialog_clearInterior__P4514(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.d___8726 = undefined;
    s.s___8733 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = 4;
    s.tmp_2.arg2 = 1;
    s.tmp_2.arg3 = 1;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 2);
    s.tmp_2.arg4 = r0;
    r0 = s.arg0.fields["rows"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 2);
    s.tmp_2.arg5 = r0;
    s.callLocIdx = 1081; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    { step = 7; continue; }
  case 1:
  case 2:
    s.d___8726 = (1);
  case 3:
    s.tmp_1 = r0 = s.d___8726;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.s___8733 = (1);
  case 4:
    s.tmp_1 = r0 = s.s___8733;
    r0 = s.arg0.fields["rows"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_4 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 4;
    s.tmp_4.arg2 = s.d___8726;
    s.tmp_4.arg3 = s.s___8733;
    s.callLocIdx = 1082; s.pc = 9; return s.tmp_4;
  case 9:
    r0 = s.retval;
    r0 = (s.s___8733 + 1);
    s.s___8733 = (r0);
    { step = 4; continue; }
  case 5:
    r0 = (s.d___8726 + 1);
    s.d___8726 = (r0);
    { step = 3; continue; }
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_clearInterior__P4514.info = {"start":3942,"length":342,"line":133,"column":8,"endLine":142,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"clearInterior","argumentNames":["this"]}

function game_BaseDialog_clearInterior__P4514_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_clearInterior__P4514, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  d___8726: undefined,
  s___8733: undefined,
  arg0: undefined,
} }





function game_BaseDialog_drawPartial__P4515(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x0___8751 = undefined;
    s.y0___8759 = undefined;
    s.xf___8767 = undefined;
    s.yf___8774 = undefined;
    s.e___8781 = undefined;
    s.t___8787 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_2 = r0;
    r0 = (s.arg2 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.x0___8751 = (r0);
    r0 = s.arg0.fields["innerTop"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_2 = r0;
    r0 = (s.arg3 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.y0___8759 = (r0);
    r0 = (s.arg1 % 3);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.xf___8767 = (r0);
    r0 = pxsim.Math_.idiv(s.arg1, 3);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.yf___8774 = (r0);
    s.e___8781 = (0);
  case 1:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.e___8781 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.t___8787 = (0);
  case 2:
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.t___8787 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = (s.x0___8751 + s.e___8781);
    s.tmp_3 = r0;
    r0 = (s.y0___8759 + s.t___8787);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["frame"];
    s.tmp_6 = r0;
    r0 = (s.xf___8767 + s.e___8781);
    s.tmp_7 = r0;
    r0 = (s.yf___8774 + s.t___8787);
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_6, s.tmp_7, s.tmp_8);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_2, s.tmp_3, s.tmp_4, s.tmp_5);
    r0 = (s.t___8787 + 1);
    s.t___8787 = (r0);
    { step = 2; continue; }
  case 3:
    r0 = (s.e___8781 + 1);
    s.e___8781 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawPartial__P4515.info = {"start":4294,"length":604,"line":144,"column":8,"endLine":159,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawPartial","argumentNames":["this","index","colTo","rowTo"]}

function game_BaseDialog_drawPartial__P4515_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawPartial__P4515, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  x0___8751: undefined,
  y0___8759: undefined,
  xf___8767: undefined,
  yf___8774: undefined,
  e___8781: undefined,
  t___8787: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function game_BaseDialog_fastFill__P4513(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.color___8823 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = s.arg0.fields["frame"];
    s.tmp_0 = r0;
    r0 = (s.arg1 % 3);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg1, 3);
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_0, s.tmp_1, s.tmp_2);
    s.color___8823 = (r0);
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg2);
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg3);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg4;
    s.tmp_0.arg4 = s.arg5;
    s.tmp_0.arg5 = s.color___8823;
    s.callLocIdx = 1080; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_fastFill__P4513.info = {"start":3683,"length":249,"line":128,"column":8,"endLine":131,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"fastFill","argumentNames":["this","index","x","y","w","h"]}

function game_BaseDialog_fastFill__P4513_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_fastFill__P4513, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  color___8823: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function game_GameOverDialog_drawTextCore__P2681(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scoreColor___8287 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverDialog__C2677_VT)) failedCast(r0);
    r0 = s.arg0.fields["win"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "YOU WIN!";
    { step = 2; continue; }
  case 1:
    r0 = "GAME OVER!";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 5;
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = helpers_imagePrintCenter__P1786_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.tmp_1;
    s.tmp_4.arg2 = 8;
    s.tmp_4.arg3 = s.tmp_3;
    s.tmp_4.arg4 = globals.font8___1772;
    s.callLocIdx = 1109; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    r0 = s.arg0.fields["score"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 2;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.scoreColor___8287 = (s.tmp_3);
    s.tmp_0 = helpers_imagePrintCenter__P1786_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["score"];
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 13);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("Score:", s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 23;
    s.tmp_0.arg3 = s.scoreColor___8287;
    s.tmp_0.arg4 = globals.font8___1772;
    s.callLocIdx = 1110; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = s.arg0.fields["isNewHighScore"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_1 = helpers_imagePrintCenter__P1786_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = "New High Score!";
    s.tmp_1.arg2 = 34;
    s.tmp_1.arg3 = s.scoreColor___8287;
    s.tmp_1.arg4 = globals.font5___1777;
    s.callLocIdx = 1111; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    s.tmp_0 = helpers_imagePrintCenter__P1786_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["highScore"];
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 16);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 16:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("HI", s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 34;
    s.tmp_0.arg3 = s.scoreColor___8287;
    s.tmp_0.arg4 = globals.font8___1772;
    s.callLocIdx = 1112; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
  case 8:
  case 9:
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverDialog_drawTextCore__P2681.info = {"start":11698,"length":1200,"line":361,"column":8,"endLine":398,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawTextCore","argumentNames":["this"]}

function game_GameOverDialog_drawTextCore__P2681_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverDialog_drawTextCore__P2681, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  scoreColor___8287: undefined,
  arg0: undefined,
} }





function helpers_imagePrintCenter__P1786(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.w___8337 = undefined;
    s.x___8343 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = image_getFontForText__P1774_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 137; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.arg4 = (r0);
  case 1:
  case 2:
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_0 = r0;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.arg4;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 138; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.w___8337 = (r0);
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.w___8337);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 2);
    s.x___8343 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.x___8343;
    s.tmp_0.arg3 = s.arg2;
    s.tmp_0.arg4 = s.arg3;
    s.tmp_0.arg5 = s.arg4;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 139; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imagePrintCenter__P1786.info = {"start":15025,"length":295,"line":206,"column":4,"endLine":211,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"imagePrintCenter","argumentNames":["img","text","y","color","font"]}

function helpers_imagePrintCenter__P1786_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imagePrintCenter__P1786, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  w___8337: undefined,
  x___8343: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function game_BaseDialog_drawCursorRow__P2654(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.offset___8175 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    s.offset___8175 = (0);
    r0 = s.arg0.fields["cursorCount"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 20);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.offset___8175 = (1);
  case 1:
  case 2:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cursorCount"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 % 40);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cursorCount"] = (s.tmp_1);
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cursor"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_6 = r0;
    s.tmp_8 = game_BaseDialog_textAreaWidth__P4518_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 1061; s.pc = 3; return s.tmp_8;
  case 3:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_6 + s.tmp_7);
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_9 = r0;
    r0 = (s.tmp_5 + s.tmp_9);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.offset___8175);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["cursor"];
    s.tmp_11 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_11);
    s.tmp_10 = r0;
    r0 = (s.tmp_3 - s.tmp_10);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_16 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_17 = r0;
    r0 = (s.tmp_16 + s.tmp_17);
    s.tmp_15 = r0;
    s.tmp_19 = game_BaseDialog_textAreaHeight__P4519_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.callLocIdx = 1062; s.pc = 4; return s.tmp_19;
  case 4:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = (s.tmp_15 + s.tmp_18);
    s.tmp_14 = r0;
    r0 = (s.tmp_14 + 1);
    s.tmp_13 = r0;
    r0 = s.arg0.fields["cursor"];
    s.tmp_22 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_22);
    s.tmp_21 = r0;
    r0 = (s.tmp_21 + 1);
    s.tmp_20 = r0;
    r0 = (s.tmp_13 - s.tmp_20);
    s.tmp_12 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_12);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawCursorRow__P2654.info = {"start":1863,"length":479,"line":75,"column":8,"endLine":88,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawCursorRow","argumentNames":["this"]}

function game_BaseDialog_drawCursorRow__P2654_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawCursorRow__P2654, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  offset___8175: undefined,
  arg0: undefined,
} }





function game_BaseDialog_textAreaHeight__P4519(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_2);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerTop"];
    s.tmp_5 = r0;
    s.tmp_7 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["unit"];
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = 12;
    s.callLocIdx = 1084; s.pc = 1; return s.tmp_7;
  case 1:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_textAreaHeight__P4519.info = {"start":5240,"length":143,"line":173,"column":8,"endLine":175,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"textAreaHeight","argumentNames":["this"]}

function game_BaseDialog_textAreaHeight__P4519_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_textAreaHeight__P4519, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function game_BaseDialog_textAreaWidth__P4518(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = s.arg0.fields["image"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_2);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["innerLeft"];
    s.tmp_5 = r0;
    s.tmp_7 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["unit"];
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = 12;
    s.callLocIdx = 1083; s.pc = 1; return s.tmp_7;
  case 1:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 << 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 2);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_textAreaWidth__P4518.info = {"start":5088,"length":142,"line":169,"column":8,"endLine":171,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"textAreaWidth","argumentNames":["this"]}

function game_BaseDialog_textAreaWidth__P4518_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_textAreaWidth__P4518, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function game_BaseDialog_cursorRowHeight__P4516(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = s.arg0.fields["cursor"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_cursorRowHeight__P4516.info = {"start":4908,"length":82,"line":161,"column":8,"endLine":163,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"cursorRowHeight","argumentNames":["this"]}

function game_BaseDialog_cursorRowHeight__P4516_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_cursorRowHeight__P4516, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_GameOverDialog_displayCursor__P2679(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverDialog__C2677_VT)) failedCast(r0);
    r0 = (s.arg0).fields["cursorOn"] = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverDialog_displayCursor__P2679.info = {"start":11444,"length":61,"line":348,"column":8,"endLine":350,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"displayCursor","argumentNames":["this"]}

function game_GameOverDialog_displayCursor__P2679_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverDialog_displayCursor__P2679, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function game_GameOverDialog_constructor__P2678(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_GameOverDialog__C2677_VT)) failedCast(r0);
    r0 = (s.arg0).fields["win"] = (s.arg1);
    r0 = (s.arg0).fields["score"] = (s.arg2);
    r0 = (s.arg0).fields["highScore"] = (s.arg3);
    s.tmp_0 = game_BaseDialog_constructor__P2650_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 46;
    s.tmp_1 = game_defaultSplashFrame__P4526_mk(s);
    s.callLocIdx = 1105; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.callLocIdx = 1106; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["cursorOn"] = (false);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["score"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["highScore"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 > s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["isNewHighScore"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_GameOverDialog_constructor__P2678.info = {"start":11128,"length":306,"line":338,"column":8,"endLine":346,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":["this","win","score","highScore"]}

function game_GameOverDialog_constructor__P2678_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_GameOverDialog_constructor__P2678, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function game_defaultSplashFrame__P4526(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex8922);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex8924);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultSplashFrame__P4526.info = {"start":17077,"length":220,"line":533,"column":4,"endLine":546,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultSplashFrame","argumentNames":[]}

function game_defaultSplashFrame__P4526_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultSplashFrame__P4526, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex8922 = pxsim.BufferMethods.createBufferFromHex("8704030003000000010100000101000001010000")
const _hex8924 = pxsim.BufferMethods.createBufferFromHex("8704030003000000f1010000f1010000f1010000")




function game_BaseDialog_constructor__P2650(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.image.create(s.arg1, s.arg2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["image"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.dialogFrame___4507;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_1;
    { step = 4; continue; }
  case 3:
    s.tmp_3 = game_defaultFrame__P4525_mk(s);
    s.callLocIdx = 1055; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    globals.dialogFrame___4507 = (r0);
    r0 = s.tmp_2;
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["frame"] = (s.tmp_4);
    s.tmp_0 = r0 = s.arg4;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = globals.font8___1772;
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["font"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg5;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = globals.dialogCursor___4508;
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_1;
    { step = 10; continue; }
  case 9:
    s.tmp_3 = game_defaultCursorImage__P4527_mk(s);
    s.callLocIdx = 1056; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.tmp_2 = r0;
    globals.dialogCursor___4508 = (r0);
    r0 = s.tmp_2;
  case 10:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.arg0).fields["cursor"] = (s.tmp_4);
    r0 = (globals.dialogTextColor___4509 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    globals.dialogTextColor___4509 = (15);
    r0 = 15;
    { step = 12; continue; }
  case 11:
    r0 = globals.dialogTextColor___4509;
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["textColor"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["frame"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["unit"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["unit"];
    s.tmp_3 = r0;
    r0 = (s.arg1 / s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["columns"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["unit"];
    s.tmp_3 = r0;
    r0 = (s.arg2 / s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.floor(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rows"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = r0 = s.arg1;
    r0 = s.arg0.fields["columns"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 * s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["innerLeft"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = r0 = s.arg2;
    r0 = s.arg0.fields["rows"];
    s.tmp_5 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 * s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["innerTop"] = (s.tmp_1);
    r0 = (s.arg0).fields["cursorCount"] = (0);
    s.tmp_0 = game_BaseDialog_drawBorder__P4512_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1057; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_clearInterior__P4514_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1058; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_constructor__P2650.info = {"start":665,"length":895,"line":37,"column":8,"endLine":59,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":["this","width","height","frame","font","cursor"]}

function game_BaseDialog_constructor__P2650_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_constructor__P2650, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function game_defaultCursorImage__P4527(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex9108);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex9110);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultCursorImage__P4527.info = {"start":17303,"length":690,"line":548,"column":4,"endLine":574,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultCursorImage","argumentNames":[]}

function game_defaultCursorImage__P4527_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultCursorImage__P4527, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex9108 = pxsim.BufferMethods.createBufferFromHex("87040a000800000011111101010000010111010111100001011101010100000101000001100010000001010000100000")
const _hex9110 = pxsim.BufferMethods.createBufferFromHex("87040b000b00000000606686080000006076776686000000607777676608000076171111670800007671177766080000767117776608000076711777660800007617111167080000607777676608000060767766860000000060668608000000")




function game_defaultFrame__P4525(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex9114);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex9116);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
game_defaultFrame__P4525.info = {"start":16515,"length":556,"line":509,"column":4,"endLine":531,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"defaultFrame","argumentNames":[]}

function game_defaultFrame__P4525_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_defaultFrame__P4525, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex9114 = pxsim.BufferMethods.createBufferFromHex("8704030003000000110100000101000011010000")
const _hex9116 = pxsim.BufferMethods.createBufferFromHex("87040c000c0000000000000000000000b0bbbbbbbb0b0000b0bbbbbbbbcb0000b0db1111bdcb0000b01b1111b1cb0000b01b1111b1cb0000b01b1111b1cb0000b01b1111b1cb0000b0db1111bdcb0000b0bbbbbbbbcb0000b0bbbbbbbbcb000000cccccccccc0000")




function game_BaseDialog_drawBorder__P4512(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.y___9039 = undefined;
    s.c___9055 = undefined;
    s.r___9089 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = 0;
    s.tmp_2.arg2 = 0;
    s.tmp_2.arg3 = 0;
    s.tmp_2.arg4 = 1;
    s.tmp_2.arg5 = 1;
    s.callLocIdx = 1064; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = 0;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1065; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 0;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1066; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 3;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = 1;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1067; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 5;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = 1;
    r0 = s.arg0.fields["rows"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 2);
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 1068; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    r0 = s.arg0.fields["rows"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.y___9039 = (r0);
    s.tmp_0 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = s.y___9039;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1069; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 7;
    s.tmp_0.arg2 = 1;
    s.tmp_0.arg3 = s.y___9039;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1070; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_fastFill__P4513_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 8;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.y___9039;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1071; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    { step = 11; continue; }
  case 1:
  case 2:
    s.c___9055 = (0);
  case 3:
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.c___9055 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = (s.c___9055 == 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = 0;
    s.tmp_3.arg2 = 0;
    s.tmp_3.arg3 = 0;
    s.callLocIdx = 1072; s.pc = 20; return s.tmp_3;
  case 20:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 6;
    s.tmp_0.arg2 = 0;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1073; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    { step = 7; continue; }
  case 4:
    s.tmp_1 = r0 = s.c___9055;
    r0 = s.arg0.fields["columns"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_4 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 2;
    s.tmp_4.arg2 = s.c___9055;
    s.tmp_4.arg3 = 0;
    s.callLocIdx = 1074; s.pc = 22; return s.tmp_4;
  case 22:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 8;
    s.tmp_0.arg2 = s.c___9055;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1075; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.tmp_0 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = s.c___9055;
    s.tmp_0.arg3 = 0;
    s.callLocIdx = 1076; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 7;
    s.tmp_0.arg2 = s.c___9055;
    r0 = s.arg0.fields["rows"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg3 = r0;
    s.callLocIdx = 1077; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
  case 6:
  case 7:
    r0 = (s.c___9055 + 1);
    s.c___9055 = (r0);
    { step = 3; continue; }
  case 8:
    s.r___9089 = (1);
  case 9:
    s.tmp_1 = r0 = s.r___9089;
    r0 = s.arg0.fields["rows"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_4 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = 3;
    s.tmp_4.arg2 = 0;
    s.tmp_4.arg3 = s.r___9089;
    s.callLocIdx = 1078; s.pc = 26; return s.tmp_4;
  case 26:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_drawPartial__P4515_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 5;
    r0 = s.arg0.fields["columns"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.r___9089;
    s.callLocIdx = 1079; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    r0 = (s.r___9089 + 1);
    s.r___9089 = (r0);
    { step = 9; continue; }
  case 10:
  case 11:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawBorder__P4512.info = {"start":2352,"length":1321,"line":90,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawBorder","argumentNames":["this"]}

function game_BaseDialog_drawBorder__P4512_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawBorder__P4512, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  y___9039: undefined,
  c___9055: undefined,
  r___9089: undefined,
  arg0: undefined,
} }





function scene_setBackgroundImage__P2620(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___9900 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1051; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.scene___9900 = (r0);
    s.tmp_0 = scene_Background_image__P2415_mk(s);
    r0 = s.scene___9900.fields["background"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1052; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_setBackgroundImage__P2620.info = {"start":1962,"length":135,"line":78,"column":4,"endLine":81,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"setBackgroundImage","argumentNames":["img"]}

function scene_setBackgroundImage__P2620_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_setBackgroundImage__P2620, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___9900: undefined,
  arg0: undefined,
} }





function scene_Background_image__P2415(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2408_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_image"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Background_image__P2415.info = {"start":1003,"length":68,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"image","argumentNames":["this","image"]}

function scene_Background_image__P2415_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_image__P2415, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Background_image__P2414(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2408_VT)) failedCast(r0);
    r0 = s.arg0.fields["_image"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_6 = r0;
    r0 = pxsim.image.create(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_image"] = (s.tmp_4);
  case 1:
  case 2:
    r0 = s.arg0.fields["_image"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Background_image__P2414.info = {"start":811,"length":174,"line":33,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"image","argumentNames":["this"]}
scene_Background_image__P2414.isGetter = true;

function scene_Background_image__P2414_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_image__P2414, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function scene_Scene_destroy__P2606(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2579_VT)) failedCast(r0);
    r0 = (s.arg0).fields["eventContext"] = (undefined);
    r0 = (s.arg0).fields["background"] = (undefined);
    r0 = (s.arg0).fields["tileMap"] = (undefined);
    r0 = (s.arg0).fields["allSprites"] = (undefined);
    r0 = (s.arg0).fields["spriteNextId"] = (undefined);
    r0 = (s.arg0).fields["spritesByKind"] = (undefined);
    r0 = (s.arg0).fields["physicsEngine"] = (undefined);
    r0 = (s.arg0).fields["camera"] = (undefined);
    r0 = (s.arg0).fields["flags"] = (undefined);
    r0 = (s.arg0).fields["destroyedHandlers"] = (undefined);
    r0 = (s.arg0).fields["createdHandlers"] = (undefined);
    r0 = (s.arg0).fields["overlapHandlers"] = (undefined);
    r0 = (s.arg0).fields["tileOverlapHandlers"] = (undefined);
    r0 = (s.arg0).fields["collisionHandlers"] = (undefined);
    r0 = (s.arg0).fields["wallCollisionHandlers"] = (undefined);
    r0 = (s.arg0).fields["gameForeverHandlers"] = (undefined);
    r0 = (s.arg0).fields["_data"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Scene_destroy__P2606.info = {"start":7107,"length":764,"line":200,"column":8,"endLine":218,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"destroy","argumentNames":["this"]}

function scene_Scene_destroy__P2606_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_destroy__P2606, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_createRenderable__P2543(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.renderable___8850 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(scene_Renderable__C2538_VT);
    s.tmp_0 = r0;
    s.tmp_1 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_1;
    { step = 2; continue; }
  case 1:
    r0 = renderable_inline__P8856;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = scene_Renderable_constructor__P2539_mk(s);
    s.tmp_3.arg0 = s.tmp_0;
    s.tmp_3.arg1 = s.arg1;
    s.tmp_3.arg2 = s.tmp_2;
    s.tmp_3.arg3 = s.arg0;
    s.callLocIdx = 1018; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.renderable___8850 = (s.tmp_0);
    r0 = s.renderable___8850;
    return leave(s, r0)
  default: oops()
} } }
scene_createRenderable__P2543.info = {"start":608,"length":339,"line":24,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/game/renderable.ts","functionName":"createRenderable","argumentNames":["z","handler","shouldBeVisible"]}

function scene_createRenderable__P2543_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_createRenderable__P2543, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  renderable___8850: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function renderable_inline__P8856(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
renderable_inline__P8856.info = {"start":875,"length":10,"line":31,"column":32,"endLine":31,"endColumn":42,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":[]}

function renderable_inline__P8856_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: renderable_inline__P8856, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_Renderable_constructor__P2539(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2538_VT)) failedCast(r0);
    r0 = (s.arg0).fields["handler"] = (s.arg1);
    r0 = (s.arg0).fields["shouldBeVisible"] = (s.arg2);
    s.tmp_0 = sprites_BaseSprite_constructor__P1890_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg3;
    s.callLocIdx = 1015; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable_constructor__P2539.info = {"start":83,"length":212,"line":2,"column":8,"endLine":8,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"inline","argumentNames":["this","handler","shouldBeVisible","z"]}

function scene_Renderable_constructor__P2539_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable_constructor__P2539, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function info_PlayerInfo_constructor__P2381(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_player"] = (s.arg1);
    r0 = (s.arg0).fields["border"] = (1);
    r0 = (s.arg0).fields["fc"] = (1);
    r0 = (s.arg0).fields["visibility"] = (0);
    r0 = (s.arg0).fields["showScore"] = (undefined);
    r0 = (s.arg0).fields["showLife"] = (undefined);
    r0 = (s.arg0).fields["showPlayer"] = (undefined);
    r0 = (s.arg0).fields["left"] = (undefined);
    r0 = (s.arg0).fields["up"] = (undefined);
    r0 = s.arg0.fields["_player"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = 2;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = (s.arg0).fields["bg"] = (s.tmp_3);
    r0 = (s.arg0).fields["x"] = (0);
    r0 = (s.arg0).fields["y"] = (0);
    { step = 14; continue; }
  case 3:
    r0 = (s.arg1 === 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = 0;
    { step = 5; continue; }
  case 4:
    r0 = 8;
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["bg"] = (s.tmp_2);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    r0 = (s.arg0).fields["y"] = (0);
    r0 = (s.arg0).fields["left"] = (true);
    { step = 13; continue; }
  case 6:
    r0 = (s.arg1 === 3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = 0;
    { step = 8; continue; }
  case 7:
    r0 = 4;
  case 8:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["bg"] = (s.tmp_2);
    r0 = (s.arg0).fields["x"] = (0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    r0 = (s.arg0).fields["up"] = (true);
    { step = 12; continue; }
  case 9:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = 0;
    { step = 11; continue; }
  case 10:
    r0 = 7;
  case 11:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["bg"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["y"] = (s.tmp_1);
    r0 = (s.arg0).fields["left"] = (true);
    r0 = (s.arg0).fields["up"] = (true);
  case 12:
  case 13:
  case 14:
    r0 = pxsim_numops_toBoolDecr(globals.players___4422);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = pxsim_Array__mk();
    globals.players___4422 = (r0);
  case 15:
  case 16:
    s.tmp_0 = r0 = globals.players___4422;
    r0 = s.arg0.fields["_player"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.tmp_1, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_constructor__P2381.info = {"start":15637,"length":1370,"line":519,"column":8,"endLine":556,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["this","player"]}

function info_PlayerInfo_constructor__P2381_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_constructor__P2381, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function info_PlayerInfo_getState__P2382(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    s.tmp_0 = info_PlayerInfo_init__P4473_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 871; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = globals.infoState___4421.fields["playerStates"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_player"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_getState__P2382.info = {"start":17279,"length":121,"line":566,"column":8,"endLine":569,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"getState","argumentNames":["this"]}

function info_PlayerInfo_getState__P2382_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_getState__P2382, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_init__P4473(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    s.tmp_0 = info_initHUD__P4467_mk(s);
    s.callLocIdx = 868; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = s.arg0.fields["_player"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = info_initMultiHUD__P4468_mk(s);
    s.callLocIdx = 869; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = globals.infoState___4421.fields["playerStates"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["_player"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(info_PlayerState__C2340_VT);
    s.tmp_6 = r0;
    r0 = undefined;
    r0 = globals.infoState___4421.fields["playerStates"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["_player"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - 1);
    s.tmp_8 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_7, s.tmp_8, s.tmp_6);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_init__P4473.info = {"start":17017,"length":252,"line":558,"column":8,"endLine":564,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"init","argumentNames":["this"]}

function info_PlayerInfo_init__P4473_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_init__P4473, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function info_initMultiHUD__P4468(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = globals.infoState___4421.fields["visibilityFlag"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_2 = r0 = globals.infoState___4421;
    r0 = s.tmp_2.fields["visibilityFlag"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 16);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["visibilityFlag"] = (s.tmp_3);
    r0 = globals.infoState___4421.fields["visibilityFlag"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 32);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_4 = r0 = globals.infoState___4421;
    s.tmp_6 = info_defaultMultiplayerHeartImage__P4470_mk(s);
    s.callLocIdx = 846; s.pc = 6; return s.tmp_6;
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4).fields["heartImage"] = (s.tmp_5);
  case 3:
  case 4:
    s.tmp_0 = r0 = globals.infoState___4421;
    r0 = pxsim.image.ofBuffer(_hex11067);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["multiplierImage"] = (s.tmp_1);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_initMultiHUD__P4468.info = {"start":4757,"length":393,"line":151,"column":4,"endLine":162,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"initMultiHUD","argumentNames":[]}

function info_initMultiHUD__P4468_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_initMultiHUD__P4468, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }

const _hex11067 = pxsim.BufferMethods.createBufferFromHex("8704030003000000010100001000000001010000")




function info_defaultMultiplayerHeartImage__P4470(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex11071);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex11073);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
info_defaultMultiplayerHeartImage__P4470.info = {"start":5754,"length":503,"line":187,"column":4,"endLine":204,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"defaultMultiplayerHeartImage","argumentNames":[]}

function info_defaultMultiplayerHeartImage__P4470_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_defaultMultiplayerHeartImage__P4470, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex11071 = pxsim.BufferMethods.createBufferFromHex("870407000500000000000000100100000110000010000100011000001001000000000000")
const _hex11073 = pxsim.BufferMethods.createBufferFromHex("870407000500000000000000100100002112000010240100411200001001000000000000")




function info_initHUD__P4467(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.infoState___4421);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = pxsim_pxtcore_mkClassInstance(info_InfoState__C4418_VT);
    s.tmp_0 = r0;
    s.tmp_1 = info_InfoState_constructor__P4419_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 829; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    globals.infoState___4421 = (s.tmp_0);
    s.tmp_0 = scene_createRenderable__P2543_mk(s);
    s.tmp_0.arg0 = 100;
    s.tmp_0.arg1 = info_initHUD_inline__P11081;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 845; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_initHUD__P4467.info = {"start":2671,"length":2080,"line":99,"column":4,"endLine":149,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"initHUD","argumentNames":[]}

function info_initHUD__P4467_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_initHUD__P4467, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function info_initHUD_inline__P11081(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ps___11090 = undefined;
    s.p___11111 = undefined;
    s.scene___11145 = undefined;
    s.elapsed___11148 = undefined;
    s.t___11156 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals.infoState___4421);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 23; continue; }
  case 1:
  case 2:
    r0 = globals.infoState___4421.fields["visibilityFlag"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = helpers_arrayFilter__P110_mk(s);
    s.tmp_2.arg0 = globals.players___4422;
    s.tmp_2.arg1 = ps_inline__P11092;
    s.callLocIdx = 830; s.pc = 24; return s.tmp_2;
  case 24:
    r0 = s.retval;
    s.ps___11090 = (r0);
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.ps___11090;
    s.tmp_0.arg1 = info_initHUD_inline__P11101;
    s.callLocIdx = 832; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    s.tmp_0.arg0 = s.ps___11090;
    s.tmp_0.arg1 = info_initHUD_inline__P11107;
    s.callLocIdx = 834; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    { step = 12; continue; }
  case 3:
    s.p___11111 = (globals.player1___2400);
    s.tmp_1 = info_PlayerInfo_hasScore__P2387_mk(s);
    s.tmp_1.arg0 = s.p___11111;
    s.callLocIdx = 835; s.pc = 27; return s.tmp_1;
  case 27:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = globals.infoState___4421.fields["visibilityFlag"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 2);
  case 5:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 6; continue; }
    s.tmp_4 = info_PlayerInfo_drawScore__P2395_mk(s);
    s.tmp_4.arg0 = s.p___11111;
    s.callLocIdx = 836; s.pc = 28; return s.tmp_4;
  case 28:
    r0 = s.retval;
  case 6:
  case 7:
    s.tmp_1 = info_PlayerInfo_hasLife__P2391_mk(s);
    s.tmp_1.arg0 = s.p___11111;
    s.callLocIdx = 837; s.pc = 29; return s.tmp_1;
  case 29:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = s.tmp_0;
    { step = 9; continue; }
  case 8:
    r0 = globals.infoState___4421.fields["visibilityFlag"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 4);
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    s.tmp_4 = info_PlayerInfo_drawLives__P2396_mk(s);
    s.tmp_4.arg0 = s.p___11111;
    s.callLocIdx = 838; s.pc = 30; return s.tmp_4;
  case 30:
    r0 = s.retval;
  case 10:
  case 11:
    s.tmp_0 = info_PlayerInfo_raiseLifeZero__P2393_mk(s);
    s.tmp_0.arg0 = s.p___11111;
    s.tmp_0.arg1 = true;
    s.callLocIdx = 839; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
  case 12:
    r0 = globals.infoState___4421.fields["gameEnd"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = s.tmp_0;
    { step = 14; continue; }
  case 13:
    r0 = globals.infoState___4421.fields["visibilityFlag"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 1);
  case 14:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 21; continue; }
    s.tmp_4 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 840; s.pc = 32; return s.tmp_4;
  case 32:
    r0 = s.retval;
    s.scene___11145 = (r0);
    r0 = globals.infoState___4421.fields["gameEnd"];
    s.tmp_0 = r0;
    r0 = s.scene___11145.fields["_millis"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.elapsed___11148 = (r0);
    s.tmp_0 = info_drawTimer__P4472_mk(s);
    s.tmp_0.arg0 = s.elapsed___11148;
    s.callLocIdx = 842; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    r0 = (s.elapsed___11148 / 1000);
    s.t___11156 = (r0);
    r0 = (s.t___11156 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 19; continue; }
    s.t___11156 = (0);
    r0 = globals.infoState___4421.fields["countdownExpired"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = (globals.infoState___4421).fields["countdownExpired"] = (true);
    r0 = (globals.infoState___4421).fields["gameEnd"] = (undefined);
    r0 = globals.infoState___4421.fields["countdownEndHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    s.tmp_1 = if_countdownEndHandler_1_mk(s);
    s.tmp_1.arg0 = globals.infoState___4421;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "countdownEndHandler"), 1);
      s.callLocIdx = 843; s.pc = 34; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["countdownEndHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["countdownEndHandler"], 1); s.callLocIdx = 843; s.pc = 34; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 843; s.pc = 34; return s.tmp_1;; }
     else { s.callLocIdx = 843; s.pc = 34; return s.tmp_1; }
    }
  case 34:
    r0 = s.retval;
    { step = 16; continue; }
  case 15:
    s.tmp_0 = game_over__P2703_mk(s);
    s.tmp_0.arg0 = false;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 844; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
  case 21:
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_initHUD_inline__P11081.info = {"start":2831,"length":1903,"line":106,"column":12,"endLine":147,"endColumn":13,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":[]}

function info_initHUD_inline__P11081_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_initHUD_inline__P11081, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  ps___11090: undefined,
  p___11111: undefined,
  scene___11145: undefined,
  elapsed___11148: undefined,
  t___11156: undefined,
} }





function ps_inline__P11092(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
ps_inline__P11092.info = {"start":3079,"length":8,"line":111,"column":46,"endLine":111,"endColumn":54,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function ps_inline__P11092_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ps_inline__P11092, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function info_initHUD_inline__P11101(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = info_PlayerInfo_drawPlayer__P2394_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 831; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_initHUD_inline__P11101.info = {"start":3163,"length":19,"line":113,"column":31,"endLine":113,"endColumn":50,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function info_initHUD_inline__P11101_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_initHUD_inline__P11101, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_initHUD_inline__P11107(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = info_PlayerInfo_raiseLifeZero__P2393_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = false;
    s.callLocIdx = 833; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_initHUD_inline__P11107.info = {"start":3265,"length":27,"line":115,"column":31,"endLine":115,"endColumn":58,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function info_initHUD_inline__P11107_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_initHUD_inline__P11107, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_drawTimer__P4472(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.font___11185 = undefined;
    s.smallFont___11187 = undefined;
    s.seconds___11189 = undefined;
    s.width___11193 = undefined;
    s.left___11198 = undefined;
    s.color1___11208 = undefined;
    s.color2___11212 = undefined;
    s.temp___11225 = undefined;
    s.remainder___11261 = undefined;
    s.decimalLeft___11280 = undefined;
    s.minutes___11298 = undefined;
    s.remainder___11302 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.arg0 = (0);
  case 1:
  case 2:
    r0 = (s.arg0 | 0);
    s.arg0 = (r0);
    s.font___11185 = (globals.font8___1772);
    s.smallFont___11187 = (globals.font5___1777);
    r0 = pxsim.Math_.idiv(s.arg0, 1000);
    s.seconds___11189 = (r0);
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___11185;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 855; s.pc = 11; return s.tmp_2; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 5);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 2);
    s.width___11193 = (r0);
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.width___11193 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.left___11198 = (r0);
    r0 = globals.infoState___4421.fields["fontColor"];
    s.color1___11208 = (r0);
    r0 = globals.infoState___4421.fields["bgColor"];
    s.color2___11212 = (r0);
    r0 = (s.seconds___11189 < 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (s.seconds___11189 & 1);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_1;
    { step = 6; continue; }
  case 5:
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 7; continue; }
    s.temp___11225 = (s.color1___11208);
    s.color1___11208 = (s.color2___11212);
    s.color2___11212 = (s.temp___11225);
  case 7:
  case 8:
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    r0 = (s.left___11198 - 3);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = (s.width___11193 + 6);
    s.tmp_0.arg3 = r0;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___11185;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 856; s.pc = 13; return s.tmp_2; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 3);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___4421.fields["borderColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 857; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    r0 = (s.left___11198 - 2);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = (s.width___11193 + 4);
    s.tmp_0.arg3 = r0;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___11185;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 858; s.pc = 15; return s.tmp_2; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 2);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.color2___11212;
    s.callLocIdx = 859; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = (s.seconds___11189 < 60);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = (s.arg0 % 1000);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 10);
    s.remainder___11261 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_3 = info_formatDecimal__P4474_mk(s);
    s.tmp_3.arg0 = s.seconds___11189;
    s.callLocIdx = 860; s.pc = 17; return s.tmp_3;
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_1, ".");
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.left___11198;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = s.color1___11208;
    s.tmp_0.arg5 = s.font___11185;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 861; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    s.tmp_0 = r0 = s.left___11198;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = s.font___11185;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 862; s.pc = 19; return s.tmp_3; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (3 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.decimalLeft___11280 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_1 = info_formatDecimal__P4474_mk(s);
    s.tmp_1.arg0 = s.remainder___11261;
    s.callLocIdx = 863; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.decimalLeft___11280;
    s.tmp_0.arg3 = 3;
    s.tmp_0.arg4 = s.color1___11208;
    s.tmp_0.arg5 = s.smallFont___11187;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 864; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    r0 = pxsim.Math_.idiv(s.seconds___11189, 60);
    s.minutes___11298 = (r0);
    r0 = (s.seconds___11189 % 60);
    s.remainder___11302 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_5 = info_formatDecimal__P4474_mk(s);
    s.tmp_5.arg0 = s.minutes___11298;
    s.callLocIdx = 865; s.pc = 23; return s.tmp_5;
  case 23:
    r0 = s.retval;
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, ":");
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 25);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 25:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_8 = info_formatDecimal__P4474_mk(s);
    s.tmp_8.arg0 = s.remainder___11302;
    s.callLocIdx = 866; s.pc = 26; return s.tmp_8;
  case 26:
    r0 = s.retval;
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_6);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.left___11198;
    s.tmp_0.arg3 = 1;
    s.tmp_0.arg4 = s.color1___11208;
    s.tmp_0.arg5 = s.font___11185;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 867; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
  case 10:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_drawTimer__P4472.info = {"start":13679,"length":1328,"line":466,"column":4,"endLine":501,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"drawTimer","argumentNames":["millis"]}

function info_drawTimer__P4472_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_drawTimer__P4472, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  font___11185: undefined,
  smallFont___11187: undefined,
  seconds___11189: undefined,
  width___11193: undefined,
  left___11198: undefined,
  color1___11208: undefined,
  color2___11212: undefined,
  temp___11225: undefined,
  remainder___11261: undefined,
  decimalLeft___11280: undefined,
  minutes___11298: undefined,
  remainder___11302: undefined,
  arg0: undefined,
} }





function info_formatDecimal__P4474(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 | 0);
    s.arg0 = (r0);
    r0 = (s.arg0 < 10);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("0", s.tmp_1);
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = pxsim_numops.toString(s.arg0);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
info_formatDecimal__P4474.info = {"start":28812,"length":156,"line":924,"column":4,"endLine":930,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"formatDecimal","argumentNames":["val"]}

function info_formatDecimal__P4474_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_formatDecimal__P4474, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function info_InfoState_constructor__P4419(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_InfoState__C4418_VT)) failedCast(r0);
    r0 = (s.arg0).fields["visibilityFlag"] = (8);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["playerStates"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = info_defaultHeartImage__P4469_mk(s);
    s.callLocIdx = 823; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["heartImage"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.image.ofBuffer(_hex11951);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["multiplierImage"] = (s.tmp_1);
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = 1;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["bgColor"] = (s.tmp_1);
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 3;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["borderColor"] = (s.tmp_1);
    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 3;
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg0).fields["fontColor"] = (s.tmp_1);
    r0 = (s.arg0).fields["countdownExpired"] = (undefined);
    r0 = (s.arg0).fields["countdownEndHandler"] = (undefined);
    r0 = (s.arg0).fields["gameEnd"] = (undefined);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["playerStates"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_InfoState_constructor__P4419.info = {"start":1121,"length":674,"line":45,"column":8,"endLine":63,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["this"]}

function info_InfoState_constructor__P4419_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_InfoState_constructor__P4419, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }

const _hex11951 = pxsim.BufferMethods.createBufferFromHex("87040500050000000100010010100000000100001010000001000100")




function info_defaultHeartImage__P4469(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_ImageMethods.isMono(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.image.ofBuffer(_hex11979);
    { step = 2; continue; }
  case 1:
    r0 = pxsim.image.ofBuffer(_hex11981);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
info_defaultHeartImage__P4469.info = {"start":5156,"length":592,"line":164,"column":4,"endLine":185,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"defaultHeartImage","argumentNames":[]}

function info_defaultHeartImage__P4469_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_defaultHeartImage__P4469, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }

const _hex11979 = pxsim.BufferMethods.createBufferFromHex("87040800070000001011000001000100010010001000000101001000010001001011000000000000")
const _hex11981 = pxsim.BufferMethods.createBufferFromHex("8704080007000000c0cc00002c220c002222c2002222220c20222202222422004222020020220000")




function info_PlayerInfo_drawLives__P2396(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___11343 = undefined;
    s.font___11349 = undefined;
    s.i___11392 = undefined;
    s.num___11414 = undefined;
    s.textWidth___11421 = undefined;
    s.mult___11473 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    s.tmp_0 = info_PlayerInfo_getState__P2382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 902; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.state___11343 = (r0);
    r0 = s.state___11343.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 7; continue; }
  case 1:
  case 2:
    s.font___11349 = (globals.font8___1772);
    r0 = s.state___11343.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_2.arg0 = globals.screen___1829;
    s.tmp_2.arg1 = 0;
    s.tmp_2.arg2 = 0;
    r0 = s.state___11343.fields["life"];
    s.tmp_4 = r0;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 3);
    s.tmp_2.arg3 = r0;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_9 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 4);
    s.tmp_2.arg4 = r0;
    r0 = globals.infoState___4421.fields["borderColor"];
    s.tmp_2.arg5 = r0;
    s.callLocIdx = 903; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    r0 = s.state___11343.fields["life"];
    s.tmp_2 = r0;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 2);
    s.tmp_0.arg3 = r0;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 3);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___4421.fields["bgColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 904; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.i___11392 = (0);
  case 3:
    r0 = s.state___11343.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.i___11392 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_2 = r0 = globals.screen___1829;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_3 = r0;
    s.tmp_6 = r0 = s.i___11392;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_9 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_9);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 1);
    s.tmp_7 = r0;
    r0 = (s.tmp_6 * s.tmp_7);
    s.tmp_5 = r0;
    r0 = (1 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_2, s.tmp_3, s.tmp_4, 1);
    r0 = (s.i___11392 + 1);
    s.i___11392 = (r0);
    { step = 3; continue; }
  case 4:
    { step = 6; continue; }
  case 5:
    r0 = s.state___11343.fields["life"];
    s.tmp_1 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 11);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_2);
    s.num___11414 = (r0);
    r0 = pxsim_String_.length(s.num___11414);
    s.tmp_1 = r0;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = s.font___11349;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 905; s.pc = 12; return s.tmp_3; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 1);
    s.textWidth___11421 = (r0);
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 + s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.textWidth___11421);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 5);
    s.tmp_0.arg3 = r0;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 4);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___4421.fields["borderColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 906; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 0;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_6);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 + s.tmp_5);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.textWidth___11421);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 4);
    s.tmp_0.arg3 = r0;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 3);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___4421.fields["bgColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 907; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___1829, s.tmp_0, 1, 1);
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.mult___11473 = (r0);
    r0 = globals.infoState___4421.fields["fontColor"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.mult___11473, 1, s.tmp_0);
    s.tmp_0 = r0 = globals.screen___1829;
    s.tmp_1 = r0 = s.mult___11473;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_2 = r0;
    s.tmp_8 = if_charHeight_1_mk(s);
    s.tmp_8.arg0 = s.font___11349;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "charHeight");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["charHeight"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["charHeight"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 908; s.pc = 15; return s.tmp_8; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_10 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_10);
    s.tmp_9 = r0;
    r0 = (s.tmp_7 - s.tmp_9);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_5);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.num___11414;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 3);
    s.tmp_1 = r0;
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_1 + s.tmp_4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 1;
    r0 = globals.infoState___4421.fields["fontColor"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___11349;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 909; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_drawLives__P2396.info = {"start":26342,"length":2458,"line":855,"column":8,"endLine":921,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"drawLives","argumentNames":["this"]}

function info_PlayerInfo_drawLives__P2396_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_drawLives__P2396, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  state___11343: undefined,
  font___11349: undefined,
  i___11392: undefined,
  num___11414: undefined,
  textWidth___11421: undefined,
  mult___11473: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_drawScore__P2395(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___11529 = undefined;
    s.font___11533 = undefined;
    s.offsetY___11534 = undefined;
    s.num___11543 = undefined;
    s.width___11547 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    s.tmp_1 = info_PlayerInfo_score__P2384_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 895; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    s.s___11529 = (r0);
    r0 = (s.s___11529 >= 1000000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.offsetY___11534 = (2);
    s.font___11533 = (globals.font5___1777);
    { step = 2; continue; }
  case 1:
    s.offsetY___11534 = (1);
    s.font___11533 = (globals.font8___1772);
  case 2:
    r0 = pxsim_numops.toString(s.s___11529);
    s.num___11543 = (r0);
    r0 = pxsim_String_.length(s.num___11543);
    s.tmp_0 = r0;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___11533;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 896; s.pc = 4; return s.tmp_2; }
    }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 * s.tmp_1);
    s.width___11547 = (r0);
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.width___11547);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 2);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_0.arg3 = r0;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = globals.font8___1772;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 897; s.pc = 6; return s.tmp_4; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 3);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___4421.fields["borderColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 898; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.width___11547);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_0.arg3 = r0;
    s.tmp_4 = if_charHeight_1_mk(s);
    s.tmp_4.arg0 = globals.font8___1772;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "charHeight");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["charHeight"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["charHeight"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 899; s.pc = 8; return s.tmp_4; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 2);
    s.tmp_0.arg4 = r0;
    r0 = globals.infoState___4421.fields["bgColor"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 900; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.num___11543;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.width___11547);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.offsetY___11534;
    r0 = globals.infoState___4421.fields["fontColor"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___11533;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 901; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_drawScore__P2395.info = {"start":25284,"length":1048,"line":815,"column":8,"endLine":853,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"drawScore","argumentNames":["this"]}

function info_PlayerInfo_drawScore__P2395_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_drawScore__P2395, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  s___11529: undefined,
  font___11533: undefined,
  offsetY___11534: undefined,
  num___11543: undefined,
  width___11547: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_score__P2384(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___10871 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    r0 = s.arg0.fields["showScore"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["showScore"] = (true);
  case 1:
  case 2:
    r0 = s.arg0.fields["showPlayer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = (s.arg0).fields["showPlayer"] = (true);
  case 3:
  case 4:
    s.tmp_0 = info_PlayerInfo_getState__P2382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 872; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.state___10871 = (r0);
    r0 = s.state___10871.fields["score"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = (s.state___10871).fields["score"] = (0);
  case 5:
  case 6:
    r0 = s.state___10871.fields["score"];
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_score__P2384.info = {"start":17683,"length":314,"line":582,"column":8,"endLine":591,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"score","argumentNames":["this"]}

function info_PlayerInfo_score__P2384_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_score__P2384, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  state___10871: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_drawPlayer__P2394(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___11619 = undefined;
    s.font___11622 = undefined;
    s.score___11624 = undefined;
    s.life___11625 = undefined;
    s.height___11626 = undefined;
    s.scoreWidth___11627 = undefined;
    s.lifeWidth___11628 = undefined;
    s.offsetY___11631 = undefined;
    s.showScore___11632 = undefined;
    s.showLife___11640 = undefined;
    s.width___11708 = undefined;
    s.x___11718 = undefined;
    s.y___11725 = undefined;
    s.bump___11758 = undefined;
    s.xLoc___11783 = undefined;
    s.mult___11794 = undefined;
    s.pNum___11856 = undefined;
    s.iconWidth___11863 = undefined;
    s.iconHeight___11871 = undefined;
    s.iconX___11879 = undefined;
    s.iconY___11891 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    s.tmp_0 = info_PlayerInfo_getState__P2382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 878; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
    s.state___11619 = (r0);
    s.font___11622 = (globals.font5___1777);
    s.height___11626 = (4);
    s.scoreWidth___11627 = (0);
    s.lifeWidth___11628 = (0);
    s.offsetY___11631 = (2);
    r0 = s.arg0.fields["showScore"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.state___11619.fields["score"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.showScore___11632 = (s.tmp_2);
    r0 = s.arg0.fields["showLife"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = s.state___11619.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.showLife___11640 = (s.tmp_2);
    r0 = pxsim_numops_toBoolDecr(s.showScore___11632);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_String_.mkEmpty();
    s.tmp_0 = r0;
    r0 = s.state___11619.fields["score"];
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 44);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 44:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    s.score___11624 = (r0);
    r0 = pxsim_String_.length(s.score___11624);
    s.tmp_1 = r0;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = s.font___11622;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 879; s.pc = 45; return s.tmp_3; }
    }
  case 45:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 3);
    s.scoreWidth___11627 = (r0);
    s.tmp_0 = r0 = s.height___11626;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___11622;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 880; s.pc = 46; return s.tmp_2; }
    }
  case 46:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.height___11626 = (r0);
    s.tmp_0 = r0 = s.offsetY___11631;
    s.tmp_3 = if_charHeight_1_mk(s);
    s.tmp_3.arg0 = s.font___11622;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 881; s.pc = 47; return s.tmp_3; }
    }
  case 47:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.offsetY___11631 = (r0);
  case 5:
  case 6:
    r0 = pxsim_numops_toBoolDecr(s.showLife___11640);
    if (!r0) { step = 9; continue; }
    r0 = s.state___11619.fields["life"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 7:
    r0 = 0;
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_2 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 48);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 48:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_3);
    s.life___11625 = (r0);
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_2 = r0;
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_String_.length(s.life___11625);
    s.tmp_7 = r0;
    s.tmp_9 = if_charWidth_1_mk(s);
    s.tmp_9.arg0 = s.font___11622;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "charWidth");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["charWidth"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["charWidth"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 882; s.pc = 49; return s.tmp_9; }
    }
  case 49:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 * s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_1 + s.tmp_6);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 3);
    s.lifeWidth___11628 = (r0);
    s.tmp_0 = r0 = s.height___11626;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_2 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.height___11626 = (r0);
  case 9:
  case 10:
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = s.scoreWidth___11627;
    s.tmp_0.arg1 = s.lifeWidth___11628;
    s.callLocIdx = 883; s.pc = 50; return s.tmp_0;
  case 50:
    r0 = s.retval;
    s.width___11708 = (r0);
    s.tmp_0 = r0 = s.showScore___11632;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 11:
    r0 = s.showLife___11640;
  case 12:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 13; continue; }
    r0 = (s.height___11626 + 1);
    s.height___11626 = (r0);
  case 13:
  case 14:
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = s.width___11708;
    { step = 16; continue; }
  case 15:
    r0 = 0;
  case 16:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.tmp_1);
    s.x___11718 = (r0);
    r0 = s.arg0.fields["up"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    r0 = s.height___11626;
    { step = 18; continue; }
  case 17:
    r0 = 0;
  case 18:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["y"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.tmp_1);
    s.y___11725 = (r0);
    s.tmp_0 = r0 = s.showScore___11632;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 19; continue; }
    r0 = s.tmp_0;
    { step = 20; continue; }
  case 19:
    r0 = s.showLife___11640;
  case 20:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 21; continue; }
    s.tmp_2 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_2.arg0 = globals.screen___1829;
    s.tmp_2.arg1 = s.x___11718;
    s.tmp_2.arg2 = s.y___11725;
    s.tmp_2.arg3 = s.width___11708;
    s.tmp_2.arg4 = s.height___11626;
    r0 = s.arg0.fields["border"];
    s.tmp_2.arg5 = r0;
    s.callLocIdx = 884; s.pc = 51; return s.tmp_2;
  case 51:
    r0 = s.retval;
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    r0 = (s.x___11718 + 1);
    s.tmp_0.arg1 = r0;
    r0 = (s.y___11725 + 1);
    s.tmp_0.arg2 = r0;
    r0 = (s.width___11708 - 2);
    s.tmp_0.arg3 = r0;
    r0 = (s.height___11626 - 2);
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["bg"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 885; s.pc = 52; return s.tmp_0;
  case 52:
    r0 = s.retval;
  case 21:
  case 22:
    r0 = pxsim_numops_toBoolDecr(s.showScore___11632);
    if (!r0) { step = 25; continue; }
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    r0 = (s.width___11708 - s.scoreWidth___11627);
    { step = 24; continue; }
  case 23:
    r0 = 0;
  case 24:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.bump___11758 = (s.tmp_1);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.score___11624;
    r0 = (s.x___11718 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.bump___11758);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 1);
    s.tmp_0.arg2 = r0;
    r0 = (s.y___11725 + 2);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["fc"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___11622;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 886; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
  case 25:
  case 26:
    r0 = pxsim_numops_toBoolDecr(s.showLife___11640);
    if (!r0) { step = 29; continue; }
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    r0 = (s.width___11708 - s.lifeWidth___11628);
    { step = 28; continue; }
  case 27:
    r0 = 0;
  case 28:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.x___11718 + 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.tmp_1);
    s.xLoc___11783 = (r0);
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.mult___11794 = (r0);
    r0 = s.arg0.fields["fc"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.mult___11794, 1, s.tmp_0);
    s.tmp_0 = r0 = globals.screen___1829;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_1 = r0;
    s.tmp_2 = r0 = s.xLoc___11783;
    r0 = (s.y___11725 + s.offsetY___11631);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_3);
    s.tmp_0 = r0 = globals.screen___1829;
    s.tmp_1 = r0 = s.mult___11794;
    s.tmp_3 = r0 = s.xLoc___11783;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.y___11725 + s.offsetY___11631);
    s.tmp_9 = r0;
    s.tmp_11 = if_charHeight_1_mk(s);
    s.tmp_11.arg0 = s.font___11622;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "charHeight");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["charHeight"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["charHeight"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 887; s.pc = 54; return s.tmp_11; }
    }
  case 54:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_9 + s.tmp_10);
    s.tmp_8 = r0;
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_13);
    s.tmp_12 = r0;
    r0 = (s.tmp_8 - s.tmp_12);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_6);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.life___11625;
    s.tmp_3 = r0 = s.xLoc___11783;
    r0 = globals.infoState___4421.fields["heartImage"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = globals.infoState___4421.fields["multiplierImage"];
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (s.tmp_2 + s.tmp_6);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 1);
    s.tmp_0.arg2 = r0;
    r0 = (s.y___11725 + s.offsetY___11631);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["fc"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___11622;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 888; s.pc = 55; return s.tmp_0;
  case 55:
    r0 = s.retval;
  case 29:
  case 30:
    r0 = s.arg0.fields["showPlayer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 41; continue; }
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_player"];
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 56);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 56:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    s.pNum___11856 = (r0);
    r0 = pxsim_String_.length(s.pNum___11856);
    s.tmp_1 = r0;
    s.tmp_3 = if_charWidth_1_mk(s);
    s.tmp_3.arg0 = s.font___11622;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charWidth");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charWidth"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charWidth"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 889; s.pc = 57; return s.tmp_3; }
    }
  case 57:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.iconWidth___11863 = (r0);
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = s.height___11626;
    s.tmp_2 = if_charHeight_1_mk(s);
    s.tmp_2.arg0 = s.font___11622;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charHeight");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charHeight"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charHeight"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 890; s.pc = 59; return s.tmp_2; }
    }
  case 59:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 891; s.pc = 58; return s.tmp_0;
  case 58:
    r0 = s.retval;
    s.iconHeight___11871 = (r0);
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    r0 = (s.x___11718 - s.iconWidth___11863);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 1);
    { step = 32; continue; }
  case 31:
    r0 = (s.x___11718 + s.width___11708);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
  case 32:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.iconX___11879 = (s.tmp_3);
    s.iconY___11891 = (s.y___11725);
    r0 = pxsim_numops_toBoolDecr(s.showScore___11632);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 33; continue; }
    r0 = s.tmp_0;
    { step = 34; continue; }
  case 33:
    r0 = pxsim_numops_toBoolDecr(s.showLife___11640);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 34:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 39; continue; }
    r0 = s.arg0.fields["left"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 35; continue; }
    r0 = -1;
    { step = 36; continue; }
  case 35:
    r0 = 1;
  case 36:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = (s.iconX___11879 + s.tmp_5);
    s.iconX___11879 = (r0);
    r0 = s.arg0.fields["up"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 37; continue; }
    r0 = (s.iconY___11891 - 3);
    s.iconY___11891 = (r0);
  case 37:
  case 38:
  case 39:
  case 40:
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.iconX___11879;
    s.tmp_0.arg2 = s.iconY___11891;
    s.tmp_0.arg3 = s.iconWidth___11863;
    s.tmp_0.arg4 = s.iconHeight___11871;
    r0 = s.arg0.fields["border"];
    s.tmp_0.arg5 = r0;
    s.callLocIdx = 892; s.pc = 60; return s.tmp_0;
  case 60:
    r0 = s.retval;
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.pNum___11856;
    r0 = (s.iconX___11879 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_2 = r0 = s.iconY___11891;
    r0 = (s.iconHeight___11871 >> 1);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1 = r0;
    s.tmp_6 = if_charHeight_1_mk(s);
    s.tmp_6.arg0 = s.font___11622;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "charHeight");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["charHeight"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["charHeight"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 893; s.pc = 62; return s.tmp_6; }
    }
  case 62:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_1 - s.tmp_4);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["bg"];
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.font___11622;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 894; s.pc = 61; return s.tmp_0;
  case 61:
    r0 = s.retval;
  case 41:
  case 42:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_drawPlayer__P2394.info = {"start":21639,"length":3635,"line":710,"column":8,"endLine":813,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"drawPlayer","argumentNames":["this"]}

function info_PlayerInfo_drawPlayer__P2394_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_drawPlayer__P2394, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  state___11619: undefined,
  font___11622: undefined,
  score___11624: undefined,
  life___11625: undefined,
  height___11626: undefined,
  scoreWidth___11627: undefined,
  lifeWidth___11628: undefined,
  offsetY___11631: undefined,
  showScore___11632: undefined,
  showLife___11640: undefined,
  width___11708: undefined,
  x___11718: undefined,
  y___11725: undefined,
  bump___11758: undefined,
  xLoc___11783: undefined,
  mult___11794: undefined,
  pNum___11856: undefined,
  iconWidth___11863: undefined,
  iconHeight___11871: undefined,
  iconX___11879: undefined,
  iconY___11891: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_raiseLifeZero__P2393(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___11597 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    s.tmp_0 = info_PlayerInfo_getState__P2382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 875; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.state___11597 = (r0);
    r0 = s.state___11597.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.state___11597.fields["life"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 <= 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    r0 = (s.state___11597).fields["life"] = (null);
    r0 = s.state___11597.fields["lifeZeroHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = if_lifeZeroHandler_1_mk(s);
    s.tmp_1.arg0 = s.state___11597;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "lifeZeroHandler"), 1);
      s.callLocIdx = 876; s.pc = 10; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["lifeZeroHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["lifeZeroHandler"], 1); s.callLocIdx = 876; s.pc = 10; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 876; s.pc = 10; return s.tmp_1;; }
     else { s.callLocIdx = 876; s.pc = 10; return s.tmp_1; }
    }
  case 10:
    r0 = s.retval;
    { step = 6; continue; }
  case 3:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 4; continue; }
    s.tmp_0 = game_over__P2703_mk(s);
    s.tmp_0.arg0 = false;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 877; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_raiseLifeZero__P2393.info = {"start":21255,"length":374,"line":698,"column":8,"endLine":708,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"raiseLifeZero","argumentNames":["this","gameOver"]}

function info_PlayerInfo_raiseLifeZero__P2393_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_raiseLifeZero__P2393, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  state___11597: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function info_PlayerInfo_hasLife__P2391(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___11516 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    s.tmp_0 = info_PlayerInfo_getState__P2382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 874; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.state___11516 = (r0);
    r0 = s.state___11516.fields["life"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.state___11516.fields["life"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== null);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_hasLife__P2391.info = {"start":20732,"length":141,"line":681,"column":8,"endLine":684,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"hasLife","argumentNames":["this"]}

function info_PlayerInfo_hasLife__P2391_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_hasLife__P2391, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  state___11516: undefined,
  arg0: undefined,
} }





function info_PlayerInfo_hasScore__P2387(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___10883 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    s.tmp_0 = info_PlayerInfo_getState__P2382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 873; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.state___10883 = (r0);
    r0 = s.state___10883.fields["score"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 !== undefined);
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_hasScore__P2387.info = {"start":18908,"length":111,"line":622,"column":8,"endLine":625,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"hasScore","argumentNames":["this"]}

function info_PlayerInfo_hasScore__P2387_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_hasScore__P2387, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  state___10883: undefined,
  arg0: undefined,
} }





function info_PlayerState_constructor__P2344(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerState__C2340_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_PlayerState_constructor__P2344.info = {"start":684,"length":17,"line":29,"column":8,"endLine":29,"endColumn":25,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["this"]}

function info_PlayerState_constructor__P2344_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerState_constructor__P2344, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function info_highScore__P2348(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_1 = settings_readNumber__P1863_mk(s);
    s.tmp_1.arg0 = "high-score";
    s.callLocIdx = 854; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
info_highScore__P2348.info = {"start":7162,"length":98,"line":242,"column":4,"endLine":244,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"highScore","argumentNames":[]}

function info_highScore__P2348_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_highScore__P2348, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function settings_readNumber__P1863(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___10777 = undefined;
    s.nums___10784 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    s.buf___10777 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.buf___10777);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 7; continue; }
    { step = 6; continue; }
  case 1:
    s.tmp_2 = msgpack_unpackNumberArray__P183_mk(s);
    s.tmp_2.arg0 = s.buf___10777;
    s.tmp_2.arg1 = 0;
    s.callLocIdx = 169; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.nums___10784 = (r0);
    s.tmp_0 = r0 = s.nums___10784;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__length(s.nums___10784);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 1);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.nums___10784, 0);
    { step = 7; continue; }
  case 4:
  case 5:
    r0 = undefined;
    { step = 7; continue; }
  case 6:
    r0 = undefined;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
settings_readNumber__P1863.info = {"start":3283,"length":313,"line":131,"column":4,"endLine":141,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readNumber","argumentNames":["key"]}

function settings_readNumber__P1863_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readNumber__P1863, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  buf___10777: undefined,
  nums___10784: undefined,
  arg0: undefined,
} }





function settings_readBuffer__P1860(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    return leave(s, r0)
  default: oops()
} } }
settings_readBuffer__P1860.info = {"start":2694,"length":72,"line":103,"column":4,"endLine":105,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readBuffer","argumentNames":["key"]}

function settings_readBuffer__P1860_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readBuffer__P1860, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function msgpack_unpackNumberArray__P183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.res___10797 = undefined;
    s.fmt___10804 = undefined;
    s.v___10813 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.res___10797 = (r0);
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = pxsim.BufferMethods.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_3 = r0 = s.arg1;
    r0 = (s.tmp_3 + 1);
    s.arg1 = (r0);
    s.tmp_4 = msgpack_tagFormat__P4118_mk(s);
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.tmp_3);
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 22; s.pc = 12; return s.tmp_4;
  case 12:
    r0 = s.retval;
    s.fmt___10804 = (r0);
    r0 = (s.fmt___10804 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = r0 = s.arg0;
    r0 = (s.arg1 - 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 6, s.tmp_2);
    s.v___10813 = (r0);
    r0 = (-31 <= s.v___10813);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = (s.v___10813 <= 127);
  case 3:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__push(s.res___10797, s.v___10813);
    { step = 5; continue; }
  case 4:
    r0 = null;
    { step = 11; continue; }
  case 5:
    { step = 7; continue; }
  case 6:
    s.tmp_0 = r0 = s.res___10797;
    r0 = pxsim.BufferMethods.getNumber(s.arg0, s.fmt___10804, s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = pins_sizeOf__P175_mk(s);
    s.tmp_2.arg0 = s.fmt___10804;
    s.callLocIdx = 23; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.arg1 = (r0);
  case 7:
  case 8:
    r0 = pxsim.BufferMethods.getByte(s.arg0, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === 193);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = (s.arg1 + 1);
    s.arg1 = (r0);
    { step = 8; continue; }
  case 9:
    { step = 1; continue; }
  case 10:
    r0 = s.res___10797;
  case 11:
    return leave(s, r0)
  default: oops()
} } }
msgpack_unpackNumberArray__P183.info = {"start":2650,"length":669,"line":91,"column":4,"endLine":111,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"unpackNumberArray","argumentNames":["buf","offset"]}

function msgpack_unpackNumberArray__P183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_unpackNumberArray__P183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  res___10797: undefined,
  fmt___10804: undefined,
  v___10813: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_tagFormat__P4118(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(203, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(204, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(205, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(206, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(208, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(209, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(210, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 8; continue; }
  case 1:
    r0 = 16;
    { step = 9; continue; }
  case 2:
    r0 = 7;
    { step = 9; continue; }
  case 3:
    r0 = 9;
    { step = 9; continue; }
  case 4:
    r0 = 12;
    { step = 9; continue; }
  case 5:
    r0 = 6;
    { step = 9; continue; }
  case 6:
    r0 = 8;
    { step = 9; continue; }
  case 7:
    r0 = 10;
    { step = 9; continue; }
  case 8:
    r0 = null;
    { step = 9; continue; }
    r0 = undefined;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
msgpack_tagFormat__P4118.info = {"start":1145,"length":481,"line":42,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"tagFormat","argumentNames":["tag"]}

function msgpack_tagFormat__P4118_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_tagFormat__P4118, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function pins_sizeOf__P175(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Buffer_sizeOfNumberFormat__P215_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 19; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
pins_sizeOf__P175.info = {"start":42,"length":101,"line":2,"column":4,"endLine":4,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOf","argumentNames":["format"]}

function pins_sizeOf__P175_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pins_sizeOf__P175, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Buffer_sizeOfNumberFormat__P215(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(15, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq(16, s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq(14, s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = 1;
    { step = 18; continue; }
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = 2;
    { step = 18; continue; }
  case 9:
  case 10:
  case 11:
  case 12:
  case 13:
  case 14:
    r0 = 4;
    { step = 18; continue; }
  case 15:
  case 16:
    r0 = 8;
    { step = 18; continue; }
  case 17:
    r0 = 0;
  case 18:
    return leave(s, r0)
  default: oops()
} } }
Buffer_sizeOfNumberFormat__P215.info = {"start":14912,"length":856,"line":508,"column":4,"endLine":532,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"sizeOfNumberFormat","argumentNames":["format"]}

function Buffer_sizeOfNumberFormat__P215_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Buffer_sizeOfNumberFormat__P215, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function info_saveHighScore__P2345(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hs___10599 = undefined;
    s.curr___10616 = undefined;
    r0 = pxsim_numops_toBoolDecr(globals.players___4422);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_pxtrt.mklocRef();
    s.hs___10599 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.hs___10599, 0);
    r0 = pxsim_pxtcore_mkAction(1, info_saveHighScore_inline__P10609);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.hs___10599);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_2 = helpers_arrayFilter__P110_mk(s);
    s.tmp_2.arg0 = globals.players___4422;
    s.tmp_2.arg1 = forEach_inline__P10603;
    s.callLocIdx = 848; s.pc = 8; return s.tmp_2;
  case 8:
    r0 = s.retval;
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 851; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.tmp_0 = settings_readNumber__P1863_mk(s);
    s.tmp_0.arg0 = "high-score";
    s.callLocIdx = 852; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.curr___10616 = (r0);
    r0 = (s.curr___10616 == null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt_ldlocRef(s.hs___10599);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.curr___10616);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = settings_writeNumber__P1858_mk(s);
    s.tmp_3.arg0 = "high-score";
    r0 = pxsim_pxtrt_ldlocRef(s.hs___10599);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 853; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
  case 3:
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
info_saveHighScore__P2345.info = {"start":6263,"length":383,"line":206,"column":4,"endLine":216,"endColumn":5,"fileName":"pxt_modules/game/info.ts","functionName":"saveHighScore","argumentNames":[]}

function info_saveHighScore__P2345_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_saveHighScore__P2345, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  hs___10599: undefined,
  curr___10616: undefined,
} }





function forEach_inline__P10603(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = info_PlayerInfo_hasScore__P2387_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 847; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P10603.info = {"start":6388,"length":22,"line":210,"column":24,"endLine":210,"endColumn":46,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function forEach_inline__P10603_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P10603, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function info_saveHighScore_inline__P10609(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.caps[0];
    s.tmp_2 = Math_max__P130_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2.arg0 = r0;
    s.tmp_3 = info_PlayerInfo_score__P2384_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 849; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 850; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = s.tmp_1;
    return leave(s, r0)
  default: oops()
} } }
info_saveHighScore_inline__P10609.info = {"start":6437,"length":33,"line":211,"column":25,"endLine":211,"endColumn":58,"fileName":"pxt_modules/game/info.ts","functionName":"inline","argumentNames":["p"]}

function info_saveHighScore_inline__P10609_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_saveHighScore_inline__P10609, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function settings_writeNumber__P1858(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_1 = settings_writeBuffer__P1855_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = msgpack_packNumberArray__P184_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    s.callLocIdx = 165; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 166; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeNumber__P1858.info = {"start":2265,"length":122,"line":89,"column":4,"endLine":91,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeNumber","argumentNames":["key","value"]}

function settings_writeNumber__P1858_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeNumber__P1858, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_writeBuffer__P1855(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._set(s.arg0, s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.settings._userClean();
    r0 = pxsim_pxtrt.panic(920);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeBuffer__P1855.info = {"start":1538,"length":290,"line":63,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeBuffer","argumentNames":["key","value"]}

function settings_writeBuffer__P1855_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeBuffer__P1855, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function msgpack_packNumberArray__P184(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.off___10637 = undefined;
    s.n___10639 = undefined;
    s.unnamed50___U2 = undefined;
    s.unnamed51___U3 = undefined;
    s.buf___10649 = undefined;
    s.n___10655 = undefined;
    s.unnamed52___U6 = undefined;
    s.unnamed53___U7 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.off___10637 = (0);
    s.n___10639 = (undefined);
    s.unnamed50___U2 = (s.arg0);
    s.unnamed51___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed51___U3;
    r0 = pxsim_Array__length(s.unnamed50___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed50___U2, s.unnamed51___U3);
    s.n___10639 = (r0);
    s.tmp_2 = r0 = s.off___10637;
    s.tmp_4 = msgpack_packNumberCore__P4119_mk(s);
    s.tmp_4.arg0 = null;
    s.tmp_4.arg1 = s.off___10637;
    s.tmp_4.arg2 = s.n___10639;
    s.callLocIdx = 24; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___10637 = (r0);
    r0 = (s.unnamed51___U3 + 1);
    s.unnamed51___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed50___U2 = (undefined);
    r0 = pxsim.control.createBuffer(s.off___10637);
    s.buf___10649 = (r0);
    s.off___10637 = (0);
    s.n___10655 = (undefined);
    s.unnamed52___U6 = (s.arg0);
    s.unnamed53___U7 = (0);
  case 3:
    s.tmp_0 = r0 = s.unnamed53___U7;
    r0 = pxsim_Array__length(s.unnamed52___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed52___U6, s.unnamed53___U7);
    s.n___10655 = (r0);
    s.tmp_2 = r0 = s.off___10637;
    s.tmp_4 = msgpack_packNumberCore__P4119_mk(s);
    s.tmp_4.arg0 = s.buf___10649;
    s.tmp_4.arg1 = s.off___10637;
    s.tmp_4.arg2 = s.n___10655;
    s.callLocIdx = 25; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.off___10637 = (r0);
    r0 = (s.unnamed53___U7 + 1);
    s.unnamed53___U7 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed52___U6 = (undefined);
    r0 = s.buf___10649;
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberArray__P184.info = {"start":3427,"length":330,"line":117,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberArray","argumentNames":["nums"]}

function msgpack_packNumberArray__P184_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberArray__P184, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  off___10637: undefined,
  n___10639: undefined,
  unnamed50___U2: undefined,
  unnamed51___U3: undefined,
  buf___10649: undefined,
  n___10655: undefined,
  unnamed52___U6: undefined,
  unnamed53___U7: undefined,
  arg0: undefined,
} }





function msgpack_packNumberCore__P4119(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tag___10669 = undefined;
    s.fmt___10712 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    s.tag___10669 = (203);
    s.tmp_1 = r0 = s.arg2;
    r0 = (s.arg2 << 0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = s.arg2;
    r0 = (s.arg2 >>> 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 == s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 19; continue; }
    r0 = (-31 <= s.arg2);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBool(s.tmp_6);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_6;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 <= 127);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.arg2);
  case 5:
  case 6:
    r0 = 1;
    { step = 23; continue; }
    { step = 18; continue; }
  case 7:
    r0 = (0 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    r0 = (s.arg2 <= 255);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    s.tag___10669 = (204);
    { step = 11; continue; }
  case 8:
    r0 = (s.arg2 <= 65535);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tag___10669 = (205);
    { step = 10; continue; }
  case 9:
    s.tag___10669 = (206);
  case 10:
  case 11:
    { step = 17; continue; }
  case 12:
    r0 = (-127 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.tag___10669 = (208);
    { step = 16; continue; }
  case 13:
    r0 = (-32767 <= s.arg2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tag___10669 = (209);
    { step = 15; continue; }
  case 14:
    s.tag___10669 = (210);
  case 15:
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.tmp_0 = msgpack_tagFormat__P4118_mk(s);
    s.tmp_0.arg0 = s.tag___10669;
    s.callLocIdx = 20; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.fmt___10712 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 21; continue; }
    r0 = pxsim.BufferMethods.setByte(s.arg0, s.arg1, s.tag___10669);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_1 = r0 = s.fmt___10712;
    r0 = (s.arg1 + 1);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, s.tmp_1, s.tmp_2, s.arg2);
  case 21:
  case 22:
    s.tmp_1 = pins_sizeOf__P175_mk(s);
    s.tmp_1.arg0 = s.fmt___10712;
    s.callLocIdx = 21; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
  case 23:
    return leave(s, r0)
  default: oops()
} } }
msgpack_packNumberCore__P4119.info = {"start":1632,"length":951,"line":56,"column":4,"endLine":86,"endColumn":5,"fileName":"pxt_modules/base/buffer.ts","functionName":"packNumberCore","argumentNames":["buf","offset","num"]}

function msgpack_packNumberCore__P4119_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: msgpack_packNumberCore__P4119, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tag___10669: undefined,
  fmt___10712: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function music_Melody_play__P1619(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1612_VT)) failedCast(r0);
    s.tmp_0 = music_Melody_playCore__P4223_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = false;
    s.callLocIdx = 89; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_play__P1619.info = {"start":9239,"length":71,"line":285,"column":8,"endLine":287,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"play","argumentNames":["this","volume"]}

function music_Melody_play__P1619_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_play__P1619, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function music_Melody_playCore__P4223(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___9125 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1612_VT)) failedCast(r0);
    s.tmp_0 = music_Melody_stop__P1617_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 84; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(music_MelodyPlayer__C1622_VT);
    s.tmp_0 = r0;
    s.tmp_1 = music_MelodyPlayer_constructor__P1625_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 85; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    r0 = (s.arg0).fields["_player"] = (s.tmp_0);
    s.p___9125 = (s.tmp_0);
    s.tmp_0 = music_Melody_registerMelody__P4221_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 86; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(4, music_Melody_playCore_inline__P9135);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.p___9125);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.arg2);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_playCore__P4223.info = {"start":7682,"length":815,"line":242,"column":8,"endLine":261,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playCore","argumentNames":["this","volume","loop"]}

function music_Melody_playCore__P4223_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_playCore__P4223, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  p___9125: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function music_Melody_playCore_inline__P9135(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

  case 1:
    r0 = s.caps[0].fields["_player"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_2 = music_MelodyPlayer_play__P1627_mk(s);
    s.tmp_2.arg0 = s.caps[1];
    s.tmp_2.arg1 = s.caps[2];
    s.callLocIdx = 87; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.caps[3]);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    r0 = s.caps[0].fields["_player"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == s.caps[1]);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.tmp_4 = music_Melody_unregisterMelody__P4222_mk(s);
    s.tmp_4.arg0 = s.caps[0];
    s.callLocIdx = 88; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
  case 2:
  case 3:
    { step = 6; continue; }
  case 4:
  case 5:
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_playCore_inline__P9135.info = {"start":7885,"length":601,"line":246,"column":34,"endLine":260,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function music_Melody_playCore_inline__P9135_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_playCore_inline__P9135, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function music_Melody_unregisterMelody__P4222(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1612_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(globals.music_Melody_playingMelodies___4224);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array_.removeElement(globals.music_Melody_playingMelodies___4224, s.arg0);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_unregisterMelody__P4222.info = {"start":7471,"length":201,"line":235,"column":8,"endLine":240,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"unregisterMelody","argumentNames":["this"]}

function music_Melody_unregisterMelody__P4222_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_unregisterMelody__P4222, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_Melody_registerMelody__P4221(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1612_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(globals.music_Melody_playingMelodies___4224);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals.music_Melody_playingMelodies___4224 = (r0);
  case 1:
  case 2:
    r0 = pxsim_Array__length(globals.music_Melody_playingMelodies___4224);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = music_Melody_stop__P1617_mk(s);
    s.tmp_3 = r0 = globals.music_Melody_playingMelodies___4224;
    r0 = pxsim_Array__length(globals.music_Melody_playingMelodies___4224);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 83; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = pxsim_Array_.removeElement(globals.music_Melody_playingMelodies___4224, s.arg0);
    r0 = pxsim_Array__push(globals.music_Melody_playingMelodies___4224, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_registerMelody__P4221.info = {"start":6889,"length":573,"line":223,"column":8,"endLine":234,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"registerMelody","argumentNames":["this"]}

function music_Melody_registerMelody__P4221_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_registerMelody__P4221, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function music_MelodyPlayer_play__P1627(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.notes___9168 = undefined;
    s.pos___9172 = undefined;
    s.duration___9173 = undefined;
    s.octave___9174 = undefined;
    s.tempo___9175 = undefined;
    s.hz___9176 = undefined;
    s.endHz___9177 = undefined;
    s.ms___9180 = undefined;
    s.timePos___9181 = undefined;
    s.startTime___9182 = undefined;
    s.now___9185 = undefined;
    s.envA___9186 = undefined;
    s.envD___9187 = undefined;
    s.envS___9188 = undefined;
    s.envR___9189 = undefined;
    s.soundWave___9190 = undefined;
    s.sndInstr___9191 = undefined;
    s.sndInstrPtr___9197 = undefined;
    s.addForm___9198 = undefined;
    s.scanNextWord___9258 = undefined;
    s.token___9315 = undefined;
    s.tokenKind___9316 = undefined;
    s.consumeToken___9319 = undefined;
    s.currNote___9395 = undefined;
    s.prevNote___9397 = undefined;
    s.timeLeft___9400 = undefined;
    s.note___9414 = undefined;
    s.i___9418 = undefined;
    s.noteChar___9424 = undefined;
    s.keyNumber___9498 = undefined;
    s.currMs___9515 = undefined;
    s.beat___9519 = undefined;
    s.timeLeft___9576 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayer__C1622_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    r0 = s.arg0.fields["melody"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    { step = 59; continue; }
  case 1:
  case 2:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = Math_clamp__P127_mk(s);
    s.tmp_6.arg0 = 0;
    s.tmp_6.arg1 = 255;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_8 = r0;
    s.tmp_10 = music_volume__P1607_mk(s);
    s.callLocIdx = 90; s.pc = 61; return s.tmp_10;
  case 61:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_8 * s.tmp_9);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 >> 8);
    s.tmp_6.arg2 = r0;
    s.callLocIdx = 91; s.pc = 60; return s.tmp_6;
  case 60:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_4, s.tmp_5);
    r0 = s.arg0.fields["melody"];
    r0 = r0.fields["_text"];
    s.notes___9168 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.pos___9172 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.pos___9172, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.duration___9173 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.duration___9173, 4);
    r0 = pxsim_pxtrt.mklocRef();
    s.octave___9174 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.octave___9174, 4);
    r0 = pxsim_pxtrt.mklocRef();
    s.tempo___9175 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.tempo___9175, 120);
    r0 = pxsim_pxtrt.mklocRef();
    s.hz___9176 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.hz___9176, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.endHz___9177 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.endHz___9177, -1);
    r0 = pxsim_pxtrt.mklocRef();
    s.ms___9180 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.ms___9180, 0);
    s.timePos___9181 = (0);
    r0 = pxsim.control.millis();
    s.startTime___9182 = (r0);
    s.now___9185 = (0);
    r0 = pxsim_pxtrt.mklocRef();
    s.envA___9186 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.envA___9186, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.envD___9187 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.envD___9187, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.envS___9188 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.envS___9188, 255);
    r0 = pxsim_pxtrt.mklocRef();
    s.envR___9189 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.envR___9189, 0);
    r0 = pxsim_pxtrt.mklocRef();
    s.soundWave___9190 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.soundWave___9190, 1);
    r0 = pxsim.control.createBuffer(60);
    s.sndInstr___9191 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.sndInstrPtr___9197 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.sndInstrPtr___9197, 0);
    r0 = pxsim_pxtcore_mkAction(10, addForm_inline__P9199);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.hz___9176);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.endHz___9177);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.ms___9180);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.duration___9173);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.tempo___9175);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.envR___9189);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 6, s.sndInstrPtr___9197);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 7, s.sndInstr___9191);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 8, s.soundWave___9190);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 9, s.arg1);
    s.addForm___9198 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkAction(3, scanNextWord_inline__P9259);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.pos___9172);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.notes___9168);
    s.scanNextWord___9258 = (s.tmp_0);
    r0 = pxsim_pxtrt.mklocRef();
    s.token___9315 = (r0);
    s.tmp_0 = r0 = s.token___9315;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt.mklocRef();
    s.tokenKind___9316 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 0);
    r0 = pxsim_pxtcore_mkAction(13, consumeToken_inline__P9320);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.token___9315);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.tokenKind___9316);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.octave___9174);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.duration___9173);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.ms___9180);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.tempo___9175);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 6, s.hz___9176);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 7, s.soundWave___9190);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 8, s.envA___9186);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 9, s.envD___9187);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 10, s.envS___9188);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 11, s.envR___9189);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 12, s.endHz___9177);
    s.consumeToken___9319 = (s.tmp_0);
  case 3:
    r0 = pxsim_numops_toBoolDecr(true);
    if (!r0) { step = 58; continue; }
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.scanNextWord___9258;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 99; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
    s.currNote___9395 = (r0);
    s.prevNote___9397 = (false);
    r0 = pxsim_numops_toBoolDecr(s.currNote___9395);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    r0 = (s.timePos___9181 - s.now___9185);
    s.timeLeft___9400 = (r0);
    r0 = (s.timeLeft___9400 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_1 = pause__P413_mk(s);
    s.tmp_1.arg0 = s.timeLeft___9400;
    s.callLocIdx = 100; s.pc = 63; return s.tmp_1;
  case 63:
    r0 = s.retval;
  case 4:
  case 5:
    r0 = s.arg0.fields["onPlayFinished"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_1 = if_onPlayFinished_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "onPlayFinished"), 1);
      s.callLocIdx = 101; s.pc = 64; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["onPlayFinished"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["onPlayFinished"], 1); s.callLocIdx = 101; s.pc = 64; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 101; s.pc = 64; return s.tmp_1;; }
     else { s.callLocIdx = 101; s.pc = 64; return s.tmp_1; }
    }
  case 64:
    r0 = s.retval;
  case 6:
  case 7:
    { step = 59; continue; }
  case 8:
  case 9:
    r0 = pxsim_pxtrt_stlocRef(s.hz___9176, -1);
    s.note___9414 = (0);
    s.tmp_0 = r0 = s.token___9315;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 0);
    s.i___9418 = (0);
  case 10:
    s.tmp_1 = r0 = s.i___9418;
    r0 = pxsim_String_.length(s.currNote___9395);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 41; continue; }
    r0 = pxsim_String_.charAt(s.currNote___9395, s.i___9418);
    s.noteChar___9424 = (r0);
    s.tmp_0 = r0 = s.noteChar___9424;
    r0 = pxsim_pxtcore.switch_eq("c", s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq("C", s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq("d", s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = pxsim_pxtcore.switch_eq("D", s.tmp_0);
    if (r0) { step = 14; continue; }
    r0 = pxsim_pxtcore.switch_eq("e", s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq("E", s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = pxsim_pxtcore.switch_eq("f", s.tmp_0);
    if (r0) { step = 17; continue; }
    r0 = pxsim_pxtcore.switch_eq("F", s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = pxsim_pxtcore.switch_eq("g", s.tmp_0);
    if (r0) { step = 19; continue; }
    r0 = pxsim_pxtcore.switch_eq("G", s.tmp_0);
    if (r0) { step = 20; continue; }
    r0 = pxsim_pxtcore.switch_eq("a", s.tmp_0);
    if (r0) { step = 21; continue; }
    r0 = pxsim_pxtcore.switch_eq("A", s.tmp_0);
    if (r0) { step = 22; continue; }
    r0 = pxsim_pxtcore.switch_eq("B", s.tmp_0);
    if (r0) { step = 23; continue; }
    r0 = pxsim_pxtcore.switch_eq("r", s.tmp_0);
    if (r0) { step = 24; continue; }
    r0 = pxsim_pxtcore.switch_eq("R", s.tmp_0);
    if (r0) { step = 25; continue; }
    r0 = pxsim_pxtcore.switch_eq("#", s.tmp_0);
    if (r0) { step = 26; continue; }
    r0 = pxsim_pxtcore.switch_eq("b", s.tmp_0);
    if (r0) { step = 27; continue; }
    r0 = pxsim_pxtcore.switch_eq(",", s.tmp_0);
    if (r0) { step = 30; continue; }
    r0 = pxsim_pxtcore.switch_eq("!", s.tmp_0);
    if (r0) { step = 31; continue; }
    r0 = pxsim_pxtcore.switch_eq("@", s.tmp_0);
    if (r0) { step = 32; continue; }
    r0 = pxsim_pxtcore.switch_eq("~", s.tmp_0);
    if (r0) { step = 33; continue; }
    r0 = pxsim_pxtcore.switch_eq(":", s.tmp_0);
    if (r0) { step = 34; continue; }
    r0 = pxsim_pxtcore.switch_eq("-", s.tmp_0);
    if (r0) { step = 35; continue; }
    r0 = pxsim_pxtcore.switch_eq("^", s.tmp_0);
    if (r0) { step = 36; continue; }
    r0 = s.tmp_0;
    { step = 37; continue; }
  case 11:
  case 12:
    s.note___9414 = (1);
    s.prevNote___9397 = (true);
    { step = 40; continue; }
  case 13:
  case 14:
    s.note___9414 = (3);
    s.prevNote___9397 = (true);
    { step = 40; continue; }
  case 15:
  case 16:
    s.note___9414 = (5);
    s.prevNote___9397 = (true);
    { step = 40; continue; }
  case 17:
  case 18:
    s.note___9414 = (6);
    s.prevNote___9397 = (true);
    { step = 40; continue; }
  case 19:
  case 20:
    s.note___9414 = (8);
    s.prevNote___9397 = (true);
    { step = 40; continue; }
  case 21:
  case 22:
    s.note___9414 = (10);
    s.prevNote___9397 = (true);
    { step = 40; continue; }
  case 23:
    s.note___9414 = (12);
    s.prevNote___9397 = (true);
    { step = 40; continue; }
  case 24:
  case 25:
    r0 = pxsim_pxtrt_stlocRef(s.hz___9176, 0);
    s.prevNote___9397 = (false);
    { step = 40; continue; }
  case 26:
    r0 = (s.note___9414 + 1);
    s.note___9414 = (r0);
    s.prevNote___9397 = (false);
    { step = 40; continue; }
  case 27:
    r0 = pxsim_numops_toBoolDecr(s.prevNote___9397);
    if (!r0) { step = 28; continue; }
    r0 = (s.note___9414 - 1);
    s.note___9414 = (r0);
    { step = 29; continue; }
  case 28:
    s.note___9414 = (12);
    s.prevNote___9397 = (true);
  case 29:
    { step = 40; continue; }
  case 30:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___9319;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 102; s.pc = 65; return s.tmp_0;
  case 65:
    r0 = s.retval;
    s.prevNote___9397 = (false);
    { step = 40; continue; }
  case 31:
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 4);
    s.prevNote___9397 = (false);
    { step = 40; continue; }
  case 32:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___9319;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 103; s.pc = 66; return s.tmp_0;
  case 66:
    r0 = s.retval;
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 8);
    s.prevNote___9397 = (false);
    { step = 40; continue; }
  case 33:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___9319;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 104; s.pc = 67; return s.tmp_0;
  case 67:
    r0 = s.retval;
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 7);
    s.prevNote___9397 = (false);
    { step = 40; continue; }
  case 34:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___9319;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 105; s.pc = 68; return s.tmp_0;
  case 68:
    r0 = s.retval;
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 2);
    s.prevNote___9397 = (false);
    { step = 40; continue; }
  case 35:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___9319;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 106; s.pc = 69; return s.tmp_0;
  case 69:
    r0 = s.retval;
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 3);
    s.prevNote___9397 = (false);
    { step = 40; continue; }
  case 36:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___9319;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 107; s.pc = 70; return s.tmp_0;
  case 70:
    r0 = s.retval;
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 5);
    { step = 40; continue; }
  case 37:
    r0 = pxsim_pxtrt_ldlocRef(s.tokenKind___9316);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 38; continue; }
    r0 = pxsim_pxtrt_stlocRef(s.tokenKind___9316, 1);
  case 38:
  case 39:
    s.tmp_0 = r0 = s.token___9315;
    r0 = pxsim_pxtrt_ldlocRef(s.token___9315);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 71);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 71:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.noteChar___9424) && (s.noteChar___9424).vtable) {
    setupResume(s, 72);
    pxsim_String__stringConv(s.noteChar___9424);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.noteChar___9424) + ""; }
  case 72:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_4);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    s.prevNote___9397 = (false);
  case 40:
    r0 = (s.i___9418 + 1);
    s.i___9418 = (r0);
    { step = 10; continue; }
  case 41:
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.consumeToken___9319;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 108; s.pc = 73; return s.tmp_0;
  case 73:
    r0 = s.retval;
    s.tmp_0 = r0 = s.note___9414;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 42; continue; }
    r0 = s.tmp_0;
    { step = 43; continue; }
  case 42:
    r0 = pxsim_pxtrt_ldlocRef(s.hz___9176);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
  case 43:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 46; continue; }
    s.tmp_3 = r0 = s.note___9414;
    r0 = pxsim_pxtrt_ldlocRef(s.octave___9174);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 - 1);
    s.tmp_5 = r0;
    r0 = (12 * s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.keyNumber___9498 = (r0);
    s.tmp_1 = r0 = globals.freqs___4209;
    r0 = (s.keyNumber___9498 * 2);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.getNumber(s.tmp_1, 4, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 44; continue; }
    r0 = s.tmp_0;
    { step = 45; continue; }
  case 44:
    r0 = 0;
  case 45:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.hz___9176, s.tmp_3);
  case 46:
  case 47:
    r0 = pxsim_pxtrt_ldlocRef(s.ms___9180);
    s.currMs___9515 = (r0);
    r0 = (s.currMs___9515 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 48; continue; }
    r0 = pxsim_pxtrt_ldlocRef(s.tempo___9175);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(15000, s.tmp_1);
    s.beat___9519 = (r0);
    r0 = pxsim_pxtrt_ldlocRef(s.duration___9173);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * s.beat___9519);
    s.currMs___9515 = (r0);
  case 48:
  case 49:
    r0 = pxsim_pxtrt_ldlocRef(s.hz___9176);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 50; continue; }
    { step = 55; continue; }
  case 50:
    r0 = pxsim_pxtrt_ldlocRef(s.hz___9176);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 51; continue; }
    r0 = (s.timePos___9181 + s.currMs___9515);
    s.timePos___9181 = (r0);
    { step = 54; continue; }
  case 51:
    r0 = pxsim_pxtrt_ldlocRef(s.endHz___9177);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 52; continue; }
    s.tmp_2 = r0 = s.endHz___9177;
    r0 = pxsim_pxtrt_ldlocRef(s.hz___9176);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_2, s.tmp_3);
  case 52:
  case 53:
    r0 = pxsim_pxtrt_stlocRef(s.sndInstrPtr___9197, 0);
    s.tmp_0 = lambda_5_mk(s);
    s.tmp_0.argL = s.addForm___9198;
    r0 = pxsim_pxtrt_ldlocRef(s.envA___9186);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = 255;
    s.tmp_0.arg3 = 0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 109; s.pc = 74; return s.tmp_0;
  case 74:
    r0 = s.retval;
    s.tmp_0 = lambda_5_mk(s);
    s.tmp_0.argL = s.addForm___9198;
    r0 = pxsim_pxtrt_ldlocRef(s.envD___9187);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 255;
    r0 = pxsim_pxtrt_ldlocRef(s.envS___9188);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envA___9186);
    s.tmp_0.arg3 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 110; s.pc = 75; return s.tmp_0;
  case 75:
    r0 = s.retval;
    s.tmp_0 = lambda_5_mk(s);
    s.tmp_0.argL = s.addForm___9198;
    s.tmp_1 = r0 = s.currMs___9515;
    r0 = pxsim_pxtrt_ldlocRef(s.envA___9186);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envD___9187);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envS___9188);
    s.tmp_0.arg1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envS___9188);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envD___9187);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envA___9186);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_0.arg3 = r0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 111; s.pc = 76; return s.tmp_0;
  case 76:
    r0 = s.retval;
    s.tmp_0 = lambda_5_mk(s);
    s.tmp_0.argL = s.addForm___9198;
    r0 = pxsim_pxtrt_ldlocRef(s.envR___9189);
    s.tmp_0.arg0 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.envS___9188);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 0;
    s.tmp_0.arg3 = s.currMs___9515;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 112; s.pc = 77; return s.tmp_0;
  case 77:
    r0 = s.retval;
    s.tmp_0 = music_MelodyPlayer_queuePlayInstructions__P4226_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.timePos___9181 - s.now___9185);
    s.tmp_0.arg1 = r0;
    s.tmp_1 = r0 = s.sndInstr___9191;
    r0 = pxsim_pxtrt_ldlocRef(s.sndInstrPtr___9197);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.slice(s.tmp_1, 0, s.tmp_2);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 113; s.pc = 78; return s.tmp_0;
  case 78:
    r0 = s.retval;
    r0 = pxsim_pxtrt_stlocRef(s.endHz___9177, -1);
    r0 = (s.timePos___9181 + s.currMs___9515);
    s.timePos___9181 = (r0);
  case 54:
  case 55:
    r0 = (s.timePos___9181 - s.now___9185);
    s.timeLeft___9576 = (r0);
    r0 = (s.timeLeft___9576 > 200);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 56; continue; }
    s.tmp_1 = pause__P413_mk(s);
    r0 = (s.timeLeft___9576 - 100);
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 114; s.pc = 79; return s.tmp_1;
  case 79:
    r0 = s.retval;
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.startTime___9182);
    s.now___9185 = (r0);
  case 56:
  case 57:
    { step = 3; continue; }
  case 58:
  case 59:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayer_play__P1627.info = {"start":11361,"length":9259,"line":348,"column":8,"endLine":582,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"play","argumentNames":["this","volume"]}

function music_MelodyPlayer_play__P1627_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayer_play__P1627, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  notes___9168: undefined,
  pos___9172: undefined,
  duration___9173: undefined,
  octave___9174: undefined,
  tempo___9175: undefined,
  hz___9176: undefined,
  endHz___9177: undefined,
  ms___9180: undefined,
  timePos___9181: undefined,
  startTime___9182: undefined,
  now___9185: undefined,
  envA___9186: undefined,
  envD___9187: undefined,
  envS___9188: undefined,
  envR___9189: undefined,
  soundWave___9190: undefined,
  sndInstr___9191: undefined,
  sndInstrPtr___9197: undefined,
  addForm___9198: undefined,
  scanNextWord___9258: undefined,
  token___9315: undefined,
  tokenKind___9316: undefined,
  consumeToken___9319: undefined,
  currNote___9395: undefined,
  prevNote___9397: undefined,
  timeLeft___9400: undefined,
  note___9414: undefined,
  i___9418: undefined,
  noteChar___9424: undefined,
  keyNumber___9498: undefined,
  currMs___9515: undefined,
  beat___9519: undefined,
  timeLeft___9576: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function addForm_inline__P9199(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.freqStart___9204 = undefined;
    s.freqEnd___9206 = undefined;
    s.envelopeWidth___9208 = undefined;
    s.slope___9226 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.freqStart___9204 = (r0);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.freqEnd___9206 = (r0);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtrt_ldlocRef(s.caps[2]);
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[3]);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[4]);
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(15000, s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 * s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[5]);
    s.tmp_6 = r0;
    r0 = (s.tmp_2 + s.tmp_6);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.envelopeWidth___9208 = (s.tmp_7);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = (s.envelopeWidth___9208 != 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = (s.freqEnd___9206 - s.freqStart___9204);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / s.envelopeWidth___9208);
    s.slope___9226 = (r0);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0 = r0;
    r0 = (s.slope___9226 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.freqStart___9204 = (r0);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0 = r0;
    s.tmp_2 = r0 = s.slope___9226;
    r0 = (s.arg3 + s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    s.freqEnd___9206 = (r0);
  case 5:
  case 6:
    s.tmp_0 = r0 = s.caps[6];
    s.tmp_2 = music_addNote__P4225_mk(s);
    s.tmp_2.arg0 = s.caps[7];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[6]);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.arg0;
    s.tmp_2.arg3 = s.arg1;
    s.tmp_2.arg4 = s.arg2;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[8]);
    s.tmp_2.arg5 = r0;
    s.tmp_2.arg6 = s.freqStart___9204;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[9]);
    s.tmp_2.arg7 = r0;
    s.tmp_2.arg8 = s.freqEnd___9206;
    s.callLocIdx = 92; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
addForm_inline__P9199.info = {"start":12169,"length":643,"line":374,"column":28,"endLine":385,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":["formDuration","beg","end","msOff"]}

function addForm_inline__P9199_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: addForm_inline__P9199, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  freqStart___9204: undefined,
  freqEnd___9206: undefined,
  envelopeWidth___9208: undefined,
  slope___9226: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scanNextWord_inline__P9259(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.c___9268 = undefined;
    s.note___9285 = undefined;
    s.c___9291 = undefined;
    r0 = s.caps[0].fields["melody"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_String_.mkEmpty();
    { step = 23; continue; }
  case 1:
  case 2:
  case 3:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_String_.length(s.caps[2]);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 < s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.tmp_6 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_7 = r0;
    r0 = pxsim_String_.charAt(s.tmp_6, s.tmp_7);
    s.c___9268 = (r0);
    r0 = (s.c___9268 != " ");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = (s.c___9268 != "\r");
  case 5:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = (s.c___9268 != "\n");
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 8; continue; }
    r0 = s.tmp_2;
    { step = 9; continue; }
  case 8:
    r0 = (s.c___9268 != "\t");
  case 9:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 10; continue; }
    { step = 12; continue; }
  case 10:
  case 11:
    s.tmp_4 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 1);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_4, s.tmp_5);
    { step = 3; continue; }
  case 12:
    r0 = pxsim_String_.mkEmpty();
    s.note___9285 = (r0);
  case 13:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = pxsim_String_.length(s.caps[2]);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    s.tmp_3 = r0 = s.caps[2];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_String_.charAt(s.tmp_3, s.tmp_4);
    s.c___9291 = (r0);
    r0 = (s.c___9291 == " ");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = s.tmp_0;
    { step = 15; continue; }
  case 14:
    r0 = (s.c___9291 == "\r");
  case 15:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (!r0) { step = 16; continue; }
    r0 = s.tmp_1;
    { step = 17; continue; }
  case 16:
    r0 = (s.c___9291 == "\n");
  case 17:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_2;
    { step = 19; continue; }
  case 18:
    r0 = (s.c___9291 == "\t");
  case 19:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 20; continue; }
    { step = 22; continue; }
  case 20:
  case 21:
    if ((s.note___9285) && (s.note___9285).vtable) {
    setupResume(s, 24);
    pxsim_String__stringConv(s.note___9285);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.note___9285) + ""; }
  case 24:
    r0 = s.retval;
    s.tmp_4 = r0;
    if ((s.c___9291) && (s.c___9291).vtable) {
    setupResume(s, 25);
    pxsim_String__stringConv(s.c___9291);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.c___9291) + ""; }
  case 25:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.note___9285 = (r0);
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 13; continue; }
  case 22:
    r0 = s.note___9285;
  case 23:
    return leave(s, r0)
  default: oops()
} } }
scanNextWord_inline__P9259.info = {"start":12847,"length":708,"line":387,"column":33,"endLine":409,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function scanNextWord_inline__P9259_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scanNextWord_inline__P9259, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  c___9268: undefined,
  note___9285: undefined,
  c___9291: undefined,
} }





function consumeToken_inline__P9320(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.d___9326 = undefined;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 15; continue; }
    s.tmp_3 = parseInt__P97_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = undefined;
    s.callLocIdx = 93; s.pc = 17; return s.tmp_3;
  case 17:
    r0 = s.retval;
    s.d___9326 = (r0);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(6, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(7, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(8, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 11; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 12; continue; }
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 13; continue; }
    r0 = s.tmp_0;
    { step = 14; continue; }
  case 3:
    r0 = pxsim_pxtrt_stlocRef(s.caps[2], s.d___9326);
    { step = 14; continue; }
  case 4:
    s.tmp_0 = r0 = s.caps[3];
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_3 = Math_min__P131_mk(s);
    s.tmp_3.arg0 = 16;
    s.tmp_3.arg1 = s.d___9326;
    s.callLocIdx = 94; s.pc = 19; return s.tmp_3;
  case 19:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 95; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt_stlocRef(s.caps[4], -1);
    { step = 14; continue; }
  case 5:
    s.tmp_0 = r0 = s.caps[5];
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = s.d___9326;
    s.callLocIdx = 96; s.pc = 20; return s.tmp_2;
  case 20:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 14; continue; }
  case 6:
    r0 = pxsim_pxtrt_stlocRef(s.caps[6], s.d___9326);
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], 6);
    { step = 14; continue; }
  case 7:
    r0 = pxsim_pxtrt_stlocRef(s.caps[4], s.d___9326);
    { step = 14; continue; }
  case 8:
    s.tmp_0 = r0 = s.caps[7];
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = 18;
    s.tmp_2.arg2 = s.d___9326;
    s.callLocIdx = 97; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    { step = 14; continue; }
  case 9:
    r0 = pxsim_pxtrt_stlocRef(s.caps[8], s.d___9326);
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], 9);
    { step = 14; continue; }
  case 10:
    r0 = pxsim_pxtrt_stlocRef(s.caps[9], s.d___9326);
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], 10);
    { step = 14; continue; }
  case 11:
    s.tmp_0 = r0 = s.caps[10];
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = 0;
    s.tmp_2.arg1 = 255;
    s.tmp_2.arg2 = s.d___9326;
    s.callLocIdx = 98; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], 11);
    { step = 14; continue; }
  case 12:
    r0 = pxsim_pxtrt_stlocRef(s.caps[11], s.d___9326);
    { step = 14; continue; }
  case 13:
    r0 = pxsim_pxtrt_stlocRef(s.caps[12], s.d___9326);
  case 14:
    s.tmp_0 = r0 = s.caps[0];
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
  case 15:
  case 16:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
consumeToken_inline__P9320.info = {"start":14841,"length":1189,"line":448,"column":33,"endLine":469,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function consumeToken_inline__P9320_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: consumeToken_inline__P9320, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  d___9326: undefined,
} }





function music_MelodyPlayer_queuePlayInstructions__P4226(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayer__C1622_VT)) failedCast(r0);
    r0 = pxsim.music.queuePlayInstructions(s.arg1, s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayer_queuePlayInstructions__P4226.info = {"start":11226,"length":125,"line":344,"column":8,"endLine":346,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"queuePlayInstructions","argumentNames":["this","timeDelta","buf"]}

function music_MelodyPlayer_queuePlayInstructions__P4226_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayer_queuePlayInstructions__P4226, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function music_addNote__P4225(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, s.arg5);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 1);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 2, s.tmp_1, 0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 2);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg6);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 4);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg2);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 6);
    s.tmp_1 = r0;
    r0 = (s.arg3 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.arg4 * s.arg7);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 6);
    s.tmp_2 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.tmp_2);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 10);
    s.tmp_1 = r0;
    r0 = pxsim.BufferMethods.setNumber(s.tmp_0, 4, s.tmp_1, s.arg8);
    r0 = (s.arg1 + 12);
    s.arg1 = (r0);
  case 1:
  case 2:
    r0 = pxsim.BufferMethods.setNumber(s.arg0, 2, s.arg1, 0);
    r0 = s.arg1;
    return leave(s, r0)
  default: oops()
} } }
music_addNote__P4225.info = {"start":10086,"length":904,"line":315,"column":4,"endLine":328,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"addNote","argumentNames":["sndInstr","sndInstrPtr","ms","beg","end","soundWave","hz","volume","endHz"]}

function music_addNote__P4225_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_addNote__P4225, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
} }





function music_volume__P1607(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = music_initVolume__P4217_mk(s);
    s.callLocIdx = 72; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = globals.globalVolume___4213;
    return leave(s, r0)
  default: oops()
} } }
music_volume__P1607.info = {"start":1781,"length":90,"line":61,"column":4,"endLine":64,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"volume","argumentNames":[]}

function music_volume__P1607_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_volume__P1607, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function music_initVolume__P4217(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = (globals.globalVolume___4213 === null);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    globals.globalVolume___4213 = (0);
    s.tmp_0 = music_setVolume__P1606_mk(s);
    r0 = pxsim_pxtcore.getConfig(59, 128);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 69; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_initVolume__P4217.info = {"start":1014,"length":180,"line":33,"column":4,"endLine":38,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"initVolume","argumentNames":[]}

function music_initVolume__P4217_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_initVolume__P4217, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function music_setVolume__P1606(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    s.tmp_0.arg1 = 255;
    r0 = (s.arg0 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 70; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    globals.globalVolume___4213 = (r0);
    r0 = (globals.globalVolume___4213 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = undefined;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_setVolume__P1606.info = {"start":1533,"length":153,"line":51,"column":4,"endLine":54,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"setVolume","argumentNames":["volume"]}

function music_setVolume__P1606_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_setVolume__P1606, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function music_enableAmp__P4216(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_enableAmp__P4216.info = {"start":944,"length":64,"line":29,"column":4,"endLine":31,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"enableAmp","argumentNames":["en"]}

function music_enableAmp__P4216_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_enableAmp__P4216, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function parseInt__P97(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.start___9613 = undefined;
    s.sign___9643 = undefined;
    s.output___9688 = undefined;
    s.hasDigit___9689 = undefined;
    s.i___9690 = undefined;
    s.code___9697 = undefined;
    s.val___9704 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    r0 = (s.arg1 != null);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 5; continue; }
  case 2:
    r0 = (s.arg1 < 2);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg1 > 36);
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 5:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
  case 6:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 7; continue; }
    r0 = NaN;
    { step = 46; continue; }
  case 7:
  case 8:
    s.start___9613 = (0);
  case 9:
    s.tmp_1 = r0 = s.start___9613;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_3 = helpers_isWhitespace__P124_mk(s);
    r0 = pxsim_String_.charCodeAt(s.arg0, s.start___9613);
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 0; s.pc = 47; return s.tmp_3;
  case 47:
    r0 = s.retval;
  case 11:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 12; continue; }
    r0 = (s.start___9613 + 1);
    s.start___9613 = (r0);
    { step = 9; continue; }
  case 12:
    s.tmp_1 = r0 = s.start___9613;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = NaN;
    { step = 46; continue; }
  case 13:
  case 14:
    s.sign___9643 = (1);
    r0 = pxsim_String_.charAt(s.arg0, s.start___9613);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq("-", s.tmp_0);
    if (r0) { step = 15; continue; }
    r0 = pxsim_pxtcore.switch_eq("+", s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 15:
    s.sign___9643 = (-1);
  case 16:
    r0 = (s.start___9613 + 1);
    s.start___9613 = (r0);
  case 17:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = (s.arg1 == 16);
  case 19:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 20; continue; }
    r0 = s.tmp_2;
    { step = 21; continue; }
  case 20:
    r0 = pxsim_String_.charAt(s.arg0, s.start___9613);
    s.tmp_3 = r0;
    r0 = ("0" === s.tmp_3);
  case 21:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 22; continue; }
    r0 = s.tmp_4;
    { step = 25; continue; }
  case 22:
    s.tmp_7 = r0 = s.arg0;
    r0 = (s.start___9613 + 1);
    s.tmp_8 = r0;
    r0 = pxsim_String_.charAt(s.tmp_7, s.tmp_8);
    s.tmp_6 = r0;
    r0 = ("x" === s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (!r0) { step = 23; continue; }
    r0 = s.tmp_5;
    { step = 24; continue; }
  case 23:
    s.tmp_10 = r0 = s.arg0;
    r0 = (s.start___9613 + 1);
    s.tmp_11 = r0;
    r0 = pxsim_String_.charAt(s.tmp_10, s.tmp_11);
    s.tmp_9 = r0;
    r0 = ("X" === s.tmp_9);
  case 24:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = s.tmp_12;
  case 25:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_13);
    if (!r0) { step = 26; continue; }
    s.arg1 = (16);
    r0 = (s.start___9613 + 2);
    s.start___9613 = (r0);
    { step = 29; continue; }
  case 26:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    s.arg1 = (10);
  case 27:
  case 28:
  case 29:
    s.output___9688 = (0);
    s.hasDigit___9689 = (false);
    s.i___9690 = (s.start___9613);
  case 30:
    s.tmp_1 = r0 = s.i___9690;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 45; continue; }
    r0 = pxsim_String_.charCodeAt(s.arg0, s.i___9690);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 32);
    s.code___9697 = (r0);
    s.val___9704 = (undefined);
    r0 = (s.code___9697 >= 48);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 31; continue; }
    r0 = s.tmp_0;
    { step = 32; continue; }
  case 31:
    r0 = (s.code___9697 < 58);
  case 32:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 33; continue; }
    r0 = (s.code___9697 - 48);
    s.val___9704 = (r0);
    { step = 38; continue; }
  case 33:
    r0 = (s.code___9697 >= 97);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 34; continue; }
    r0 = s.tmp_0;
    { step = 35; continue; }
  case 34:
    r0 = (s.code___9697 < 123);
  case 35:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 36; continue; }
    r0 = (10 + s.code___9697);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 97);
    s.val___9704 = (r0);
  case 36:
  case 37:
  case 38:
    r0 = (s.val___9704 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = s.tmp_0;
    { step = 40; continue; }
  case 39:
    r0 = (s.val___9704 >= s.arg1);
  case 40:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 43; continue; }
    r0 = pxsim_numops_toBoolDecr(s.hasDigit___9689);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 41; continue; }
    r0 = NaN;
    { step = 46; continue; }
  case 41:
  case 42:
    { step = 45; continue; }
  case 43:
  case 44:
    s.hasDigit___9689 = (true);
    r0 = (s.output___9688 * s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.val___9704);
    s.output___9688 = (r0);
    r0 = (s.i___9690 + 1);
    s.i___9690 = (r0);
    { step = 30; continue; }
  case 45:
    r0 = (s.sign___9643 * s.output___9688);
  case 46:
    return leave(s, r0)
  default: oops()
} } }
parseInt__P97.info = {"start":1064,"length":1690,"line":44,"column":0,"endLine":103,"endColumn":1,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"parseInt","argumentNames":["text","radix"]}

function parseInt__P97_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: parseInt__P97, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  start___9613: undefined,
  sign___9643: undefined,
  output___9688: undefined,
  hasDigit___9689: undefined,
  i___9690: undefined,
  code___9697: undefined,
  val___9704: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_isWhitespace__P124(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtcore.switch_eq(9, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(11, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(12, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(32, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(160, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = pxsim_pxtcore.switch_eq(65279, s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = pxsim_pxtcore.switch_eq(10, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = pxsim_pxtcore.switch_eq(13, s.tmp_0);
    if (r0) { step = 8; continue; }
    r0 = pxsim_pxtcore.switch_eq(8232, s.tmp_0);
    if (r0) { step = 9; continue; }
    r0 = pxsim_pxtcore.switch_eq(8233, s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 1:
  case 2:
  case 3:
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
  case 9:
  case 10:
    r0 = true;
    { step = 12; continue; }
  case 11:
    r0 = false;
    { step = 12; continue; }
    r0 = undefined;
  case 12:
    return leave(s, r0)
  default: oops()
} } }
helpers_isWhitespace__P124.info = {"start":14864,"length":674,"line":503,"column":4,"endLine":520,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"isWhitespace","argumentNames":["c"]}

function helpers_isWhitespace__P124_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_isWhitespace__P124, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_MelodyPlayer_constructor__P1625(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayer__C1622_VT)) failedCast(r0);
    r0 = (s.arg0).fields["melody"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayer_constructor__P1625.info = {"start":11095,"length":62,"line":336,"column":8,"endLine":338,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":["this","m"]}

function music_MelodyPlayer_constructor__P1625_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayer_constructor__P1625, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function music_Melody_stop__P1617(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1612_VT)) failedCast(r0);
    r0 = s.arg0.fields["_player"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = music_MelodyPlayer_stop__P1626_mk(s);
    r0 = s.arg0.fields["_player"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 81; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["_player"] = (null);
  case 1:
  case 2:
    s.tmp_0 = music_Melody_unregisterMelody__P4222_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 82; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_Melody_stop__P1617.info = {"start":6706,"length":173,"line":215,"column":8,"endLine":221,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"stop","argumentNames":["this"]}

function music_Melody_stop__P1617_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_stop__P1617, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function music_MelodyPlayer_stop__P1626(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_MelodyPlayer__C1622_VT)) failedCast(r0);
    r0 = (s.arg0).fields["melody"] = (null);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_MelodyPlayer_stop__P1626.info = {"start":11167,"length":49,"line":340,"column":8,"endLine":342,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"stop","argumentNames":["this"]}

function music_MelodyPlayer_stop__P1626_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_MelodyPlayer_stop__P1626, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function setTimeout__P423(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = control_setInterval__P354_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = 1;
    s.callLocIdx = 68; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
setTimeout__P423.info = {"start":610,"length":139,"line":26,"column":0,"endLine":28,"endColumn":1,"fileName":"pxt_modules/base/scheduling.ts","functionName":"setTimeout","argumentNames":["func","delay"]}

function setTimeout__P423_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: setTimeout__P423, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function control_setInterval__P354(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.interval___14467 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 < 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = pxsim_numops_toBoolDecr(globals._intervals___4147);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_Array__mk();
    globals._intervals___4147 = (r0);
  case 5:
  case 6:
    r0 = pxsim_pxtcore_mkClassInstance(control_Interval__C4148_VT);
    s.tmp_0 = r0;
    s.tmp_1 = control_Interval_constructor__P4151_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.callLocIdx = 32; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.interval___14467 = (s.tmp_0);
    r0 = s.interval___14467.fields["id"];
  case 7:
    return leave(s, r0)
  default: oops()
} } }
control_setInterval__P354.info = {"start":1554,"length":266,"line":54,"column":4,"endLine":59,"endColumn":5,"fileName":"pxt_modules/base/interval.ts","functionName":"setInterval","argumentNames":["func","delay","mode"]}

function control_setInterval__P354_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_setInterval__P354, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  interval___14467: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function control_Interval_constructor__P4151(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C4148_VT)) failedCast(r0);
    r0 = pxsim_Array__length(globals._intervals___4147);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    s.tmp_3 = r0 = globals._intervals___4147;
    r0 = pxsim_Array__length(globals._intervals___4147);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_3, s.tmp_4);
    r0 = r0.fields["id"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = (s.arg0).fields["id"] = (s.tmp_6);
    r0 = (s.arg0).fields["func"] = (s.arg1);
    r0 = (s.arg0).fields["delay"] = (s.arg2);
    r0 = (s.arg0).fields["mode"] = (s.arg3);
    r0 = pxsim_Array__push(globals._intervals___4147, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, control_Interval_inline__P14510);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_constructor__P4151.info = {"start":283,"length":367,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"inline","argumentNames":["this","func","delay","mode"]}

function control_Interval_constructor__P4151_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_constructor__P4151, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function control_Interval_inline__P14510(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = control_Interval_work__P4149_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 27; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_inline__P14510.info = {"start":621,"length":17,"line":23,"column":34,"endLine":23,"endColumn":51,"fileName":"pxt_modules/base/interval.ts","functionName":"inline","argumentNames":[]}

function control_Interval_inline__P14510_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_inline__P14510, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function control_Interval_work__P4149(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, control_Interval__C4148_VT)) failedCast(r0);
    r0 = s.arg0.fields["mode"];
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_0);
    if (r0) { step = 7; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["delay"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = pause__P413_mk(s);
    r0 = s.arg0.fields["delay"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 28; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = if_func_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "func"), 1);
      s.callLocIdx = 29; s.pc = 14; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["func"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["func"], 1); s.callLocIdx = 29; s.pc = 14; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 29; s.pc = 14; return s.tmp_2;; }
     else { s.callLocIdx = 29; s.pc = 14; return s.tmp_2; }
    }
  case 14:
    r0 = s.retval;
  case 5:
  case 6:
    { step = 12; continue; }
  case 7:
  case 8:
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.tmp_2 = pause__P413_mk(s);
    r0 = s.arg0.fields["delay"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 30; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    r0 = s.arg0.fields["delay"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_2 = if_func_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "func"), 1);
      s.callLocIdx = 31; s.pc = 16; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["func"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["func"], 1); s.callLocIdx = 31; s.pc = 16; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 31; s.pc = 16; return s.tmp_2;; }
     else { s.callLocIdx = 31; s.pc = 16; return s.tmp_2; }
    }
  case 16:
    r0 = s.retval;
  case 9:
  case 10:
    { step = 8; continue; }
  case 11:
  case 12:
    r0 = pxsim_Array_.removeElement(globals._intervals___4147, s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control_Interval_work__P4149.info = {"start":660,"length":823,"line":26,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/base/interval.ts","functionName":"work","argumentNames":["this"]}

function control_Interval_work__P4149_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control_Interval_work__P4149, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_splash__P2687(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dialog___14561 = undefined;
    s.s___14574 = undefined;
    s.pressed___14581 = undefined;
    s.done___14582 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_inspect__P382_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 20;
    s.callLocIdx = 1113; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.arg0 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = console_inspect__P382_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 20;
    s.callLocIdx = 1114; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg1 = (s.tmp_1);
    s.tmp_0 = controller__setUserEventsEnabled__P1996_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 1115; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = game_pushScene__P2697_mk(s);
    s.callLocIdx = 1116; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1117; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_2);
    r0 = pxsim_pxtcore_mkClassInstance(game_SplashDialog__C2666_VT);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    r0 = 42;
    { step = 4; continue; }
  case 3:
    r0 = 35;
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_2 = game_SplashDialog_constructor__P2673_mk(s);
    s.tmp_2.arg0 = s.tmp_0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_2.arg1 = r0;
    s.tmp_2.arg2 = s.tmp_1;
    s.callLocIdx = 1118; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.dialog___14561 = (s.tmp_0);
    s.tmp_0 = game_SplashDialog__C2666_v1_2_mk(s);
    s.tmp_0.arg0 = s.dialog___14561;
    s.tmp_0.arg1 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, game_SplashDialog__C2666_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.setText;
    s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 5; continue; }
    s.tmp_0 = game_SplashDialog_setSubtext__P2675_mk(s);
    s.tmp_0.arg0 = s.dialog___14561;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1119; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 5:
  case 6:
    s.tmp_0 = sprites_create__P2064_mk(s);
    r0 = s.dialog___14561.fields["image"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 1120; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.s___14574 = (r0);
    r0 = pxsim_pxtrt.mklocRef();
    s.pressed___14581 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.pressed___14581, true);
    r0 = pxsim_pxtrt.mklocRef();
    s.done___14582 = (r0);
    r0 = pxsim_pxtrt_stlocRef(s.done___14582, false);
    r0 = pxsim_pxtcore_mkAction(3, game_splash_inline__P14584);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.dialog___14561);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.pressed___14581);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.done___14582);
    s.tmp_1 = game_onUpdate__P2712_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1123; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, game_splash_inline__P14607);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.done___14582);
    s.tmp_1 = pauseUntil__P367_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = undefined;
    s.callLocIdx = 1124; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0 = controller__setUserEventsEnabled__P1996_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1125; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_splash__P2687.info = {"start":19791,"length":1082,"line":630,"column":4,"endLine":661,"endColumn":5,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"splash","argumentNames":["title","subtitle"]}

function game_splash__P2687_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_splash__P2687, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  dialog___14561: undefined,
  s___14574: undefined,
  pressed___14581: undefined,
  done___14582: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_splash_inline__P14584(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currentState___14587 = undefined;
    s.tmp_0 = game_BaseDialog__C2638_v0_1_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    if (!checkSubtype(s.tmp_0.arg0, game_BaseDialog__C2638_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.update;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = controller_Button__C1979_v0_1_mk(s);
    s.tmp_0.arg0 = globals.A___1907;
    if (!checkSubtype(s.tmp_0.arg0, controller_Button__C1979_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.isPressed;
    s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    s.currentState___14587 = (r0);
    s.tmp_0 = r0 = s.currentState___14587;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], true);
    s.tmp_0 = scene_setBackgroundImage__P2620_mk(s);
    s.tmp_0.arg0 = null;
    s.callLocIdx = 1121; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    s.tmp_0 = game_popScene__P2698_mk(s);
    s.callLocIdx = 1122; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = pxsim_pxtrt_stlocRef(s.caps[2], true);
    { step = 8; continue; }
  case 3:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_0;
    { step = 5; continue; }
  case 4:
    r0 = pxsim_numops_toBoolDecr(s.currentState___14587);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 5:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_pxtrt_stlocRef(s.caps[1], false);
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_splash_inline__P14584.info = {"start":20375,"length":410,"line":645,"column":22,"endLine":657,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":[]}

function game_splash_inline__P14584_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_splash_inline__P14584, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currentState___14587: undefined,
} }





function game_splash_inline__P14607(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtrt_ldlocRef(s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
game_splash_inline__P14607.info = {"start":20807,"length":10,"line":659,"column":19,"endLine":659,"endColumn":29,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":[]}

function game_splash_inline__P14607_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_splash_inline__P14607, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_SplashDialog_setSubtext__P2675(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2666_VT)) failedCast(r0);
    r0 = (s.arg0).fields["subtext"] = (s.arg1);
    s.tmp_0 = game_SplashDialog_updateFont__P4523_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1091; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_4 = r0;
    s.tmp_6 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "charWidth");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["charWidth"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["charWidth"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1092; s.pc = 2; return s.tmp_6; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_7 = r0;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 << 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_2 + s.tmp_8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxSubOffset"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_setSubtext__P2675.info = {"start":9147,"length":200,"line":287,"column":8,"endLine":291,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setSubtext","argumentNames":["this","sub"]}

function game_SplashDialog_setSubtext__P2675_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_setSubtext__P2675, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_SplashDialog_updateFont__P4523(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2666_VT)) failedCast(r0);
    r0 = s.arg0.fields["text"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.mkEmpty();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["subtext"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_2;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_String_.mkEmpty();
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = game_BaseDialog_setFont__P4520_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_5 = image_getFontForText__P1774_mk(s);
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 8);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 8:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_6, s.tmp_7);
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 1087; s.pc = 6; return s.tmp_5;
  case 6:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1088; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_updateFont__P4523.info = {"start":8756,"length":122,"line":275,"column":8,"endLine":277,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"updateFont","argumentNames":["this"]}

function game_SplashDialog_updateFont__P4523_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_updateFont__P4523, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
} }





function game_BaseDialog_setFont__P4520(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = (s.arg0).fields["font"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_setFont__P4520.info = {"start":5393,"length":77,"line":177,"column":8,"endLine":179,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setFont","argumentNames":["this","font"]}

function game_BaseDialog_setFont__P4520_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_setFont__P4520, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function game_SplashDialog_setText__P2674(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2666_VT)) failedCast(r0);
    r0 = (s.arg0).fields["text"] = (s.arg1);
    s.tmp_0 = game_SplashDialog_updateFont__P4523_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1089; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["offset"] = (0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_String_.length(s.arg1);
    s.tmp_4 = r0;
    s.tmp_6 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "charWidth");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["charWidth"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["charWidth"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1090; s.pc = 2; return s.tmp_6; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 * s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_7 = r0;
    r0 = (s.tmp_3 - s.tmp_7);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 << 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_2 + s.tmp_8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["maxOffset"] = (s.tmp_1);
    r0 = (s.arg0).fields["timer"] = (2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_setText__P2674.info = {"start":8888,"length":249,"line":279,"column":8,"endLine":285,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setText","argumentNames":["this","text"]}

function game_SplashDialog_setText__P2674_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_setText__P2674, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_SplashDialog_constructor__P2673(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2666_VT)) failedCast(r0);
    s.tmp_0 = game_BaseDialog_constructor__P2650_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_1 = game_defaultSplashFrame__P4526_mk(s);
    s.callLocIdx = 1085; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = undefined;
    s.tmp_0.arg5 = undefined;
    s.callLocIdx = 1086; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = (s.arg0).fields["maxOffset"] = (-1);
    r0 = (s.arg0).fields["maxSubOffset"] = (-1);
    r0 = (s.arg0).fields["textColor"] = (1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_constructor__P2673.info = {"start":8536,"length":210,"line":268,"column":8,"endLine":273,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"inline","argumentNames":["this","width","height"]}

function game_SplashDialog_constructor__P2673_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_constructor__P2673, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function game_BaseDialog_update__P2651(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    s.tmp_0 = game_BaseDialog_clearInterior__P4514_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1059; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog__C2638_v2_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, game_BaseDialog__C2638_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawTextCore;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = game_BaseDialog_drawCursorRow__P2654_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1060; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_update__P2651.info = {"start":1570,"length":121,"line":61,"column":8,"endLine":65,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"update","argumentNames":["this"]}

function game_BaseDialog_update__P2651_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_update__P2651, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_BaseDialog_drawTextCore__P2653(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_drawTextCore__P2653.info = {"start":1788,"length":65,"line":71,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawTextCore","argumentNames":["this"]}

function game_BaseDialog_drawTextCore__P2653_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_drawTextCore__P2653, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_create__P2064(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___14617 = undefined;
    s.sprite___14620 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 308; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.scene___14617 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(Sprite__C2128_VT);
    s.tmp_0 = r0;
    s.tmp_1 = Sprite_constructor__P2175_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.callLocIdx = 309; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.sprite___14620 = (s.tmp_0);
    s.tmp_0 = Sprite_setKind__P2195_mk(s);
    s.tmp_0.arg0 = s.sprite___14620;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 310; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = PhysicsEngine__C2298_v0_2_mk(s);
    r0 = s.scene___14617.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.sprite___14620;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2298_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.addSprite;
    s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P14635);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtcore_mkAction(1, sprites_create_inline__P14642);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.sprite___14620);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    r0 = s.scene___14617.fields["createdHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 311; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 313; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    r0 = s.sprite___14620;
    return leave(s, r0)
  default: oops()
} } }
sprites_create__P2064.info = {"start":890,"length":400,"line":35,"column":4,"endLine":47,"endColumn":5,"fileName":"pxt_modules/game/sprites.ts","functionName":"create","argumentNames":["img","kind"]}

function sprites_create__P2064_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create__P2064, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scene___14617: undefined,
  sprite___14620: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function forEach_inline__P14635(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 == s.caps[0]);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P14635.info = {"start":1195,"length":19,"line":43,"column":20,"endLine":43,"endColumn":39,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P14635_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P14635, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_create_inline__P14642(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 312; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 312; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 312; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 312; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_create_inline__P14642.info = {"start":1237,"length":22,"line":44,"column":21,"endLine":44,"endColumn":43,"fileName":"pxt_modules/game/sprites.ts","functionName":"inline","argumentNames":["h"]}

function sprites_create_inline__P14642_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_create_inline__P14642, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_addSprite__P2300(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2298_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_addSprite__P2300.info = {"start":124,"length":29,"line":8,"column":4,"endLine":8,"endColumn":33,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_addSprite__P2300_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_addSprite__P2300, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_setKind__P2195(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.spritesByKind___14661 = undefined;
    s.overlapMap___14690 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = (s.arg1 == undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    { step = 15; continue; }
  case 3:
  case 4:
    s.tmp_3 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 410; s.pc = 16; return s.tmp_3;
  case 16:
    r0 = s.retval;
    r0 = r0.fields["spritesByKind"];
    s.spritesByKind___14661 = (r0);
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["_kind"];
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___14661, s.tmp_2);
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.tmp_4 = sprites_SpriteSet_remove__P2257_mk(s);
    r0 = s.arg0.fields["_kind"];
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___14661, s.tmp_5);
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.arg0;
    s.callLocIdx = 411; s.pc = 17; return s.tmp_4;
  case 17:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = (s.arg1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___14661, s.arg1);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 9; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(sprites_SpriteSet__C2250_VT);
    s.tmp_4 = r0;
    s.tmp_5 = sprites_SpriteSet_constructor__P2252_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    s.callLocIdx = 412; s.pc = 18; return s.tmp_5;
  case 18:
    r0 = s.retval;
    r0 = pxsim_pxtrt.mapSetGeneric(s.spritesByKind___14661, s.arg1, s.tmp_4);
  case 9:
  case 10:
    s.tmp_0 = sprites_SpriteSet_add__P2255_mk(s);
    r0 = pxsim_pxtrt.mapGetGeneric(s.spritesByKind___14661, s.arg1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 413; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 11:
  case 12:
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 414; s.pc = 20; return s.tmp_0;
  case 20:
    r0 = s.retval;
    r0 = r0.fields["overlapMap"];
    s.overlapMap___14690 = (r0);
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___14690, s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.tmp_3 = r0 = s.overlapMap___14690;
    s.tmp_4 = r0 = s.arg1;
    r0 = pxsim_Array__mk();
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt.mapSetGeneric(s.tmp_3, s.tmp_4, s.tmp_5);
  case 13:
  case 14:
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.overlapMap___14690, s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_kindsOverlappedWith"] = (s.tmp_1);
    r0 = (s.arg0).fields["_kind"] = (s.arg1);
  case 15:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setKind__P2195.info = {"start":13944,"length":663,"line":497,"column":4,"endLine":517,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setKind","argumentNames":["this","value"]}

function Sprite_setKind__P2195_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setKind__P2195, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  spritesByKind___14661: undefined,
  overlapMap___14690: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_remove__P2257(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___14738 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2250_VT)) failedCast(r0);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_0, s.arg1, undefined);
    s.i___14738 = (r0);
    r0 = (s.i___14738 > -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = helpers_arraySplice__P100_mk(s);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.i___14738;
    s.tmp_1.arg2 = 1;
    s.callLocIdx = 584; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    r0 = true;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = false;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_remove__P2257.info = {"start":1827,"length":235,"line":66,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"remove","argumentNames":["this","sprite"]}

function sprites_SpriteSet_remove__P2257_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_remove__P2257, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  i___14738: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_add__P2255(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2250_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_4, s.arg1, undefined);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > -1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = false;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["_sprites"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_5, s.arg1);
    r0 = true;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_add__P2255.info = {"start":1041,"length":263,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"add","argumentNames":["this","sprite"]}

function sprites_SpriteSet_add__P2255_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_add__P2255, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_contains__P2258(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2250_VT)) failedCast(r0);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_1, s.arg1, undefined);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > -1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_contains__P2258.info = {"start":2172,"length":100,"line":79,"column":8,"endLine":81,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"contains","argumentNames":["this","sprite"]}

function sprites_SpriteSet_contains__P2258_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_contains__P2258, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteSet_constructor__P2252(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2250_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_sprites"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_constructor__P2252.info = {"start":485,"length":57,"line":19,"column":8,"endLine":21,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"inline","argumentNames":["this"]}

function sprites_SpriteSet_constructor__P2252_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_constructor__P2252, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_constructor__P2175(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = sprites_BaseSprite_constructor__P1890_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 355; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    r0 = s.arg0.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastX"] = (s.tmp_0);
    r0 = s.arg0.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["_lastY"] = (s.tmp_0);
    s.tmp_0 = Sprite_vx__P2146_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 358; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = Sprite_vy__P2148_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 359; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_ax__P2150_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 360; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = Sprite_ay__P2152_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 361; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = Sprite_fx__P2154_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 362; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = Sprite_fy__P2156_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 363; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = (s.arg0).fields["_sx"] = (256);
    r0 = (s.arg0).fields["_sy"] = (256);
    r0 = (s.arg0).fields["flags"] = (0);
    s.tmp_0 = Sprite_setImage__P2178_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 364; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.tmp_0 = Sprite_setKind__P2195_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = -1;
    s.callLocIdx = 365; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = (s.arg0).fields["layer"] = (1);
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_overlappers"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_constructor__P2175.info = {"start":7406,"length":678,"line":278,"column":4,"endLine":300,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["this","img"]}

function Sprite_constructor__P2175_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_constructor__P2175, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P2156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 336; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fy__P2156.info = {"start":5109,"length":64,"line":191,"column":4,"endLine":193,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this","v"]}

function Sprite_fy__P2156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P2156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fy__P2155(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_fy"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fy__P2155.info = {"start":4947,"length":60,"line":186,"column":4,"endLine":188,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fy","argumentNames":["this"]}
Sprite_fy__P2155.isGetter = true;

function Sprite_fy__P2155_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fy__P2155, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_fx__P2154(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_3 = Math_max__P130_mk(s);
    s.tmp_3.arg0 = 0;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 333; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_fx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_fx__P2154.info = {"start":4766,"length":64,"line":181,"column":4,"endLine":183,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this","v"]}

function Sprite_fx__P2154_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P2154, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_fx__P2153(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_fx"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_fx__P2153.info = {"start":4604,"length":60,"line":176,"column":4,"endLine":178,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"fx","argumentNames":["this"]}
Sprite_fx__P2153.isGetter = true;

function Sprite_fx__P2153_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_fx__P2153, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ay__P2152(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ay"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ay__P2152.info = {"start":4435,"length":51,"line":170,"column":4,"endLine":172,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this","v"]}

function Sprite_ay__P2152_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P2152, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ay__P2151(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_ay"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ay__P2151.info = {"start":4269,"length":60,"line":165,"column":4,"endLine":167,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ay","argumentNames":["this"]}
Sprite_ay__P2151.isGetter = true;

function Sprite_ay__P2151_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ay__P2151, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_ax__P2150(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_ax"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_ax__P2150.info = {"start":4096,"length":51,"line":159,"column":4,"endLine":161,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this","v"]}

function Sprite_ax__P2150_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P2150, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_ax__P2149(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_ax"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_ax__P2149.info = {"start":3930,"length":60,"line":154,"column":4,"endLine":156,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"ax","argumentNames":["this"]}
Sprite_ax__P2149.isGetter = true;

function Sprite_ax__P2149_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_ax__P2149, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_vy__P2148(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vy__P2148.info = {"start":3757,"length":51,"line":148,"column":4,"endLine":150,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this","v"]}

function Sprite_vy__P2148_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P2148, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vy__P2147(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_vy"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vy__P2147.info = {"start":3595,"length":60,"line":143,"column":4,"endLine":145,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vy","argumentNames":["this"]}
Sprite_vy__P2147.isGetter = true;

function Sprite_vy__P2147_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vy__P2147, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Sprite_vx__P2146(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_vx__P2146.info = {"start":3426,"length":51,"line":137,"column":4,"endLine":139,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this","v"]}

function Sprite_vx__P2146_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P2146, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_vx__P2145(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_vx"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_vx__P2145.info = {"start":3264,"length":60,"line":132,"column":4,"endLine":134,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"vx","argumentNames":["this"]}
Sprite_vx__P2145.isGetter = true;

function Sprite_vx__P2145_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_vx__P2145, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller__setUserEventsEnabled__P1996(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    globals._userEventsEnabled___4355 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller__setUserEventsEnabled__P1996.info = {"start":10070,"length":101,"line":291,"column":4,"endLine":293,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"_setUserEventsEnabled","argumentNames":["enabled"]}

function controller__setUserEventsEnabled__P1996_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller__setUserEventsEnabled__P1996, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function console_inspect__P382(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.asArr___14995 = undefined;
    s.asString___15013 = undefined;
    s.keys___15025 = undefined;
    s.snipped___15029 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == "string");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0;
    { step = 17; continue; }
    { step = 16; continue; }
  case 1:
    r0 = pxsim_pxtcore.typeOf(s.arg0);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 == "number");
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    { step = 17; continue; }
    { step = 15; continue; }
  case 2:
    r0 = pxsim_Array_.isArray(s.arg0);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 5; continue; }
    s.asArr___14995 = (s.arg0);
    r0 = pxsim_Array__length(s.asArr___14995);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = helpers_arrayJoin__P103_mk(s);
    s.tmp_2.arg0 = s.asArr___14995;
    s.tmp_2.arg1 = ",";
    s.callLocIdx = 43; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    { step = 17; continue; }
    { step = 4; continue; }
  case 3:
    r0 = pxsim_String_.mkEmpty();
    s.tmp_4 = r0;
    s.tmp_7 = helpers_arrayJoin__P103_mk(s);
    s.tmp_8 = helpers_arraySlice__P115_mk(s);
    s.tmp_8.arg0 = s.asArr___14995;
    s.tmp_8.arg1 = 0;
    s.tmp_8.arg2 = s.arg1;
    s.callLocIdx = 44; s.pc = 21; return s.tmp_8;
  case 21:
    r0 = s.retval;
    s.tmp_7.arg0 = r0;
    s.tmp_7.arg1 = ",";
    s.callLocIdx = 45; s.pc = 20; return s.tmp_7;
  case 20:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 22);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 22:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, "...");
    { step = 17; continue; }
  case 4:
    { step = 14; continue; }
  case 5:
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 23);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 23:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.asString___15013 = (r0);
    r0 = (s.asString___15013 != "[object Object]");
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = (s.asString___15013 != "[Object]");
  case 7:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = s.asString___15013;
    { step = 17; continue; }
  case 8:
  case 9:
    r0 = pxsim_pxtrt.keysOf(s.arg0);
    s.keys___15025 = (r0);
    r0 = pxsim_Array__length(s.keys___15025);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 > s.arg1);
    s.snipped___15029 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___15029);
    if (!r0) { step = 10; continue; }
    s.tmp_0 = helpers_arraySlice__P115_mk(s);
    s.tmp_0.arg0 = s.keys___15025;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 46; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.keys___15025 = (r0);
  case 10:
  case 11:
    r0 = pxsim_pxtcore_mkAction(1, console_inspect_inline__P15046);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_numops_toBoolDecr(s.snipped___15029);
    if (!r0) { step = 12; continue; }
    r0 = "\n    ...";
    { step = 13; continue; }
  case 12:
    r0 = pxsim_String_.mkEmpty();
  case 13:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.tmp_7 = helpers_arrayReduce__P112_mk(s);
    s.tmp_7.arg0 = s.keys___15025;
    s.tmp_7.arg1 = s.tmp_0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7.arg2 = r0;
    s.callLocIdx = 47; s.pc = 25; return s.tmp_7;
  case 25:
    r0 = s.retval;
    s.tmp_6 = r0;
    if ((s.tmp_6) && (s.tmp_6).vtable) {
    setupResume(s, 26);
    pxsim_String__stringConv(s.tmp_6);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_6) + ""; }
  case 26:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_8);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 28);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 28:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("{", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, "\n}");
    { step = 17; continue; }
  case 14:
  case 15:
  case 16:
    r0 = undefined;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
console_inspect__P382.info = {"start":2271,"length":1190,"line":81,"column":4,"endLine":114,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"inspect","argumentNames":["obj","maxElements"]}

function console_inspect__P382_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect__P382, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  asArr___14995: undefined,
  asString___15013: undefined,
  keys___15025: undefined,
  snipped___15029: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function console_inspect_inline__P15046(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    if ((s.arg0) && (s.arg0).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.arg0);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg0) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_String__concat("\n    ", s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ": ");
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.caps[0], s.arg1);
    s.tmp_7 = r0;
    if ((s.tmp_7) && (s.tmp_7).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_7);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_7) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_6);
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat(s.tmp_0, s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
console_inspect_inline__P15046.info = {"start":3293,"length":61,"line":108,"column":20,"endLine":108,"endColumn":81,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["prev","currKey"]}

function console_inspect_inline__P15046_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_inspect_inline__P15046, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_arrayJoin__P103(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.r___15101 = undefined;
    s.len___15102 = undefined;
    s.i___15105 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg1 === null);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    s.arg1 = (",");
  case 3:
  case 4:
    r0 = pxsim_String_.mkEmpty();
    s.r___15101 = (r0);
    r0 = pxsim_Array__length(s.arg0);
    s.len___15102 = (r0);
    s.i___15105 = (0);
  case 5:
    r0 = (s.i___15105 < s.len___15102);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = (s.i___15105 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBool(s.tmp_1);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_1;
    { step = 7; continue; }
  case 6:
    r0 = s.arg1;
  case 7:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 8; continue; }
    if ((s.r___15101) && (s.r___15101).vtable) {
    setupResume(s, 15);
    pxsim_String__stringConv(s.r___15101);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___15101) + ""; }
  case 15:
    r0 = s.retval;
    s.tmp_3 = r0;
    if ((s.arg1) && (s.arg1).vtable) {
    setupResume(s, 16);
    pxsim_String__stringConv(s.arg1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.arg1) + ""; }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.r___15101 = (r0);
  case 8:
  case 9:
    r0 = pxsim_Array__getAt(s.arg0, s.i___15105);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_Array__getAt(s.arg0, s.i___15105);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === null);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    r0 = pxsim_String_.mkEmpty();
    { step = 13; continue; }
  case 12:
    r0 = pxsim_Array__getAt(s.arg0, s.i___15105);
  case 13:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    if ((s.r___15101) && (s.r___15101).vtable) {
    setupResume(s, 17);
    pxsim_String__stringConv(s.r___15101);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.r___15101) + ""; }
  case 17:
    r0 = s.retval;
    s.tmp_5 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_6);
    s.r___15101 = (r0);
    r0 = (s.i___15105 + 1);
    s.i___15105 = (r0);
    { step = 5; continue; }
  case 14:
    r0 = s.r___15101;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayJoin__P103.info = {"start":4133,"length":432,"line":157,"column":4,"endLine":170,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayJoin","argumentNames":["arr","sep"]}

function helpers_arrayJoin__P103_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayJoin__P103, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  r___15101: undefined,
  len___15102: undefined,
  i___15105: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Keyboard_asking__P4079(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = s.arg0.fields["_asking"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Keyboard_asking__P4079.info = {"start":6210,"length":49,"line":204,"column":4,"endLine":206,"endColumn":5,"fileName":"main.ts","functionName":"asking","argumentNames":["this"]}
Keyboard_asking__P4079.isGetter = true;

function Keyboard_asking__P4079_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_asking__P4079, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Keyboard_right__P4083(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    s.tmp_2 = if_column_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "column");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["column"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["column"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 132; s.pc = 1; return s.tmp_2; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "column", s.tmp_1);
    s.tmp_6 = if_keyIndex_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "keyIndex");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["keyIndex"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["keyIndex"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 133; s.pc = 2; return s.tmp_6; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 + 1);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["keys"];
    s.tmp_9 = r0;
    s.tmp_11 = if_column_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_11.arg0 = r0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "column");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["column"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["column"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 134; s.pc = 3; return s.tmp_11; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_Array__length(s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_4 % s.tmp_7);
    s.tmp_13 = r0;
    r0 = (s.tmp_13 + s.tmp_7);
    s.tmp_12 = r0;
    r0 = (s.tmp_12 % s.tmp_7);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "keyIndex", s.tmp_3);
    s.tmp_14 = Keyboard_select__P4088_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.tmp_14.arg1 = s.tmp_0;
    s.callLocIdx = 136; s.pc = 4; return s.tmp_14;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_right__P4083.info = {"start":6761,"length":192,"line":226,"column":4,"endLine":231,"endColumn":5,"fileName":"main.ts","functionName":"right","argumentNames":["this"]}

function Keyboard_right__P4083_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_right__P4083, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  arg0: undefined,
} }





function mod__P4092(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 % s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.arg1);
    return leave(s, r0)
  default: oops()
} } }
mod__P4092.info = {"start":9906,"length":68,"line":339,"column":0,"endLine":341,"endColumn":1,"fileName":"main.ts","functionName":"mod","argumentNames":["n","m"]}

function mod__P4092_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: mod__P4092, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Keyboard_left__P4082(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    s.tmp_2 = if_column_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "column");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["column"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["column"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 127; s.pc = 1; return s.tmp_2; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "column", s.tmp_1);
    s.tmp_6 = if_keyIndex_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "keyIndex");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["keyIndex"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["keyIndex"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 128; s.pc = 2; return s.tmp_6; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["keys"];
    s.tmp_9 = r0;
    s.tmp_11 = if_column_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_11.arg0 = r0;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "column");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["column"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["column"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 129; s.pc = 3; return s.tmp_11; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_Array__length(s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_4 % s.tmp_7);
    s.tmp_13 = r0;
    r0 = (s.tmp_13 + s.tmp_7);
    s.tmp_12 = r0;
    r0 = (s.tmp_12 % s.tmp_7);
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "keyIndex", s.tmp_3);
    s.tmp_14 = Keyboard_select__P4088_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.tmp_14.arg1 = s.tmp_0;
    s.callLocIdx = 131; s.pc = 4; return s.tmp_14;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_left__P4082.info = {"start":6565,"length":191,"line":220,"column":4,"endLine":225,"endColumn":5,"fileName":"main.ts","functionName":"left","argumentNames":["this"]}

function Keyboard_left__P4082_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_left__P4082, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  arg0: undefined,
} }





function Keyboard_down__P4081(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    s.tmp_3 = if_column_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "column");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["column"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["column"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 124; s.pc = 1; return s.tmp_3; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "column", s.tmp_1);
    s.tmp_5 = if_keyIndex_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "keyIndex");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["keyIndex"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["keyIndex"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 125; s.pc = 2; return s.tmp_5; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "keyIndex", s.tmp_4);
    s.tmp_6 = Keyboard_select__P4088_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = s.tmp_0;
    s.callLocIdx = 126; s.pc = 3; return s.tmp_6;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_down__P4081.info = {"start":6414,"length":146,"line":214,"column":4,"endLine":219,"endColumn":5,"fileName":"main.ts","functionName":"down","argumentNames":["this"]}

function Keyboard_down__P4081_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_down__P4081, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function Keyboard_up__P4080(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    s.tmp_3 = if_column_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "column");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["column"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["column"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 121; s.pc = 1; return s.tmp_3; }
    }
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "column", s.tmp_1);
    s.tmp_5 = if_keyIndex_1_mk(s);
    r0 = s.arg0.fields["selected"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "keyIndex");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["keyIndex"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["keyIndex"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 122; s.pc = 2; return s.tmp_5; }
    }
  case 2:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "keyIndex", s.tmp_4);
    s.tmp_6 = Keyboard_select__P4088_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = s.tmp_0;
    s.callLocIdx = 123; s.pc = 3; return s.tmp_6;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_up__P4080.info = {"start":6265,"length":144,"line":208,"column":4,"endLine":213,"endColumn":5,"fileName":"main.ts","functionName":"up","argumentNames":["this"]}

function Keyboard_up__P4080_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_up__P4080, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function controller_Button_onEvent__P1986(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.eventHandler___7434 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    s.tmp_0 = controller_Button_getOrCreateHandlerForEvent__P4348_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 232; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.eventHandler___7434 = (r0);
    r0 = (s.eventHandler___7434).fields["callback"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_onEvent__P1986.info = {"start":3784,"length":188,"line":123,"column":8,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"onEvent","argumentNames":["this","event","handler"]}

function controller_Button_onEvent__P1986_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_onEvent__P1986, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  eventHandler___7434: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Button_getOrCreateHandlerForEvent__P4348(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.handlerState___7455 = undefined;
    s.eventHandler___7464 = undefined;
    s.unnamed68___U2 = undefined;
    s.unnamed69___U3 = undefined;
    s.newHandler___7480 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    s.tmp_3 = controller_Button_handlerState__P4343_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 242; s.pc = 10; return s.tmp_3;
  case 10:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(controller_ButtonEventHandlerState__C1975_VT);
    s.tmp_4 = r0;
    s.tmp_5 = controller_ButtonEventHandlerState_constructor__P1976_mk(s);
    s.tmp_5.arg0 = s.tmp_4;
    r0 = s.arg0.fields["id"];
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 244; s.pc = 11; return s.tmp_5;
  case 11:
    r0 = s.retval;
    s.tmp_7 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 243; s.pc = 12; return s.tmp_7;
  case 12:
    r0 = s.retval;
    r0 = r0.fields["buttonEventHandlers"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__push(s.tmp_6, s.tmp_4);
  case 1:
  case 2:
    s.tmp_0 = controller_Button_handlerState__P4343_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 245; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.handlerState___7455 = (r0);
    r0 = s.handlerState___7455.fields["user"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = r0 = s.handlerState___7455;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["user"] = (s.tmp_4);
  case 3:
  case 4:
    s.eventHandler___7464 = (undefined);
    r0 = s.handlerState___7455.fields["user"];
    s.unnamed68___U2 = (r0);
    s.unnamed69___U3 = (0);
  case 5:
    s.tmp_0 = r0 = s.unnamed69___U3;
    r0 = pxsim_Array__length(s.unnamed68___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 8; continue; }
    r0 = pxsim_Array__getAt(s.unnamed68___U2, s.unnamed69___U3);
    s.eventHandler___7464 = (r0);
    r0 = s.eventHandler___7464.fields["event"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = s.eventHandler___7464;
    { step = 9; continue; }
  case 6:
  case 7:
    r0 = (s.unnamed69___U3 + 1);
    s.unnamed69___U3 = (r0);
    { step = 5; continue; }
  case 8:
    s.unnamed68___U2 = (undefined);
    r0 = pxsim_pxtcore_mkAction(2, controller_Button_getOrCreateHandlerForEvent_inline__P7477);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.arg1);
    s.tmp_5 = control_onEvent__P391_mk(s);
    s.tmp_5.arg0 = s.arg1;
    r0 = s.arg0.fields["id"];
    s.tmp_5.arg1 = r0;
    s.tmp_5.arg2 = s.tmp_4;
    s.tmp_5.arg3 = 16;
    s.callLocIdx = 247; s.pc = 14; return s.tmp_5;
  case 14:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(controller_ButtonHandler__C1973_VT);
    s.tmp_0 = r0;
    s.tmp_1 = controller_ButtonHandler_constructor__P1974_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 248; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.newHandler___7480 = (s.tmp_0);
    r0 = s.handlerState___7455.fields["user"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.newHandler___7480);
    r0 = s.newHandler___7480;
  case 9:
    return leave(s, r0)
  default: oops()
} } }
controller_Button_getOrCreateHandlerForEvent__P4348.info = {"start":8550,"length":829,"line":250,"column":8,"endLine":270,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"getOrCreateHandlerForEvent","argumentNames":["this","event"]}

function controller_Button_getOrCreateHandlerForEvent__P4348_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_getOrCreateHandlerForEvent__P4348, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  handlerState___7455: undefined,
  eventHandler___7464: undefined,
  unnamed68___U2: undefined,
  unnamed69___U3: undefined,
  newHandler___7480: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_getOrCreateHandlerForEvent_inline__P7477(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_runButtonEvents__P4347_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.caps[1];
    s.callLocIdx = 246; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_getOrCreateHandlerForEvent_inline__P7477.info = {"start":9186,"length":33,"line":265,"column":44,"endLine":265,"endColumn":77,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_getOrCreateHandlerForEvent_inline__P7477_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_getOrCreateHandlerForEvent_inline__P7477, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_runButtonEvents__P4347(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.handlerState___7494 = undefined;
    s.userHandler___7498 = undefined;
    s.eventHandler___7509 = undefined;
    s.unnamed66___U3 = undefined;
    s.unnamed67___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    s.tmp_0 = controller_Button_handlerState__P4343_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 238; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.handlerState___7494 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.handlerState___7494);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 13; continue; }
  case 1:
  case 2:
    s.tmp_2 = controller_Button_getOrCreateHandlerForEvent__P4348_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 239; s.pc = 15; return s.tmp_2;
  case 15:
    r0 = s.retval;
    s.userHandler___7498 = (r0);
    r0 = s.userHandler___7498.fields["callback"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = if_callback_1_mk(s);
    s.tmp_1.arg0 = s.userHandler___7498;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "callback"), 1);
      s.callLocIdx = 240; s.pc = 16; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["callback"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["callback"], 1); s.callLocIdx = 240; s.pc = 16; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 240; s.pc = 16; return s.tmp_1;; }
     else { s.callLocIdx = 240; s.pc = 16; return s.tmp_1; }
    }
  case 16:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = s.handlerState___7494.fields["system"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.eventHandler___7509 = (undefined);
    r0 = s.handlerState___7494.fields["system"];
    s.unnamed66___U3 = (r0);
    s.unnamed67___U4 = (0);
  case 5:
    s.tmp_0 = r0 = s.unnamed67___U4;
    r0 = pxsim_Array__length(s.unnamed66___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__getAt(s.unnamed66___U3, s.unnamed67___U4);
    s.eventHandler___7509 = (r0);
    r0 = s.eventHandler___7509.fields["event"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 === s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_2;
    { step = 7; continue; }
  case 6:
    r0 = s.eventHandler___7509.fields["callback"];
  case 7:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 8; continue; }
    s.tmp_5 = if_callback_1_mk(s);
    s.tmp_5.arg0 = s.eventHandler___7509;
    if (!s.tmp_5.arg0.vtable.iface) {
      setupLambda(s.tmp_5, pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "callback"), 1);
      s.callLocIdx = 241; s.pc = 17; return s.tmp_5;
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["callback"];
      if (s.tmp_5.fn == null) { setupLambda(s.tmp_5, s.tmp_5.arg0.fields["callback"], 1); s.callLocIdx = 241; s.pc = 17; return s.tmp_5; }
      else if (s.tmp_5.fn.isGetter) { s.tmp_5.stage2Call = true; s.callLocIdx = 241; s.pc = 17; return s.tmp_5;; }
     else { s.callLocIdx = 241; s.pc = 17; return s.tmp_5; }
    }
  case 17:
    r0 = s.retval;
  case 8:
  case 9:
    r0 = (s.unnamed67___U4 + 1);
    s.unnamed67___U4 = (r0);
    { step = 5; continue; }
  case 10:
    s.unnamed66___U3 = (undefined);
  case 11:
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_runButtonEvents__P4347.info = {"start":8005,"length":535,"line":236,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"runButtonEvents","argumentNames":["this","event"]}

function controller_Button_runButtonEvents__P4347_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_runButtonEvents__P4347, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  handlerState___7494: undefined,
  userHandler___7498: undefined,
  eventHandler___7509: undefined,
  unnamed66___U3: undefined,
  unnamed67___U4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_handlerState__P4343(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.state___7609 = undefined;
    s.unnamed64___U1 = undefined;
    s.unnamed65___U2 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    s.state___7609 = (undefined);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 228; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = r0.fields["buttonEventHandlers"];
    s.unnamed64___U1 = (r0);
    s.unnamed65___U2 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed65___U2;
    r0 = pxsim_Array__length(s.unnamed64___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed64___U1, s.unnamed65___U2);
    s.state___7609 = (r0);
    r0 = s.state___7609.fields["id"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 === s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = s.state___7609;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed65___U2 + 1);
    s.unnamed65___U2 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed64___U1 = (undefined);
    r0 = undefined;
  case 5:
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Button_handlerState__P4343.info = {"start":1644,"length":240,"line":66,"column":8,"endLine":71,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"handlerState","argumentNames":["this"]}
controller_Button_handlerState__P4343.isGetter = true;

function controller_Button_handlerState__P4343_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_handlerState__P4343, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  state___7609: undefined,
  unnamed64___U1: undefined,
  unnamed65___U2: undefined,
  arg0: undefined,
} }





function controller_ButtonEventHandlerState_constructor__P1976(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ButtonEventHandlerState__C1975_VT)) failedCast(r0);
    r0 = (s.arg0).fields["id"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ButtonEventHandlerState_constructor__P1976.info = {"start":1122,"length":33,"line":48,"column":8,"endLine":48,"endColumn":41,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","id"]}

function controller_ButtonEventHandlerState_constructor__P1976_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ButtonEventHandlerState_constructor__P1976, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_ButtonHandler_constructor__P1974(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_ButtonHandler__C1973_VT)) failedCast(r0);
    r0 = (s.arg0).fields["event"] = (s.arg1);
    r0 = (s.arg0).fields["callback"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_ButtonHandler_constructor__P1974.info = {"start":997,"length":66,"line":44,"column":8,"endLine":44,"endColumn":74,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","event","callback"]}

function controller_ButtonHandler_constructor__P1974_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_ButtonHandler_constructor__P1974, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Keyboard_constructor__P4078(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.column___7026 = undefined;
    s.keyIndex___7033 = undefined;
    s.key___7041 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Keyboard__C4068_VT)) failedCast(r0);
    r0 = (s.arg0).fields["disabled"] = (false);
    r0 = (s.arg0).fields["_asking"] = (false);
    r0 = (s.arg0).fields["spacing"] = (8);
    r0 = (s.arg0).fields["rowLimit"] = (9);
    r0 = (s.arg0).fields["yOffset"] = (80);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    s.tmp_2 = textsprite_create__P4048_mk(s);
    s.tmp_2.arg0 = "Q";
    s.tmp_2.arg1 = 0;
    s.tmp_2.arg2 = 1;
    s.callLocIdx = 87; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.tmp_4 = textsprite_create__P4048_mk(s);
    s.tmp_4.arg0 = "W";
    s.tmp_4.arg1 = 0;
    s.tmp_4.arg2 = 1;
    s.callLocIdx = 88; s.pc = 6; return s.tmp_4;
  case 6:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_3);
    s.tmp_6 = textsprite_create__P4048_mk(s);
    s.tmp_6.arg0 = "E";
    s.tmp_6.arg1 = 0;
    s.tmp_6.arg2 = 1;
    s.callLocIdx = 89; s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_5);
    s.tmp_8 = textsprite_create__P4048_mk(s);
    s.tmp_8.arg0 = "R";
    s.tmp_8.arg1 = 0;
    s.tmp_8.arg2 = 1;
    s.callLocIdx = 90; s.pc = 8; return s.tmp_8;
  case 8:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_7);
    s.tmp_10 = textsprite_create__P4048_mk(s);
    s.tmp_10.arg0 = "T";
    s.tmp_10.arg1 = 0;
    s.tmp_10.arg2 = 1;
    s.callLocIdx = 91; s.pc = 9; return s.tmp_10;
  case 9:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_9);
    s.tmp_12 = textsprite_create__P4048_mk(s);
    s.tmp_12.arg0 = "Y";
    s.tmp_12.arg1 = 0;
    s.tmp_12.arg2 = 1;
    s.callLocIdx = 92; s.pc = 10; return s.tmp_12;
  case 10:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_11);
    s.tmp_14 = textsprite_create__P4048_mk(s);
    s.tmp_14.arg0 = "U";
    s.tmp_14.arg1 = 0;
    s.tmp_14.arg2 = 1;
    s.callLocIdx = 93; s.pc = 11; return s.tmp_14;
  case 11:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_13);
    s.tmp_16 = textsprite_create__P4048_mk(s);
    s.tmp_16.arg0 = "I";
    s.tmp_16.arg1 = 0;
    s.tmp_16.arg2 = 1;
    s.callLocIdx = 94; s.pc = 12; return s.tmp_16;
  case 12:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_15);
    s.tmp_18 = textsprite_create__P4048_mk(s);
    s.tmp_18.arg0 = "O";
    s.tmp_18.arg1 = 0;
    s.tmp_18.arg2 = 1;
    s.callLocIdx = 95; s.pc = 13; return s.tmp_18;
  case 13:
    r0 = s.retval;
    s.tmp_17 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_17);
    s.tmp_20 = textsprite_create__P4048_mk(s);
    s.tmp_20.arg0 = "P";
    s.tmp_20.arg1 = 0;
    s.tmp_20.arg2 = 1;
    s.callLocIdx = 96; s.pc = 14; return s.tmp_20;
  case 14:
    r0 = s.retval;
    s.tmp_19 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_19);
    r0 = pxsim_Array__mk();
    s.tmp_21 = r0;
    r0 = pxsim_Array__push(s.tmp_21, s.tmp_0);
    r0 = pxsim_Array__mk();
    s.tmp_22 = r0;
    s.tmp_24 = textsprite_create__P4048_mk(s);
    s.tmp_24.arg0 = "A";
    s.tmp_24.arg1 = 0;
    s.tmp_24.arg2 = 1;
    s.callLocIdx = 97; s.pc = 15; return s.tmp_24;
  case 15:
    r0 = s.retval;
    s.tmp_23 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_23);
    s.tmp_26 = textsprite_create__P4048_mk(s);
    s.tmp_26.arg0 = "S";
    s.tmp_26.arg1 = 0;
    s.tmp_26.arg2 = 1;
    s.callLocIdx = 98; s.pc = 16; return s.tmp_26;
  case 16:
    r0 = s.retval;
    s.tmp_25 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_25);
    s.tmp_28 = textsprite_create__P4048_mk(s);
    s.tmp_28.arg0 = "D";
    s.tmp_28.arg1 = 0;
    s.tmp_28.arg2 = 1;
    s.callLocIdx = 99; s.pc = 17; return s.tmp_28;
  case 17:
    r0 = s.retval;
    s.tmp_27 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_27);
    s.tmp_30 = textsprite_create__P4048_mk(s);
    s.tmp_30.arg0 = "F";
    s.tmp_30.arg1 = 0;
    s.tmp_30.arg2 = 1;
    s.callLocIdx = 100; s.pc = 18; return s.tmp_30;
  case 18:
    r0 = s.retval;
    s.tmp_29 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_29);
    s.tmp_32 = textsprite_create__P4048_mk(s);
    s.tmp_32.arg0 = "G";
    s.tmp_32.arg1 = 0;
    s.tmp_32.arg2 = 1;
    s.callLocIdx = 101; s.pc = 19; return s.tmp_32;
  case 19:
    r0 = s.retval;
    s.tmp_31 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_31);
    s.tmp_34 = textsprite_create__P4048_mk(s);
    s.tmp_34.arg0 = "H";
    s.tmp_34.arg1 = 0;
    s.tmp_34.arg2 = 1;
    s.callLocIdx = 102; s.pc = 20; return s.tmp_34;
  case 20:
    r0 = s.retval;
    s.tmp_33 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_33);
    s.tmp_36 = textsprite_create__P4048_mk(s);
    s.tmp_36.arg0 = "J";
    s.tmp_36.arg1 = 0;
    s.tmp_36.arg2 = 1;
    s.callLocIdx = 103; s.pc = 21; return s.tmp_36;
  case 21:
    r0 = s.retval;
    s.tmp_35 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_35);
    s.tmp_38 = textsprite_create__P4048_mk(s);
    s.tmp_38.arg0 = "K";
    s.tmp_38.arg1 = 0;
    s.tmp_38.arg2 = 1;
    s.callLocIdx = 104; s.pc = 22; return s.tmp_38;
  case 22:
    r0 = s.retval;
    s.tmp_37 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_37);
    s.tmp_40 = textsprite_create__P4048_mk(s);
    s.tmp_40.arg0 = "L";
    s.tmp_40.arg1 = 0;
    s.tmp_40.arg2 = 1;
    s.callLocIdx = 105; s.pc = 23; return s.tmp_40;
  case 23:
    r0 = s.retval;
    s.tmp_39 = r0;
    r0 = pxsim_Array__push(s.tmp_22, s.tmp_39);
    r0 = pxsim_Array__push(s.tmp_21, s.tmp_22);
    r0 = pxsim_Array__mk();
    s.tmp_41 = r0;
    s.tmp_43 = textsprite_create__P4048_mk(s);
    s.tmp_43.arg0 = "Z";
    s.tmp_43.arg1 = 0;
    s.tmp_43.arg2 = 1;
    s.callLocIdx = 106; s.pc = 24; return s.tmp_43;
  case 24:
    r0 = s.retval;
    s.tmp_42 = r0;
    r0 = pxsim_Array__push(s.tmp_41, s.tmp_42);
    s.tmp_45 = textsprite_create__P4048_mk(s);
    s.tmp_45.arg0 = "X";
    s.tmp_45.arg1 = 0;
    s.tmp_45.arg2 = 1;
    s.callLocIdx = 107; s.pc = 25; return s.tmp_45;
  case 25:
    r0 = s.retval;
    s.tmp_44 = r0;
    r0 = pxsim_Array__push(s.tmp_41, s.tmp_44);
    s.tmp_47 = textsprite_create__P4048_mk(s);
    s.tmp_47.arg0 = "C";
    s.tmp_47.arg1 = 0;
    s.tmp_47.arg2 = 1;
    s.callLocIdx = 108; s.pc = 26; return s.tmp_47;
  case 26:
    r0 = s.retval;
    s.tmp_46 = r0;
    r0 = pxsim_Array__push(s.tmp_41, s.tmp_46);
    s.tmp_49 = textsprite_create__P4048_mk(s);
    s.tmp_49.arg0 = "V";
    s.tmp_49.arg1 = 0;
    s.tmp_49.arg2 = 1;
    s.callLocIdx = 109; s.pc = 27; return s.tmp_49;
  case 27:
    r0 = s.retval;
    s.tmp_48 = r0;
    r0 = pxsim_Array__push(s.tmp_41, s.tmp_48);
    s.tmp_51 = textsprite_create__P4048_mk(s);
    s.tmp_51.arg0 = "B";
    s.tmp_51.arg1 = 0;
    s.tmp_51.arg2 = 1;
    s.callLocIdx = 110; s.pc = 28; return s.tmp_51;
  case 28:
    r0 = s.retval;
    s.tmp_50 = r0;
    r0 = pxsim_Array__push(s.tmp_41, s.tmp_50);
    s.tmp_53 = textsprite_create__P4048_mk(s);
    s.tmp_53.arg0 = "N";
    s.tmp_53.arg1 = 0;
    s.tmp_53.arg2 = 1;
    s.callLocIdx = 111; s.pc = 29; return s.tmp_53;
  case 29:
    r0 = s.retval;
    s.tmp_52 = r0;
    r0 = pxsim_Array__push(s.tmp_41, s.tmp_52);
    s.tmp_55 = textsprite_create__P4048_mk(s);
    s.tmp_55.arg0 = "M";
    s.tmp_55.arg1 = 0;
    s.tmp_55.arg2 = 1;
    s.callLocIdx = 112; s.pc = 30; return s.tmp_55;
  case 30:
    r0 = s.retval;
    s.tmp_54 = r0;
    r0 = pxsim_Array__push(s.tmp_41, s.tmp_54);
    r0 = pxsim_Array__push(s.tmp_21, s.tmp_41);
    r0 = (s.arg0).fields["keys"] = (s.tmp_21);
    s.tmp_56 = r0 = s.arg0;
    s.tmp_58 = textsprite_create__P4048_mk(s);
    s.tmp_58.arg0 = "Confirm? (A/B)";
    s.tmp_58.arg1 = 0;
    s.tmp_58.arg2 = 1;
    s.callLocIdx = 113; s.pc = 31; return s.tmp_58;
  case 31:
    r0 = s.retval;
    s.tmp_57 = r0;
    r0 = (s.tmp_56).fields["confirmText"] = (s.tmp_57);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_59 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_59, "column", 0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_59, "keyIndex", 0);
    r0 = (s.arg0).fields["selected"] = (s.tmp_59);
    r0 = (s.arg0).fields["ui"] = (s.arg1);
    s.column___7026 = (0);
  case 1:
    s.tmp_1 = r0 = s.column___7026;
    r0 = s.arg0.fields["keys"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.keyIndex___7033 = (0);
  case 2:
    s.tmp_1 = r0 = s.keyIndex___7033;
    r0 = s.arg0.fields["keys"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.column___7026);
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["keys"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_6, s.column___7026);
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.keyIndex___7033);
    s.key___7041 = (r0);
    s.tmp_0 = Sprite_left__P2187_mk(s);
    s.tmp_0.arg0 = s.key___7041;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_5 = r0;
    r0 = (s.keyIndex___7033 * s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = s.arg0.fields["keys"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_10, s.column___7026);
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_11 = r0;
    r0 = (s.tmp_8 * s.tmp_11);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 / 2);
    s.tmp_6 = r0;
    r0 = (s.tmp_1 - s.tmp_6);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 114; s.pc = 32; return s.tmp_0;
  case 32:
    r0 = s.retval;
    s.tmp_0 = Sprite_top__P2191_mk(s);
    s.tmp_0.arg0 = s.key___7041;
    r0 = s.arg0.fields["yOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_3 = r0;
    r0 = (s.column___7026 * s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 115; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
    r0 = (s.keyIndex___7033 + 1);
    s.keyIndex___7033 = (r0);
    { step = 2; continue; }
  case 3:
    r0 = (s.column___7026 + 1);
    s.column___7026 = (r0);
    { step = 1; continue; }
  case 4:
    s.tmp_0 = Keyboard_select__P4088_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg0.fields["selected"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 116; s.pc = 34; return s.tmp_0;
  case 34:
    r0 = s.retval;
    s.tmp_0 = Sprite_left__P2187_mk(s);
    r0 = s.arg0.fields["confirmText"];
    s.tmp_0.arg0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 2);
    s.tmp_1 = r0;
    s.tmp_5 = Sprite_width__P2184_mk(s);
    r0 = s.arg0.fields["confirmText"];
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 117; s.pc = 36; return s.tmp_5;
  case 36:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 / 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 - s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 118; s.pc = 35; return s.tmp_0;
  case 35:
    r0 = s.retval;
    s.tmp_0 = Sprite_top__P2191_mk(s);
    r0 = s.arg0.fields["confirmText"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["yOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 119; s.pc = 37; return s.tmp_0;
  case 37:
    r0 = s.retval;
    s.tmp_0 = Sprite_scale__P2162_mk(s);
    r0 = s.arg0.fields["confirmText"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 120; s.pc = 38; return s.tmp_0;
  case 38:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Keyboard_constructor__P4078.info = {"start":5518,"length":686,"line":186,"column":4,"endLine":202,"endColumn":5,"fileName":"main.ts","functionName":"inline","argumentNames":["this","ui"]}

function Keyboard_constructor__P4078_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Keyboard_constructor__P4078, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  tmp_32: undefined,
  tmp_33: undefined,
  tmp_34: undefined,
  tmp_35: undefined,
  tmp_36: undefined,
  tmp_37: undefined,
  tmp_38: undefined,
  tmp_39: undefined,
  tmp_40: undefined,
  tmp_41: undefined,
  tmp_42: undefined,
  tmp_43: undefined,
  tmp_44: undefined,
  tmp_45: undefined,
  tmp_46: undefined,
  tmp_47: undefined,
  tmp_48: undefined,
  tmp_49: undefined,
  tmp_50: undefined,
  tmp_51: undefined,
  tmp_52: undefined,
  tmp_53: undefined,
  tmp_54: undefined,
  tmp_55: undefined,
  tmp_56: undefined,
  tmp_57: undefined,
  tmp_58: undefined,
  tmp_59: undefined,
  column___7026: undefined,
  keyIndex___7033: undefined,
  key___7041: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function textsprite_create__P4048(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.sprite___15722 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtcore_mkClassInstance(TextSprite__C4037_VT);
    s.tmp_0 = r0;
    s.tmp_1 = TextSprite_constructor__P4038_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg0;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg2;
    s.tmp_1.arg4 = 8;
    s.tmp_1.arg5 = 0;
    s.tmp_1.arg6 = 0;
    s.tmp_1.arg7 = 0;
    s.tmp_1.arg8 = 0;
    s.tmp_1.arg9 = 0;
    s.tmp_1.arg10 = null;
    s.callLocIdx = 1518; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.sprite___15722 = (s.tmp_0);
    s.tmp_0 = PhysicsEngine__C2298_v0_2_mk(s);
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1519; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = r0.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.sprite___15722;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2298_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.addSprite;
    s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = s.sprite___15722;
    return leave(s, r0)
  default: oops()
} } }
textsprite_create__P4048.info = {"start":5013,"length":274,"line":138,"column":4,"endLine":146,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"create","argumentNames":["text","bg","fg"]}

function textsprite_create__P4048_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: textsprite_create__P4048, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  sprite___15722: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function TextSprite_constructor__P4038(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.arg10 = (s.lambdaArgs[10]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, TextSprite__C4037_VT)) failedCast(r0);
    r0 = (s.arg0).fields["text"] = (s.arg1);
    r0 = (s.arg0).fields["bg"] = (s.arg2);
    r0 = (s.arg0).fields["fg"] = (s.arg3);
    r0 = (s.arg0).fields["maxFontHeight"] = (s.arg4);
    r0 = (s.arg0).fields["borderWidth"] = (s.arg5);
    r0 = (s.arg0).fields["borderColor"] = (s.arg6);
    r0 = (s.arg0).fields["padding"] = (s.arg7);
    r0 = (s.arg0).fields["outlineWidth"] = (s.arg8);
    r0 = (s.arg0).fields["outlineColor"] = (s.arg9);
    r0 = (s.arg0).fields["icon"] = (s.arg10);
    s.tmp_0 = Sprite_constructor__P2175_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.image.create(0, 0);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1496; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_setKind__P2195_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.Text___4036;
    s.callLocIdx = 1497; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = Sprite_setFlag__P2206_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1498; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = TextSprite_update__P4039_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1499; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
TextSprite_constructor__P4038.info = {"start":171,"length":501,"line":8,"column":4,"endLine":24,"endColumn":5,"fileName":"pxt_modules/arcade-text/text.ts","functionName":"inline","argumentNames":["this","text","bg","fg","maxFontHeight","borderWidth","borderColor","padding","outlineWidth","outlineColor","icon"]}

function TextSprite_constructor__P4038_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: TextSprite_constructor__P4038, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
  arg10: undefined,
} }





function Sprite_setFlag__P2206(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["flags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | s.arg1);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_setFlag__P2206.info = {"start":22188,"length":130,"line":731,"column":4,"endLine":734,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"setFlag","argumentNames":["this","flag","on"]}

function Sprite_setFlag__P2206_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_setFlag__P2206, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function GuessesUI_constructor__P4062(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___6592 = undefined;
    s.i___6607 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, GuessesUI__C4050_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = r0 = globals.words___4094;
    r0 = pxsim_Array__length(globals.words___4094);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - 1);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.randomRange(0, s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["word"] = (s.tmp_1);
    s.tmp_6 = r0 = s.arg0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["greenLetters"] = (s.tmp_7);
    s.tmp_8 = r0 = s.arg0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_9 = r0;
    r0 = (s.tmp_8).fields["yellowLetters"] = (s.tmp_9);
    s.tmp_10 = r0 = s.arg0;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_11 = r0;
    r0 = (s.tmp_10).fields["grayLetters"] = (s.tmp_11);
    s.tmp_12 = r0 = s.arg0;
    s.tmp_14 = textsprite_create__P4048_mk(s);
    s.tmp_14.arg0 = "InfiniWordle!";
    s.tmp_14.arg1 = 0;
    s.tmp_14.arg2 = 1;
    s.callLocIdx = 51; s.pc = 5; return s.tmp_14;
  case 5:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12).fields["title"] = (s.tmp_13);
    s.tmp_15 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_16 = r0;
    r0 = (s.tmp_15).fields["guessChars"] = (s.tmp_16);
    r0 = (s.arg0).fields["guesses"] = (0);
    r0 = (s.arg0).fields["spacing"] = (8);
    r0 = (s.arg0).fields["rowLimit"] = (5);
    r0 = (s.arg0).fields["yOffset"] = (20);
    r0 = (s.arg0).fields["selected"] = (0);
    s.tmp_17 = Sprite_left__P2187_mk(s);
    r0 = s.arg0.fields["title"];
    s.tmp_17.arg0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_19 = r0;
    r0 = (s.tmp_19 / 2);
    s.tmp_18 = r0;
    s.tmp_22 = Sprite_width__P2184_mk(s);
    r0 = s.arg0.fields["title"];
    s.tmp_22.arg0 = r0;
    s.callLocIdx = 52; s.pc = 7; return s.tmp_22;
  case 7:
    r0 = s.retval;
    s.tmp_21 = r0;
    r0 = (s.tmp_21 / 2);
    s.tmp_20 = r0;
    r0 = (s.tmp_18 - s.tmp_20);
    s.tmp_17.arg1 = r0;
    s.callLocIdx = 53; s.pc = 6; return s.tmp_17;
  case 6:
    r0 = s.retval;
    s.tmp_0 = Sprite_top__P2191_mk(s);
    r0 = s.arg0.fields["title"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_height__P2185_mk(s);
    r0 = s.arg0.fields["title"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 54; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 55; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.i___6592 = (1);
  case 1:
    s.tmp_1 = r0 = s.i___6592;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_3 = r0;
    r0 = (6 * s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = s.arg0.fields["guessChars"];
    s.tmp_4 = r0;
    s.tmp_6 = textsprite_create__P4048_mk(s);
    s.tmp_6.arg0 = "_";
    s.tmp_6.arg1 = 0;
    s.tmp_6.arg2 = 1;
    s.callLocIdx = 56; s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__push(s.tmp_4, s.tmp_5);
    r0 = (s.i___6592 + 1);
    s.i___6592 = (r0);
    { step = 1; continue; }
  case 2:
    s.i___6607 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___6607;
    r0 = s.arg0.fields["guessChars"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_4 = Sprite_left__P2187_mk(s);
    r0 = s.arg0.fields["guessChars"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___6607);
    s.tmp_4.arg0 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_9 = r0;
    r0 = (s.i___6607 % s.tmp_9);
    s.tmp_8 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_10 = r0;
    r0 = (s.tmp_8 * s.tmp_10);
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_12 = r0;
    r0 = (s.tmp_12 / 2);
    s.tmp_11 = r0;
    r0 = (s.tmp_7 + s.tmp_11);
    s.tmp_6 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_15 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_16 = r0;
    r0 = (s.tmp_15 * s.tmp_16);
    s.tmp_14 = r0;
    r0 = (s.tmp_14 / 2);
    s.tmp_13 = r0;
    r0 = (s.tmp_6 - s.tmp_13);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 57; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.tmp_0 = Sprite_top__P2191_mk(s);
    r0 = s.arg0.fields["guessChars"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.i___6607);
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["rowLimit"];
    s.tmp_5 = r0;
    r0 = (s.i___6607 / s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim.Math_.floor(s.tmp_4);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["spacing"];
    s.tmp_6 = r0;
    r0 = (s.tmp_3 * s.tmp_6);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["yOffset"];
    s.tmp_7 = r0;
    r0 = (s.tmp_2 + s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 58; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    r0 = (s.i___6607 + 1);
    s.i___6607 = (r0);
    { step = 3; continue; }
  case 4:
    s.tmp_0 = GuessesUI_select__P4065_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg0.fields["selected"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 59; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    s.tmp_0 = console_log__P380_mk(s);
    r0 = s.arg0.fields["word"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 60; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
GuessesUI_constructor__P4062.info = {"start":399,"length":620,"line":17,"column":4,"endLine":33,"endColumn":5,"fileName":"main.ts","functionName":"inline","argumentNames":["this"]}

function GuessesUI_constructor__P4062_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: GuessesUI_constructor__P4062, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  i___6592: undefined,
  i___6607: undefined,
  arg0: undefined,
} }





function console_log__P380(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = console_add__P376_mk(s);
    s.tmp_0.arg0 = 1;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 42; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_log__P380.info = {"start":1450,"length":86,"line":58,"column":4,"endLine":60,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"log","argumentNames":["value"]}

function console_log__P380_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_log__P380, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function console_add__P376(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.text___15641 = undefined;
    s.i___15650 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 < globals.minPriority___375);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_1 = console_inspect__P382_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 20;
    s.callLocIdx = 40; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.text___15641 = (r0);
    if ((s.text___15641) && (s.text___15641).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.text___15641);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.text___15641) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, "\n");
    s.text___15641 = (r0);
    s.i___15650 = (0);
  case 3:
    s.tmp_1 = r0 = s.i___15650;
    r0 = pxsim_Array__length(globals.listeners___4160);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = lambda_3_mk(s);
    r0 = pxsim_Array__getAt(globals.listeners___4160, s.i___15650);
    s.tmp_3.argL = r0;
    s.tmp_3.arg0 = s.arg0;
    s.tmp_3.arg1 = s.text___15641;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 41; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    r0 = (s.i___15650 + 1);
    s.i___15650 = (r0);
    { step = 3; continue; }
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_add__P376.info = {"start":632,"length":317,"line":28,"column":4,"endLine":36,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"add","argumentNames":["priority","message"]}

function console_add__P376_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_add__P376, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  text___15641: undefined,
  i___15650: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function listeners_inline__P4159(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.__log(s.arg0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
listeners_inline__P4159.info = {"start":534,"length":85,"line":25,"column":8,"endLine":25,"endColumn":93,"fileName":"pxt_modules/base/console.ts","functionName":"inline","argumentNames":["priority","text"]}

function listeners_inline__P4159_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: listeners_inline__P4159, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function game_eventContext__P2696(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_init__P4547_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1129; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = globals._scene___4539.fields["eventContext"];
    return leave(s, r0)
  default: oops()
} } }
game_eventContext__P2696.info = {"start":1084,"length":112,"line":40,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"eventContext","argumentNames":[]}

function game_eventContext__P2696_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_eventContext__P2696, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_pauseUntilAnyButtonIsPressed__P1995(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    setupResume(s, 1);
    pxsim.control.waitForEvent(2049, 0);
    checkResumeConsumed();
    return;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_pauseUntilAnyButtonIsPressed__P1995.info = {"start":9968,"length":96,"line":287,"column":4,"endLine":289,"endColumn":5,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"pauseUntilAnyButtonIsPressed","argumentNames":[]}

function controller_pauseUntilAnyButtonIsPressed__P1995_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_pauseUntilAnyButtonIsPressed__P1995, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function game_setWaitAnyButton__P2694(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    globals.__waitAnyButton___4543 = (s.arg0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_setWaitAnyButton__P2694.info = {"start":878,"length":83,"line":31,"column":4,"endLine":33,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"setWaitAnyButton","argumentNames":["f"]}

function game_setWaitAnyButton__P2694_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_setWaitAnyButton__P2694, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Math_FastRandom_constructor__P2750(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2748_VT)) failedCast(r0);
    r0 = (s.arg1 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim.Math_.randomRange(1, 65535);
    s.arg1 = (r0);
  case 1:
  case 2:
    r0 = (s.arg0).fields["seed"] = (s.arg1);
    r0 = (s.arg0).fields["lfsr"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_constructor__P2750.info = {"start":1425,"length":175,"line":44,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"inline","argumentNames":["this","seed"]}

function Math_FastRandom_constructor__P2750_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_constructor__P2750, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_consoleOverlay_listener__P4872(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4837);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 7; continue; }
  case 3:
  case 4:
    s.tmp_4 = helpers_arrayForEach__P109_mk(s);
    s.tmp_5 = helpers_arrayFilter__P110_mk(s);
    s.tmp_6 = helpers_stringSplit__P122_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.tmp_6.arg1 = "\n";
    s.tmp_6.arg2 = undefined;
    s.callLocIdx = 1328; s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = forEach_inline__P15799;
    s.callLocIdx = 1329; s.pc = 9; return s.tmp_5;
  case 9:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = game_consoleOverlay_listener_inline__P15804;
    s.callLocIdx = 1331; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    r0 = pxsim_Array__length(globals.consoleStrings___4837);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.consoleLines___4850);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = helpers_arraySplice__P100_mk(s);
    s.tmp_2.arg0 = globals.consoleStrings___4837;
    s.tmp_2.arg1 = 0;
    r0 = pxsim_Array__length(globals.consoleStrings___4837);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - globals.consoleLines___4850);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1332; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener__P4872.info = {"start":787,"length":571,"line":26,"column":4,"endLine":42,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"listener","argumentNames":["priority","text"]}

function game_consoleOverlay_listener__P4872_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener__P4872, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function forEach_inline__P15799(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P15799.info = {"start":985,"length":14,"line":32,"column":20,"endLine":32,"endColumn":34,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function forEach_inline__P15799_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P15799, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function game_consoleOverlay_listener_inline__P15804(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.j___15806 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.j___15806 = (0);
  case 1:
    s.tmp_1 = r0 = s.j___15806;
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_3 = r0 = globals.consoleStrings___4837;
    s.tmp_5 = helpers_stringSlice__P119_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.j___15806;
    r0 = (s.j___15806 + globals.consoleColumns___4860);
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 1330; s.pc = 3; return s.tmp_5;
  case 3:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_Array__push(s.tmp_3, s.tmp_4);
    r0 = (s.j___15806 + globals.consoleColumns___4860);
    s.j___15806 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_listener_inline__P15804.info = {"start":1022,"length":189,"line":33,"column":21,"endLine":37,"endColumn":13,"fileName":"pxt_modules/game/console.ts","functionName":"inline","argumentNames":["line"]}

function game_consoleOverlay_listener_inline__P15804_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_listener_inline__P15804, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  j___15806: undefined,
  arg0: undefined,
} }





function console_addListener__P383(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array_.indexOf(globals.listeners___4160, s.arg0, undefined);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > -1);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = pxsim_Array__push(globals.listeners___4160, s.arg0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
console_addListener__P383.info = {"start":3558,"length":197,"line":121,"column":4,"endLine":124,"endColumn":5,"fileName":"pxt_modules/base/console.ts","functionName":"addListener","argumentNames":["listener"]}

function console_addListener__P383_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: console_addListener__P383, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function scene_systemMenu_register__P2795(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.instance___4791);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.menu___1913;
    s.tmp_0.arg1 = 2049;
    s.tmp_0.arg2 = scene_systemMenu_showSystemMenu__P2796;
    s.callLocIdx = 1315; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_register__P2795.info = {"start":12793,"length":193,"line":382,"column":4,"endLine":386,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"register","argumentNames":[]}

function scene_systemMenu_register__P2795_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_register__P2795, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_showSystemMenu__P2796(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.instance___4791);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_0 = game_pushScene__P2697_mk(s);
    s.callLocIdx = 1316; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_PauseMenu__C2784_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_PauseMenu_constructor__P2785_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = scene_systemMenu_buildOptionList__P2792;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1317; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    globals.instance___4791 = (s.tmp_0);
    s.tmp_0 = scene_systemMenu_PauseMenu_show__P2786_mk(s);
    s.tmp_0.arg0 = globals.instance___4791;
    s.callLocIdx = 1318; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_showSystemMenu__P2796.info = {"start":12992,"length":172,"line":388,"column":4,"endLine":393,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"showSystemMenu","argumentNames":[]}

function scene_systemMenu_showSystemMenu__P2796_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_showSystemMenu__P2796, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_systemMenu_buildOptionList__P2792(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.options___16757 = undefined;
    r0 = pxsim_Array__mk();
    s.options___16757 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2776_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2777_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_DOWN_ICON___2806;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P16765;
    s.tmp_1.arg3 = scene_systemMenu_volumeDown__P4797;
    s.callLocIdx = 1298; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16757, s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2776_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2777_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.VOLUME_UP_ICON___2803;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P16779;
    s.tmp_1.arg3 = scene_systemMenu_volumeUp__P4796;
    s.callLocIdx = 1300; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16757, s.tmp_0);
    r0 = 0;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2776_VT);
    s.tmp_1 = r0;
    s.tmp_2 = scene_systemMenu_MenuOption_constructor__P2777_mk(s);
    s.tmp_2.arg0 = s.tmp_1;
    s.tmp_2.arg1 = globals.BRIGHTNESS_DOWN_ICON___2804;
    s.tmp_2.arg2 = scene_systemMenu_buildOptionList_inline__P16794;
    s.tmp_2.arg3 = scene_systemMenu_brightnessDown__P4799;
    s.callLocIdx = 1303; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16757, s.tmp_1);
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2776_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2777_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.BRIGHTNESS_UP_ICON___2809;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P16809;
    s.tmp_1.arg3 = scene_systemMenu_brightnessUp__P4798;
    s.callLocIdx = 1305; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16757, s.tmp_0);
  case 1:
  case 2:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2776_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2777_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.STATS_ICON___2810;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P16824;
    s.tmp_1.arg3 = scene_systemMenu_toggleStats__P4801;
    s.callLocIdx = 1306; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16757, s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2776_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2777_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CONSOLE_ICON___2808;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P16833;
    s.tmp_1.arg3 = scene_systemMenu_toggleConsole__P4802;
    s.callLocIdx = 1308; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16757, s.tmp_0);
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2776_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2777_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.SLEEP_ICON___2807;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P16842;
    s.tmp_1.arg3 = scene_systemMenu_sleep__P4803;
    s.callLocIdx = 1309; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16757, s.tmp_0);
    r0 = pxsim_numops_toBoolDecr(globals.customMenuOptions___4792);
    if (!r0) { step = 3; continue; }
    s.tmp_0 = helpers_arrayConcat__P113_mk(s);
    s.tmp_0.arg0 = s.options___16757;
    s.tmp_0.arg1 = globals.customMenuOptions___4792;
    s.callLocIdx = 1310; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.options___16757 = (r0);
  case 3:
  case 4:
    r0 = pxsim_pxtcore_mkClassInstance(scene_systemMenu_MenuOption__C2776_VT);
    s.tmp_0 = r0;
    s.tmp_1 = scene_systemMenu_MenuOption_constructor__P2777_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = globals.CLOSE_MENU_ICON___2805;
    s.tmp_1.arg2 = scene_systemMenu_buildOptionList_inline__P16855;
    s.tmp_1.arg3 = scene_systemMenu_closeMenu__P2791;
    s.callLocIdx = 1311; s.pc = 13; return s.tmp_1;
  case 13:
    r0 = s.retval;
    r0 = pxsim_Array__push(s.options___16757, s.tmp_0);
    r0 = s.options___16757;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList__P2792.info = {"start":10499,"length":1149,"line":334,"column":4,"endLine":354,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildOptionList","argumentNames":[]}

function scene_systemMenu_buildOptionList__P2792_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList__P2792, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  options___16757: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P16765(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P1607_mk(s);
    s.callLocIdx = 1297; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P16765.info = {"start":10644,"length":39,"line":337,"column":54,"endLine":337,"endColumn":93,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P16765_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P16765, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P16779(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_3 = music_volume__P1607_mk(s);
    s.callLocIdx = 1299; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 2);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("VOLUME UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P16779.info = {"start":10751,"length":37,"line":338,"column":52,"endLine":338,"endColumn":89,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P16779_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P16779, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P16794(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = globals.brightness___1750;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS DOWN (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P16794.info = {"start":10910,"length":48,"line":340,"column":62,"endLine":340,"endColumn":110,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P16794_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P16794, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P16809(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = globals.brightness___1750;
    s.tmp_2 = r0;
    if ((s.tmp_2) && (s.tmp_2).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.tmp_2);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_2) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_String__concat("BRIGHTNESS UP (", s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P16809.info = {"start":11038,"length":46,"line":341,"column":60,"endLine":341,"endColumn":106,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P16809_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P16809, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P16824(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.stats___2690);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE STATS";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW STATS";
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P16824.info = {"start":11160,"length":46,"line":343,"column":48,"endLine":343,"endColumn":94,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P16824_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P16824, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P16833(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4837);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "HIDE CONSOLE";
    { step = 2; continue; }
  case 1:
    r0 = "SHOW CONSOLE";
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P16833.info = {"start":11273,"length":71,"line":344,"column":50,"endLine":344,"endColumn":121,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P16833_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P16833, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_buildOptionList_inline__P16842(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "SLEEP";
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P16842.info = {"start":11411,"length":13,"line":345,"column":48,"endLine":345,"endColumn":61,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P16842_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P16842, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_buildOptionList_inline__P16855(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = "CLOSE";
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildOptionList_inline__P16855.info = {"start":11590,"length":13,"line":351,"column":53,"endLine":351,"endColumn":66,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_buildOptionList_inline__P16855_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildOptionList_inline__P16855, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_setScreenBrightnessSupported__P4804(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = 0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightnessSupported__P4804.info = {"start":10398,"length":95,"line":330,"column":4,"endLine":332,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightnessSupported","argumentNames":[]}

function scene_systemMenu_setScreenBrightnessSupported__P4804_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightnessSupported__P4804, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_sleep__P4803(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_pxtcore.deepSleep();
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_sleep__P4803.info = {"start":10072,"length":51,"line":316,"column":4,"endLine":318,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"sleep","argumentNames":[]}

function scene_systemMenu_sleep__P4803_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_sleep__P4803, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
} }





function scene_systemMenu_toggleConsole__P4802(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4837);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_4 = game_consoleOverlay_setVisible__P2815_mk(s);
    s.tmp_4.arg0 = false;
    s.tmp_4.arg1 = undefined;
    s.callLocIdx = 1291; s.pc = 3; return s.tmp_4;
  case 3:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = game_consoleOverlay_setVisible__P2815_mk(s);
    s.tmp_0.arg0 = true;
    s.tmp_0.arg1 = undefined;
    s.callLocIdx = 1292; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = console_log__P380_mk(s);
    s.tmp_0.arg0 = "console";
    s.callLocIdx = 1293; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleConsole__P4802.info = {"start":9827,"length":239,"line":307,"column":4,"endLine":314,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleConsole","argumentNames":[]}

function scene_systemMenu_toggleConsole__P4802_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleConsole__P4802, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function game_consoleOverlay_setVisible__P2815(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = r0 = s.arg0;
    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4837);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 != s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    { step = 2; continue; }
  case 1:
    r0 = undefined;
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    globals.consoleStrings___4837 = (s.tmp_6);
  case 3:
  case 4:
    r0 = (s.arg1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    globals.consoleColor___4836 = (s.arg1);
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_setVisible__P2815.info = {"start":562,"length":219,"line":19,"column":4,"endLine":24,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"setVisible","argumentNames":["value","col"]}

function game_consoleOverlay_setVisible__P2815_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_setVisible__P2815, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_toggleStats__P4801(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.stats___2690);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    globals.stats___2690 = (r0);
    r0 = pxsim_numops_toBoolDecr(globals.stats___2690);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.control_EventContext_onStats___398;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = lambda_2_mk(s);
    s.tmp_3.argL = globals.control_EventContext_onStats___398;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3.arg0 = r0;
    setupLambda(s.tmp_3, s.tmp_3.argL);
    s.callLocIdx = 1289; s.pc = 5; return s.tmp_3;
  case 5:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_toggleStats__P4801.info = {"start":9642,"length":179,"line":300,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"toggleStats","argumentNames":[]}

function scene_systemMenu_toggleStats__P4801_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_toggleStats__P4801, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_systemMenu_brightnessDown__P4799(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_setScreenBrightness__P4800_mk(s);
    r0 = globals.brightness___1750;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1285; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessDown__P4799.info = {"start":9198,"length":87,"line":289,"column":4,"endLine":291,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessDown","argumentNames":[]}

function scene_systemMenu_brightnessDown__P4799_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessDown__P4799, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_systemMenu_setScreenBrightness__P4800(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = helpers_setScreenBrightness__P1762_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1286; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = settings_writeNumber__P1858_mk(s);
    s.tmp_0.arg0 = "#brightness";
    r0 = globals.brightness___1750;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1288; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setScreenBrightness__P4800.info = {"start":9291,"length":345,"line":293,"column":4,"endLine":298,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setScreenBrightness","argumentNames":["b"]}

function scene_systemMenu_setScreenBrightness__P4800_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setScreenBrightness__P4800, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function helpers_setScreenBrightness__P1762(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 10;
    s.tmp_0.arg1 = 100;
    r0 = (s.arg1 | 0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 130; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.arg1 = (r0);
    globals.brightness___1750 = (s.arg1);
    r0 = pxsim_pxtcore.setScreenBrightness(globals.brightness___1750);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_setScreenBrightness__P1762.info = {"start":7427,"length":210,"line":238,"column":4,"endLine":242,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"setScreenBrightness","argumentNames":["img","b"]}

function helpers_setScreenBrightness__P1762_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_setScreenBrightness__P1762, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_brightnessUp__P4798(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_setScreenBrightness__P4800_mk(s);
    r0 = globals.brightness___1750;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 5);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1283; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_brightnessUp__P4798.info = {"start":9107,"length":85,"line":285,"column":4,"endLine":287,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"brightnessUp","argumentNames":[]}

function scene_systemMenu_brightnessUp__P4798_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_brightnessUp__P4798, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
} }





function scene_systemMenu_volumeDown__P4797(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___17043 = undefined;
    s.remainder___17046 = undefined;
    s.newVolume___17049 = undefined;
    s.tmp_0 = music_volume__P1607_mk(s);
    s.callLocIdx = 1280; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.v___17043 = (r0);
    r0 = (s.v___17043 % 32);
    s.remainder___17046 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.remainder___17046);
    if (!r0) { step = 1; continue; }
    r0 = s.remainder___17046;
    { step = 2; continue; }
  case 1:
    r0 = 32;
  case 2:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.v___17043 - s.tmp_0);
    s.newVolume___17049 = (r0);
    s.tmp_0 = scene_systemMenu_setVolume__P4795_mk(s);
    s.tmp_0.arg0 = s.newVolume___17049;
    s.callLocIdx = 1281; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeDown__P4797.info = {"start":8914,"length":187,"line":278,"column":4,"endLine":283,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeDown","argumentNames":[]}

function scene_systemMenu_volumeDown__P4797_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeDown__P4797, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___17043: undefined,
  remainder___17046: undefined,
  newVolume___17049: undefined,
} }





function scene_systemMenu_setVolume__P4795(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = music_setVolume__P1606_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1275; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = music_playTone__P1608_mk(s);
    s.tmp_0.arg0 = 440;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 1276; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = settings_writeNumber__P1858_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 1277; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_setVolume__P4795.info = {"start":8565,"length":166,"line":265,"column":4,"endLine":269,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setVolume","argumentNames":["newVolume"]}

function scene_systemMenu_setVolume__P4795_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_setVolume__P4795, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function music_playTone__P1608(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.id___16975 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_pxtrt.mklocRef();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.arg1);
    s.arg1 = (s.tmp_0);
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtrt_stlocRef(s.arg1, 86400000);
  case 1:
  case 2:
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 2000);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = music_playNoteCore__P4218_mk(s);
    s.tmp_2.arg0 = 0;
    s.tmp_2.arg1 = s.arg0;
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 75; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    s.tmp_0 = pause__P413_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.arg1);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 76; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    r0 = (globals.playToneID___4220 + 1);
    s.tmp_0 = r0;
    globals.playToneID___4220 = (r0);
    s.id___16975 = (s.tmp_0);
    r0 = pxsim_pxtcore_mkAction(3, music_playTone_inline__P16981);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.id___16975);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone__P1608.info = {"start":2591,"length":831,"line":83,"column":4,"endLine":108,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playTone","argumentNames":["frequency","ms"]}

function music_playTone__P1608_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone__P1608, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  id___16975: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function music_playTone_inline__P16981(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pos___16982 = undefined;
    s.now___16992 = undefined;
    s.d___16995 = undefined;
    s.t___16999 = undefined;
    r0 = pxsim.control.millis();
    s.pos___16982 = (r0);
  case 1:
    r0 = (s.caps[0] == globals.playToneID___4220);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 6; continue; }
    r0 = pxsim.control.millis();
    s.now___16992 = (r0);
    r0 = (s.pos___16982 - s.now___16992);
    s.d___16995 = (r0);
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 500;
    s.callLocIdx = 77; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.t___16999 = (r0);
    s.tmp_0 = r0 = s.caps[1];
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.t___16999);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stlocRef(s.tmp_0, s.tmp_1);
    r0 = (s.pos___16982 + s.t___16999);
    s.pos___16982 = (r0);
    s.tmp_0 = music_playNoteCore__P4218_mk(s);
    r0 = (s.d___16995 - 1);
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.caps[2];
    s.tmp_0.arg2 = s.t___16999;
    s.callLocIdx = 78; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = pxsim_pxtrt_ldlocRef(s.caps[1]);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_2 = pause__P413_mk(s);
    r0 = (s.d___16995 + s.t___16999);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 79; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    { step = 5; continue; }
  case 4:
    s.tmp_0 = pause__P413_mk(s);
    r0 = (s.d___16995 + s.t___16999);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 100);
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 80; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 5:
    { step = 1; continue; }
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playTone_inline__P16981.info = {"start":2890,"length":515,"line":92,"column":34,"endLine":106,"endColumn":13,"fileName":"pxt_modules/mixer/melody.ts","functionName":"inline","argumentNames":[]}

function music_playTone_inline__P16981_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playTone_inline__P16981, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  pos___16982: undefined,
  now___16992: undefined,
  d___16995: undefined,
  t___16999: undefined,
} }





function music_playNoteCore__P4218(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___17029 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.control.createBuffer(12);
    s.buf___17029 = (r0);
    s.tmp_0 = music_addNote__P4225_mk(s);
    s.tmp_0.arg0 = s.buf___17029;
    s.tmp_0.arg1 = 0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = 255;
    s.tmp_0.arg4 = 255;
    s.tmp_0.arg5 = 3;
    s.tmp_0.arg6 = s.arg1;
    s.tmp_1 = music_volume__P1607_mk(s);
    s.callLocIdx = 73; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg7 = r0;
    s.tmp_0.arg8 = s.arg1;
    s.callLocIdx = 74; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim.music.queuePlayInstructions(s.arg0, s.buf___17029);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
music_playNoteCore__P4218.info = {"start":1877,"length":240,"line":66,"column":4,"endLine":70,"endColumn":5,"fileName":"pxt_modules/mixer/melody.ts","functionName":"playNoteCore","argumentNames":["when","frequency","ms"]}

function music_playNoteCore__P4218_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_playNoteCore__P4218, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___17029: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_volumeUp__P4796(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.v___16943 = undefined;
    s.remainder___16946 = undefined;
    s.newVolume___16949 = undefined;
    s.tmp_0 = music_volume__P1607_mk(s);
    s.callLocIdx = 1278; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.v___16943 = (r0);
    r0 = (s.v___16943 % 32);
    s.remainder___16946 = (r0);
    r0 = (s.v___16943 + 32);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.remainder___16946);
    s.newVolume___16949 = (r0);
    s.tmp_0 = scene_systemMenu_setVolume__P4795_mk(s);
    s.tmp_0.arg0 = s.newVolume___16949;
    s.callLocIdx = 1279; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_volumeUp__P4796.info = {"start":8737,"length":171,"line":271,"column":4,"endLine":276,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"volumeUp","argumentNames":[]}

function scene_systemMenu_volumeUp__P4796_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_volumeUp__P4796, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  v___16943: undefined,
  remainder___16946: undefined,
  newVolume___16949: undefined,
} }





function game_consoleOverlay_isVisible__P2813(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.consoleStrings___4837);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
game_consoleOverlay_isVisible__P2813.info = {"start":422,"length":68,"line":11,"column":4,"endLine":13,"endColumn":5,"fileName":"pxt_modules/game/console.ts","functionName":"isVisible","argumentNames":[]}

function game_consoleOverlay_isVisible__P2813_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_consoleOverlay_isVisible__P2813, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_closeMenu__P2791(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.instance___4791);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = scene_systemMenu_PauseMenu_dispose__P2790_mk(s);
    s.tmp_0.arg0 = globals.instance___4791;
    s.callLocIdx = 1294; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    globals.instance___4791 = (undefined);
    s.tmp_0 = controller__setUserEventsEnabled__P1996_mk(s);
    s.tmp_0.arg0 = true;
    s.callLocIdx = 1295; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = game_popScene__P2698_mk(s);
    s.callLocIdx = 1296; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_closeMenu__P2791.info = {"start":10129,"length":216,"line":320,"column":4,"endLine":327,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"closeMenu","argumentNames":[]}

function scene_systemMenu_closeMenu__P2791_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_closeMenu__P2791, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose__P2790(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2784_VT)) failedCast(r0);
    r0 = s.arg0.fields["options"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = scene_systemMenu_PauseMenu_dispose_inline__P16327;
    s.callLocIdx = 1271; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["options"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose__P2790.info = {"start":7732,"length":165,"line":243,"column":8,"endLine":248,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_dispose__P2790_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose__P2790, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_dispose_inline__P16327(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = scene_systemMenu_MenuOption_dispose__P2783_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1270; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_dispose_inline__P16327.info = {"start":7813,"length":16,"line":245,"column":37,"endLine":245,"endColumn":53,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["o"]}

function scene_systemMenu_PauseMenu_dispose_inline__P16327_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_dispose_inline__P16327, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_dispose__P2783(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2776_VT)) failedCast(r0);
    r0 = s.arg0.fields["card"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = Sprite_destroy__P2215_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = undefined;
    s.tmp_1.arg2 = undefined;
    s.callLocIdx = 1190; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_destroy__P2215_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 1191; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = (s.arg0).fields["card"] = (undefined);
    r0 = (s.arg0).fields["icon"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_dispose__P2783.info = {"start":1812,"length":216,"line":77,"column":8,"endLine":84,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"dispose","argumentNames":["this"]}

function scene_systemMenu_MenuOption_dispose__P2783_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_dispose__P2783, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_destroy__P2215(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 | 2);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["flags"] = (s.tmp_3);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    s.tmp_0 = effects_ParticleEffect_destroy__P2954_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = undefined;
    s.callLocIdx = 499; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    s.tmp_0 = Sprite__destroyCore__P2216_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 500; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 4:
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_destroy__P2215.info = {"start":28259,"length":293,"line":910,"column":4,"endLine":919,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"destroy","argumentNames":["this","effect","duration"]}

function Sprite_destroy__P2215_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_destroy__P2215, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ParticleEffect_destroy__P2954(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C2951_VT)) failedCast(r0);
    s.tmp_0 = Sprite_setFlag__P2206_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 7168;
    s.tmp_0.arg2 = true;
    s.callLocIdx = 1455; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = effects_ParticleEffect_start__P2953_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg3;
    s.tmp_0.arg3 = null;
    r0 = s.arg1.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 512);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1456; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 1; continue; }
    r0 = s.arg2;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["defaultLifespan"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 2);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.arg1).fields["lifespan"] = (s.tmp_1);
    s.tmp_0 = effects_ImageEffect_applyTo__P2980_mk(s);
    s.tmp_0.arg0 = globals.dissolve___2983;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1457; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_destroy__P2954.info = {"start":1736,"length":368,"line":41,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"destroy","argumentNames":["this","anchor","duration","particlesPerSecond"]}

function effects_ParticleEffect_destroy__P2954_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_destroy__P2954, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function dissolve_inline__P16450(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.i___16453 = undefined;
    s.x___16464 = undefined;
    s.y___16470 = undefined;
    s.w___16476 = undefined;
    s.h___16480 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 * s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 >> 5);
    s.i___16453 = (r0);
  case 1:
    r0 = (s.i___16453 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = Math_FastRandom_randomRange__P2752_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.tmp_1.arg1 = 0;
    r0 = pxsim_ImageMethods.width(s.arg0);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 39; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.x___16464 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P2752_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 0;
    r0 = pxsim_ImageMethods.height(s.arg0);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 40; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.y___16470 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P2752_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 41; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.w___16476 = (r0);
    s.tmp_0 = Math_FastRandom_randomRange__P2752_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = 1;
    s.tmp_0.arg2 = 3;
    s.callLocIdx = 42; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.h___16480 = (r0);
    s.tmp_0 = helpers_imageDrawRect__P1758_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.x___16464;
    s.tmp_0.arg2 = s.y___16470;
    s.tmp_0.arg3 = s.w___16476;
    s.tmp_0.arg4 = s.h___16480;
    s.tmp_0.arg5 = 0;
    s.callLocIdx = 43; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    r0 = (s.i___16453 - 1);
    s.i___16453 = (r0);
    { step = 1; continue; }
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
dissolve_inline__P16450.info = {"start":2199,"length":360,"line":60,"column":49,"endLine":69,"endColumn":5,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":["input","r"]}

function dissolve_inline__P16450_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: dissolve_inline__P16450, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  i___16453: undefined,
  x___16464: undefined,
  y___16470: undefined,
  w___16476: undefined,
  h___16480: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function helpers_imageDrawRect__P1758(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg3 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.arg4 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = (s.arg3 - 1);
    s.arg3 = (r0);
    r0 = (s.arg4 - 1);
    s.arg4 = (r0);
    s.tmp_0 = helpers_imageDrawLine__P1757_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 126; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = helpers_imageDrawLine__P1757_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 127; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = helpers_imageDrawLine__P1757_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg3 = r0;
    s.tmp_0.arg4 = s.arg2;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 128; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.tmp_0 = helpers_imageDrawLine__P1757_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = (s.arg1 + s.arg3);
    s.tmp_0.arg1 = r0;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.arg1;
    r0 = (s.arg2 + s.arg4);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = s.arg5;
    s.callLocIdx = 129; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawRect__P1758.info = {"start":5325,"length":370,"line":167,"column":4,"endLine":175,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawRect","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawRect__P1758_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawRect__P1758, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function helpers_imageDrawLine__P1757(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = helpers_pack__P4261_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.tmp_2.arg1 = s.arg2;
    s.callLocIdx = 124; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = helpers_pack__P4261_mk(s);
    s.tmp_4.arg0 = s.arg3;
    s.tmp_4.arg1 = s.arg4;
    s.callLocIdx = 125; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods._drawLine(s.tmp_0, s.tmp_1, s.tmp_3, s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
helpers_imageDrawLine__P1757.info = {"start":5161,"length":159,"line":164,"column":4,"endLine":166,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageDrawLine","argumentNames":["img","x","y","w","h","c"]}

function helpers_imageDrawLine__P1757_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageDrawLine__P1757, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function effects_ImageEffect_applyTo__P2980(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.clonedImage___16576 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C2978_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = s.arg1.fields["_image"];
    s.tmp_5 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_5);
    s.clonedImage___16576 = (r0);
    s.tmp_0 = effects_ImageEffect_change__P2981_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.clonedImage___16576;
    s.callLocIdx = 1476; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = Sprite_setImage__P2178_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.tmp_0.arg1 = s.clonedImage___16576;
    s.callLocIdx = 1477; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_applyTo__P2980.info = {"start":823,"length":218,"line":21,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"applyTo","argumentNames":["this","sprite"]}

function effects_ImageEffect_applyTo__P2980_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_applyTo__P2980, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  clonedImage___16576: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ImageEffect_change__P2981(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C2978_VT)) failedCast(r0);
    s.tmp_0 = if_effect_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    r0 = s.arg0.fields["fastRandom"];
    s.tmp_0.arg2 = r0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "effect"), 3);
      s.callLocIdx = 1478; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["effect"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["effect"], 3); s.callLocIdx = 1478; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1478; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 1478; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_change__P2981.info = {"start":1151,"length":81,"line":32,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"change","argumentNames":["this","input"]}

function effects_ImageEffect_change__P2981_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_change__P2981, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ParticleEffect_start__P2953(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.src___16600 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ParticleEffect__C2951_VT)) failedCast(r0);
    r0 = s.arg0.fields["sourceFactory"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 9; continue; }
  case 1:
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.arg3);
    if (!r0) { step = 3; continue; }
    r0 = s.arg3;
    { step = 4; continue; }
  case 3:
    r0 = s.arg0.fields["defaultRate"];
  case 4:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.tmp_4 = if_sourceFactory_3_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tmp_3;
    if (!s.tmp_4.arg0.vtable.iface) {
      setupLambda(s.tmp_4, pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "sourceFactory"), 3);
      s.callLocIdx = 1453; s.pc = 10; return s.tmp_4;
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["sourceFactory"];
      if (s.tmp_4.fn == null) { setupLambda(s.tmp_4, s.tmp_4.arg0.fields["sourceFactory"], 3); s.callLocIdx = 1453; s.pc = 10; return s.tmp_4; }
      else if (s.tmp_4.fn.isGetter) { s.tmp_4.stage2Call = true; s.callLocIdx = 1453; s.pc = 10; return s.tmp_4;; }
     else { s.callLocIdx = 1453; s.pc = 10; return s.tmp_4; }
    }
  case 10:
    r0 = s.retval;
    s.src___16600 = (r0);
    s.tmp_0 = particles_ParticleSource_setRelativeToCamera__P2851_mk(s);
    s.tmp_0.arg0 = s.src___16600;
    r0 = pxsim_numops_toBoolDecr(s.arg4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1454; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 7; continue; }
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg2;
    { step = 6; continue; }
  case 5:
    r0 = s.arg0.fields["defaultLifespan"];
  case 6:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = (s.src___16600).fields["lifespan"] = (s.tmp_1);
  case 7:
  case 8:
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ParticleEffect_start__P2953.info = {"start":967,"length":452,"line":26,"column":8,"endLine":32,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"start","argumentNames":["this","anchor","duration","particlesPerSecond","relativeToCamera"]}

function effects_ParticleEffect_start__P2953_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ParticleEffect_start__P2953, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  src___16600: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function particles_ParticleSource_setRelativeToCamera__P2851(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["pFlags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 4);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["pFlags"];
    s.tmp_4 = r0;
    r0 = (~ s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 4);
    s.tmp_2 = r0;
    r0 = (~ s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["pFlags"] = (s.tmp_1);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_setRelativeToCamera__P2851.info = {"start":6439,"length":173,"line":211,"column":8,"endLine":214,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"setRelativeToCamera","argumentNames":["this","on"]}

function particles_ParticleSource_setRelativeToCamera__P2851_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_setRelativeToCamera__P2851, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite__destroyCore__P2216(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___16377 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 501; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.scene___16377 = (r0);
    r0 = s.scene___16377.fields["allSprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg0);
    r0 = s.arg0.fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___16377.fields["spritesByKind"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_kind"];
    s.tmp_3 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_2, s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    s.tmp_5 = sprites_SpriteSet_remove__P2257_mk(s);
    r0 = s.scene___16377.fields["spritesByKind"];
    s.tmp_6 = r0;
    r0 = s.arg0.fields["_kind"];
    s.tmp_7 = r0;
    r0 = pxsim_pxtrt.mapGetGeneric(s.tmp_6, s.tmp_7);
    s.tmp_5.arg0 = r0;
    s.tmp_5.arg1 = s.arg0;
    s.callLocIdx = 505; s.pc = 8; return s.tmp_5;
  case 8:
    r0 = s.retval;
  case 3:
  case 4:
    s.tmp_0 = PhysicsEngine__C2298_v1_2_mk(s);
    r0 = s.scene___16377.fields["physicsEngine"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, PhysicsEngine__C2298_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.removeSprite;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = s.arg0.fields["destroyHandler"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = if_destroyHandler_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "destroyHandler"), 1);
      s.callLocIdx = 506; s.pc = 10; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["destroyHandler"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["destroyHandler"], 1); s.callLocIdx = 506; s.pc = 10; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 506; s.pc = 10; return s.tmp_1;; }
     else { s.callLocIdx = 506; s.pc = 10; return s.tmp_1; }
    }
  case 10:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P16406);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, Sprite__destroyCore_inline__P16412);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    r0 = s.scene___16377.fields["destroyedHandlers"];
    s.tmp_3.arg0 = r0;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 508; s.pc = 12; return s.tmp_3;
  case 12:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 510; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore__P2216.info = {"start":28558,"length":522,"line":921,"column":4,"endLine":933,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"_destroyCore","argumentNames":["this"]}

function Sprite__destroyCore__P2216_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore__P2216, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  scene___16377: undefined,
  arg0: undefined,
} }





function forEach_inline__P16406(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P16406.info = {"start":29003,"length":26,"line":931,"column":20,"endLine":931,"endColumn":46,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P16406_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P16406, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite__destroyCore_inline__P16412(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 509; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 509; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 509; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 509; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite__destroyCore_inline__P16412.info = {"start":29052,"length":20,"line":932,"column":21,"endLine":932,"endColumn":41,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite__destroyCore_inline__P16412_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite__destroyCore_inline__P16412, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function PhysicsEngine_removeSprite__P2301(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, PhysicsEngine__C2298_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
PhysicsEngine_removeSprite__P2301.info = {"start":159,"length":32,"line":10,"column":4,"endLine":10,"endColumn":36,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function PhysicsEngine_removeSprite__P2301_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: PhysicsEngine_removeSprite__P2301, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_kind__P2194(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_kind"];
    return leave(s, r0)
  default: oops()
} } }
Sprite_kind__P2194.info = {"start":13676,"length":41,"line":486,"column":4,"endLine":488,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"kind","argumentNames":["this"]}

function Sprite_kind__P2194_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_kind__P2194, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_constructor__P2777(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2776_VT)) failedCast(r0);
    r0 = (s.arg0).fields["iconImage"] = (s.arg1);
    r0 = (s.arg0).fields["getText"] = (s.arg2);
    r0 = (s.arg0).fields["action"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_constructor__P2777.info = {"start":786,"length":108,"line":38,"column":8,"endLine":39,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","iconImage","getText","action"]}

function scene_systemMenu_MenuOption_constructor__P2777_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_constructor__P2777, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function helpers_screenBrightness__P1763(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = globals.brightness___1750;
    return leave(s, r0)
  default: oops()
} } }
helpers_screenBrightness__P1763.info = {"start":7643,"length":98,"line":244,"column":4,"endLine":246,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"screenBrightness","argumentNames":["img"]}

function helpers_screenBrightness__P1763_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_screenBrightness__P1763, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function helpers_arrayConcat__P113(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.out___16860 = undefined;
    s.value___16863 = undefined;
    s.unnamed46___U2 = undefined;
    s.unnamed47___U3 = undefined;
    s.value___16870 = undefined;
    s.unnamed48___U5 = undefined;
    s.unnamed49___U6 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__mk();
    s.out___16860 = (r0);
    s.value___16863 = (undefined);
    s.unnamed46___U2 = (s.arg0);
    s.unnamed47___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed47___U3;
    r0 = pxsim_Array__length(s.unnamed46___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = pxsim_Array__getAt(s.unnamed46___U2, s.unnamed47___U3);
    s.value___16863 = (r0);
    r0 = pxsim_Array__push(s.out___16860, s.value___16863);
    r0 = (s.unnamed47___U3 + 1);
    s.unnamed47___U3 = (r0);
    { step = 1; continue; }
  case 2:
    s.unnamed46___U2 = (undefined);
    s.value___16870 = (undefined);
    s.unnamed48___U5 = (s.arg1);
    s.unnamed49___U6 = (0);
  case 3:
    s.tmp_0 = r0 = s.unnamed49___U6;
    r0 = pxsim_Array__length(s.unnamed48___U5);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed48___U5, s.unnamed49___U6);
    s.value___16870 = (r0);
    r0 = pxsim_Array__push(s.out___16860, s.value___16870);
    r0 = (s.unnamed49___U6 + 1);
    s.unnamed49___U6 = (r0);
    { step = 3; continue; }
  case 4:
    s.unnamed48___U5 = (undefined);
    r0 = s.out___16860;
    return leave(s, r0)
  default: oops()
} } }
helpers_arrayConcat__P113.info = {"start":8639,"length":264,"line":288,"column":4,"endLine":297,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arrayConcat","argumentNames":["arr","otherArr"]}

function helpers_arrayConcat__P113_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arrayConcat__P113, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  out___16860: undefined,
  value___16863: undefined,
  unnamed46___U2: undefined,
  unnamed47___U3: undefined,
  value___16870: undefined,
  unnamed48___U5: undefined,
  unnamed49___U6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_show__P2786(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___15876 = undefined;
    s.i___15877 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2784_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = if_generator_1_mk(s);
    s.tmp_2.arg0 = s.arg0;
    if (!s.tmp_2.arg0.vtable.iface) {
      setupLambda(s.tmp_2, pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "generator"), 1);
      s.callLocIdx = 1203; s.pc = 3; return s.tmp_2;
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["generator"];
      if (s.tmp_2.fn == null) { setupLambda(s.tmp_2, s.tmp_2.arg0.fields["generator"], 1); s.callLocIdx = 1203; s.pc = 3; return s.tmp_2; }
      else if (s.tmp_2.fn.isGetter) { s.tmp_2.stage2Call = true; s.callLocIdx = 1203; s.pc = 3; return s.tmp_2;; }
     else { s.callLocIdx = 1203; s.pc = 3; return s.tmp_2; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["options"] = (s.tmp_1);
    r0 = (s.arg0).fields["selection"] = (0);
    s.i___15877 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___15877;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.i___15877);
    s.current___15876 = (r0);
    s.tmp_0 = scene_systemMenu_MenuOption_show__P2778_mk(s);
    s.tmp_0.arg0 = s.current___15876;
    s.callLocIdx = 1204; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_MenuOption_setTheme__P2781_mk(s);
    s.tmp_0.arg0 = s.current___15876;
    r0 = s.arg0.fields["theme"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1205; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_MenuOption_position__P2779_mk(s);
    s.tmp_0.arg0 = s.current___15876;
    s.tmp_2 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "padding");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["padding"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["padding"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1206; s.pc = 7; return s.tmp_2; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_5 = r0 = s.i___15877;
    s.tmp_7 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardsPerRow");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1207; s.pc = 8; return s.tmp_7; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_5 % s.tmp_6);
    s.tmp_4 = r0;
    s.tmp_10 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "cardWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["cardWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["cardWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 1208; s.pc = 9; return s.tmp_10; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_9 = r0;
    s.tmp_12 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_12.arg0 = r0;
    if (!s.tmp_12.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "cardSpacing");
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_12.fn == null) { s.retval = s.tmp_12.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_12.fn.isGetter) { s.retval = bind(s.tmp_12); }
     else { s.callLocIdx = 1209; s.pc = 10; return s.tmp_12; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_9 + s.tmp_11);
    s.tmp_8 = r0;
    r0 = (s.tmp_4 * s.tmp_8);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 + s.tmp_3);
    s.tmp_0.arg1 = r0;
    s.tmp_14 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_14.arg0 = r0;
    if (!s.tmp_14.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_14.arg0, "cardsTop");
    } else {
      s.tmp_14.fn = s.tmp_14.arg0.vtable.iface["cardsTop"];
      if (s.tmp_14.fn == null) { s.retval = s.tmp_14.arg0.fields["cardsTop"]; }
      else if (!s.tmp_14.fn.isGetter) { s.retval = bind(s.tmp_14); }
     else { s.callLocIdx = 1210; s.pc = 11; return s.tmp_14; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_13 = r0;
    s.tmp_17 = r0 = s.i___15877;
    s.tmp_19 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_19.arg0 = r0;
    if (!s.tmp_19.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_19.arg0, "cardsPerRow");
    } else {
      s.tmp_19.fn = s.tmp_19.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_19.fn == null) { s.retval = s.tmp_19.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_19.fn.isGetter) { s.retval = bind(s.tmp_19); }
     else { s.callLocIdx = 1211; s.pc = 12; return s.tmp_19; }
    }
  case 12:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_17, s.tmp_18);
    s.tmp_16 = r0;
    s.tmp_22 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_22.arg0 = r0;
    if (!s.tmp_22.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_22.arg0, "cardWidth");
    } else {
      s.tmp_22.fn = s.tmp_22.arg0.vtable.iface["cardWidth"];
      if (s.tmp_22.fn == null) { s.retval = s.tmp_22.arg0.fields["cardWidth"]; }
      else if (!s.tmp_22.fn.isGetter) { s.retval = bind(s.tmp_22); }
     else { s.callLocIdx = 1212; s.pc = 13; return s.tmp_22; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_21 = r0;
    s.tmp_24 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_24.arg0 = r0;
    if (!s.tmp_24.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_24.arg0, "cardSpacing");
    } else {
      s.tmp_24.fn = s.tmp_24.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_24.fn == null) { s.retval = s.tmp_24.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_24.fn.isGetter) { s.retval = bind(s.tmp_24); }
     else { s.callLocIdx = 1213; s.pc = 14; return s.tmp_24; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_23 = r0;
    r0 = (s.tmp_21 + s.tmp_23);
    s.tmp_20 = r0;
    r0 = (s.tmp_16 * s.tmp_20);
    s.tmp_15 = r0;
    r0 = (s.tmp_13 + s.tmp_15);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 1214; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    r0 = (s.i___15877 + 1);
    s.i___15877 = (r0);
    { step = 1; continue; }
  case 2:
    s.tmp_0 = controller__setUserEventsEnabled__P1996_mk(s);
    s.tmp_0.arg0 = false;
    s.callLocIdx = 1215; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P15940);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_1.arg0 = globals.A___1907;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1217; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P15960);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_1.arg0 = globals.A___1907;
    s.tmp_1.arg1 = 2052;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1219; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.B___1908;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = scene_systemMenu_PauseMenu_show_inline__P15989;
    s.callLocIdx = 1221; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    s.tmp_0 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_0.arg0 = globals.menu___1913;
    s.tmp_0.arg1 = 2053;
    s.tmp_0.arg2 = scene_systemMenu_PauseMenu_show_inline__P15994;
    s.callLocIdx = 1223; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P15999);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_1.arg0 = globals.up___1910;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1227; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P16011);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_1.arg0 = globals.left___1909;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1230; s.pc = 21; return s.tmp_1;
  case 21:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P16020);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_1.arg0 = globals.down___1912;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1234; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P16036);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = controller_Button_onEvent__P1986_mk(s);
    s.tmp_1.arg0 = globals.right___1911;
    s.tmp_1.arg1 = 2053;
    s.tmp_1.arg2 = s.tmp_0;
    s.callLocIdx = 1237; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, scene_systemMenu_PauseMenu_show_inline__P16048);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = game_onShade__P2706_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1240; s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2788_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 0;
    s.callLocIdx = 1241; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show__P2786.info = {"start":3296,"length":2241,"line":123,"column":8,"endLine":181,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_show__P2786_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show__P2786, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  current___15876: undefined,
  i___15877: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P15940(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P2782_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 1;
    s.callLocIdx = 1216; s.pc = 6; return s.tmp_8;
  case 6:
    r0 = s.retval;
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P15940.info = {"start":4025,"length":170,"line":140,"column":50,"endLine":143,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P15940_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P15940, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P15960(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.caps[0].fields["options"];
    s.tmp_5 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.tmp_6);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    { step = 5; continue; }
  case 3:
  case 4:
    s.tmp_8 = scene_systemMenu_MenuOption_setState__P2782_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_9 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_10 = r0;
    r0 = pxsim_Array__getAt(s.tmp_9, s.tmp_10);
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = 0;
    s.callLocIdx = 1218; s.pc = 6; return s.tmp_8;
  case 6:
    r0 = s.retval;
    r0 = s.caps[0].fields["options"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    r0 = r0.fields["action"];
    s.tmp_0 = r0;
    r0 = pxsim.control.runInParallel(s.tmp_0);
  case 5:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P15960.info = {"start":4247,"length":247,"line":145,"column":48,"endLine":149,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P15960_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P15960, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P15989(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_closeMenu__P2791_mk(s);
    s.callLocIdx = 1220; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P15989.info = {"start":4548,"length":50,"line":151,"column":50,"endLine":153,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P15989_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P15989, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P15994(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_closeMenu__P2791_mk(s);
    s.callLocIdx = 1222; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P15994.info = {"start":4655,"length":50,"line":155,"column":53,"endLine":157,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P15994_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P15994, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P15999(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2788_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    s.tmp_4 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_4.arg0 = r0;
    if (!s.tmp_4.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_4.arg0, "cardsPerRow");
    } else {
      s.tmp_4.fn = s.tmp_4.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_4.fn == null) { s.retval = s.tmp_4.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_4.fn.isGetter) { s.retval = bind(s.tmp_4); }
     else { s.callLocIdx = 1224; s.pc = 3; return s.tmp_4; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 - s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1225; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1226; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P15999.info = {"start":4760,"length":110,"line":159,"column":51,"endLine":161,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P15999_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P15999, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P16011(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2788_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_max__P130_mk(s);
    s.tmp_1.arg0 = 0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1228; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1229; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P16011.info = {"start":4927,"length":89,"line":163,"column":53,"endLine":165,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P16011_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P16011, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P16020(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2788_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P131_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    s.tmp_6 = if_cardsPerRow_1_mk(s);
    r0 = s.caps[0].fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "cardsPerRow");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1231; s.pc = 3; return s.tmp_6; }
    }
  case 3:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1232; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1233; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P16020.info = {"start":5073,"length":132,"line":167,"column":53,"endLine":169,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P16020_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P16020, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P16036(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_PauseMenu_setSelection__P2788_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_1 = Math_min__P131_mk(s);
    r0 = s.caps[0].fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1.arg0 = r0;
    r0 = s.caps[0].fields["selection"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1235; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1236; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P16036.info = {"start":5263,"length":111,"line":171,"column":54,"endLine":173,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P16036_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P16036, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
} }





function scene_systemMenu_PauseMenu_show_inline__P16048(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = scene_systemMenu_PauseMenu_onUpdate__P2787_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1238; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = scene_systemMenu_PauseMenu_drawText__P2789_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.callLocIdx = 1239; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_show_inline__P16048.info = {"start":5403,"length":87,"line":175,"column":25,"endLine":178,"endColumn":13,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":[]}

function scene_systemMenu_PauseMenu_show_inline__P16048_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_show_inline__P16048, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function scene_systemMenu_PauseMenu_drawText__P2789(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2784_VT)) failedCast(r0);
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_3 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_3.arg0 = globals.screen___1829;
    s.tmp_3.arg1 = 0;
    s.tmp_3.arg2 = 0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_3.arg3 = r0;
    s.tmp_5 = if_cardsTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardsTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardsTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardsTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1252; s.pc = 5; return s.tmp_5; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - 2);
    s.tmp_3.arg4 = r0;
    s.tmp_3.arg5 = 15;
    s.callLocIdx = 1253; s.pc = 4; return s.tmp_3;
  case 4:
    r0 = s.retval;
    s.tmp_0 = helpers_imagePrintCenter__P1786_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_1 = if_headerText_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "headerText");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["headerText"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["headerText"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1254; s.pc = 7; return s.tmp_1; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = 2;
    s.tmp_0.arg3 = 1;
    s.tmp_2 = if_headerFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "headerFont");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["headerFont"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["headerFont"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1255; s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1256; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = 0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1257; s.pc = 10; return s.tmp_2; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 3);
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_0.arg3 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_4 = r0;
    s.tmp_6 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoTop");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoTop"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoTop"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1258; s.pc = 11; return s.tmp_6; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 6);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 15;
    s.callLocIdx = 1259; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.tmp_0 = helpers_imageFillRect__P1755_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_1 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "padding");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["padding"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["padding"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1260; s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "infoTop");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["infoTop"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["infoTop"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1261; s.pc = 14; return s.tmp_2; }
    }
  case 14:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_3 = r0;
    s.tmp_6 = if_padding_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "padding");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["padding"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["padding"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1262; s.pc = 15; return s.tmp_6; }
    }
  case 15:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 << 1);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_0.arg3 = r0;
    s.tmp_8 = if_charHeight_1_mk(s);
    s.tmp_9 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_9.arg0 = r0;
    if (!s.tmp_9.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_9.arg0, "infoFont");
    } else {
      s.tmp_9.fn = s.tmp_9.arg0.vtable.iface["infoFont"];
      if (s.tmp_9.fn == null) { s.retval = s.tmp_9.arg0.fields["infoFont"]; }
      else if (!s.tmp_9.fn.isGetter) { s.retval = bind(s.tmp_9); }
     else { s.callLocIdx = 1263; s.pc = 17; return s.tmp_9; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_8.arg0 = r0;
    if (!s.tmp_8.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_8.arg0, "charHeight");
    } else {
      s.tmp_8.fn = s.tmp_8.arg0.vtable.iface["charHeight"];
      if (s.tmp_8.fn == null) { s.retval = s.tmp_8.arg0.fields["charHeight"]; }
      else if (!s.tmp_8.fn.isGetter) { s.retval = bind(s.tmp_8); }
     else { s.callLocIdx = 1264; s.pc = 16; return s.tmp_8; }
    }
  case 16:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 1);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 1265; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_0 = helpers_imagePrintCenter__P1786_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_1 = if_getText_1_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.tmp_3);
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      setupLambda(s.tmp_1, pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "getText"), 1);
      s.callLocIdx = 1266; s.pc = 19; return s.tmp_1;
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["getText"];
      if (s.tmp_1.fn == null) { setupLambda(s.tmp_1, s.tmp_1.arg0.fields["getText"], 1); s.callLocIdx = 1266; s.pc = 19; return s.tmp_1; }
      else if (s.tmp_1.fn.isGetter) { s.tmp_1.stage2Call = true; s.callLocIdx = 1266; s.pc = 19; return s.tmp_1;; }
     else { s.callLocIdx = 1266; s.pc = 19; return s.tmp_1; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_5 = if_infoTop_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "infoTop");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["infoTop"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["infoTop"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1267; s.pc = 20; return s.tmp_5; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 1);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 15;
    s.tmp_6 = if_infoFont_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_6.arg0 = r0;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "infoFont");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["infoFont"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["infoFont"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 1268; s.pc = 21; return s.tmp_6; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    s.callLocIdx = 1269; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_drawText__P2789.info = {"start":6927,"length":795,"line":224,"column":8,"endLine":241,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"drawText","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_drawText__P2789_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_drawText__P2789, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_setSelection__P2788(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2784_VT)) failedCast(r0);
    r0 = s.arg0.fields["options"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 9; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["options"];
    s.tmp_4 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P2782_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = 2;
    s.callLocIdx = 1249; s.pc = 10; return s.tmp_6;
  case 10:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = (s.arg0).fields["selection"] = (s.arg1);
    r0 = s.arg0.fields["options"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_4 = controller_Button__C1979_v0_1_mk(s);
    s.tmp_4.arg0 = globals.A___1907;
    if (!checkSubtype(s.tmp_4.arg0, controller_Button__C1979_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.isPressed;
    s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.tmp_6 = scene_systemMenu_MenuOption_setState__P2782_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_7 = r0;
    r0 = s.arg0.fields["selection"];
    s.tmp_8 = r0;
    r0 = pxsim_Array__getAt(s.tmp_7, s.tmp_8);
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 1250; s.pc = 12; return s.tmp_6;
  case 12:
    r0 = s.retval;
  case 7:
  case 8:
    s.tmp_0 = scene_systemMenu_PauseMenu_updateScrollTarget__P4794_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1251; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_setSelection__P2788.info = {"start":6436,"length":481,"line":208,"column":8,"endLine":222,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setSelection","argumentNames":["this","selection"]}

function scene_systemMenu_PauseMenu_setSelection__P2788_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_setSelection__P2788, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_PauseMenu_updateScrollTarget__P4794(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.row___16273 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2784_VT)) failedCast(r0);
    r0 = s.arg0.fields["selection"];
    s.tmp_0 = r0;
    s.tmp_2 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_2.arg0 = r0;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "cardsPerRow");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 1272; s.pc = 8; return s.tmp_2; }
    }
  case 8:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.row___16273 = (r0);
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_1 = r0;
    r0 = (s.row___16273 === s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = (s.row___16273 - 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 === s.tmp_3);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_6 = r0;
    r0 = (s.row___16273 > s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 5; continue; }
    s.tmp_7 = r0 = s.arg0;
    r0 = s.tmp_7.fields["scrollRow"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + 1);
    s.tmp_8 = r0;
    r0 = (s.tmp_7).fields["scrollRow"] = (s.tmp_8);
    { step = 6; continue; }
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["scrollRow"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollRow"] = (s.tmp_1);
  case 6:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["scrollRow"];
    s.tmp_2 = r0;
    s.tmp_5 = if_cardSpacing_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "cardSpacing");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["cardSpacing"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["cardSpacing"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1273; s.pc = 9; return s.tmp_5; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_4 = r0;
    s.tmp_7 = if_cardWidth_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_7.arg0 = r0;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "cardWidth");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["cardWidth"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["cardWidth"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 1274; s.pc = 10; return s.tmp_7; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = (s.tmp_2 * s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["scrollTarget"] = (s.tmp_1);
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_updateScrollTarget__P4794.info = {"start":7907,"length":458,"line":250,"column":8,"endLine":260,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateScrollTarget","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_updateScrollTarget__P4794_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_updateScrollTarget__P4794, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  row___16273: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_onUpdate__P2787(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.t___16126 = undefined;
    s.i___16130 = undefined;
    s.dt___16159 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2784_VT)) failedCast(r0);
    r0 = pxsim.control.millis();
    s.tmp_0 = r0;
    r0 = (s.tmp_0 / 250);
    s.t___16126 = (r0);
    s.i___16130 = (0);
  case 1:
    s.tmp_1 = r0 = s.i___16130;
    r0 = s.arg0.fields["options"];
    s.tmp_3 = r0;
    r0 = pxsim_Array__length(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_4 = scene_systemMenu_MenuOption_setOffset__P2780_mk(s);
    r0 = s.arg0.fields["options"];
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_5, s.i___16130);
    s.tmp_4.arg0 = r0;
    s.tmp_8 = r0 = s.t___16126;
    s.tmp_11 = r0 = s.i___16130;
    s.tmp_13 = if_cardsPerRow_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_13.arg0 = r0;
    if (!s.tmp_13.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_13.arg0, "cardsPerRow");
    } else {
      s.tmp_13.fn = s.tmp_13.arg0.vtable.iface["cardsPerRow"];
      if (s.tmp_13.fn == null) { s.retval = s.tmp_13.arg0.fields["cardsPerRow"]; }
      else if (!s.tmp_13.fn.isGetter) { s.retval = bind(s.tmp_13); }
     else { s.callLocIdx = 1242; s.pc = 11; return s.tmp_13; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = (s.tmp_11 % s.tmp_12);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 * 1.5707963267948966);
    s.tmp_9 = r0;
    r0 = (s.tmp_8 - s.tmp_9);
    s.tmp_7 = r0;
    r0 = pxsim.Math_.sin(s.tmp_7);
    s.tmp_6 = r0;
    r0 = (2 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1243; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    r0 = (s.i___16130 + 1);
    s.i___16130 = (r0);
    { step = 1; continue; }
  case 2:
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1244; s.pc = 12; return s.tmp_1;
  case 12:
    r0 = s.retval;
    r0 = r0.fields["eventContext"];
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["deltaTimeMillis"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 / 1000);
    s.dt___16159 = (r0);
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___16159 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 6; continue; }
  case 3:
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 > s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = r0 = s.arg0;
    r0 = s.tmp_3.fields["scrollOffset"];
    s.tmp_5 = r0;
    r0 = (s.dt___16159 * 100);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 - s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["scrollOffset"] = (s.tmp_4);
    { step = 5; continue; }
  case 4:
    { step = 9; continue; }
  case 5:
  case 6:
    s.tmp_2 = Math_abs__P128_mk(s);
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 1246; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.arg0.fields["scrollTarget"];
    s.tmp_5 = r0;
    r0 = (s.arg0).fields["scrollOffset"] = (s.tmp_5);
  case 7:
  case 8:
    s.tmp_0 = scene_Camera_offsetY__P2528_mk(s);
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1247; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    r0 = r0.fields["camera"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["scrollOffset"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1248; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
  case 9:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_onUpdate__P2787.info = {"start":5547,"length":879,"line":183,"column":8,"endLine":206,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"onUpdate","argumentNames":["this"]}

function scene_systemMenu_PauseMenu_onUpdate__P2787_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_onUpdate__P2787, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  t___16126: undefined,
  i___16130: undefined,
  dt___16159: undefined,
  arg0: undefined,
} }





function scene_systemMenu_MenuOption_setOffset__P2780(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2776_VT)) failedCast(r0);
    s.tmp_0 = Sprite_top__P2191_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["top"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1185; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2144_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2143_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1186; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1187; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setOffset__P2780.info = {"start":1411,"length":123,"line":61,"column":8,"endLine":64,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setOffset","argumentNames":["this","offset"]}

function scene_systemMenu_MenuOption_setOffset__P2780_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setOffset__P2780, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_y__P2144(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Sprite_top__P2191_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_4 = Sprite_height__P2185_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 322; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 323; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_y__P2144.info = {"start":3081,"length":65,"line":126,"column":4,"endLine":128,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"y","argumentNames":["this","v"]}

function Sprite_y__P2144_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_y__P2144, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_setState__P2782(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2776_VT)) failedCast(r0);
    r0 = s.arg0.fields["state"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = (s.arg0).fields["state"] = (s.arg1);
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P4793_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1189; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setState__P2782.info = {"start":1655,"length":147,"line":71,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setState","argumentNames":["this","state"]}

function scene_systemMenu_MenuOption_setState__P2782_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setState__P2782, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_updateCard__P4793(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2776_VT)) failedCast(r0);
    r0 = s.arg0.fields["theme"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 7; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["state"];
    s.tmp_3 = r0;
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(0, s.tmp_3);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_3);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    s.tmp_4 = Sprite_setImage__P2178_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_4.arg0 = r0;
    s.tmp_5 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_5.arg0 = r0;
    if (!s.tmp_5.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "basicCard");
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["basicCard"];
      if (s.tmp_5.fn == null) { s.retval = s.tmp_5.arg0.fields["basicCard"]; }
      else if (!s.tmp_5.fn.isGetter) { s.retval = bind(s.tmp_5); }
     else { s.callLocIdx = 1192; s.pc = 9; return s.tmp_5; }
    }
  case 9:
    r0 = s.retval;
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 1193; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    { step = 6; continue; }
  case 4:
    s.tmp_0 = Sprite_setImage__P2178_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_selectedCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "selectedCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["selectedCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["selectedCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1194; s.pc = 11; return s.tmp_1; }
    }
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1195; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    { step = 6; continue; }
  case 5:
    s.tmp_0 = Sprite_setImage__P2178_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = if_activeCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "activeCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["activeCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["activeCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1196; s.pc = 13; return s.tmp_1; }
    }
  case 13:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1197; s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
  case 6:
    s.tmp_0 = Sprite_x__P2142_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P2141_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1198; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1199; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2144_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2143_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1200; s.pc = 17; return s.tmp_1;
  case 17:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1201; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_updateCard__P4793.info = {"start":2038,"length":497,"line":86,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"updateCard","argumentNames":["this"]}

function scene_systemMenu_MenuOption_updateCard__P4793_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_updateCard__P4793, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function Sprite_x__P2142(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Sprite_left__P2187_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_4 = Sprite_width__P2184_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 317; s.pc = 2; return s.tmp_4;
  case 2:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 2);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 318; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_x__P2142.info = {"start":2724,"length":65,"line":115,"column":4,"endLine":117,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"x","argumentNames":["this","v"]}

function Sprite_x__P2142_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_x__P2142, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_setTheme__P2781(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2776_VT)) failedCast(r0);
    r0 = (s.arg0).fields["theme"] = (s.arg1);
    s.tmp_0 = scene_systemMenu_MenuOption_updateCard__P4793_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1188; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_setTheme__P2781.info = {"start":1544,"length":101,"line":66,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"setTheme","argumentNames":["this","theme"]}

function scene_systemMenu_MenuOption_setTheme__P2781_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_setTheme__P2781, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_systemMenu_MenuOption_position__P2779(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2776_VT)) failedCast(r0);
    r0 = (s.arg0).fields["top"] = (s.arg2);
    s.tmp_0 = Sprite_left__P2187_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1179; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = Sprite_top__P2191_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg2;
    s.callLocIdx = 1180; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.tmp_0 = Sprite_x__P2142_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_x__P2141_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1181; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1182; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.tmp_0 = Sprite_y__P2144_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_1 = Sprite_y__P2143_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1183; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1184; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_position__P2779.info = {"start":1178,"length":223,"line":51,"column":8,"endLine":59,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"position","argumentNames":["this","left","top"]}

function scene_systemMenu_MenuOption_position__P2779_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_position__P2779, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_MenuOption_show__P2778(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_MenuOption__C2776_VT)) failedCast(r0);
    r0 = s.arg0.fields["theme"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = if_basicCard_1_mk(s);
    r0 = s.arg0.fields["theme"];
    s.tmp_1.arg0 = r0;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "basicCard");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["basicCard"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["basicCard"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1174; s.pc = 3; return s.tmp_1; }
    }
  case 3:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    r0 = globals.CARD_NORMAL___2800;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = sprites_create__P2064_mk(s);
    s.tmp_5.arg0 = s.tmp_2;
    s.tmp_5.arg1 = undefined;
    s.callLocIdx = 1175; s.pc = 4; return s.tmp_5;
  case 4:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["card"] = (s.tmp_4);
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["card"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 1;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1176; s.pc = 5; return s.tmp_0; }
    }
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = sprites_create__P2064_mk(s);
    r0 = s.arg0.fields["iconImage"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = undefined;
    s.callLocIdx = 1177; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["icon"] = (s.tmp_1);
    s.tmp_0 = if_z_2_mk(s);
    r0 = s.arg0.fields["icon"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = 2;
    if (!s.tmp_0.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapSetByString(s.tmp_0.arg0, "z", s.tmp_0.arg1);
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["set/z"];
      if (s.tmp_0.fn === null) { s.tmp_0.arg0.fields["z"] = s.tmp_0.arg1; }
      else if (s.tmp_0.fn === undefined) { failedCast(s.tmp_0.arg0) } 
     else { s.callLocIdx = 1178; s.pc = 7; return s.tmp_0; }
    }
  case 7:
    r0 = s.retval;
    r0 = (s.arg0).fields["state"] = (2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_MenuOption_show__P2778.info = {"start":904,"length":264,"line":41,"column":8,"endLine":49,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"show","argumentNames":["this"]}

function scene_systemMenu_MenuOption_show__P2778_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_MenuOption_show__P2778, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function game_onShade__P2706(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = game_init__P4547_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1163; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 3; continue; }
  case 1:
  case 2:
    s.tmp_2 = scene_createRenderable__P2543_mk(s);
    s.tmp_2.arg0 = 80;
    s.tmp_2.arg1 = s.arg0;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 1164; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
  case 3:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_onShade__P2706.info = {"start":8745,"length":145,"line":286,"column":4,"endLine":290,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"onShade","argumentNames":["a"]}

function game_onShade__P2706_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_onShade__P2706, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_systemMenu_PauseMenu_constructor__P2785(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_systemMenu_PauseMenu__C2784_VT)) failedCast(r0);
    r0 = (s.arg0).fields["generator"] = (s.arg1);
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = scene_systemMenu_buildMenuTheme__P2793_mk(s);
    r0 = pxsim_ImageMethods.width(globals.CARD_NORMAL___2800);
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = 3;
    s.tmp_1.arg2 = undefined;
    s.tmp_1.arg3 = undefined;
    s.callLocIdx = 1202; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = (s.arg0).fields["theme"] = (s.tmp_2);
    r0 = (s.arg0).fields["scrollRow"] = (0);
    r0 = (s.arg0).fields["scrollOffset"] = (0);
    r0 = (s.arg0).fields["scrollTarget"] = (0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_PauseMenu_constructor__P2785.info = {"start":3029,"length":257,"line":116,"column":8,"endLine":121,"endColumn":9,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"inline","argumentNames":["this","generator","theme"]}

function scene_systemMenu_PauseMenu_constructor__P2785_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_PauseMenu_constructor__P2785, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function scene_systemMenu_buildMenuTheme__P2793(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.cardsPerRow___17078 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_0 = r0;
    r0 = (s.arg0 + s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_1);
    s.cardsPerRow___17078 = (r0);
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = globals.font8___1772;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.arg2 = (s.tmp_1);
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = image_doubledFont__P1775_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.callLocIdx = 1312; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardSpacing", s.arg1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardWidth", s.arg0);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsPerRow", s.cardsPerRow___17078);
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_3 = r0;
    r0 = (s.cardsPerRow___17078 * s.arg0);
    s.tmp_5 = r0;
    r0 = (s.cardsPerRow___17078 - 1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 * s.arg1);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 + s.tmp_6);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "padding", s.tmp_1);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoFont", s.arg2);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerFont", s.arg3);
    s.tmp_11 = if_charHeight_1_mk(s);
    s.tmp_11.arg0 = s.arg3;
    if (!s.tmp_11.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_11.arg0, "charHeight");
    } else {
      s.tmp_11.fn = s.tmp_11.arg0.vtable.iface["charHeight"];
      if (s.tmp_11.fn == null) { s.retval = s.tmp_11.arg0.fields["charHeight"]; }
      else if (!s.tmp_11.fn.isGetter) { s.retval = bind(s.tmp_11); }
     else { s.callLocIdx = 1313; s.pc = 6; return s.tmp_11; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 + 2);
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + s.arg1);
    s.tmp_8 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "cardsTop", s.tmp_8);
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_14 = r0;
    s.tmp_16 = if_charHeight_1_mk(s);
    s.tmp_16.arg0 = s.arg2;
    if (!s.tmp_16.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_16.arg0, "charHeight");
    } else {
      s.tmp_16.fn = s.tmp_16.arg0.vtable.iface["charHeight"];
      if (s.tmp_16.fn == null) { s.retval = s.tmp_16.arg0.fields["charHeight"]; }
      else if (!s.tmp_16.fn.isGetter) { s.retval = bind(s.tmp_16); }
     else { s.callLocIdx = 1314; s.pc = 7; return s.tmp_16; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = (s.tmp_14 - s.tmp_15);
    s.tmp_13 = r0;
    r0 = (s.tmp_13 - 2);
    s.tmp_12 = r0;
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "infoTop", s.tmp_12);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "headerText", "PAUSED");
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "selectedCard", globals.CARD_SELECTED___2801);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "activeCard", globals.CARD_ACTIVE___2802);
    r0 = pxsim_pxtrt.mapSetByString(s.tmp_0, "basicCard", globals.CARD_NORMAL___2800);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_buildMenuTheme__P2793.info = {"start":11654,"length":906,"line":356,"column":4,"endLine":375,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"buildMenuTheme","argumentNames":["cardWidth","cardSpacing","infoFont","headerFont"]}

function scene_systemMenu_buildMenuTheme__P2793_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_buildMenuTheme__P2793, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  cardsPerRow___17078: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function image_doubledFont__P1775(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = image_scaledFont__P1776_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = 2;
    s.callLocIdx = 131; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
image_doubledFont__P1775.info = {"start":12008,"length":82,"line":146,"column":4,"endLine":148,"endColumn":5,"fileName":"pxt_modules/screen/text.ts","functionName":"doubledFont","argumentNames":["f"]}

function image_doubledFont__P1775_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: image_doubledFont__P1775, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_systemMenu_initScreen__P4806(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.brightness___17133 = undefined;
    s.tmp_0 = settings_readNumber__P1863_mk(s);
    s.tmp_0.arg0 = "#brightness";
    s.callLocIdx = 1321; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.brightness___17133 = (r0);
    r0 = (s.brightness___17133 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = helpers_setScreenBrightness__P1762_mk(s);
    s.tmp_1.arg0 = globals.screen___1829;
    s.tmp_1.arg1 = s.brightness___17133;
    s.callLocIdx = 1322; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initScreen__P4806.info = {"start":13388,"length":175,"line":405,"column":4,"endLine":409,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initScreen","argumentNames":[]}

function scene_systemMenu_initScreen__P4806_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initScreen__P4806, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  brightness___17133: undefined,
} }





function scene_systemMenu_initVolume__P4805(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.vol___17143 = undefined;
    s.tmp_0 = settings_readNumber__P1863_mk(s);
    s.tmp_0.arg0 = "#volume";
    s.callLocIdx = 1319; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.vol___17143 = (r0);
    r0 = (s.vol___17143 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = music_setVolume__P1606_mk(s);
    s.tmp_1.arg0 = s.vol___17143;
    s.callLocIdx = 1320; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_systemMenu_initVolume__P4805.info = {"start":13238,"length":144,"line":399,"column":4,"endLine":403,"endColumn":5,"fileName":"pxt_modules/game/systemmenu.ts","functionName":"initVolume","argumentNames":[]}

function scene_systemMenu_initVolume__P4805_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_systemMenu_initVolume__P4805, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  vol___17143: undefined,
} }





function game_currentScene__P2693(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = game_init__P4547_mk(s);
    s.tmp_0.arg0 = undefined;
    s.callLocIdx = 1126; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = globals._scene___4539;
    return leave(s, r0)
  default: oops()
} } }
game_currentScene__P2693.info = {"start":667,"length":90,"line":22,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"currentScene","argumentNames":[]}

function game_currentScene__P2693_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_currentScene__P2693, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function game_addScenePopHandler__P2709(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals._scenePopHandlers___4542);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals._scenePopHandlers___4542 = (r0);
  case 1:
  case 2:
    r0 = pxsim_Array_.indexOf(globals._scenePopHandlers___4542, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__push(globals._scenePopHandlers___4542, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePopHandler__P2709.info = {"start":10273,"length":237,"line":325,"column":4,"endLine":329,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePopHandler","argumentNames":["handler"]}

function game_addScenePopHandler__P2709_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePopHandler__P2709, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_addScenePushHandler__P2707(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(globals._scenePushHandlers___4541);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_Array__mk();
    globals._scenePushHandlers___4541 = (r0);
  case 1:
  case 2:
    r0 = pxsim_Array_.indexOf(globals._scenePushHandlers___4541, s.arg0, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__push(globals._scenePushHandlers___4541, s.arg0);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_addScenePushHandler__P2707.info = {"start":9272,"length":242,"line":301,"column":4,"endLine":305,"endColumn":5,"fileName":"pxt_modules/game/game.ts","functionName":"addScenePushHandler","argumentNames":["handler"]}

function game_addScenePushHandler__P2707_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_addScenePushHandler__P2707, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx8__P149(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 * 256);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 | 0);
    return leave(s, r0)
  default: oops()
} } }
Fx8__P149.info = {"start":42,"length":68,"line":4,"column":0,"endLine":6,"endColumn":1,"fileName":"pxt_modules/base/fixed.ts","functionName":"Fx8","argumentNames":["v"]}

function Fx8__P149_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx8__P149, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function SpriteKind_create__P2266(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = (globals.nextKind___4378 === undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    globals.nextKind___4378 = (1000);
  case 1:
  case 2:
    s.tmp_0 = r0 = globals.nextKind___4378;
    r0 = (s.tmp_0 + 1);
    globals.nextKind___4378 = (r0);
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
SpriteKind_create__P2266.info = {"start":750,"length":112,"line":25,"column":4,"endLine":28,"endColumn":5,"fileName":"pxt_modules/game/spritekind.ts","functionName":"create","argumentNames":[]}

function SpriteKind_create__P2266_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: SpriteKind_create__P2266, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_constructor__P1985(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = (s.arg0).fields["id"] = (s.arg1);
    r0 = (s.arg0).fields["_pressed"] = (false);
    r0 = (s.arg0).fields["repeatDelay"] = (undefined);
    r0 = (s.arg0).fields["repeatInterval"] = (undefined);
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    r0 = (s.arg1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtcore_mkAction(1, controller_Button_inline__P17219);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_2 = r0;
    r0 = pxsim.control.internalOnEvent(2050, s.tmp_2, s.tmp_1, 16);
    r0 = pxsim_pxtcore_mkAction(1, controller_Button_inline__P17226);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = s.arg0.fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim.control.internalOnEvent(2051, s.tmp_1, s.tmp_0, 16);
    r0 = (s.arg2 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_constructor__P1985.info = {"start":2004,"length":864,"line":77,"column":8,"endLine":94,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":["this","id","configKey"]}

function controller_Button_constructor__P1985_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_constructor__P1985, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function controller_Button_inline__P17219(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P1992_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = false;
    s.callLocIdx = 229; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_inline__P17219.info = {"start":2627,"length":28,"line":88,"column":66,"endLine":88,"endColumn":94,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_inline__P17219_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_inline__P17219, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_Button_inline__P17226(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_0 = controller_Button_setPressed__P1992_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = true;
    s.callLocIdx = 230; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_inline__P17226.info = {"start":2729,"length":27,"line":89,"column":68,"endLine":89,"endColumn":95,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"inline","argumentNames":[]}

function controller_Button_inline__P17226_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_inline__P17226, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function controller_setupButton__P4361(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_setupButton__P4361.info = {"start":861,"length":93,"line":39,"column":4,"endLine":41,"endColumn":6,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setupButton","argumentNames":["buttonId","key"]}

function controller_setupButton__P4361_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_setupButton__P4361, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_setPressed__P1992(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = s.arg0.fields["_pressed"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 != s.arg1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = power_poke__P1730_mk(s);
    s.callLocIdx = 233; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    r0 = s.arg0.fields["_owner"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = controller_Controller_connected__P1948_mk(s);
    r0 = s.arg0.fields["_owner"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = true;
    s.callLocIdx = 234; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = (s.arg0).fields["_pressed"] = (s.arg1);
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = (s.arg0).fields["_pressedElasped"] = (0);
    s.tmp_0 = controller_Button_raiseButtonDown__P4345_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 235; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg0).fields["_repeatCount"] = (0);
    s.tmp_0 = controller_Button_raiseButtonUp__P4344_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 236; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_setPressed__P1992.info = {"start":6774,"length":507,"line":201,"column":8,"endLine":215,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"setPressed","argumentNames":["this","pressed"]}

function controller_Button_setPressed__P1992_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_setPressed__P1992, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Button_raiseButtonDown__P4345(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___4355);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2049, s.tmp_0);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2053, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonDown__P4345.info = {"start":3088,"length":205,"line":103,"column":8,"endLine":108,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonDown","argumentNames":["this"]}

function controller_Button_raiseButtonDown__P4345_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonDown__P4345, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Button_raiseButtonUp__P4344(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(globals._userEventsEnabled___4355);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2048, s.tmp_0);
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["id"];
    s.tmp_0 = r0;
    r0 = pxsim.control.raiseEvent(2052, s.tmp_0);
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Button_raiseButtonUp__P4344.info = {"start":2878,"length":200,"line":96,"column":8,"endLine":101,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"raiseButtonUp","argumentNames":["this"]}

function controller_Button_raiseButtonUp__P4344_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_raiseButtonUp__P4344, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function controller_Controller_connected__P1948(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = s.arg0.fields["_connected"];
    s.tmp_1 = r0;
    r0 = (s.arg1 != s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = (s.arg0).fields["_connected"] = (s.arg1);
    r0 = s.arg0.fields["_connected"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 1;
    { step = 2; continue; }
  case 1:
    r0 = 2;
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_id"];
    s.tmp_2 = r0;
    r0 = pxsim.control.raiseEvent(s.tmp_2, s.tmp_1);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
controller_Controller_connected__P1948.info = {"start":6340,"length":261,"line":216,"column":8,"endLine":221,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this","value"]}

function controller_Controller_connected__P1948_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P1948, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function controller_Controller_id__P1935(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = s.arg0.fields["_id"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_id__P1935.info = {"start":2547,"length":49,"line":85,"column":8,"endLine":87,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"id","argumentNames":["this"]}
controller_Controller_id__P1935.isGetter = true;

function controller_Controller_id__P1935_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_id__P1935, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_Controller_connected__P1947(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Controller__C1928_VT)) failedCast(r0);
    r0 = s.arg0.fields["_connected"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
controller_Controller_connected__P1947.info = {"start":6267,"length":63,"line":212,"column":8,"endLine":214,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"connected","argumentNames":["this"]}
controller_Controller_connected__P1947.isGetter = true;

function controller_Controller_connected__P1947_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Controller_connected__P1947, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function settings_initScopes__P4312(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.rn___17304 = undefined;
    s.tmp_1 = settings_runNumber__P1853_mk(s);
    s.callLocIdx = 160; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 1);
    s.rn___17304 = (r0);
    s.tmp_0 = settings_writeNumber__P1858_mk(s);
    s.tmp_0.arg0 = globals.RUN_KEY___4300;
    s.tmp_0.arg1 = s.rn___17304;
    s.callLocIdx = 161; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    r0 = pxsim.control.deviceSerialNumber();
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 2147483647);
    s.tmp_0 = r0;
    r0 = pxsim_pxtcore.seedAddRandom(s.tmp_0);
    r0 = pxsim_pxtcore.seedAddRandom(s.rn___17304);
    s.tmp_0 = settings_setScope__P4311_mk(s);
    r0 = pxsim_pxtcore.programName();
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 162; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_initScopes__P4312.info = {"start":1104,"length":230,"line":41,"column":4,"endLine":49,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"initScopes","argumentNames":[]}

function settings_initScopes__P4312_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_initScopes__P4312, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  rn___17304: undefined,
} }





function settings_setScope__P4311(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.currScope___17333 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_String_.length(s.arg0);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 100);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_pxtrt.panic(922);
  case 3:
  case 4:
    s.tmp_0 = settings_readString__P1861_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___4301;
    s.callLocIdx = 158; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.currScope___17333 = (r0);
    r0 = (s.currScope___17333 != s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim.settings._userClean();
    s.tmp_0 = settings_writeString__P1856_mk(s);
    s.tmp_0.arg0 = globals.SCOPE_KEY___4301;
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 159; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_setScope__P4311.info = {"start":826,"length":272,"line":31,"column":4,"endLine":39,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"setScope","argumentNames":["scope"]}

function settings_setScope__P4311_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_setScope__P4311, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  currScope___17333: undefined,
  arg0: undefined,
} }





function settings_readString__P1861(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.buf___17354 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.settings._get(s.arg0);
    s.buf___17354 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.buf___17354);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = undefined;
    { step = 3; continue; }
    { step = 2; continue; }
  case 1:
    r0 = pxsim.BufferMethods.toString(s.buf___17354);
    { step = 3; continue; }
  case 2:
    r0 = undefined;
  case 3:
    return leave(s, r0)
  default: oops()
} } }
settings_readString__P1861.info = {"start":2827,"length":177,"line":110,"column":4,"endLine":116,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"readString","argumentNames":["key"]}

function settings_readString__P1861_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_readString__P1861, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  buf___17354: undefined,
  arg0: undefined,
} }





function settings_writeString__P1856(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = settings_writeBuffer__P1855_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = pxsim.control.createBufferFromUTF8(s.arg1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 164; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
settings_writeString__P1856.info = {"start":1895,"length":125,"line":75,"column":4,"endLine":77,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"writeString","argumentNames":["key","value"]}

function settings_writeString__P1856_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_writeString__P1856, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function settings_runNumber__P1853(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tmp_1 = settings_readNumber__P1863_mk(s);
    s.tmp_1.arg0 = globals.RUN_KEY___4300;
    s.callLocIdx = 157; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = s.tmp_2;
    return leave(s, r0)
  default: oops()
} } }
settings_runNumber__P1853.info = {"start":745,"length":75,"line":27,"column":4,"endLine":29,"endColumn":5,"fileName":"pxt_modules/settings/settings.ts","functionName":"runNumber","argumentNames":[]}

function settings_runNumber__P1853_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: settings_runNumber__P1853, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
} }





function control___screen_setupUpdate__P1791(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    globals.__updated___4269 = (true);
    globals.__update___4267 = (s.arg0);
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = s.arg0;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 153; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_setupUpdate__P1791.info = {"start":198,"length":125,"line":10,"column":4,"endLine":14,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"setupUpdate","argumentNames":["update"]}

function control___screen_setupUpdate__P1791_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_setupUpdate__P1791, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function control___screen_update__P1790(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = pxsim_numops_toBoolDecr(globals.__update___4267);
    if (!r0) { step = 1; continue; }
    s.tmp_0 = lambda_1_mk(s);
    s.tmp_0.argL = globals.__update___4267;
    setupLambda(s.tmp_0, s.tmp_0.argL);
    s.callLocIdx = 152; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    globals.__updated___4269 = (true);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
control___screen_update__P1790.info = {"start":90,"length":102,"line":4,"column":4,"endLine":8,"endColumn":5,"fileName":"pxt_modules/screen/frame.ts","functionName":"update","argumentNames":[]}

function control___screen_update__P1790_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: control___screen_update__P1790, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
} }





function pause__P413(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    setupResume(s, 1);
    pxsim.loops.pause(s.arg0);
    checkResumeConsumed();
    return;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
pause__P413.info = {"start":246,"length":57,"line":7,"column":0,"endLine":9,"endColumn":1,"fileName":"pxt_modules/base/pause.ts","functionName":"pause","argumentNames":["ms"]}

function pause__P413_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: pause__P413, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_SpriteSet_toString__P2261(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2250_VT)) failedCast(r0);
    r0 = pxsim_String_.mkEmpty();
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_sprites"];
    s.tmp_4 = r0;
    r0 = pxsim_Array__length(s.tmp_4);
    s.tmp_3 = r0;
    if ((s.tmp_3) && (s.tmp_3).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.tmp_3);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_3) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " sprites");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteSet_toString__P2261.info = {"start":2586,"length":66,"line":97,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteSet_toString__P2261_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_toString__P2261, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_SpriteSet_length__P2253(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteSet__C2250_VT)) failedCast(r0);
    r0 = s.arg0.fields["_sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__length(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_SpriteSet_length__P2253.info = {"start":625,"length":65,"line":26,"column":8,"endLine":28,"endColumn":9,"fileName":"pxt_modules/game/spriteset.ts","functionName":"length","argumentNames":["this"]}
sprites_SpriteSet_length__P2253.isGetter = true;

function sprites_SpriteSet_length__P2253_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteSet_length__P2253, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_SplashDialog_drawTextCore__P2676(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scrollMax___17392 = undefined;
    s.left___17435 = undefined;
    s.ysub___17480 = undefined;
    s.left___17491 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_SplashDialog__C2666_VT)) failedCast(r0);
    s.tmp_0 = Math_max__P130_mk(s);
    r0 = s.arg0.fields["maxOffset"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxSubOffset"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 1093; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    s.scrollMax___17392 = (r0);
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["timer"];
    s.tmp_4 = r0;
    s.tmp_7 = game_eventContext__P2696_mk(s);
    s.callLocIdx = 1094; s.pc = 16; return s.tmp_7;
  case 16:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = s.tmp_6.fields["deltaTimeMillis"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 / 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["timer"] = (s.tmp_3);
    r0 = s.arg0.fields["timer"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.arg0.fields["offset"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 0);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["offset"] = (0);
    r0 = (s.arg0).fields["timer"] = (2);
  case 1:
  case 2:
  case 3:
  case 4:
    { step = 8; continue; }
  case 5:
    s.tmp_0 = r0 = s.arg0;
    r0 = s.tmp_0.fields["offset"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["offset"] = (s.tmp_1);
    r0 = s.arg0.fields["offset"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 >= s.scrollMax___17392);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = (s.arg0).fields["offset"] = (s.scrollMax___17392);
    r0 = (s.arg0).fields["timer"] = (2);
  case 6:
  case 7:
  case 8:
    r0 = s.arg0.fields["maxOffset"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.arg0.fields["image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["text"];
    s.tmp_8 = r0;
    r0 = pxsim_String_.length(s.tmp_8);
    s.tmp_7 = r0;
    s.tmp_10 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "charWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["charWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["charWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 1096; s.pc = 17; return s.tmp_10; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_7 * s.tmp_9);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.left___17435 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["text"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.left___17435;
    s.tmp_0.arg3 = 10;
    r0 = s.arg0.fields["textColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1097; s.pc = 18; return s.tmp_0;
  case 18:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["text"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["offset"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = 10;
    r0 = s.arg0.fields["textColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1098; s.pc = 19; return s.tmp_0;
  case 19:
    r0 = s.retval;
  case 10:
    r0 = s.arg0.fields["subtext"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.tmp_3 = if_charHeight_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_3.arg0 = r0;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "charHeight");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["charHeight"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["charHeight"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1099; s.pc = 20; return s.tmp_3; }
    }
  case 20:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (10 + s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 + 2);
    s.ysub___17480 = (r0);
    r0 = s.arg0.fields["maxSubOffset"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = s.arg0.fields["image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["subtext"];
    s.tmp_8 = r0;
    r0 = pxsim_String_.length(s.tmp_8);
    s.tmp_7 = r0;
    s.tmp_10 = if_charWidth_1_mk(s);
    r0 = s.arg0.fields["font"];
    s.tmp_10.arg0 = r0;
    if (!s.tmp_10.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_10.arg0, "charWidth");
    } else {
      s.tmp_10.fn = s.tmp_10.arg0.vtable.iface["charWidth"];
      if (s.tmp_10.fn == null) { s.retval = s.tmp_10.arg0.fields["charWidth"]; }
      else if (!s.tmp_10.fn.isGetter) { s.retval = bind(s.tmp_10); }
     else { s.callLocIdx = 1100; s.pc = 21; return s.tmp_10; }
    }
  case 21:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_7 * s.tmp_9);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_2 - s.tmp_5);
    s.left___17491 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["subtext"];
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.left___17491;
    s.tmp_0.arg3 = s.ysub___17480;
    r0 = s.arg0.fields["textColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1101; s.pc = 22; return s.tmp_0;
  case 22:
    r0 = s.retval;
    { step = 12; continue; }
  case 11:
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    r0 = s.arg0.fields["image"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["subtext"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["unit"];
    s.tmp_1 = r0;
    s.tmp_3 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["offset"];
    s.tmp_3.arg0 = r0;
    r0 = s.arg0.fields["maxSubOffset"];
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 1102; s.pc = 24; return s.tmp_3;
  case 24:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.ysub___17480;
    r0 = s.arg0.fields["textColor"];
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["font"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 1103; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 12:
  case 13:
  case 14:
    s.tmp_0 = game_BaseDialog_drawBorder__P4512_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1104; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_SplashDialog_drawTextCore__P2676.info = {"start":9357,"length":1616,"line":293,"column":8,"endLine":331,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"drawTextCore","argumentNames":["this"]}

function game_SplashDialog_drawTextCore__P2676_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_SplashDialog_drawTextCore__P2676, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  scrollMax___17392: undefined,
  left___17435: undefined,
  ysub___17480: undefined,
  left___17491: undefined,
  arg0: undefined,
} }





function game_BaseDialog_setText__P2652(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_BaseDialog__C2638_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
game_BaseDialog_setText__P2652.info = {"start":1701,"length":77,"line":67,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/game/textDialogs.ts","functionName":"setText","argumentNames":["this","rawString"]}

function game_BaseDialog_setText__P2652_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_BaseDialog_setText__P2652, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_toString__P2241(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    r0 = s.arg0.fields["buckets"];
    s.tmp_6 = r0;
    r0 = pxsim_Array__length(s.tmp_6);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, " buckets, ");
    s.tmp_1 = r0;
    s.tmp_10 = helpers_arrayFilter__P110_mk(s);
    r0 = s.arg0.fields["buckets"];
    s.tmp_10.arg0 = r0;
    s.tmp_10.arg1 = length_inline__P17554;
    s.callLocIdx = 582; s.pc = 2; return s.tmp_10;
  case 2:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = pxsim_Array__length(s.tmp_9);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, " filled");
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_toString__P2241.info = {"start":4109,"length":123,"line":112,"column":8,"endLine":114,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"toString","argumentNames":["this"]}

function sprites_SpriteMap_toString__P2241_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_toString__P2241, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  arg0: undefined,
} }





function length_inline__P17554(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
length_inline__P17554.info = {"start":4196,"length":8,"line":113,"column":74,"endLine":113,"endColumn":82,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["b"]}

function length_inline__P17554_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: length_inline__P17554, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_moveSprite__P2328(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___17586 = undefined;
    s.maxDist___17594 = undefined;
    s.ms___17614 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["_x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["_y"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 787; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___17586 = (r0);
    s.tmp_0 = r0 = s.tm___17586;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.tm___17586.fields["_map"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 11; continue; }
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 128);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 >> 8);
    s.maxDist___17594 = (r0);
    s.tmp_2 = Math_abs__P128_mk(s);
    r0 = (s.arg2 + 128);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 8);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 791; s.pc = 14; return s.tmp_2;
  case 14:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.maxDist___17594);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_5 = Math_abs__P128_mk(s);
    r0 = (s.arg3 + 128);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 8);
    s.tmp_5.arg0 = r0;
    s.callLocIdx = 793; s.pc = 15; return s.tmp_5;
  case 15:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_4 <= s.maxDist___17594);
  case 4:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C2312_VT);
    s.tmp_8 = r0;
    s.tmp_9 = MovingSprite_constructor__P2313_mk(s);
    s.tmp_9.arg0 = s.tmp_8;
    s.tmp_9.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_9.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_9.arg3 = r0;
    s.tmp_9.arg4 = s.arg2;
    s.tmp_9.arg5 = s.arg3;
    s.tmp_9.arg6 = s.arg2;
    s.tmp_9.arg7 = s.arg3;
    s.callLocIdx = 794; s.pc = 16; return s.tmp_9;
  case 16:
    r0 = s.retval;
    s.ms___17614 = (s.tmp_8);
    s.tmp_0 = ArcadePhysicsEngine_tilemapCollisions__P4414_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.ms___17614;
    s.tmp_0.arg2 = s.tm___17586;
    s.callLocIdx = 795; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    { step = 10; continue; }
  case 5:
    s.tmp_1 = tiles_TileMap_isOnWall__P2497_mk(s);
    s.tmp_1.arg0 = s.tm___17586;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 796; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    s.tmp_4 = ArcadePhysicsEngine_canResolveClipping__P4416_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = s.arg1;
    s.tmp_4.arg2 = s.tm___17586;
    s.callLocIdx = 797; s.pc = 19; return s.tmp_4;
  case 19:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 7:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 8; continue; }
    s.tmp_6 = r0 = s.arg1;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 | 256);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
    { step = 9; continue; }
  case 8:
    s.tmp_0 = r0 = s.arg1;
    r0 = s.tmp_0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & -257);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["flags"] = (s.tmp_1);
  case 9:
  case 10:
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_moveSprite__P2328.info = {"start":22609,"length":1208,"line":623,"column":4,"endLine":654,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"moveSprite","argumentNames":["this","s","dx","dy"]}

function ArcadePhysicsEngine_moveSprite__P2328_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_moveSprite__P2328, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tm___17586: undefined,
  maxDist___17594: undefined,
  ms___17614: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_canResolveClipping__P4416(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___17659 = undefined;
    s.sz___17662 = undefined;
    s.maxMove___17667 = undefined;
    s.origY___17669 = undefined;
    s.origX___17672 = undefined;
    s.l___17675 = undefined;
    s.r___17680 = undefined;
    s.t___17685 = undefined;
    s.b___17690 = undefined;
    s.offset___17695 = undefined;
    s.offset___17720 = undefined;
    s.offset___17751 = undefined;
    s.offset___17776 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = s.arg1.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.isStatic(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_4 = Sprite__C2128_v4_1_mk(s);
    s.tmp_4.arg0 = s.arg1;
    if (!checkSubtype(s.tmp_4.arg0, Sprite__C2128_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.setHitbox;
    s.pc = 20; return s.tmp_4;
  case 20:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___17659 = (r0);
    r0 = s.arg2.fields["_scale"];
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.sz___17662 = (r0);
    s.tmp_0 = ArcadePhysicsEngine_maxStep__P2320_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 800; s.pc = 21; return s.tmp_0;
  case 21:
    r0 = s.retval;
    s.maxMove___17667 = (r0);
    r0 = s.arg1.fields["_y"];
    s.origY___17669 = (r0);
    r0 = s.arg1.fields["_x"];
    s.origX___17672 = (r0);
    s.tmp_1 = game_Hitbox_left__P2006_mk(s);
    s.tmp_1.arg0 = s.hbox___17659;
    s.callLocIdx = 801; s.pc = 22; return s.tmp_1;
  case 22:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 8);
    s.l___17675 = (r0);
    s.tmp_1 = game_Hitbox_right__P2008_mk(s);
    s.tmp_1.arg0 = s.hbox___17659;
    s.callLocIdx = 803; s.pc = 23; return s.tmp_1;
  case 23:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 8);
    s.r___17680 = (r0);
    s.tmp_1 = game_Hitbox_top__P2007_mk(s);
    s.tmp_1.arg0 = s.hbox___17659;
    s.callLocIdx = 805; s.pc = 24; return s.tmp_1;
  case 24:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 8);
    s.t___17685 = (r0);
    s.tmp_1 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_1.arg0 = s.hbox___17659;
    s.callLocIdx = 807; s.pc = 25; return s.tmp_1;
  case 25:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 8);
    s.b___17690 = (r0);
    r0 = (s.b___17690 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___17662);
    s.offset___17695 = (r0);
    r0 = (s.offset___17695 <= s.maxMove___17667);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg1.fields["_y"];
    s.tmp_3 = r0;
    r0 = (s.offset___17695 * 256);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.tmp_3 = tiles_TileMap_isOnWall__P2497_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 811; s.pc = 26; return s.tmp_3;
  case 26:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = true;
    { step = 19; continue; }
    { step = 4; continue; }
  case 3:
    r0 = (s.arg1).fields["_y"] = (s.origY___17669);
  case 4:
  case 5:
  case 6:
    r0 = (s.t___17685 / s.sz___17662);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___17662);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.t___17685);
    s.offset___17720 = (r0);
    r0 = (s.offset___17720 <= s.maxMove___17667);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg1.fields["_y"];
    s.tmp_3 = r0;
    r0 = (s.offset___17720 * 256);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_y"] = (s.tmp_2);
    s.tmp_3 = tiles_TileMap_isOnWall__P2497_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 814; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = true;
    { step = 19; continue; }
    { step = 8; continue; }
  case 7:
    r0 = (s.arg1).fields["_y"] = (s.origY___17669);
  case 8:
  case 9:
  case 10:
    r0 = (s.r___17680 + 1);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % s.sz___17662);
    s.offset___17751 = (r0);
    r0 = (s.offset___17751 <= s.maxMove___17667);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg1.fields["_x"];
    s.tmp_3 = r0;
    r0 = (s.offset___17751 * 256);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 - s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.tmp_3 = tiles_TileMap_isOnWall__P2497_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 817; s.pc = 28; return s.tmp_3;
  case 28:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    r0 = true;
    { step = 19; continue; }
    { step = 12; continue; }
  case 11:
    r0 = (s.arg1).fields["_x"] = (s.origX___17672);
  case 12:
  case 13:
  case 14:
    r0 = (s.l___17675 / s.sz___17662);
    s.tmp_3 = r0;
    r0 = pxsim.Math_.floor(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * s.sz___17662);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.l___17675);
    s.offset___17776 = (r0);
    r0 = (s.offset___17776 <= s.maxMove___17667);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 17; continue; }
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg1.fields["_x"];
    s.tmp_3 = r0;
    r0 = (s.offset___17776 * 256);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 0);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_x"] = (s.tmp_2);
    s.tmp_3 = tiles_TileMap_isOnWall__P2497_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.arg1;
    s.callLocIdx = 820; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = true;
    { step = 19; continue; }
    { step = 16; continue; }
  case 15:
    r0 = (s.arg1).fields["_x"] = (s.origX___17672);
  case 16:
  case 17:
  case 18:
    r0 = false;
  case 19:
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_canResolveClipping__P4416.info = {"start":23913,"length":2135,"line":657,"column":4,"endLine":728,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"canResolveClipping","argumentNames":["this","s","tm"]}

function ArcadePhysicsEngine_canResolveClipping__P4416_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_canResolveClipping__P4416, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  hbox___17659: undefined,
  sz___17662: undefined,
  maxMove___17667: undefined,
  origY___17669: undefined,
  origX___17672: undefined,
  l___17675: undefined,
  r___17680: undefined,
  t___17685: undefined,
  b___17690: undefined,
  offset___17695: undefined,
  offset___17720: undefined,
  offset___17751: undefined,
  offset___17776: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isStatic__P2182(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.isStatic(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite_isStatic__P2182.info = {"start":10944,"length":57,"line":388,"column":4,"endLine":390,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isStatic","argumentNames":["this"]}

function Sprite_isStatic__P2182_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isStatic__P2182, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function game_Hitbox_bottom__P2009(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1998_VT)) failedCast(r0);
    r0 = s.arg0.fields["height"];
    s.tmp_1 = r0;
    s.tmp_3 = game_Hitbox_top__P2007_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 255; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_bottom__P2009.info = {"start":783,"length":139,"line":33,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"bottom","argumentNames":["this"]}
game_Hitbox_bottom__P2009.isGetter = true;

function game_Hitbox_bottom__P2009_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_bottom__P2009, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_Hitbox_right__P2008(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1998_VT)) failedCast(r0);
    r0 = s.arg0.fields["width"];
    s.tmp_1 = r0;
    s.tmp_3 = game_Hitbox_left__P2006_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 252; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - 256);
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_right__P2008.info = {"start":635,"length":138,"line":26,"column":8,"endLine":31,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"right","argumentNames":["this"]}
game_Hitbox_right__P2008.isGetter = true;

function game_Hitbox_right__P2008_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_right__P2008, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_Hitbox_top__P2007(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1998_VT)) failedCast(r0);
    r0 = s.arg0.fields["oy"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_y"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_top__P2007.info = {"start":552,"length":73,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"top","argumentNames":["this"]}
game_Hitbox_top__P2007.isGetter = true;

function game_Hitbox_top__P2007_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_top__P2007, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function game_Hitbox_left__P2006(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1998_VT)) failedCast(r0);
    r0 = s.arg0.fields["ox"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["parent"];
    r0 = r0.fields["_x"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
game_Hitbox_left__P2006.info = {"start":468,"length":74,"line":18,"column":8,"endLine":20,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"left","argumentNames":["this"]}
game_Hitbox_left__P2006.isGetter = true;

function game_Hitbox_left__P2006_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_left__P2006, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions__P4414(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.s___17944 = undefined;
    s.hbox___17969 = undefined;
    s.tileScale___17972 = undefined;
    s.tileSize___17975 = undefined;
    s.xDiff___17979 = undefined;
    s.yDiff___17986 = undefined;
    s.right___18002 = undefined;
    s.x0___18006 = undefined;
    s.collidedTiles___18021 = undefined;
    s.y___18023 = undefined;
    s.y0___18037 = undefined;
    s.obstacle___18053 = undefined;
    s.collisionDirection___18080 = undefined;
    s.tile___18106 = undefined;
    s.unnamed80___U14 = undefined;
    s.unnamed81___U15 = undefined;
    s.down___18190 = undefined;
    s.y0___18194 = undefined;
    s.collidedTiles___18209 = undefined;
    s.x___18211 = undefined;
    s.x0___18221 = undefined;
    s.obstacle___18235 = undefined;
    s.collisionDirection___18262 = undefined;
    s.tile___18288 = undefined;
    s.unnamed82___U24 = undefined;
    s.unnamed83___U25 = undefined;
    s.overlappedTiles___18375 = undefined;
    s.x___18377 = undefined;
    s.x0___18387 = undefined;
    s.y___18397 = undefined;
    s.y0___18407 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = s.arg1.fields["sprite"];
    s.s___17944 = (r0);
    r0 = s.s___17944.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_5 = tiles_TileMap_isOnWall__P2497_mk(s);
    s.tmp_5.arg0 = s.arg2;
    s.tmp_5.arg1 = s.s___17944;
    s.callLocIdx = 683; s.pc = 93; return s.tmp_5;
  case 93:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 1; continue; }
    s.tmp_6 = r0 = s.s___17944;
    r0 = s.tmp_6.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & -257);
    s.tmp_7 = r0;
    r0 = (s.tmp_6).fields["flags"] = (s.tmp_7);
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = s.s___17944.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.isStatic(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_4 = Sprite__C2128_v4_1_mk(s);
    s.tmp_4.arg0 = s.s___17944;
    if (!checkSubtype(s.tmp_4.arg0, Sprite__C2128_VT)) failedCast(s.tmp_4.arg0);
    s.tmp_4.fn = s.tmp_4.arg0.vtable.methods.setHitbox;
    s.pc = 94; return s.tmp_4;
  case 94:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = s.s___17944.fields["_hitbox"];
    s.hbox___17969 = (r0);
    r0 = s.arg2.fields["_scale"];
    s.tileScale___17972 = (r0);
    r0 = (1 << s.tileScale___17972);
    s.tileSize___17975 = (r0);
    r0 = s.s___17944.fields["_x"];
    s.tmp_0 = r0;
    r0 = s.s___17944.fields["_lastX"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.xDiff___17979 = (r0);
    r0 = s.s___17944.fields["_y"];
    s.tmp_0 = r0;
    r0 = s.s___17944.fields["_lastY"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.yDiff___17986 = (r0);
    r0 = s.s___17944.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 2818);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 79; continue; }
    r0 = (s.xDiff___17979 !== 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 41; continue; }
    r0 = (s.xDiff___17979 > 0);
    s.right___18002 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.right___18002);
    if (!r0) { step = 7; continue; }
    s.tmp_1 = game_Hitbox_right__P2008_mk(s);
    s.tmp_1.arg0 = s.hbox___17969;
    s.callLocIdx = 688; s.pc = 95; return s.tmp_1;
  case 95:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 256);
    { step = 8; continue; }
  case 7:
    s.tmp_3 = game_Hitbox_left__P2006_mk(s);
    s.tmp_3.arg0 = s.hbox___17969;
    s.callLocIdx = 690; s.pc = 96; return s.tmp_3;
  case 96:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 256);
  case 8:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 128);
    s.tmp_5 = r0;
    r0 = (s.tileScale___17972 + 8);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 >> s.tmp_6);
    s.x0___18006 = (r0);
    r0 = pxsim_Array__mk();
    s.collidedTiles___18021 = (r0);
    s.tmp_1 = game_Hitbox_top__P2007_mk(s);
    s.tmp_1.arg0 = s.hbox___17969;
    s.callLocIdx = 694; s.pc = 97; return s.tmp_1;
  case 97:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.yDiff___17986);
    s.y___18023 = (r0);
  case 9:
    s.tmp_1 = r0 = s.y___18023;
    s.tmp_3 = r0 = s.tileSize___17975;
    s.tmp_6 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_6.arg0 = s.hbox___17969;
    s.callLocIdx = 696; s.pc = 98; return s.tmp_6;
  case 98:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.yDiff___17986);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 << 8);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    s.tmp_10 = Fx_min__P166_mk(s);
    s.tmp_10.arg0 = s.y___18023;
    s.tmp_12 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_12.arg0 = s.hbox___17969;
    s.callLocIdx = 699; s.pc = 100; return s.tmp_12;
  case 100:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 - s.yDiff___17986);
    s.tmp_10.arg1 = r0;
    s.callLocIdx = 701; s.pc = 99; return s.tmp_10;
  case 99:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + 128);
    s.tmp_8 = r0;
    r0 = (s.tileScale___17972 + 8);
    s.tmp_13 = r0;
    r0 = (s.tmp_8 >> s.tmp_13);
    s.y0___18037 = (r0);
    s.tmp_1 = tiles_TileMap_isObstacle__P2495_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___18006;
    s.tmp_1.arg2 = s.y0___18037;
    s.callLocIdx = 704; s.pc = 101; return s.tmp_1;
  case 101:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 12; continue; }
    s.tmp_2 = tiles_TileMap_getObstacle__P2496_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___18006;
    s.tmp_2.arg2 = s.y0___18037;
    s.callLocIdx = 705; s.pc = 102; return s.tmp_2;
  case 102:
    r0 = s.retval;
    s.obstacle___18053 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapCollisions_inline__P18061);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___18053);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___18021;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 706; s.pc = 103; return s.tmp_4;
  case 103:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 10; continue; }
    r0 = pxsim_Array__push(s.collidedTiles___18021, s.obstacle___18053);
  case 10:
  case 11:
  case 12:
  case 13:
    r0 = (s.tileSize___17975 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.y___18023);
    s.y___18023 = (r0);
    { step = 9; continue; }
  case 14:
    r0 = pxsim_Array__length(s.collidedTiles___18021);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = pxsim_numops_toBoolDecr(s.right___18002);
    if (!r0) { step = 15; continue; }
    r0 = 2;
    { step = 16; continue; }
  case 15:
    r0 = 0;
  case 16:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___18080 = (s.tmp_1);
    r0 = pxsim_numops_toBoolDecr(s.right___18002);
    if (!r0) { step = 17; continue; }
    r0 = (s.x0___18006 << s.tileScale___17972);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_0 = r0;
    r0 = s.hbox___17969.fields["width"];
    s.tmp_3 = r0;
    r0 = (s.tmp_0 - s.tmp_3);
    { step = 18; continue; }
  case 17:
    r0 = (s.x0___18006 + 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 << s.tileScale___17972);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 * 256);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 | 0);
  case 18:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.s___17944;
    r0 = s.hbox___17969.fields["ox"];
    s.tmp_10 = r0;
    r0 = (s.tmp_7 - s.tmp_10);
    s.tmp_9 = r0;
    r0 = (s.tmp_8).fields["_x"] = (s.tmp_9);
    s.tile___18106 = (undefined);
    s.unnamed80___U14 = (s.collidedTiles___18021);
    s.unnamed81___U15 = (0);
  case 19:
    s.tmp_0 = r0 = s.unnamed81___U15;
    r0 = pxsim_Array__length(s.unnamed80___U14);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 22; continue; }
    r0 = pxsim_Array__getAt(s.unnamed80___U14, s.unnamed81___U15);
    s.tile___18106 = (r0);
    r0 = s.s___17944.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 20; continue; }
    s.tmp_6 = Sprite_registerObstacle__P2213_mk(s);
    s.tmp_6.arg0 = s.s___17944;
    s.tmp_6.arg1 = s.collisionDirection___18080;
    s.tmp_6.arg2 = s.tile___18106;
    s.tmp_6.arg3 = s.arg2;
    s.callLocIdx = 712; s.pc = 104; return s.tmp_6;
  case 104:
    r0 = s.retval;
  case 20:
  case 21:
    r0 = (s.unnamed81___U15 + 1);
    s.unnamed81___U15 = (r0);
    { step = 19; continue; }
  case 22:
    s.unnamed80___U14 = (undefined);
    r0 = s.s___17944.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.tmp_2 = Sprite_destroy__P2215_mk(s);
    s.tmp_2.arg0 = s.s___17944;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 713; s.pc = 105; return s.tmp_2;
  case 105:
    r0 = s.retval;
    { step = 38; continue; }
  case 23:
    r0 = s.s___17944.fields["_vx"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 34; continue; }
    r0 = s.s___17944.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 32);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 32; continue; }
    r0 = pxsim_numops_toBoolDecr(s.right___18002);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 24; continue; }
    r0 = s.tmp_5;
    { step = 25; continue; }
  case 24:
    s.tmp_8 = Sprite_vx__P2145_mk(s);
    s.tmp_8.arg0 = s.s___17944;
    s.callLocIdx = 714; s.pc = 106; return s.tmp_8;
  case 106:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 < 0);
  case 25:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 26; continue; }
    r0 = s.tmp_9;
    { step = 29; continue; }
  case 26:
    s.tmp_10 = r0 = s.right___18002;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 27; continue; }
    r0 = s.tmp_10;
    { step = 28; continue; }
  case 27:
    s.tmp_12 = Sprite_vx__P2145_mk(s);
    s.tmp_12.arg0 = s.s___17944;
    s.callLocIdx = 715; s.pc = 107; return s.tmp_12;
  case 107:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 > 0);
  case 28:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = s.tmp_13;
  case 29:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    if (!r0) { step = 30; continue; }
    s.tmp_15 = r0 = s.s___17944;
    r0 = s.s___17944.fields["_vx"];
    s.tmp_17 = r0;
    r0 = (0 - s.tmp_17);
    s.tmp_16 = r0;
    r0 = (s.tmp_15).fields["_vx"] = (s.tmp_16);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["xStep"];
    s.tmp_2 = r0;
    r0 = (0 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["dx"];
    s.tmp_2 = r0;
    r0 = (0 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
  case 30:
  case 31:
    { step = 33; continue; }
  case 32:
    r0 = (s.arg1).fields["dx"] = (0);
    r0 = (s.s___17944).fields["_vx"] = (0);
  case 33:
    { step = 37; continue; }
  case 34:
    s.tmp_2 = Math_sign__P129_mk(s);
    r0 = s.s___17944.fields["_vx"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 128);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 8);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 720; s.pc = 108; return s.tmp_2;
  case 108:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_6 = Math_sign__P129_mk(s);
    r0 = s.arg1.fields["cachedVx"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 128);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 >> 8);
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 722; s.pc = 109; return s.tmp_6;
  case 109:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_1 === s.tmp_5);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 35; continue; }
    r0 = (s.arg1).fields["dx"] = (0);
  case 35:
  case 36:
  case 37:
  case 38:
  case 39:
  case 40:
  case 41:
  case 42:
    r0 = (s.yDiff___17986 !== 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 77; continue; }
    r0 = (s.yDiff___17986 > 0);
    s.down___18190 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.down___18190);
    if (!r0) { step = 43; continue; }
    s.tmp_1 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_1.arg0 = s.hbox___17969;
    s.callLocIdx = 723; s.pc = 110; return s.tmp_1;
  case 110:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 256);
    { step = 44; continue; }
  case 43:
    s.tmp_3 = game_Hitbox_top__P2007_mk(s);
    s.tmp_3.arg0 = s.hbox___17969;
    s.callLocIdx = 725; s.pc = 111; return s.tmp_3;
  case 111:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 256);
  case 44:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + 128);
    s.tmp_5 = r0;
    r0 = (s.tileScale___17972 + 8);
    s.tmp_6 = r0;
    r0 = (s.tmp_5 >> s.tmp_6);
    s.y0___18194 = (r0);
    r0 = pxsim_Array__mk();
    s.collidedTiles___18209 = (r0);
    s.tmp_0 = game_Hitbox_left__P2006_mk(s);
    s.tmp_0.arg0 = s.hbox___17969;
    s.callLocIdx = 729; s.pc = 112; return s.tmp_0;
  case 112:
    r0 = s.retval;
    s.x___18211 = (r0);
  case 45:
    s.tmp_1 = r0 = s.x___18211;
    s.tmp_3 = r0 = s.tileSize___17975;
    s.tmp_5 = game_Hitbox_right__P2008_mk(s);
    s.tmp_5.arg0 = s.hbox___17969;
    s.callLocIdx = 730; s.pc = 113; return s.tmp_5;
  case 113:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3 << 8);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 50; continue; }
    s.tmp_9 = Fx_min__P166_mk(s);
    s.tmp_9.arg0 = s.x___18211;
    s.tmp_10 = game_Hitbox_right__P2008_mk(s);
    s.tmp_10.arg0 = s.hbox___17969;
    s.callLocIdx = 732; s.pc = 115; return s.tmp_10;
  case 115:
    r0 = s.retval;
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 733; s.pc = 114; return s.tmp_9;
  case 114:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 128);
    s.tmp_7 = r0;
    r0 = (s.tileScale___17972 + 8);
    s.tmp_11 = r0;
    r0 = (s.tmp_7 >> s.tmp_11);
    s.x0___18221 = (r0);
    s.tmp_1 = tiles_TileMap_isObstacle__P2495_mk(s);
    s.tmp_1.arg0 = s.arg2;
    s.tmp_1.arg1 = s.x0___18221;
    s.tmp_1.arg2 = s.y0___18194;
    s.callLocIdx = 736; s.pc = 116; return s.tmp_1;
  case 116:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 48; continue; }
    s.tmp_2 = tiles_TileMap_getObstacle__P2496_mk(s);
    s.tmp_2.arg0 = s.arg2;
    s.tmp_2.arg1 = s.x0___18221;
    s.tmp_2.arg2 = s.y0___18194;
    s.callLocIdx = 737; s.pc = 117; return s.tmp_2;
  case 117:
    r0 = s.retval;
    s.obstacle___18235 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapCollisions_inline__P18243);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.obstacle___18235);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.collidedTiles___18209;
    s.tmp_4.arg1 = s.tmp_0;
    s.callLocIdx = 738; s.pc = 118; return s.tmp_4;
  case 118:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 46; continue; }
    r0 = pxsim_Array__push(s.collidedTiles___18209, s.obstacle___18235);
  case 46:
  case 47:
  case 48:
  case 49:
    r0 = (s.tileSize___17975 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.x___18211);
    s.x___18211 = (r0);
    { step = 45; continue; }
  case 50:
    r0 = pxsim_Array__length(s.collidedTiles___18209);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 75; continue; }
    r0 = pxsim_numops_toBoolDecr(s.down___18190);
    if (!r0) { step = 51; continue; }
    r0 = 3;
    { step = 52; continue; }
  case 51:
    r0 = 1;
  case 52:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.collisionDirection___18262 = (s.tmp_1);
    r0 = pxsim_numops_toBoolDecr(s.down___18190);
    if (!r0) { step = 53; continue; }
    r0 = (s.y0___18194 << s.tileScale___17972);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 * 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 | 0);
    s.tmp_0 = r0;
    r0 = s.hbox___17969.fields["height"];
    s.tmp_3 = r0;
    r0 = (s.tmp_0 - s.tmp_3);
    { step = 54; continue; }
  case 53:
    r0 = (s.y0___18194 + 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 << s.tileScale___17972);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 * 256);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 | 0);
  case 54:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    s.tmp_8 = r0 = s.s___17944;
    r0 = s.hbox___17969.fields["oy"];
    s.tmp_10 = r0;
    r0 = (s.tmp_7 - s.tmp_10);
    s.tmp_9 = r0;
    r0 = (s.tmp_8).fields["_y"] = (s.tmp_9);
    s.tile___18288 = (undefined);
    s.unnamed82___U24 = (s.collidedTiles___18209);
    s.unnamed83___U25 = (0);
  case 55:
    s.tmp_0 = r0 = s.unnamed83___U25;
    r0 = pxsim_Array__length(s.unnamed82___U24);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 58; continue; }
    r0 = pxsim_Array__getAt(s.unnamed82___U24, s.unnamed83___U25);
    s.tile___18288 = (r0);
    r0 = s.s___17944.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 & 2818);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 56; continue; }
    s.tmp_6 = Sprite_registerObstacle__P2213_mk(s);
    s.tmp_6.arg0 = s.s___17944;
    s.tmp_6.arg1 = s.collisionDirection___18262;
    s.tmp_6.arg2 = s.tile___18288;
    s.tmp_6.arg3 = s.arg2;
    s.callLocIdx = 744; s.pc = 119; return s.tmp_6;
  case 119:
    r0 = s.retval;
  case 56:
  case 57:
    r0 = (s.unnamed83___U25 + 1);
    s.unnamed83___U25 = (r0);
    { step = 55; continue; }
  case 58:
    s.unnamed82___U24 = (undefined);
    r0 = s.s___17944.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 16);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 59; continue; }
    s.tmp_2 = Sprite_destroy__P2215_mk(s);
    s.tmp_2.arg0 = s.s___17944;
    s.tmp_2.arg1 = undefined;
    s.tmp_2.arg2 = undefined;
    s.callLocIdx = 745; s.pc = 120; return s.tmp_2;
  case 120:
    r0 = s.retval;
    { step = 74; continue; }
  case 59:
    r0 = s.s___17944.fields["_vy"];
    s.tmp_1 = r0;
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 70; continue; }
    r0 = s.s___17944.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 32);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 68; continue; }
    r0 = pxsim_numops_toBoolDecr(s.down___18190);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBool(s.tmp_5);
    if (r0) { step = 60; continue; }
    r0 = s.tmp_5;
    { step = 61; continue; }
  case 60:
    s.tmp_8 = Sprite_vy__P2147_mk(s);
    s.tmp_8.arg0 = s.s___17944;
    s.callLocIdx = 746; s.pc = 121; return s.tmp_8;
  case 121:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = (s.tmp_7 < 0);
  case 61:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (!r0) { step = 62; continue; }
    r0 = s.tmp_9;
    { step = 65; continue; }
  case 62:
    s.tmp_10 = r0 = s.down___18190;
    r0 = pxsim_numops_toBool(s.tmp_10);
    if (r0) { step = 63; continue; }
    r0 = s.tmp_10;
    { step = 64; continue; }
  case 63:
    s.tmp_12 = Sprite_vy__P2147_mk(s);
    s.tmp_12.arg0 = s.s___17944;
    s.callLocIdx = 747; s.pc = 122; return s.tmp_12;
  case 122:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_11 > 0);
  case 64:
    // jmp value (already in r0)
    s.tmp_13 = r0;
    r0 = s.tmp_13;
  case 65:
    // jmp value (already in r0)
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    if (!r0) { step = 66; continue; }
    s.tmp_15 = r0 = s.s___17944;
    r0 = s.s___17944.fields["_vy"];
    s.tmp_17 = r0;
    r0 = (0 - s.tmp_17);
    s.tmp_16 = r0;
    r0 = (s.tmp_15).fields["_vy"] = (s.tmp_16);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["yStep"];
    s.tmp_2 = r0;
    r0 = (0 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    r0 = s.arg1.fields["dy"];
    s.tmp_2 = r0;
    r0 = (0 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
  case 66:
  case 67:
    { step = 69; continue; }
  case 68:
    r0 = (s.arg1).fields["dy"] = (0);
    r0 = (s.s___17944).fields["_vy"] = (0);
  case 69:
    { step = 73; continue; }
  case 70:
    s.tmp_2 = Math_sign__P129_mk(s);
    r0 = s.s___17944.fields["_vy"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 128);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 8);
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 752; s.pc = 123; return s.tmp_2;
  case 123:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_6 = Math_sign__P129_mk(s);
    r0 = s.arg1.fields["cachedVy"];
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 128);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 >> 8);
    s.tmp_6.arg0 = r0;
    s.callLocIdx = 754; s.pc = 124; return s.tmp_6;
  case 124:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_1 === s.tmp_5);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 71; continue; }
    r0 = (s.arg1).fields["dy"] = (0);
  case 71:
  case 72:
  case 73:
  case 74:
  case 75:
  case 76:
  case 77:
  case 78:
  case 79:
  case 80:
    r0 = s.s___17944.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 1538);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 91; continue; }
    r0 = pxsim_Array__mk();
    s.overlappedTiles___18375 = (r0);
    s.tmp_0 = game_Hitbox_left__P2006_mk(s);
    s.tmp_0.arg0 = s.hbox___17969;
    s.callLocIdx = 755; s.pc = 125; return s.tmp_0;
  case 125:
    r0 = s.retval;
    s.x___18377 = (r0);
  case 81:
    s.tmp_1 = r0 = s.x___18377;
    s.tmp_3 = r0 = s.tileSize___17975;
    s.tmp_5 = game_Hitbox_right__P2008_mk(s);
    s.tmp_5.arg0 = s.hbox___17969;
    s.callLocIdx = 756; s.pc = 126; return s.tmp_5;
  case 126:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3 << 8);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 88; continue; }
    s.tmp_9 = Fx_min__P166_mk(s);
    s.tmp_9.arg0 = s.x___18377;
    s.tmp_10 = game_Hitbox_right__P2008_mk(s);
    s.tmp_10.arg0 = s.hbox___17969;
    s.callLocIdx = 758; s.pc = 128; return s.tmp_10;
  case 128:
    r0 = s.retval;
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 759; s.pc = 127; return s.tmp_9;
  case 127:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 128);
    s.tmp_7 = r0;
    r0 = (s.tileScale___17972 + 8);
    s.tmp_11 = r0;
    r0 = (s.tmp_7 >> s.tmp_11);
    s.x0___18387 = (r0);
    s.tmp_0 = game_Hitbox_top__P2007_mk(s);
    s.tmp_0.arg0 = s.hbox___17969;
    s.callLocIdx = 762; s.pc = 129; return s.tmp_0;
  case 129:
    r0 = s.retval;
    s.y___18397 = (r0);
  case 82:
    s.tmp_1 = r0 = s.y___18397;
    s.tmp_3 = r0 = s.tileSize___17975;
    s.tmp_5 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_5.arg0 = s.hbox___17969;
    s.callLocIdx = 763; s.pc = 130; return s.tmp_5;
  case 130:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3 << 8);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 < s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 87; continue; }
    s.tmp_9 = Fx_min__P166_mk(s);
    s.tmp_9.arg0 = s.y___18397;
    s.tmp_10 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_10.arg0 = s.hbox___17969;
    s.callLocIdx = 765; s.pc = 132; return s.tmp_10;
  case 132:
    r0 = s.retval;
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 766; s.pc = 131; return s.tmp_9;
  case 131:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + 128);
    s.tmp_7 = r0;
    r0 = (s.tileScale___17972 + 8);
    s.tmp_11 = r0;
    r0 = (s.tmp_7 >> s.tmp_11);
    s.y0___18407 = (r0);
    s.tmp_3 = tiles_TileMap_isObstacle__P2495_mk(s);
    s.tmp_3.arg0 = s.arg2;
    s.tmp_3.arg1 = s.x0___18387;
    s.tmp_3.arg2 = s.y0___18407;
    s.callLocIdx = 769; s.pc = 133; return s.tmp_3;
  case 133:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 83; continue; }
    r0 = s.tmp_0;
    { step = 84; continue; }
  case 83:
    r0 = s.s___17944.fields["flags"];
    s.tmp_8 = r0;
    r0 = (s.tmp_8 & 2048);
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_4);
  case 84:
    // jmp value (already in r0)
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 85; continue; }
    s.tmp_10 = r0 = s.overlappedTiles___18375;
    s.tmp_12 = tiles_TileMap_getTile__P2488_mk(s);
    s.tmp_12.arg0 = s.arg2;
    s.tmp_12.arg1 = s.x0___18387;
    s.tmp_12.arg2 = s.y0___18407;
    s.callLocIdx = 770; s.pc = 134; return s.tmp_12;
  case 134:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_Array__push(s.tmp_10, s.tmp_11);
  case 85:
  case 86:
    r0 = (s.tileSize___17975 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.y___18397);
    s.y___18397 = (r0);
    { step = 82; continue; }
  case 87:
    r0 = (s.tileSize___17975 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.x___18377);
    s.x___18377 = (r0);
    { step = 81; continue; }
  case 88:
    r0 = pxsim_Array__length(s.overlappedTiles___18375);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 89; continue; }
    s.tmp_1 = ArcadePhysicsEngine_tilemapOverlaps__P4415_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.s___17944;
    s.tmp_1.arg2 = s.overlappedTiles___18375;
    s.callLocIdx = 773; s.pc = 135; return s.tmp_1;
  case 135:
    r0 = s.retval;
  case 89:
  case 90:
  case 91:
  case 92:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions__P4414.info = {"start":11722,"length":9572,"line":348,"column":4,"endLine":587,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapCollisions","argumentNames":["this","movingSprite","tm"]}

function ArcadePhysicsEngine_tilemapCollisions__P4414_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions__P4414, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  s___17944: undefined,
  hbox___17969: undefined,
  tileScale___17972: undefined,
  tileSize___17975: undefined,
  xDiff___17979: undefined,
  yDiff___17986: undefined,
  right___18002: undefined,
  x0___18006: undefined,
  collidedTiles___18021: undefined,
  y___18023: undefined,
  y0___18037: undefined,
  obstacle___18053: undefined,
  collisionDirection___18080: undefined,
  tile___18106: undefined,
  unnamed80___U14: undefined,
  unnamed81___U15: undefined,
  down___18190: undefined,
  y0___18194: undefined,
  collidedTiles___18209: undefined,
  x___18211: undefined,
  x0___18221: undefined,
  obstacle___18235: undefined,
  collisionDirection___18262: undefined,
  tile___18288: undefined,
  unnamed82___U24: undefined,
  unnamed83___U25: undefined,
  overlappedTiles___18375: undefined,
  x___18377: undefined,
  x0___18387: undefined,
  y___18397: undefined,
  y0___18407: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions_inline__P18061(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions_inline__P18061.info = {"start":13940,"length":39,"line":410,"column":48,"endLine":410,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function ArcadePhysicsEngine_tilemapCollisions_inline__P18061_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions_inline__P18061, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapCollisions_inline__P18243(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["tileIndex"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["tileIndex"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 === s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapCollisions_inline__P18243.info = {"start":17420,"length":39,"line":491,"column":48,"endLine":491,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["o"]}

function ArcadePhysicsEngine_tilemapCollisions_inline__P18243_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapCollisions_inline__P18243, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps__P4415(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.alreadyHandled___18454 = undefined;
    s.tile___18457 = undefined;
    s.unnamed84___U2 = undefined;
    s.unnamed85___U3 = undefined;
    s.tileOverlapHandlers___18478 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = pxsim_Array__mk();
    s.alreadyHandled___18454 = (r0);
    s.tile___18457 = (undefined);
    s.unnamed84___U2 = (s.arg2);
    s.unnamed85___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed85___U3;
    r0 = pxsim_Array__length(s.unnamed84___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_Array__getAt(s.unnamed84___U2, s.unnamed85___U3);
    s.tile___18457 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, ArcadePhysicsEngine_tilemapOverlaps_inline__P18461);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.tile___18457);
    s.tmp_4 = helpers_arraySome__P107_mk(s);
    s.tmp_4.arg0 = s.alreadyHandled___18454;
    s.tmp_4.arg1 = s.tmp_2;
    s.callLocIdx = 778; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 2; continue; }
    { step = 6; continue; }
  case 2:
  case 3:
    r0 = pxsim_Array__push(s.alreadyHandled___18454, s.tile___18457);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 779; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    r0 = r0.fields["tileOverlapHandlers"];
    s.tileOverlapHandlers___18478 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tileOverlapHandlers___18478);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_pxtcore_mkAction(2, forEach_inline__P18486);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.tile___18457);
    r0 = pxsim_pxtcore_mkAction(2, ArcadePhysicsEngine_tilemapOverlaps_inline__P18502);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg1);
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 1, s.tile___18457);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3.arg0 = s.tileOverlapHandlers___18478;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 782; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 784; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = (s.unnamed85___U3 + 1);
    s.unnamed85___U3 = (r0);
    { step = 1; continue; }
  case 7:
    s.unnamed84___U2 = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps__P4415.info = {"start":21571,"length":707,"line":595,"column":4,"endLine":611,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"tilemapOverlaps","argumentNames":["this","sprite","overlappedTiles"]}

function ArcadePhysicsEngine_tilemapOverlaps__P4415_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps__P4415, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  alreadyHandled___18454: undefined,
  tile___18457: undefined,
  unnamed84___U2: undefined,
  unnamed85___U3: undefined,
  tileOverlapHandlers___18478: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps_inline__P18461(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["_col"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["_col"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 === s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_row"];
    s.tmp_3 = r0;
    r0 = s.caps[0].fields["_row"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 === s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = s.tmp_5;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps_inline__P18461.info = {"start":21786,"length":51,"line":599,"column":36,"endLine":599,"endColumn":87,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["l"]}

function ArcadePhysicsEngine_tilemapOverlaps_inline__P18461_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps_inline__P18461, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  arg0: undefined,
} }





function forEach_inline__P18486(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_1 = r0;
    r0 = s.caps[0].fields["_kind"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 == s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["tileKind"];
    s.tmp_3 = r0;
    s.tmp_5 = tiles_getTileImage__P2507_mk(s);
    s.tmp_5.arg0 = s.caps[1];
    s.callLocIdx = 781; s.pc = 3; return s.tmp_5;
  case 3:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.equals(s.tmp_3, s.tmp_4);
  case 2:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    r0 = s.tmp_6;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P18486.info = {"start":22106,"length":81,"line":607,"column":28,"endLine":607,"endColumn":109,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P18486_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P18486, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_tilemapOverlaps_inline__P18502(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 783; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 783; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 783; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 783; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_tilemapOverlaps_inline__P18502.info = {"start":22218,"length":28,"line":608,"column":29,"endLine":608,"endColumn":57,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function ArcadePhysicsEngine_tilemapOverlaps_inline__P18502_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_tilemapOverlaps_inline__P18502, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_getTileImage__P2507(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___18510 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 995; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.scene___18510 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg0);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.scene___18510.fields["tileMap"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = pxsim.image.ofBuffer(_hex18520);
    { step = 5; continue; }
  case 3:
  case 4:
    s.tmp_5 = tiles_TileMap_getTileImage__P2498_mk(s);
    r0 = s.scene___18510.fields["tileMap"];
    s.tmp_5.arg0 = r0;
    s.tmp_6 = tiles_Location_tileSet__P2443_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 996; s.pc = 8; return s.tmp_6;
  case 8:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.callLocIdx = 997; s.pc = 7; return s.tmp_5;
  case 7:
    r0 = s.retval;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_getTileImage__P2507.info = {"start":21828,"length":207,"line":673,"column":4,"endLine":677,"endColumn":5,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["loc"]}

function tiles_getTileImage__P2507_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_getTileImage__P2507, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  scene___18510: undefined,
  arg0: undefined,
} }

const _hex18520 = pxsim.BufferMethods.createBufferFromHex("8704000000000000")




function tiles_TileMap_getTileImage__P2498(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    s.tmp_0 = tiles_TileMapData_getTileImage__P2465_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 994; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileImage__P2498.info = {"start":17474,"length":96,"line":553,"column":8,"endLine":555,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMap_getTileImage__P2498_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileImage__P2498, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_getTileImage__P2465(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.size___18575 = undefined;
    s.cachedImage___18579 = undefined;
    s.originalImage___18586 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    r0 = s.arg0.fields["_scale"];
    s.tmp_0 = r0;
    r0 = (1 << s.tmp_0);
    s.size___18575 = (r0);
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.arg1);
    s.cachedImage___18579 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.cachedImage___18579);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.arg0.fields["tileset"];
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_2, s.arg1);
    s.originalImage___18586 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.originalImage___18586);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_ImageMethods.width(s.originalImage___18586);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= s.size___18575);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_ImageMethods.height(s.originalImage___18586);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 <= s.size___18575);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.cachedImage___18579 = (s.originalImage___18586);
    { step = 4; continue; }
  case 3:
    r0 = pxsim.image.create(s.size___18575, s.size___18575);
    s.cachedImage___18579 = (r0);
    r0 = pxsim_ImageMethods.drawImage(s.cachedImage___18579, s.originalImage___18586, 0, 0);
  case 4:
    r0 = s.arg0.fields["cachedTileView"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.cachedImage___18579);
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = s.cachedImage___18579;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTileImage__P2465.info = {"start":7318,"length":717,"line":251,"column":8,"endLine":268,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileImage","argumentNames":["this","index"]}

function tiles_TileMapData_getTileImage__P2465_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTileImage__P2465, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  size___18575: undefined,
  cachedImage___18579: undefined,
  originalImage___18586: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_scale__P2460(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    r0 = s.arg0.fields["_scale"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P2460.info = {"start":6528,"length":66,"line":222,"column":8,"endLine":224,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this"]}
tiles_TileMapData_scale__P2460.isGetter = true;

function tiles_TileMapData_scale__P2460_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P2460, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_tileSet__P2443(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    s.tmp_0 = tiles_TileMap_getTileIndex__P2489_mk(s);
    s.tmp_1 = tiles_Location_tileMap__P2434_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 925; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["_col"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["_row"];
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 926; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileSet__P2443.info = {"start":2323,"length":101,"line":86,"column":8,"endLine":88,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileSet","argumentNames":["this"]}
tiles_Location_tileSet__P2443.isGetter = true;

function tiles_Location_tileSet__P2443_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileSet__P2443, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function tiles_TileMap_getTileIndex__P2489(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    s.tmp_0 = tiles_TileMapData_getTile__P2462_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 949; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTileIndex__P2489.info = {"start":11155,"length":105,"line":384,"column":8,"endLine":386,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTileIndex","argumentNames":["this","col","row"]}

function tiles_TileMap_getTileIndex__P2489_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTileIndex__P2489, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_getTile__P2462(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P2468_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 928; s.pc = 4; return s.tmp_1;
  case 4:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 3; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["data"];
    s.tmp_2 = r0;
    r0 = (s.arg1 | 0);
    s.tmp_5 = r0;
    r0 = (4 + s.tmp_5);
    s.tmp_4 = r0;
    r0 = (s.arg2 | 0);
    s.tmp_7 = r0;
    r0 = s.arg0.fields["_width"];
    s.tmp_8 = r0;
    r0 = (s.tmp_7 * s.tmp_8);
    s.tmp_6 = r0;
    r0 = (s.tmp_4 + s.tmp_6);
    s.tmp_3 = r0;
    r0 = pxsim.BufferMethods.getUint8(s.tmp_2, s.tmp_3);
  case 3:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_getTile__P2462.info = {"start":6716,"length":200,"line":231,"column":8,"endLine":235,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMapData_getTile__P2462_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_getTile__P2462, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isOutsideMap__P2468(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    r0 = (s.arg1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg0.fields["_width"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    r0 = (s.arg2 < 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_4;
    { step = 6; continue; }
  case 5:
    s.tmp_5 = r0 = s.arg2;
    r0 = s.arg0.fields["_height"];
    s.tmp_6 = r0;
    r0 = (s.tmp_5 >= s.tmp_6);
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isOutsideMap__P2468.info = {"start":8299,"length":132,"line":278,"column":8,"endLine":280,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOutsideMap","argumentNames":["this","col","row"]}

function tiles_TileMapData_isOutsideMap__P2468_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isOutsideMap__P2468, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_tileMap__P2434(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 916; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_tileMap__P2434.info = {"start":491,"length":73,"line":24,"column":8,"endLine":26,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"tileMap","argumentNames":["this"]}
tiles_Location_tileMap__P2434.isGetter = true;

function tiles_Location_tileMap__P2434_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_tileMap__P2434, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function tiles_Location_row__P2436(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    r0 = s.arg0.fields["_row"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_row__P2436.info = {"start":877,"length":51,"line":38,"column":8,"endLine":40,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"row","argumentNames":["this"]}
tiles_Location_row__P2436.isGetter = true;

function tiles_Location_row__P2436_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_row__P2436, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_Location_column__P2435(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    r0 = s.arg0.fields["_col"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_column__P2435.info = {"start":695,"length":54,"line":31,"column":8,"endLine":33,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"column","argumentNames":["this"]}
tiles_Location_column__P2435.isGetter = true;

function tiles_Location_column__P2435_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_column__P2435, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function tiles_TileMap_getObstacle__P2496(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.index___18749 = undefined;
    s.tile___18761 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    s.tmp_1 = tiles_TileMapData_isOutsideMap__P2468_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.callLocIdx = 973; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = tiles_TileMapData_getTile__P2462_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.arg1;
    s.tmp_2.arg2 = s.arg2;
    s.callLocIdx = 974; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    s.index___18749 = (s.tmp_3);
    s.tmp_0 = tiles_TileMapData_getTileImage__P2465_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___18749;
    s.callLocIdx = 975; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.tile___18761 = (r0);
    r0 = pxsim_pxtcore_mkClassInstance(sprites_StaticObstacle__C2285_VT);
    s.tmp_0 = r0;
    s.tmp_1 = sprites_StaticObstacle_constructor__P2291_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.tile___18761;
    s.tmp_2 = r0 = s.arg2;
    r0 = s.arg0.fields["_scale"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1.arg2 = r0;
    s.tmp_4 = r0 = s.arg1;
    r0 = s.arg0.fields["_scale"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 << s.tmp_5);
    s.tmp_1.arg3 = r0;
    r0 = s.arg0.fields["_layer"];
    s.tmp_1.arg4 = r0;
    s.tmp_1.arg5 = s.index___18749;
    s.callLocIdx = 979; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getObstacle__P2496.info = {"start":16417,"length":410,"line":522,"column":8,"endLine":532,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_getObstacle__P2496_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getObstacle__P2496, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  index___18749: undefined,
  tile___18761: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_layer__P2484(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg0.fields["_layer"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_layer__P2484.info = {"start":9931,"length":63,"line":341,"column":8,"endLine":343,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"layer","argumentNames":["this"]}
tiles_TileMap_layer__P2484.isGetter = true;

function tiles_TileMap_layer__P2484_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_layer__P2484, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_StaticObstacle_constructor__P2291(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2285_VT)) failedCast(r0);
    r0 = (s.arg0).fields["image"] = (s.arg1);
    r0 = (s.arg0).fields["layer"] = (s.arg4);
    r0 = (s.arg0).fields["top"] = (s.arg2);
    r0 = (s.arg0).fields["left"] = (s.arg3);
    r0 = (s.arg0).fields["tileIndex"] = (s.arg5);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_constructor__P2291.info = {"start":563,"length":261,"line":28,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"inline","argumentNames":["this","image","top","left","layer","tileIndex"]}

function sprites_StaticObstacle_constructor__P2291_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_constructor__P2291, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
} }





function tiles_TileMap_isObstacle__P2495(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg0.fields["_map"];
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = false;
    { step = 5; continue; }
  case 1:
  case 2:
    s.tmp_8 = tiles_TileMapData_isOutsideMap__P2468_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_8.arg0 = r0;
    s.tmp_8.arg1 = s.arg1;
    s.tmp_8.arg2 = s.arg2;
    s.callLocIdx = 971; s.pc = 6; return s.tmp_8;
  case 6:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 3; continue; }
    r0 = true;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = s.arg0.fields["_map"];
    s.tmp_9 = r0;
    r0 = s.tmp_9.fields["layers"];
    s.tmp_11 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_11, s.arg1, s.arg2);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 === 2);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isObstacle__P2495.info = {"start":16196,"length":211,"line":515,"column":8,"endLine":520,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isObstacle","argumentNames":["this","col","row"]}

function tiles_TileMap_isObstacle__P2495_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isObstacle__P2495, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMapData_isWall__P2467(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    r0 = s.arg0.fields["layers"];
    s.tmp_1 = r0;
    r0 = pxsim_ImageMethods.getPixel(s.tmp_1, s.arg1, s.arg2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 === 2);
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_isWall__P2467.info = {"start":8182,"length":107,"line":274,"column":8,"endLine":276,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isWall","argumentNames":["this","col","row"]}

function tiles_TileMapData_isWall__P2467_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_isWall__P2467, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_getTile__P2488(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = pxsim_pxtcore_mkClassInstance(tiles_Location__C2432_VT);
    s.tmp_0 = r0;
    s.tmp_1 = tiles_Location_constructor__P2433_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    s.tmp_1.arg2 = s.arg2;
    s.tmp_1.arg3 = s.arg0;
    s.callLocIdx = 947; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_getTile__P2488.info = {"start":11034,"length":111,"line":380,"column":8,"endLine":382,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"getTile","argumentNames":["this","col","row"]}

function tiles_TileMap_getTile__P2488_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_getTile__P2488, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_Location_constructor__P2433(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_col"] = (s.arg1);
    r0 = (s.arg0).fields["_row"] = (s.arg2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_Location_constructor__P2433.info = {"start":360,"length":121,"line":19,"column":8,"endLine":22,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","col","row","map"]}

function tiles_Location_constructor__P2433_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_constructor__P2433, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_registerObstacle__P2213(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.collisionHandlers___18662 = undefined;
    s.wallCollisionHandlers___18669 = undefined;
    s.wallHandlersToRun___18694 = undefined;
    s.asTileLocation___18707 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_obstacles"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, s.arg1, s.arg2);
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 482; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = r0.fields["collisionHandlers"];
    s.tmp_0 = r0;
    s.tmp_3 = if_tileIndex_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "tileIndex");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["tileIndex"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["tileIndex"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 483; s.pc = 10; return s.tmp_3; }
    }
  case 10:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.tmp_2);
    s.collisionHandlers___18662 = (r0);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 484; s.pc = 11; return s.tmp_0;
  case 11:
    r0 = s.retval;
    r0 = r0.fields["wallCollisionHandlers"];
    s.wallCollisionHandlers___18669 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.collisionHandlers___18662);
    if (!r0) { step = 1; continue; }
    r0 = pxsim_pxtcore_mkAction(1, forEach_inline__P18677);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtcore_mkAction(1, Sprite_registerObstacle_inline__P18683);
    s.tmp_1 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_1, 0, s.arg0);
    s.tmp_2 = helpers_arrayForEach__P109_mk(s);
    s.tmp_3 = helpers_arrayFilter__P110_mk(s);
    s.tmp_3.arg0 = s.collisionHandlers___18662;
    s.tmp_3.arg1 = s.tmp_0;
    s.callLocIdx = 486; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.tmp_1;
    s.callLocIdx = 488; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = pxsim_numops_toBoolDecr(s.wallCollisionHandlers___18669);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = r0 = s.arg3;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    s.tmp_1 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 489; s.pc = 14; return s.tmp_1;
  case 14:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.arg3 = (s.tmp_2);
    r0 = pxsim_pxtcore_mkAction(1, wallHandlersToRun_inline__P18696);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = helpers_arrayFilter__P110_mk(s);
    s.tmp_1.arg0 = s.wallCollisionHandlers___18669;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 491; s.pc = 15; return s.tmp_1;
  case 15:
    r0 = s.retval;
    s.wallHandlersToRun___18694 = (r0);
    r0 = pxsim_Array__length(s.wallHandlersToRun___18694);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_1 = tiles_TileMap_getTile__P2488_mk(s);
    s.tmp_1.arg0 = s.arg3;
    s.tmp_3 = if_left_1_mk(s);
    s.tmp_3.arg0 = s.arg2;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "left");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["left"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["left"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 492; s.pc = 17; return s.tmp_3; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg3.fields["_scale"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 >> s.tmp_4);
    s.tmp_1.arg1 = r0;
    s.tmp_6 = if_top_1_mk(s);
    s.tmp_6.arg0 = s.arg2;
    if (!s.tmp_6.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_6.arg0, "top");
    } else {
      s.tmp_6.fn = s.tmp_6.arg0.vtable.iface["top"];
      if (s.tmp_6.fn == null) { s.retval = s.tmp_6.arg0.fields["top"]; }
      else if (!s.tmp_6.fn.isGetter) { s.retval = bind(s.tmp_6); }
     else { s.callLocIdx = 494; s.pc = 18; return s.tmp_6; }
    }
  case 18:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = s.arg3.fields["_scale"];
    s.tmp_7 = r0;
    r0 = (s.tmp_5 >> s.tmp_7);
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 496; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    s.asTileLocation___18707 = (r0);
    r0 = pxsim_pxtcore_mkAction(2, Sprite_registerObstacle_inline__P18723);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.asTileLocation___18707);
    s.tmp_1 = helpers_arrayForEach__P109_mk(s);
    s.tmp_1.arg0 = s.wallHandlersToRun___18694;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 498; s.pc = 19; return s.tmp_1;
  case 19:
    r0 = s.retval;
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle__P2213.info = {"start":26779,"length":965,"line":869,"column":4,"endLine":889,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"registerObstacle","argumentNames":["this","direction","other","tm"]}

function Sprite_registerObstacle__P2213_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle__P2213, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  collisionHandlers___18662: undefined,
  wallCollisionHandlers___18669: undefined,
  wallHandlersToRun___18694: undefined,
  asTileLocation___18707: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function forEach_inline__P18677(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P18677.info = {"start":27177,"length":26,"line":876,"column":24,"endLine":876,"endColumn":50,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P18677_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P18677, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_registerObstacle_inline__P18683(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_2_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 2);
      s.callLocIdx = 487; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 2); s.callLocIdx = 487; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 487; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 487; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle_inline__P18683.info = {"start":27230,"length":20,"line":877,"column":25,"endLine":877,"endColumn":45,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite_registerObstacle_inline__P18683_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle_inline__P18683, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function wallHandlersToRun_inline__P18696(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["spriteKind"];
    s.tmp_0 = r0;
    r0 = s.caps[0].fields["_kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 == s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
wallHandlersToRun_inline__P18696.info = {"start":27436,"length":32,"line":882,"column":24,"endLine":882,"endColumn":56,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function wallHandlersToRun_inline__P18696_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: wallHandlersToRun_inline__P18696, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Sprite_registerObstacle_inline__P18723(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.caps[0];
    s.tmp_0.arg2 = s.caps[1];
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 497; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 497; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 497; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 497; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_registerObstacle_inline__P18723.info = {"start":27676,"length":36,"line":886,"column":29,"endLine":886,"endColumn":65,"fileName":"pxt_modules/game/sprite.ts","functionName":"inline","argumentNames":["h"]}

function Sprite_registerObstacle_inline__P18723_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_registerObstacle_inline__P18723, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function Fx_iadd__P158(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 << 8);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_iadd__P158.info = {"start":634,"length":110,"line":23,"column":4,"endLine":25,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"iadd","argumentNames":["a","b"]}

function Fx_iadd__P158_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_iadd__P158, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_toIntShifted__P156(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = s.arg0;
    r0 = (s.arg1 + 8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 >> s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
Fx_toIntShifted__P156.info = {"start":404,"length":102,"line":17,"column":4,"endLine":19,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"toIntShifted","argumentNames":["a","n"]}

function Fx_toIntShifted__P156_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_toIntShifted__P156, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Math_sign__P129(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 == 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 5; continue; }
  case 1:
  case 2:
    r0 = (s.arg0 > 0);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 5; continue; }
  case 3:
  case 4:
    r0 = -1;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_sign__P129.info = {"start":16330,"length":125,"line":546,"column":4,"endLine":550,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"sign","argumentNames":["x"]}

function Math_sign__P129_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_sign__P129, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function helpers_arraySome__P107(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.len___18731 = undefined;
    s.i___18734 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim_Array__length(s.arg0);
    s.len___18731 = (r0);
    s.i___18734 = (0);
  case 1:
    r0 = (s.i___18734 < s.len___18731);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_2 = lambda_3_mk(s);
    s.tmp_2.argL = s.arg1;
    r0 = pxsim_Array__getAt(s.arg0, s.i___18734);
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = s.i___18734;
    setupLambda(s.tmp_2, s.tmp_2.argL);
    s.callLocIdx = 5; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 2; continue; }
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.i___18734 + 1);
    s.i___18734 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
helpers_arraySome__P107.info = {"start":6833,"length":296,"line":238,"column":4,"endLine":244,"endColumn":5,"fileName":"pxt_modules/base/pxt-helpers.ts","functionName":"arraySome","argumentNames":["arr","callbackfn"]}

function helpers_arraySome__P107_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_arraySome__P107, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  len___18731: undefined,
  i___18734: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_isOnWall__P2497(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.hbox___17842 = undefined;
    s.left___17845 = undefined;
    s.right___17851 = undefined;
    s.top___17857 = undefined;
    s.bottom___17863 = undefined;
    s.col___17869 = undefined;
    s.row___17875 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg1.fields["_hitbox"];
    s.hbox___17842 = (r0);
    s.tmp_1 = game_Hitbox_left__P2006_mk(s);
    s.tmp_1.arg0 = s.hbox___17842;
    s.callLocIdx = 980; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 8);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 >> s.tmp_3);
    s.left___17845 = (r0);
    s.tmp_1 = game_Hitbox_right__P2008_mk(s);
    s.tmp_1.arg0 = s.hbox___17842;
    s.callLocIdx = 983; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 8);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 >> s.tmp_3);
    s.right___17851 = (r0);
    s.tmp_1 = game_Hitbox_top__P2007_mk(s);
    s.tmp_1.arg0 = s.hbox___17842;
    s.callLocIdx = 986; s.pc = 10; return s.tmp_1;
  case 10:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 8);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 >> s.tmp_3);
    s.top___17857 = (r0);
    s.tmp_1 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_1.arg0 = s.hbox___17842;
    s.callLocIdx = 989; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 8);
    s.tmp_3 = r0;
    r0 = (s.tmp_0 >> s.tmp_3);
    s.bottom___17863 = (r0);
    s.col___17869 = (s.left___17845);
  case 1:
    r0 = (s.col___17869 <= s.right___17851);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.row___17875 = (s.top___17857);
  case 2:
    r0 = (s.row___17875 <= s.bottom___17863);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = tiles_TileMap_isObstacle__P2495_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.col___17869;
    s.tmp_2.arg2 = s.row___17875;
    s.callLocIdx = 992; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = true;
    { step = 7; continue; }
  case 3:
  case 4:
    r0 = (s.row___17875 + 1);
    s.row___17875 = (r0);
    { step = 2; continue; }
  case 5:
    r0 = (s.col___17869 + 1);
    s.col___17869 = (r0);
    { step = 1; continue; }
  case 6:
    r0 = false;
  case 7:
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_isOnWall__P2497.info = {"start":16837,"length":627,"line":534,"column":8,"endLine":551,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"isOnWall","argumentNames":["this","s"]}

function tiles_TileMap_isOnWall__P2497_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_isOnWall__P2497, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  hbox___17842: undefined,
  left___17845: undefined,
  right___17851: undefined,
  top___17857: undefined,
  bottom___17863: undefined,
  col___17869: undefined,
  row___17875: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function MovingSprite_constructor__P2313(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, MovingSprite__C2312_VT)) failedCast(r0);
    r0 = (s.arg0).fields["sprite"] = (s.arg1);
    r0 = (s.arg0).fields["cachedVx"] = (s.arg2);
    r0 = (s.arg0).fields["cachedVy"] = (s.arg3);
    r0 = (s.arg0).fields["dx"] = (s.arg4);
    r0 = (s.arg0).fields["dy"] = (s.arg5);
    r0 = (s.arg0).fields["xStep"] = (s.arg6);
    r0 = (s.arg0).fields["yStep"] = (s.arg7);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
MovingSprite_constructor__P2313.info = {"start":949,"length":313,"line":33,"column":4,"endLine":44,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["this","sprite","cachedVx","cachedVy","dx","dy","xStep","yStep"]}

function MovingSprite_constructor__P2313_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: MovingSprite_constructor__P2313, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
} }





function ArcadePhysicsEngine_move__P2326(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.dtMs___18814 = undefined;
    s.dt2___18820 = undefined;
    s.scene___18824 = undefined;
    s.tileMap___18827 = undefined;
    s.movingSprites___18830 = undefined;
    s.MAX_STEP_COUNT___18861 = undefined;
    s.overlapHandlers___18873 = undefined;
    s.selected___18880 = undefined;
    s.buffers___18881 = undefined;
    s.count___18885 = undefined;
    s.currMovers___18895 = undefined;
    s.remainingMovers___18902 = undefined;
    s.ms___18907 = undefined;
    s.unnamed74___U13 = undefined;
    s.unnamed75___U14 = undefined;
    s.s___18909 = undefined;
    s.stepX___19002 = undefined;
    s.stepY___19016 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    s.tmp_0 = Math_min__P131_mk(s);
    s.tmp_0.arg0 = 100;
    r0 = (s.arg1 * 1000);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 607; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
    s.dtMs___18814 = (r0);
    r0 = pxsim.Math_.idiv(s.dtMs___18814, 2);
    s.dt2___18820 = (r0);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 608; s.pc = 48; return s.tmp_0;
  case 48:
    r0 = s.retval;
    s.scene___18824 = (r0);
    r0 = s.scene___18824.fields["tileMap"];
    s.tileMap___18827 = (r0);
    r0 = pxsim_pxtcore_mkAction(3, movingSprites_inline__P18832);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.dtMs___18814);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.dt2___18820);
    s.tmp_1 = helpers_arrayMap__P106_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 610; s.pc = 49; return s.tmp_1;
  case 49:
    r0 = s.retval;
    s.movingSprites___18830 = (r0);
    s.tmp_0 = helpers_arrayForEach__P109_mk(s);
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = ArcadePhysicsEngine_move_inline__P18844;
    s.callLocIdx = 614; s.pc = 50; return s.tmp_0;
  case 50:
    r0 = s.retval;
    s.tmp_0 = sprites_SpriteMap_clear__P2239_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 615; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
    s.tmp_0 = sprites_SpriteMap_resizeBuckets__P2238_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["sprites"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 616; s.pc = 52; return s.tmp_0;
  case 52:
    r0 = s.retval;
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_3 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_4 = r0;
    r0 = (s.tmp_3 << 8);
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_5, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim.Math_.imul(s.tmp_2, s.dtMs___18814);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 1000);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 128);
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 8);
    s.MAX_STEP_COUNT___18861 = (r0);
    s.tmp_0 = helpers_arraySlice__P115_mk(s);
    r0 = s.scene___18824.fields["overlapHandlers"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = undefined;
    s.tmp_0.arg2 = undefined;
    s.callLocIdx = 621; s.pc = 53; return s.tmp_0;
  case 53:
    r0 = s.retval;
    s.overlapHandlers___18873 = (r0);
    s.selected___18880 = (0);
    r0 = pxsim_Array__mk();
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.movingSprites___18830);
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    s.buffers___18881 = (s.tmp_0);
    s.count___18885 = (0);
  case 1:
    r0 = (s.count___18885 < s.MAX_STEP_COUNT___18861);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_0;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array__getAt(s.buffers___18881, s.selected___18880);
    s.tmp_2 = r0;
    r0 = pxsim_Array__length(s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 46; continue; }
    r0 = pxsim_Array__getAt(s.buffers___18881, s.selected___18880);
    s.currMovers___18895 = (r0);
    r0 = (s.selected___18880 ^ 1);
    s.selected___18880 = (r0);
    r0 = pxsim_Array__getAt(s.buffers___18881, s.selected___18880);
    s.remainingMovers___18902 = (r0);
    s.ms___18907 = (undefined);
    s.unnamed74___U13 = (s.currMovers___18895);
    s.unnamed75___U14 = (0);
  case 4:
    s.tmp_0 = r0 = s.unnamed75___U14;
    r0 = pxsim_Array__length(s.unnamed74___U13);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 43; continue; }
    r0 = pxsim_Array__getAt(s.unnamed74___U13, s.unnamed75___U14);
    s.ms___18907 = (r0);
    r0 = s.ms___18907.fields["sprite"];
    s.s___18909 = (r0);
    r0 = s.ms___18907.fields["cachedVx"];
    s.tmp_1 = r0;
    r0 = s.s___18909.fields["_vx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = s.s___18909.fields["_vx"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = (s.ms___18907).fields["dx"] = (0);
    { step = 14; continue; }
  case 5:
    r0 = s.s___18909.fields["_vx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 6; continue; }
    r0 = s.tmp_0;
    { step = 7; continue; }
  case 6:
    r0 = s.ms___18907.fields["cachedVx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 7:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 8; continue; }
    r0 = s.tmp_3;
    { step = 11; continue; }
  case 8:
    r0 = s.s___18909.fields["_vx"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_4;
    { step = 10; continue; }
  case 9:
    r0 = s.ms___18907.fields["cachedVx"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 10:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 11:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 12; continue; }
    s.tmp_9 = r0 = s.ms___18907;
    r0 = s.ms___18907.fields["dx"];
    s.tmp_11 = r0;
    r0 = (0 - s.tmp_11);
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dx"] = (s.tmp_10);
    s.tmp_0 = r0 = s.ms___18907;
    r0 = s.ms___18907.fields["xStep"];
    s.tmp_2 = r0;
    r0 = (0 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["xStep"] = (s.tmp_1);
  case 12:
  case 13:
  case 14:
    r0 = s.s___18909.fields["_vx"];
    s.tmp_0 = r0;
    r0 = (s.ms___18907).fields["cachedVx"] = (s.tmp_0);
  case 15:
  case 16:
    r0 = s.ms___18907.fields["cachedVy"];
    s.tmp_1 = r0;
    r0 = s.s___18909.fields["_vy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 !== s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 27; continue; }
    r0 = s.s___18909.fields["_vy"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 == 0);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 17; continue; }
    r0 = (s.ms___18907).fields["dy"] = (0);
    { step = 26; continue; }
  case 17:
    r0 = s.s___18909.fields["_vy"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    r0 = s.ms___18907.fields["cachedVy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 > 0);
  case 19:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 20; continue; }
    r0 = s.tmp_3;
    { step = 23; continue; }
  case 20:
    r0 = s.s___18909.fields["_vy"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 > 0);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 21; continue; }
    r0 = s.tmp_4;
    { step = 22; continue; }
  case 21:
    r0 = s.ms___18907.fields["cachedVy"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 < 0);
  case 22:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 23:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 24; continue; }
    s.tmp_9 = r0 = s.ms___18907;
    r0 = s.ms___18907.fields["dy"];
    s.tmp_11 = r0;
    r0 = (0 - s.tmp_11);
    s.tmp_10 = r0;
    r0 = (s.tmp_9).fields["dy"] = (s.tmp_10);
    s.tmp_0 = r0 = s.ms___18907;
    r0 = s.ms___18907.fields["yStep"];
    s.tmp_2 = r0;
    r0 = (0 - s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["yStep"] = (s.tmp_1);
  case 24:
  case 25:
  case 26:
    r0 = s.s___18909.fields["_vy"];
    s.tmp_0 = r0;
    r0 = (s.ms___18907).fields["cachedVy"] = (s.tmp_0);
  case 27:
  case 28:
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___18907.fields["xStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 626; s.pc = 54; return s.tmp_2;
  case 54:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___18907.fields["dx"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 627; s.pc = 55; return s.tmp_4;
  case 55:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 29; continue; }
    r0 = s.ms___18907.fields["dx"];
    { step = 30; continue; }
  case 29:
    r0 = s.ms___18907.fields["xStep"];
  case 30:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepX___19002 = (s.tmp_5);
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___18907.fields["yStep"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 628; s.pc = 56; return s.tmp_2;
  case 56:
    r0 = s.retval;
    s.tmp_1 = r0;
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___18907.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 629; s.pc = 57; return s.tmp_4;
  case 57:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    r0 = s.ms___18907.fields["dy"];
    { step = 32; continue; }
  case 31:
    r0 = s.ms___18907.fields["yStep"];
  case 32:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.stepY___19016 = (s.tmp_5);
    s.tmp_0 = r0 = s.ms___18907;
    r0 = s.ms___18907.fields["dx"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.stepX___19002);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dx"] = (s.tmp_1);
    s.tmp_0 = r0 = s.ms___18907;
    r0 = s.ms___18907.fields["dy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.stepY___19016);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["dy"] = (s.tmp_1);
    r0 = s.s___18909.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.s___18909).fields["_lastX"] = (s.tmp_0);
    r0 = s.s___18909.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.s___18909).fields["_lastY"] = (s.tmp_0);
    s.tmp_0 = r0 = s.s___18909;
    r0 = s.s___18909.fields["_x"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.stepX___19002);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.tmp_0 = r0 = s.s___18909;
    r0 = s.s___18909.fields["_y"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + s.stepY___19016);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_y"] = (s.tmp_1);
    r0 = s.s___18909.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 33; continue; }
    s.tmp_4 = sprites_SpriteMap_insertAABB__P2240_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = s.s___18909;
    s.callLocIdx = 634; s.pc = 58; return s.tmp_4;
  case 58:
    r0 = s.retval;
  case 33:
  case 34:
    s.tmp_0 = r0 = s.tileMap___18827;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 35; continue; }
    r0 = s.tmp_0;
    { step = 36; continue; }
  case 35:
    r0 = s.tileMap___18827.fields["_map"];
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
  case 36:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 37; continue; }
    s.tmp_6 = ArcadePhysicsEngine_tilemapCollisions__P4414_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = s.ms___18907;
    s.tmp_6.arg2 = s.tileMap___18827;
    s.callLocIdx = 636; s.pc = 59; return s.tmp_6;
  case 59:
    r0 = s.retval;
  case 37:
  case 38:
    s.tmp_2 = Fx_abs__P165_mk(s);
    r0 = s.ms___18907.fields["dx"];
    s.tmp_2.arg0 = r0;
    s.callLocIdx = 637; s.pc = 60; return s.tmp_2;
  case 60:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > globals.MIN_MOVE_GAP___2308);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 39; continue; }
    r0 = s.tmp_0;
    { step = 40; continue; }
  case 39:
    s.tmp_4 = Fx_abs__P165_mk(s);
    r0 = s.ms___18907.fields["dy"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 638; s.pc = 61; return s.tmp_4;
  case 61:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > globals.MIN_MOVE_GAP___2308);
  case 40:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 41; continue; }
    r0 = pxsim_Array__push(s.remainingMovers___18902, s.ms___18907);
  case 41:
  case 42:
    r0 = (s.unnamed75___U14 + 1);
    s.unnamed75___U14 = (r0);
    { step = 4; continue; }
  case 43:
    s.unnamed74___U13 = (undefined);
    s.tmp_0 = ArcadePhysicsEngine_spriteCollisions__P4413_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.currMovers___18895;
    s.tmp_0.arg2 = s.overlapHandlers___18873;
    s.callLocIdx = 639; s.pc = 62; return s.tmp_0;
  case 62:
    r0 = s.retval;
  case 44:
    r0 = pxsim_Array__length(s.currMovers___18895);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 45; continue; }
    r0 = pxsim_Array_.pop(s.currMovers___18895);
    { step = 44; continue; }
  case 45:
    r0 = (s.count___18885 + 1);
    s.count___18885 = (r0);
    { step = 1; continue; }
  case 46:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move__P2326.info = {"start":2822,"length":3809,"line":112,"column":4,"endLine":208,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"move","argumentNames":["this","dt"]}

function ArcadePhysicsEngine_move__P2326_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move__P2326, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  dtMs___18814: undefined,
  dt2___18820: undefined,
  scene___18824: undefined,
  tileMap___18827: undefined,
  movingSprites___18830: undefined,
  MAX_STEP_COUNT___18861: undefined,
  overlapHandlers___18873: undefined,
  selected___18880: undefined,
  buffers___18881: undefined,
  count___18885: undefined,
  currMovers___18895: undefined,
  remainingMovers___18902: undefined,
  ms___18907: undefined,
  unnamed74___U13: undefined,
  unnamed75___U14: undefined,
  s___18909: undefined,
  stepX___19002: undefined,
  stepY___19016: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function movingSprites_inline__P18832(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = ArcadePhysicsEngine_createMovingSprite__P4412_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.caps[1];
    s.tmp_0.arg3 = s.caps[2];
    s.callLocIdx = 609; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
movingSprites_inline__P18832.info = {"start":3181,"length":52,"line":121,"column":17,"endLine":121,"endColumn":69,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["sprite"]}

function movingSprites_inline__P18832_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: movingSprites_inline__P18832, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_move_inline__P18844(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_1 = Sprite_vx__P2145_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 611; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Sprite_vy__P2147_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 612; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.tmp_4 = Sprite_clearObstacles__P2212_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.callLocIdx = 613; s.pc = 7; return s.tmp_4;
  case 7:
    r0 = s.retval;
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_move_inline__P18844.info = {"start":3316,"length":66,"line":124,"column":29,"endLine":126,"endColumn":9,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["s"]}

function ArcadePhysicsEngine_move_inline__P18844_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_move_inline__P18844, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions__P4413(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ms___19117 = undefined;
    s.unnamed76___U1 = undefined;
    s.unnamed77___U2 = undefined;
    s.sprite___19119 = undefined;
    s.overSprites___19126 = undefined;
    s.overlapper___19134 = undefined;
    s.unnamed78___U6 = undefined;
    s.unnamed79___U7 = undefined;
    s.thisKind___19140 = undefined;
    s.otherKind___19144 = undefined;
    s.higher___19157 = undefined;
    s.lower___19166 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = pxsim_Array__length(s.arg2);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 21; continue; }
  case 1:
  case 2:
    s.ms___19117 = (undefined);
    s.unnamed76___U1 = (s.arg1);
    s.unnamed77___U2 = (0);
  case 3:
    s.tmp_0 = r0 = s.unnamed77___U2;
    r0 = pxsim_Array__length(s.unnamed76___U1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 20; continue; }
    r0 = pxsim_Array__getAt(s.unnamed76___U1, s.unnamed77___U2);
    s.ms___19117 = (r0);
    r0 = s.ms___19117.fields["sprite"];
    s.sprite___19119 = (r0);
    r0 = s.sprite___19119.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4610);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    { step = 19; continue; }
  case 4:
  case 5:
    s.tmp_2 = sprites_SpriteMap_overlaps__P2236_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_2.arg0 = r0;
    r0 = s.ms___19117.fields["sprite"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 677; s.pc = 22; return s.tmp_2;
  case 22:
    r0 = s.retval;
    s.overSprites___19126 = (r0);
    s.overlapper___19134 = (undefined);
    s.unnamed78___U6 = (s.overSprites___19126);
    s.unnamed79___U7 = (0);
  case 6:
    s.tmp_0 = r0 = s.unnamed79___U7;
    r0 = pxsim_Array__length(s.unnamed78___U6);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 18; continue; }
    r0 = pxsim_Array__getAt(s.unnamed78___U6, s.unnamed79___U7);
    s.overlapper___19134 = (r0);
    r0 = s.overlapper___19134.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 7; continue; }
    { step = 17; continue; }
  case 7:
  case 8:
    r0 = s.sprite___19119.fields["_kind"];
    s.thisKind___19140 = (r0);
    r0 = s.overlapper___19134.fields["_kind"];
    s.otherKind___19144 = (r0);
    r0 = s.sprite___19119.fields["_kindsOverlappedWith"];
    s.tmp_2 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.otherKind___19144, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    { step = 17; continue; }
  case 9:
  case 10:
    r0 = s.sprite___19119.fields["id"];
    s.tmp_4 = r0;
    r0 = s.overlapper___19134.fields["id"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 > s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 11; continue; }
    r0 = s.sprite___19119;
    { step = 12; continue; }
  case 11:
    r0 = s.overlapper___19134;
  case 12:
    // jmp value (already in r0)
    s.tmp_6 = r0;
    s.higher___19157 = (s.tmp_6);
    r0 = (s.higher___19157 === s.sprite___19119);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 13; continue; }
    r0 = s.overlapper___19134;
    { step = 14; continue; }
  case 13:
    r0 = s.sprite___19119;
  case 14:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.lower___19166 = (s.tmp_1);
    r0 = s.higher___19157.fields["_overlappers"];
    s.tmp_2 = r0;
    r0 = s.lower___19166.fields["id"];
    s.tmp_3 = r0;
    r0 = pxsim_Array_.indexOf(s.tmp_2, s.tmp_3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === -1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 15; continue; }
    r0 = pxsim_pxtcore_mkAction(2, forEach_inline__P19186);
    s.tmp_4 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 0, s.thisKind___19140);
    r0 = pxsim_pxtrt_stclo(s.tmp_4, 1, s.otherKind___19144);
    r0 = pxsim_pxtcore_mkAction(5, ArcadePhysicsEngine_spriteCollisions_inline__P19210);
    s.tmp_5 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 0, s.higher___19157);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 1, s.lower___19166);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 2, s.sprite___19119);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 3, s.overlapper___19134);
    r0 = pxsim_pxtrt_stclo(s.tmp_5, 4, s.thisKind___19140);
    s.tmp_6 = helpers_arrayForEach__P109_mk(s);
    s.tmp_7 = helpers_arrayFilter__P110_mk(s);
    s.tmp_7.arg0 = s.arg2;
    s.tmp_7.arg1 = s.tmp_4;
    s.callLocIdx = 680; s.pc = 24; return s.tmp_7;
  case 24:
    r0 = s.retval;
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = s.tmp_5;
    s.callLocIdx = 682; s.pc = 23; return s.tmp_6;
  case 23:
    r0 = s.retval;
  case 15:
  case 16:
  case 17:
    r0 = (s.unnamed79___U7 + 1);
    s.unnamed79___U7 = (r0);
    { step = 6; continue; }
  case 18:
    s.unnamed78___U6 = (undefined);
  case 19:
    r0 = (s.unnamed77___U2 + 1);
    s.unnamed77___U2 = (r0);
    { step = 3; continue; }
  case 20:
    s.unnamed76___U1 = (undefined);
  case 21:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions__P4413.info = {"start":9448,"length":2268,"line":302,"column":4,"endLine":346,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"spriteCollisions","argumentNames":["this","movedSprites","handlers"]}

function ArcadePhysicsEngine_spriteCollisions__P4413_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions__P4413, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  ms___19117: undefined,
  unnamed76___U1: undefined,
  unnamed77___U2: undefined,
  sprite___19119: undefined,
  overSprites___19126: undefined,
  overlapper___19134: undefined,
  unnamed78___U6: undefined,
  unnamed79___U7: undefined,
  thisKind___19140: undefined,
  otherKind___19144: undefined,
  higher___19157: undefined,
  lower___19166: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function forEach_inline__P19186(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0.fields["kind"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 === s.caps[0]);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 === s.caps[1]);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 6; continue; }
  case 3:
    r0 = s.arg0.fields["kind"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 === s.caps[1]);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBool(s.tmp_4);
    if (r0) { step = 4; continue; }
    r0 = s.tmp_4;
    { step = 5; continue; }
  case 4:
    r0 = s.arg0.fields["otherKind"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 === s.caps[0]);
  case 5:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = s.tmp_7;
  case 6:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.tmp_8;
    return leave(s, r0)
  default: oops()
} } }
forEach_inline__P19186.info = {"start":10817,"length":137,"line":328,"column":32,"endLine":329,"endColumn":81,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function forEach_inline__P19186_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: forEach_inline__P19186, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions_inline__P19210(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.caps[0].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[1].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.tmp_1);
    r0 = pxsim_pxtcore_mkAction(6, ArcadePhysicsEngine_spriteCollisions_inline__P19220);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.caps[2]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 1, s.caps[3]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 2, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 3, s.caps[4]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 4, s.caps[0]);
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 5, s.caps[1]);
    r0 = pxsim.control.runInParallel(s.tmp_0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions_inline__P19210.info = {"start":11014,"length":652,"line":331,"column":33,"endLine":342,"endColumn":25,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":["h"]}

function ArcadePhysicsEngine_spriteCollisions_inline__P19210_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions_inline__P19210, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_spriteCollisions_inline__P19220(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    r0 = s.caps[0].fields["flags"];
    s.tmp_4 = r0;
    r0 = s.caps[1].fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 | s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 4610);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.caps[2].fields["kind"];
    s.tmp_7 = r0;
    r0 = (s.caps[3] === s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 1; continue; }
    r0 = s.caps[0];
    { step = 2; continue; }
  case 1:
    r0 = s.caps[1];
  case 2:
    // jmp value (already in r0)
    s.tmp_8 = r0;
    r0 = s.caps[2].fields["kind"];
    s.tmp_10 = r0;
    r0 = (s.caps[3] === s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_9);
    if (!r0) { step = 3; continue; }
    r0 = s.caps[1];
    { step = 4; continue; }
  case 3:
    r0 = s.caps[0];
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    s.tmp_12 = if_handler_3_mk(s);
    s.tmp_12.arg0 = s.caps[2];
    s.tmp_12.arg1 = s.tmp_8;
    s.tmp_12.arg2 = s.tmp_11;
    if (!s.tmp_12.arg0.vtable.iface) {
      setupLambda(s.tmp_12, pxsim_pxtrt.mapGetByString(s.tmp_12.arg0, "handler"), 3);
      s.callLocIdx = 681; s.pc = 7; return s.tmp_12;
    } else {
      s.tmp_12.fn = s.tmp_12.arg0.vtable.iface["handler"];
      if (s.tmp_12.fn == null) { setupLambda(s.tmp_12, s.tmp_12.arg0.fields["handler"], 3); s.callLocIdx = 681; s.pc = 7; return s.tmp_12; }
      else if (s.tmp_12.fn.isGetter) { s.tmp_12.stage2Call = true; s.callLocIdx = 681; s.pc = 7; return s.tmp_12;; }
     else { s.callLocIdx = 681; s.pc = 7; return s.tmp_12; }
    }
  case 7:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = s.caps[4].fields["_overlappers"];
    s.tmp_0 = r0;
    r0 = s.caps[5].fields["id"];
    s.tmp_1 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_spriteCollisions_inline__P19220.info = {"start":11135,"length":503,"line":333,"column":50,"endLine":341,"endColumn":29,"fileName":"pxt_modules/game/physics.ts","functionName":"inline","argumentNames":[]}

function ArcadePhysicsEngine_spriteCollisions_inline__P19220_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_spriteCollisions_inline__P19220, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
} }





function sprites_SpriteMap_overlaps__P2236(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___19254 = undefined;
    s.o___19258 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.tmp_0 = sprites_SpriteMap_neighbors__P2235_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 555; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.n___19254 = (r0);
    r0 = pxsim_pxtcore_mkAction(1, o_inline__P19260);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg1);
    s.tmp_1 = helpers_arrayFilter__P110_mk(s);
    s.tmp_1.arg0 = s.n___19254;
    s.tmp_1.arg1 = s.tmp_0;
    s.callLocIdx = 557; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.o___19258 = (r0);
    r0 = s.o___19258;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_overlaps__P2236.info = {"start":923,"length":189,"line":30,"column":8,"endLine":34,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"overlaps","argumentNames":["this","sprite"]}

function sprites_SpriteMap_overlaps__P2236_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_overlaps__P2236, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  n___19254: undefined,
  o___19258: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function o_inline__P19260(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = Sprite_overlapsWith__P2207_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.callLocIdx = 556; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
o_inline__P19260.info = {"start":1037,"length":41,"line":32,"column":31,"endLine":32,"endColumn":72,"fileName":"pxt_modules/game/spritemap.ts","functionName":"inline","argumentNames":["neighbor"]}

function o_inline__P19260_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: o_inline__P19260, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_neighbors__P2235(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.n___19508 = undefined;
    s.layer___19510 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    r0 = pxsim_Array__mk();
    s.n___19508 = (r0);
    r0 = s.arg1.fields["layer"];
    s.layer___19510 = (r0);
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P4377_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P2186_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 543; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P2190_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 544; s.pc = 3; return s.tmp_2;
  case 3:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___19510;
    s.tmp_0.arg4 = s.n___19508;
    s.callLocIdx = 545; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P4377_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_left__P2186_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 546; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P2192_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 547; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___19510;
    s.tmp_0.arg4 = s.n___19508;
    s.callLocIdx = 548; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P4377_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P2188_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 549; s.pc = 8; return s.tmp_1;
  case 8:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_top__P2190_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 550; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___19510;
    s.tmp_0.arg4 = s.n___19508;
    s.callLocIdx = 551; s.pc = 7; return s.tmp_0;
  case 7:
    r0 = s.retval;
    s.tmp_0 = sprites_SpriteMap_mergeAtKey__P4377_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = Sprite_right__P2188_mk(s);
    s.tmp_1.arg0 = s.arg1;
    s.callLocIdx = 552; s.pc = 11; return s.tmp_1;
  case 11:
    r0 = s.retval;
    s.tmp_0.arg1 = r0;
    s.tmp_2 = Sprite_bottom__P2192_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 553; s.pc = 12; return s.tmp_2;
  case 12:
    r0 = s.retval;
    s.tmp_0.arg2 = r0;
    s.tmp_0.arg3 = s.layer___19510;
    s.tmp_0.arg4 = s.n___19508;
    s.callLocIdx = 554; s.pc = 10; return s.tmp_0;
  case 10:
    r0 = s.retval;
    r0 = pxsim_Array_.removeElement(s.n___19508, s.arg1);
    r0 = s.n___19508;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_neighbors__P2235.info = {"start":376,"length":442,"line":15,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"neighbors","argumentNames":["this","sprite"]}

function sprites_SpriteMap_neighbors__P2235_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_neighbors__P2235, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  n___19508: undefined,
  layer___19510: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_mergeAtKey__P4377(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___19559 = undefined;
    s.bucket___19564 = undefined;
    s.sprite___19571 = undefined;
    s.unnamed72___U3 = undefined;
    s.unnamed73___U4 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.tmp_0 = sprites_SpriteMap_key__P4375_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 581; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.k___19559 = (r0);
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___19559);
    s.bucket___19564 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.bucket___19564);
    if (!r0) { step = 7; continue; }
    s.sprite___19571 = (undefined);
    s.unnamed72___U3 = (s.bucket___19564);
    s.unnamed73___U4 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed73___U4;
    r0 = pxsim_Array__length(s.unnamed72___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed72___U3, s.unnamed73___U4);
    s.sprite___19571 = (r0);
    r0 = s.sprite___19571.fields["layer"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & s.arg3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 2; continue; }
    r0 = s.tmp_2;
    { step = 3; continue; }
  case 2:
    r0 = pxsim_Array_.indexOf(s.arg4, s.sprite___19571, undefined);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 3:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__push(s.arg4, s.sprite___19571);
  case 4:
  case 5:
    r0 = (s.unnamed73___U4 + 1);
    s.unnamed73___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed72___U3 = (undefined);
  case 7:
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_mergeAtKey__P4377.info = {"start":3715,"length":384,"line":101,"column":8,"endLine":110,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"mergeAtKey","argumentNames":["this","x","y","layer","n"]}

function sprites_SpriteMap_mergeAtKey__P4377_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_mergeAtKey__P4377, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  k___19559: undefined,
  bucket___19564: undefined,
  sprite___19571: undefined,
  unnamed72___U3: undefined,
  unnamed73___U4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function sprites_SpriteMap_key__P4375(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.xi___19592 = undefined;
    s.yi___19604 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg1, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 569; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.xi___19592 = (r0);
    s.tmp_0 = Math_clamp__P127_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg0.fields["rowCount"];
    s.tmp_0.arg1 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.arg2, s.tmp_1);
    s.tmp_0.arg2 = r0;
    s.callLocIdx = 570; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    s.yi___19604 = (r0);
    s.tmp_0 = r0 = s.xi___19592;
    r0 = s.arg0.fields["columnCount"];
    s.tmp_2 = r0;
    r0 = (s.yi___19604 * s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_key__P4375.info = {"start":2592,"length":270,"line":76,"column":8,"endLine":80,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"key","argumentNames":["this","x","y"]}

function sprites_SpriteMap_key__P4375_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_key__P4375, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  xi___19592: undefined,
  yi___19604: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_bottom__P2192(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_1 = Sprite_top__P2190_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 406; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_height__P2185_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 407; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_bottom__P2192.info = {"start":13155,"length":59,"line":468,"column":4,"endLine":470,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this"]}
Sprite_bottom__P2192.isGetter = true;

function Sprite_bottom__P2192_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P2192, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_right__P2188(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_1 = Sprite_left__P2186_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 398; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    s.tmp_3 = Sprite_width__P2184_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 399; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_right__P2188.info = {"start":12321,"length":57,"line":438,"column":4,"endLine":440,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this"]}
Sprite_right__P2188.isGetter = true;

function Sprite_right__P2188_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P2188, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function Sprite_overlapsWith__P2207(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.A___19324 = undefined;
    s.B___19325 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = (s.arg1 == s.arg0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = false;
    { step = 23; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 4610);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = false;
    { step = 23; continue; }
  case 3:
  case 4:
    r0 = s.arg1.fields["flags"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 & 4610);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 5; continue; }
    r0 = false;
    { step = 23; continue; }
  case 5:
  case 6:
    s.tmp_8 = game_Hitbox_overlapsWith__P2012_mk(s);
    r0 = s.arg1.fields["_hitbox"];
    s.tmp_8.arg0 = r0;
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_8.arg1 = r0;
    s.callLocIdx = 452; s.pc = 24; return s.tmp_8;
  case 24:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    r0 = false;
    { step = 23; continue; }
  case 7:
  case 8:
    s.tmp_12 = Sprite_isScaled__P4368_mk(s);
    s.tmp_12.arg0 = s.arg0;
    s.callLocIdx = 453; s.pc = 25; return s.tmp_12;
  case 25:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_11);
    s.tmp_10 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_10);
    s.tmp_9 = r0;
    r0 = pxsim_numops_toBool(s.tmp_9);
    if (r0) { step = 9; continue; }
    r0 = s.tmp_9;
    { step = 10; continue; }
  case 9:
    s.tmp_15 = Sprite_isScaled__P4368_mk(s);
    s.tmp_15.arg0 = s.arg1;
    s.callLocIdx = 454; s.pc = 26; return s.tmp_15;
  case 26:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_14);
    s.tmp_13 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_13);
  case 10:
    // jmp value (already in r0)
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_16);
    if (!r0) { step = 11; continue; }
    r0 = s.arg1.fields["_image"];
    s.tmp_17 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_18 = r0;
    s.tmp_21 = Sprite_left__P2186_mk(s);
    s.tmp_21.arg0 = s.arg0;
    s.callLocIdx = 455; s.pc = 27; return s.tmp_21;
  case 27:
    r0 = s.retval;
    s.tmp_20 = r0;
    s.tmp_23 = Sprite_left__P2186_mk(s);
    s.tmp_23.arg0 = s.arg1;
    s.callLocIdx = 456; s.pc = 28; return s.tmp_23;
  case 28:
    r0 = s.retval;
    s.tmp_22 = r0;
    r0 = (s.tmp_20 - s.tmp_22);
    s.tmp_19 = r0;
    s.tmp_26 = Sprite_top__P2190_mk(s);
    s.tmp_26.arg0 = s.arg0;
    s.callLocIdx = 457; s.pc = 29; return s.tmp_26;
  case 29:
    r0 = s.retval;
    s.tmp_25 = r0;
    s.tmp_28 = Sprite_top__P2190_mk(s);
    s.tmp_28.arg0 = s.arg1;
    s.callLocIdx = 458; s.pc = 30; return s.tmp_28;
  case 30:
    r0 = s.retval;
    s.tmp_27 = r0;
    r0 = (s.tmp_25 - s.tmp_27);
    s.tmp_24 = r0;
    r0 = pxsim_ImageMethods.overlapsWith(s.tmp_17, s.tmp_18, s.tmp_19, s.tmp_24);
    { step = 23; continue; }
    { step = 22; continue; }
  case 11:
    s.tmp_31 = Sprite_sx__P2157_mk(s);
    s.tmp_31.arg0 = s.arg0;
    s.callLocIdx = 459; s.pc = 31; return s.tmp_31;
  case 31:
    r0 = s.retval;
    s.tmp_30 = r0;
    r0 = (s.tmp_30 == 0);
    s.tmp_29 = r0;
    r0 = pxsim_numops_toBool(s.tmp_29);
    if (!r0) { step = 12; continue; }
    r0 = s.tmp_29;
    { step = 13; continue; }
  case 12:
    s.tmp_33 = Sprite_sy__P2159_mk(s);
    s.tmp_33.arg0 = s.arg0;
    s.callLocIdx = 460; s.pc = 32; return s.tmp_33;
  case 32:
    r0 = s.retval;
    s.tmp_32 = r0;
    r0 = (s.tmp_32 == 0);
  case 13:
    // jmp value (already in r0)
    s.tmp_34 = r0;
    r0 = pxsim_numops_toBool(s.tmp_34);
    if (!r0) { step = 14; continue; }
    r0 = s.tmp_34;
    { step = 15; continue; }
  case 14:
    s.tmp_36 = Sprite_sx__P2157_mk(s);
    s.tmp_36.arg0 = s.arg1;
    s.callLocIdx = 461; s.pc = 33; return s.tmp_36;
  case 33:
    r0 = s.retval;
    s.tmp_35 = r0;
    r0 = (s.tmp_35 == 0);
  case 15:
    // jmp value (already in r0)
    s.tmp_37 = r0;
    r0 = pxsim_numops_toBool(s.tmp_37);
    if (!r0) { step = 16; continue; }
    r0 = s.tmp_37;
    { step = 17; continue; }
  case 16:
    s.tmp_39 = Sprite_sy__P2159_mk(s);
    s.tmp_39.arg0 = s.arg1;
    s.callLocIdx = 462; s.pc = 34; return s.tmp_39;
  case 34:
    r0 = s.retval;
    s.tmp_38 = r0;
    r0 = (s.tmp_38 == 0);
  case 17:
    // jmp value (already in r0)
    s.tmp_40 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_40);
    if (!r0) { step = 18; continue; }
    r0 = false;
    { step = 23; continue; }
  case 18:
  case 19:
    s.tmp_44 = Sprite_sx__P2157_mk(s);
    s.tmp_44.arg0 = s.arg0;
    s.callLocIdx = 463; s.pc = 35; return s.tmp_44;
  case 35:
    r0 = s.retval;
    s.tmp_43 = r0;
    s.tmp_46 = Sprite_sy__P2159_mk(s);
    s.tmp_46.arg0 = s.arg0;
    s.callLocIdx = 464; s.pc = 36; return s.tmp_46;
  case 36:
    r0 = s.retval;
    s.tmp_45 = r0;
    r0 = (s.tmp_43 * s.tmp_45);
    s.tmp_42 = r0;
    s.tmp_49 = Sprite_sx__P2157_mk(s);
    s.tmp_49.arg0 = s.arg1;
    s.callLocIdx = 465; s.pc = 37; return s.tmp_49;
  case 37:
    r0 = s.retval;
    s.tmp_48 = r0;
    s.tmp_51 = Sprite_sy__P2159_mk(s);
    s.tmp_51.arg0 = s.arg1;
    s.callLocIdx = 466; s.pc = 38; return s.tmp_51;
  case 38:
    r0 = s.retval;
    s.tmp_50 = r0;
    r0 = (s.tmp_48 * s.tmp_50);
    s.tmp_47 = r0;
    r0 = (s.tmp_42 < s.tmp_47);
    s.tmp_41 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_41);
    if (!r0) { step = 20; continue; }
    s.A___19324 = (s.arg0);
    s.B___19325 = (s.arg1);
    { step = 21; continue; }
  case 20:
    s.A___19324 = (s.arg1);
    s.B___19325 = (s.arg0);
  case 21:
    s.tmp_0 = helpers_imageBlit__P1752_mk(s);
    r0 = s.A___19324.fields["_image"];
    s.tmp_0.arg0 = r0;
    s.tmp_3 = Sprite_left__P2186_mk(s);
    s.tmp_3.arg0 = s.B___19325;
    s.callLocIdx = 468; s.pc = 40; return s.tmp_3;
  case 40:
    r0 = s.retval;
    s.tmp_2 = r0;
    s.tmp_5 = Sprite_left__P2186_mk(s);
    s.tmp_5.arg0 = s.A___19324;
    s.callLocIdx = 469; s.pc = 41; return s.tmp_5;
  case 41:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_2 - s.tmp_4);
    s.tmp_1 = r0;
    s.tmp_7 = Sprite_sx__P2157_mk(s);
    s.tmp_7.arg0 = s.A___19324;
    s.callLocIdx = 470; s.pc = 42; return s.tmp_7;
  case 42:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_1 / s.tmp_6);
    s.tmp_0.arg1 = r0;
    s.tmp_10 = Sprite_top__P2190_mk(s);
    s.tmp_10.arg0 = s.B___19325;
    s.callLocIdx = 471; s.pc = 43; return s.tmp_10;
  case 43:
    r0 = s.retval;
    s.tmp_9 = r0;
    s.tmp_12 = Sprite_top__P2190_mk(s);
    s.tmp_12.arg0 = s.A___19324;
    s.callLocIdx = 472; s.pc = 44; return s.tmp_12;
  case 44:
    r0 = s.retval;
    s.tmp_11 = r0;
    r0 = (s.tmp_9 - s.tmp_11);
    s.tmp_8 = r0;
    s.tmp_14 = Sprite_sy__P2159_mk(s);
    s.tmp_14.arg0 = s.A___19324;
    s.callLocIdx = 473; s.pc = 45; return s.tmp_14;
  case 45:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_8 / s.tmp_13);
    s.tmp_0.arg2 = r0;
    s.tmp_16 = Sprite_width__P2184_mk(s);
    s.tmp_16.arg0 = s.B___19325;
    s.callLocIdx = 474; s.pc = 46; return s.tmp_16;
  case 46:
    r0 = s.retval;
    s.tmp_15 = r0;
    s.tmp_18 = Sprite_sx__P2157_mk(s);
    s.tmp_18.arg0 = s.A___19324;
    s.callLocIdx = 475; s.pc = 47; return s.tmp_18;
  case 47:
    r0 = s.retval;
    s.tmp_17 = r0;
    r0 = (s.tmp_15 / s.tmp_17);
    s.tmp_0.arg3 = r0;
    s.tmp_20 = Sprite_height__P2185_mk(s);
    s.tmp_20.arg0 = s.B___19325;
    s.callLocIdx = 476; s.pc = 48; return s.tmp_20;
  case 48:
    r0 = s.retval;
    s.tmp_19 = r0;
    s.tmp_22 = Sprite_sy__P2159_mk(s);
    s.tmp_22.arg0 = s.A___19324;
    s.callLocIdx = 477; s.pc = 49; return s.tmp_22;
  case 49:
    r0 = s.retval;
    s.tmp_21 = r0;
    r0 = (s.tmp_19 / s.tmp_21);
    s.tmp_0.arg4 = r0;
    r0 = s.B___19325.fields["_image"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 0;
    s.tmp_0.arg7 = 0;
    r0 = s.B___19325.fields["_image"];
    s.tmp_23 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_23);
    s.tmp_0.arg8 = r0;
    r0 = s.B___19325.fields["_image"];
    s.tmp_24 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_24);
    s.tmp_0.arg9 = r0;
    s.tmp_0.arg10 = true;
    s.tmp_0.arg11 = true;
    s.callLocIdx = 481; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
    { step = 23; continue; }
  case 22:
    r0 = undefined;
  case 23:
    return leave(s, r0)
  default: oops()
} } }
Sprite_overlapsWith__P2207.info = {"start":22606,"length":1575,"line":744,"column":4,"endLine":791,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function Sprite_overlapsWith__P2207_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_overlapsWith__P2207, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  tmp_32: undefined,
  tmp_33: undefined,
  tmp_34: undefined,
  tmp_35: undefined,
  tmp_36: undefined,
  tmp_37: undefined,
  tmp_38: undefined,
  tmp_39: undefined,
  tmp_40: undefined,
  tmp_41: undefined,
  tmp_42: undefined,
  tmp_43: undefined,
  tmp_44: undefined,
  tmp_45: undefined,
  tmp_46: undefined,
  tmp_47: undefined,
  tmp_48: undefined,
  tmp_49: undefined,
  tmp_50: undefined,
  tmp_51: undefined,
  A___19324: undefined,
  B___19325: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_isScaled__P4368(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_sx"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== 256);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg0.fields["_sy"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== 256);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = s.tmp_3;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isScaled__P4368.info = {"start":11269,"length":100,"line":402,"column":4,"endLine":404,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isScaled","argumentNames":["this"]}

function Sprite_isScaled__P4368_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isScaled__P4368, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function game_Hitbox_overlapsWith__P2012(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1998_VT)) failedCast(r0);
    s.tmp_1 = game_Hitbox_contains__P2011_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = game_Hitbox_left__P2006_mk(s);
    s.tmp_2.arg0 = s.arg1;
    s.callLocIdx = 263; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.tmp_1.arg1 = r0;
    s.tmp_3 = game_Hitbox_top__P2007_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 264; s.pc = 20; return s.tmp_3;
  case 20:
    r0 = s.retval;
    s.tmp_1.arg2 = r0;
    s.callLocIdx = 265; s.pc = 18; return s.tmp_1;
  case 18:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = true;
    { step = 17; continue; }
  case 1:
  case 2:
    s.tmp_5 = game_Hitbox_contains__P2011_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_6 = game_Hitbox_left__P2006_mk(s);
    s.tmp_6.arg0 = s.arg1;
    s.callLocIdx = 266; s.pc = 22; return s.tmp_6;
  case 22:
    r0 = s.retval;
    s.tmp_5.arg1 = r0;
    s.tmp_7 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_7.arg0 = s.arg1;
    s.callLocIdx = 267; s.pc = 23; return s.tmp_7;
  case 23:
    r0 = s.retval;
    s.tmp_5.arg2 = r0;
    s.callLocIdx = 268; s.pc = 21; return s.tmp_5;
  case 21:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    if (!r0) { step = 3; continue; }
    r0 = true;
    { step = 17; continue; }
  case 3:
  case 4:
    s.tmp_9 = game_Hitbox_contains__P2011_mk(s);
    s.tmp_9.arg0 = s.arg0;
    s.tmp_10 = game_Hitbox_right__P2008_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 269; s.pc = 25; return s.tmp_10;
  case 25:
    r0 = s.retval;
    s.tmp_9.arg1 = r0;
    s.tmp_11 = game_Hitbox_top__P2007_mk(s);
    s.tmp_11.arg0 = s.arg1;
    s.callLocIdx = 270; s.pc = 26; return s.tmp_11;
  case 26:
    r0 = s.retval;
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 271; s.pc = 24; return s.tmp_9;
  case 24:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 5; continue; }
    r0 = true;
    { step = 17; continue; }
  case 5:
  case 6:
    s.tmp_13 = game_Hitbox_contains__P2011_mk(s);
    s.tmp_13.arg0 = s.arg0;
    s.tmp_14 = game_Hitbox_right__P2008_mk(s);
    s.tmp_14.arg0 = s.arg1;
    s.callLocIdx = 272; s.pc = 28; return s.tmp_14;
  case 28:
    r0 = s.retval;
    s.tmp_13.arg1 = r0;
    s.tmp_15 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_15.arg0 = s.arg1;
    s.callLocIdx = 273; s.pc = 29; return s.tmp_15;
  case 29:
    r0 = s.retval;
    s.tmp_13.arg2 = r0;
    s.callLocIdx = 274; s.pc = 27; return s.tmp_13;
  case 27:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_12);
    if (!r0) { step = 7; continue; }
    r0 = true;
    { step = 17; continue; }
  case 7:
  case 8:
    s.tmp_17 = game_Hitbox_contains__P2011_mk(s);
    s.tmp_17.arg0 = s.arg1;
    s.tmp_18 = game_Hitbox_left__P2006_mk(s);
    s.tmp_18.arg0 = s.arg0;
    s.callLocIdx = 275; s.pc = 31; return s.tmp_18;
  case 31:
    r0 = s.retval;
    s.tmp_17.arg1 = r0;
    s.tmp_19 = game_Hitbox_top__P2007_mk(s);
    s.tmp_19.arg0 = s.arg0;
    s.callLocIdx = 276; s.pc = 32; return s.tmp_19;
  case 32:
    r0 = s.retval;
    s.tmp_17.arg2 = r0;
    s.callLocIdx = 277; s.pc = 30; return s.tmp_17;
  case 30:
    r0 = s.retval;
    s.tmp_16 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_16);
    if (!r0) { step = 9; continue; }
    r0 = true;
    { step = 17; continue; }
  case 9:
  case 10:
    s.tmp_21 = game_Hitbox_contains__P2011_mk(s);
    s.tmp_21.arg0 = s.arg1;
    s.tmp_22 = game_Hitbox_left__P2006_mk(s);
    s.tmp_22.arg0 = s.arg0;
    s.callLocIdx = 278; s.pc = 34; return s.tmp_22;
  case 34:
    r0 = s.retval;
    s.tmp_21.arg1 = r0;
    s.tmp_23 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 279; s.pc = 35; return s.tmp_23;
  case 35:
    r0 = s.retval;
    s.tmp_21.arg2 = r0;
    s.callLocIdx = 280; s.pc = 33; return s.tmp_21;
  case 33:
    r0 = s.retval;
    s.tmp_20 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_20);
    if (!r0) { step = 11; continue; }
    r0 = true;
    { step = 17; continue; }
  case 11:
  case 12:
    s.tmp_25 = game_Hitbox_contains__P2011_mk(s);
    s.tmp_25.arg0 = s.arg1;
    s.tmp_26 = game_Hitbox_right__P2008_mk(s);
    s.tmp_26.arg0 = s.arg0;
    s.callLocIdx = 281; s.pc = 37; return s.tmp_26;
  case 37:
    r0 = s.retval;
    s.tmp_25.arg1 = r0;
    s.tmp_27 = game_Hitbox_top__P2007_mk(s);
    s.tmp_27.arg0 = s.arg0;
    s.callLocIdx = 282; s.pc = 38; return s.tmp_27;
  case 38:
    r0 = s.retval;
    s.tmp_25.arg2 = r0;
    s.callLocIdx = 283; s.pc = 36; return s.tmp_25;
  case 36:
    r0 = s.retval;
    s.tmp_24 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_24);
    if (!r0) { step = 13; continue; }
    r0 = true;
    { step = 17; continue; }
  case 13:
  case 14:
    s.tmp_29 = game_Hitbox_contains__P2011_mk(s);
    s.tmp_29.arg0 = s.arg1;
    s.tmp_30 = game_Hitbox_right__P2008_mk(s);
    s.tmp_30.arg0 = s.arg0;
    s.callLocIdx = 284; s.pc = 40; return s.tmp_30;
  case 40:
    r0 = s.retval;
    s.tmp_29.arg1 = r0;
    s.tmp_31 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_31.arg0 = s.arg0;
    s.callLocIdx = 285; s.pc = 41; return s.tmp_31;
  case 41:
    r0 = s.retval;
    s.tmp_29.arg2 = r0;
    s.callLocIdx = 286; s.pc = 39; return s.tmp_29;
  case 39:
    r0 = s.retval;
    s.tmp_28 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_28);
    if (!r0) { step = 15; continue; }
    r0 = true;
    { step = 17; continue; }
  case 15:
  case 16:
    r0 = false;
  case 17:
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_overlapsWith__P2012.info = {"start":1185,"length":622,"line":48,"column":8,"endLine":58,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"overlapsWith","argumentNames":["this","other"]}

function game_Hitbox_overlapsWith__P2012_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_overlapsWith__P2012, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  tmp_24: undefined,
  tmp_25: undefined,
  tmp_26: undefined,
  tmp_27: undefined,
  tmp_28: undefined,
  tmp_29: undefined,
  tmp_30: undefined,
  tmp_31: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function game_Hitbox_contains__P2011(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, game_Hitbox__C1998_VT)) failedCast(r0);
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = game_Hitbox_left__P2006_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 259; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >= s.tmp_2);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = game_Hitbox_right__P2008_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 260; s.pc = 8; return s.tmp_6;
  case 8:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_4 <= s.tmp_5);
  case 2:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_7;
    { step = 4; continue; }
  case 3:
    s.tmp_8 = r0 = s.arg2;
    s.tmp_10 = game_Hitbox_top__P2007_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 261; s.pc = 9; return s.tmp_10;
  case 9:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_8 >= s.tmp_9);
  case 4:
    // jmp value (already in r0)
    s.tmp_11 = r0;
    r0 = pxsim_numops_toBool(s.tmp_11);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_11;
    { step = 6; continue; }
  case 5:
    s.tmp_12 = r0 = s.arg2;
    s.tmp_14 = game_Hitbox_bottom__P2009_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 262; s.pc = 10; return s.tmp_14;
  case 10:
    r0 = s.retval;
    s.tmp_13 = r0;
    r0 = (s.tmp_12 <= s.tmp_13);
  case 6:
    // jmp value (already in r0)
    s.tmp_15 = r0;
    r0 = s.tmp_15;
    return leave(s, r0)
  default: oops()
} } }
game_Hitbox_contains__P2011.info = {"start":1031,"length":144,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/hitbox.ts","functionName":"contains","argumentNames":["this","x","y"]}

function game_Hitbox_contains__P2011_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: game_Hitbox_contains__P2011, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function helpers_imageBlit__P1752(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.arg5 = (s.lambdaArgs[5]);
      s.arg6 = (s.lambdaArgs[6]);
      s.arg7 = (s.lambdaArgs[7]);
      s.arg8 = (s.lambdaArgs[8]);
      s.arg9 = (s.lambdaArgs[9]);
      s.arg10 = (s.lambdaArgs[10]);
      s.arg11 = (s.lambdaArgs[11]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__mk();
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    globals._blitArgs___4262 = (s.tmp_1);
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = (s.arg1 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 0, s.tmp_1);
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = (s.arg2 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 1, s.tmp_1);
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = (s.arg3 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 2, s.tmp_1);
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = (s.arg4 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 3, s.tmp_1);
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = (s.arg6 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 4, s.tmp_1);
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = (s.arg7 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 5, s.tmp_1);
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = (s.arg8 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 6, s.tmp_1);
    s.tmp_0 = r0 = globals._blitArgs___4262;
    r0 = (s.arg9 | 0);
    s.tmp_1 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_0, 7, s.tmp_1);
    r0 = pxsim_numops_toBoolDecr(s.arg10);
    if (!r0) { step = 3; continue; }
    r0 = 1;
    { step = 4; continue; }
  case 3:
    r0 = 0;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(globals._blitArgs___4262, 8, s.tmp_0);
    r0 = pxsim_numops_toBoolDecr(s.arg11);
    if (!r0) { step = 5; continue; }
    r0 = 1;
    { step = 6; continue; }
  case 5:
    r0 = 0;
  case 6:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = pxsim_Array_.setAt(globals._blitArgs___4262, 9, s.tmp_0);
    r0 = pxsim_ImageMethods._blit(s.arg0, s.arg5, globals._blitArgs___4262);
    return leave(s, r0)
  default: oops()
} } }
helpers_imageBlit__P1752.info = {"start":3839,"length":642,"line":136,"column":4,"endLine":149,"endColumn":5,"fileName":"pxt_modules/screen/image.ts","functionName":"imageBlit","argumentNames":["img","xDst","yDst","wDst","hDst","src","xSrc","ySrc","wSrc","hSrc","transparent","check"]}

function helpers_imageBlit__P1752_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: helpers_imageBlit__P1752, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
  arg5: undefined,
  arg6: undefined,
  arg7: undefined,
  arg8: undefined,
  arg9: undefined,
  arg10: undefined,
  arg11: undefined,
} }





function ArcadePhysicsEngine_createMovingSprite__P4412(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ovx___19804 = undefined;
    s.ovy___19809 = undefined;
    s.fx___19836 = undefined;
    s.c___19843 = undefined;
    s.fy___19886 = undefined;
    s.c___19893 = undefined;
    s.dx___19932 = undefined;
    s.dy___19945 = undefined;
    s.xStep___19958 = undefined;
    s.yStep___19960 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    s.tmp_0 = ArcadePhysicsEngine_constrain__P4417_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 640; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.ovx___19804 = (r0);
    s.tmp_0 = ArcadePhysicsEngine_constrain__P4417_mk(s);
    s.tmp_0.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 641; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.ovy___19809 = (r0);
    r0 = s.arg1.fields["_x"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastX"] = (s.tmp_0);
    r0 = s.arg1.fields["_y"];
    s.tmp_0 = r0;
    r0 = (s.arg1).fields["_lastY"] = (s.tmp_0);
    r0 = s.arg1.fields["_ax"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_3 = r0;
    r0 = s.arg1.fields["_ax"];
    s.tmp_6 = r0;
    r0 = pxsim.Math_.imul(s.tmp_6, s.arg2);
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_5, 1000);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 8; continue; }
  case 1:
    r0 = s.arg1.fields["_fx"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    r0 = s.arg1.fields["_fx"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.imul(s.tmp_2, s.arg2);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 1000);
    s.fx___19836 = (r0);
    r0 = s.arg1.fields["_vx"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.fx___19836);
    s.c___19843 = (r0);
    r0 = (s.c___19843 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 2; continue; }
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P166_mk(s);
    s.tmp_3.arg0 = 0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.fx___19836);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 649; s.pc = 27; return s.tmp_3;
  case 27:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 5; continue; }
  case 2:
    r0 = (s.c___19843 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P167_mk(s);
    s.tmp_3.arg0 = 0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.fx___19836);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 651; s.pc = 28; return s.tmp_3;
  case 28:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vx"] = (s.tmp_2);
    { step = 4; continue; }
  case 3:
    r0 = (s.arg1).fields["_vx"] = (0);
  case 4:
  case 5:
  case 6:
  case 7:
  case 8:
    r0 = s.arg1.fields["_ay"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.tmp_1 = r0 = s.arg1;
    r0 = s.arg1.fields["_vy"];
    s.tmp_3 = r0;
    r0 = s.arg1.fields["_ay"];
    s.tmp_6 = r0;
    r0 = pxsim.Math_.imul(s.tmp_6, s.arg2);
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_5, 1000);
    s.tmp_4 = r0;
    r0 = (s.tmp_3 + s.tmp_4);
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 16; continue; }
  case 9:
    r0 = s.arg1.fields["_fy"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = s.arg1.fields["_fy"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.imul(s.tmp_2, s.arg2);
    s.tmp_1 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_1, 1000);
    s.fy___19886 = (r0);
    r0 = s.arg1.fields["_vy"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 - s.fy___19886);
    s.c___19893 = (r0);
    r0 = (s.c___19893 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 10; continue; }
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_min__P166_mk(s);
    s.tmp_3.arg0 = 0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.fy___19886);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 659; s.pc = 29; return s.tmp_3;
  case 29:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 13; continue; }
  case 10:
    r0 = (s.c___19893 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 11; continue; }
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Fx_max__P167_mk(s);
    s.tmp_3.arg0 = 0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 - s.fy___19886);
    s.tmp_3.arg1 = r0;
    s.callLocIdx = 661; s.pc = 30; return s.tmp_3;
  case 30:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["_vy"] = (s.tmp_2);
    { step = 12; continue; }
  case 11:
    r0 = (s.arg1).fields["_vy"] = (0);
  case 12:
  case 13:
  case 14:
  case 15:
  case 16:
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P4417_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vx"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 662; s.pc = 31; return s.tmp_2;
  case 31:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vx"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg1;
    s.tmp_2 = ArcadePhysicsEngine_constrain__P4417_mk(s);
    s.tmp_2.arg0 = s.arg0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 663; s.pc = 32; return s.tmp_2;
  case 32:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_vy"] = (s.tmp_1);
    r0 = s.arg1.fields["_vx"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.ovx___19804);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * 256);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 0);
    s.dx___19932 = (r0);
    r0 = s.arg1.fields["_vy"];
    s.tmp_4 = r0;
    r0 = (s.tmp_4 + s.ovy___19809);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 / 256);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * s.arg3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 / 1000);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 * 256);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 0);
    s.dy___19945 = (r0);
    s.xStep___19958 = (s.dx___19932);
    s.yStep___19960 = (s.dy___19945);
  case 17:
    s.tmp_2 = Fx_abs__P165_mk(s);
    s.tmp_2.arg0 = s.xStep___19958;
    s.callLocIdx = 670; s.pc = 33; return s.tmp_2;
  case 33:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 18; continue; }
    r0 = s.tmp_0;
    { step = 19; continue; }
  case 18:
    s.tmp_5 = Fx_abs__P165_mk(s);
    s.tmp_5.arg0 = s.yStep___19960;
    s.callLocIdx = 671; s.pc = 34; return s.tmp_5;
  case 34:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = s.arg0.fields["maxSingleStep"];
    s.tmp_6 = r0;
    r0 = (s.tmp_4 > s.tmp_6);
  case 19:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_7);
    if (!r0) { step = 24; continue; }
    s.tmp_10 = Fx_abs__P165_mk(s);
    s.tmp_10.arg0 = s.xStep___19958;
    s.callLocIdx = 672; s.pc = 35; return s.tmp_10;
  case 35:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_11 = r0;
    r0 = (s.tmp_9 > s.tmp_11);
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    if (!r0) { step = 20; continue; }
    r0 = pxsim.Math_.idiv(s.xStep___19958, 2);
    s.xStep___19958 = (r0);
  case 20:
  case 21:
    s.tmp_2 = Fx_abs__P165_mk(s);
    s.tmp_2.arg0 = s.yStep___19960;
    s.callLocIdx = 674; s.pc = 36; return s.tmp_2;
  case 36:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg0.fields["minSingleStep"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 22; continue; }
    r0 = pxsim.Math_.idiv(s.yStep___19960, 2);
    s.yStep___19960 = (r0);
  case 22:
  case 23:
    { step = 17; continue; }
  case 24:
    r0 = pxsim_pxtcore_mkClassInstance(MovingSprite__C2312_VT);
    s.tmp_0 = r0;
    s.tmp_1 = MovingSprite_constructor__P2313_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.tmp_1.arg1 = s.arg1;
    r0 = s.arg1.fields["_vx"];
    s.tmp_1.arg2 = r0;
    r0 = s.arg1.fields["_vy"];
    s.tmp_1.arg3 = r0;
    s.tmp_1.arg4 = s.dx___19932;
    s.tmp_1.arg5 = s.dy___19945;
    s.tmp_1.arg6 = s.xStep___19958;
    s.tmp_1.arg7 = s.yStep___19960;
    s.callLocIdx = 676; s.pc = 37; return s.tmp_1;
  case 37:
    r0 = s.retval;
    r0 = s.tmp_0;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_createMovingSprite__P4412.info = {"start":6637,"length":2805,"line":210,"column":4,"endLine":300,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"createMovingSprite","argumentNames":["this","sprite","dtMs","dt2"]}

function ArcadePhysicsEngine_createMovingSprite__P4412_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_createMovingSprite__P4412, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  ovx___19804: undefined,
  ovy___19809: undefined,
  fx___19836: undefined,
  c___19843: undefined,
  fy___19886: undefined,
  c___19893: undefined,
  dx___19932: undefined,
  dy___19945: undefined,
  xStep___19958: undefined,
  yStep___19960: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function ArcadePhysicsEngine_constrain__P4417(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    s.tmp_0 = Fx_max__P167_mk(s);
    s.tmp_1 = Fx_min__P166_mk(s);
    r0 = s.arg0.fields["maxVelocity"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 821; s.pc = 2; return s.tmp_1;
  case 2:
    r0 = s.retval;
    s.tmp_0.arg0 = r0;
    r0 = s.arg0.fields["maxNegativeVelocity"];
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 822; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_constrain__P4417.info = {"start":26054,"length":193,"line":730,"column":4,"endLine":738,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"constrain","argumentNames":["this","v"]}

function ArcadePhysicsEngine_constrain__P4417_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_constrain__P4417, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Fx_compare__P164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = (s.arg0 - s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_compare__P164.info = {"start":1395,"length":106,"line":41,"column":4,"endLine":43,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"compare","argumentNames":["a","b"]}

function Fx_compare__P164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_compare__P164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAABB__P2240(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.left___19624 = undefined;
    s.top___19627 = undefined;
    s.xn___19630 = undefined;
    s.yn___19641 = undefined;
    s.x___19652 = undefined;
    s.y___19657 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.tmp_0 = Sprite_left__P2186_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 572; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.left___19624 = (r0);
    s.tmp_0 = Sprite_top__P2190_mk(s);
    s.tmp_0.arg0 = s.arg1;
    s.callLocIdx = 573; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.top___19627 = (r0);
    s.tmp_3 = Sprite_width__P2184_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 574; s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.xn___19630 = (r0);
    s.tmp_3 = Sprite_height__P2185_mk(s);
    s.tmp_3.arg0 = s.arg1;
    s.callLocIdx = 575; s.pc = 8; return s.tmp_3;
  case 8:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_4 = r0;
    r0 = (s.tmp_2 + s.tmp_4);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - 1);
    s.tmp_0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_5 = r0;
    r0 = pxsim.Math_.idiv(s.tmp_0, s.tmp_5);
    s.yn___19641 = (r0);
    s.x___19652 = (0);
  case 1:
    r0 = (s.x___19652 <= s.xn___19630);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.y___19657 = (0);
  case 2:
    r0 = (s.y___19657 <= s.yn___19641);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_1 = sprites_SpriteMap_insertAtKey__P4376_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_2 = r0 = s.left___19624;
    s.tmp_4 = Math_min__P131_mk(s);
    s.tmp_5 = Sprite_width__P2184_mk(s);
    s.tmp_5.arg0 = s.arg1;
    s.callLocIdx = 576; s.pc = 11; return s.tmp_5;
  case 11:
    r0 = s.retval;
    s.tmp_4.arg0 = r0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_6 = r0;
    r0 = (s.x___19652 * s.tmp_6);
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 577; s.pc = 10; return s.tmp_4;
  case 10:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_2 + s.tmp_3);
    s.tmp_1.arg1 = r0;
    s.tmp_7 = r0 = s.top___19627;
    s.tmp_9 = Math_min__P131_mk(s);
    s.tmp_10 = Sprite_height__P2185_mk(s);
    s.tmp_10.arg0 = s.arg1;
    s.callLocIdx = 578; s.pc = 13; return s.tmp_10;
  case 13:
    r0 = s.retval;
    s.tmp_9.arg0 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_11 = r0;
    r0 = (s.y___19657 * s.tmp_11);
    s.tmp_9.arg1 = r0;
    s.callLocIdx = 579; s.pc = 12; return s.tmp_9;
  case 12:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_1.arg2 = r0;
    s.tmp_1.arg3 = s.arg1;
    s.callLocIdx = 580; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    r0 = (s.y___19657 + 1);
    s.y___19657 = (r0);
    { step = 2; continue; }
  case 3:
    r0 = (s.x___19652 + 1);
    s.x___19652 = (r0);
    { step = 1; continue; }
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAABB__P2240.info = {"start":3184,"length":521,"line":91,"column":8,"endLine":99,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAABB","argumentNames":["this","sprite"]}

function sprites_SpriteMap_insertAABB__P2240_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAABB__P2240, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  left___19624: undefined,
  top___19627: undefined,
  xn___19630: undefined,
  yn___19641: undefined,
  x___19652: undefined,
  y___19657: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_SpriteMap_insertAtKey__P4376(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.k___19692 = undefined;
    s.bucket___19697 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.tmp_0 = sprites_SpriteMap_key__P4375_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.callLocIdx = 571; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    s.k___19692 = (r0);
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___19692);
    s.bucket___19697 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.bucket___19697);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["buckets"];
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.k___19692;
    r0 = pxsim_Array__mk();
    s.tmp_4 = r0;
    r0 = pxsim_Array_.setAt(s.tmp_2, s.tmp_3, s.tmp_4);
    s.bucket___19697 = (s.tmp_4);
  case 1:
  case 2:
    r0 = pxsim_Array_.indexOf(s.bucket___19697, s.arg3, undefined);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = pxsim_Array__push(s.bucket___19697, s.arg3);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_insertAtKey__P4376.info = {"start":2872,"length":302,"line":82,"column":8,"endLine":89,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"insertAtKey","argumentNames":["this","x","y","sprite"]}

function sprites_SpriteMap_insertAtKey__P4376_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_insertAtKey__P4376, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  k___19692: undefined,
  bucket___19697: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function sprites_SpriteMap_clear__P2239(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["buckets"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_clear__P2239.info = {"start":2532,"length":50,"line":72,"column":8,"endLine":74,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"clear","argumentNames":["this"]}

function sprites_SpriteMap_clear__P2239_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_clear__P2239, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_resizeBuckets__P2238(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.maxWidth___19727 = undefined;
    s.maxHeight___19728 = undefined;
    s.sprite___19730 = undefined;
    s.unnamed70___U3 = undefined;
    s.unnamed71___U4 = undefined;
    s.tMap___19746 = undefined;
    s.areaWidth___19750 = undefined;
    s.areaHeight___19757 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.maxWidth___19727 = (0);
    s.maxHeight___19728 = (0);
    s.sprite___19730 = (undefined);
    s.unnamed70___U3 = (s.arg1);
    s.unnamed71___U4 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed71___U4;
    r0 = pxsim_Array__length(s.unnamed70___U3);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 6; continue; }
    r0 = pxsim_Array__getAt(s.unnamed70___U3, s.unnamed71___U4);
    s.sprite___19730 = (r0);
    s.tmp_4 = Sprite_width__P2184_mk(s);
    s.tmp_4.arg0 = s.sprite___19730;
    s.callLocIdx = 560; s.pc = 11; return s.tmp_4;
  case 11:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > s.maxWidth___19727);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    s.tmp_5 = Sprite_width__P2184_mk(s);
    s.tmp_5.arg0 = s.sprite___19730;
    s.callLocIdx = 561; s.pc = 12; return s.tmp_5;
  case 12:
    r0 = s.retval;
    s.maxWidth___19727 = (r0);
  case 2:
  case 3:
    s.tmp_2 = Sprite_height__P2185_mk(s);
    s.tmp_2.arg0 = s.sprite___19730;
    s.callLocIdx = 562; s.pc = 13; return s.tmp_2;
  case 13:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > s.maxHeight___19728);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_3 = Sprite_height__P2185_mk(s);
    s.tmp_3.arg0 = s.sprite___19730;
    s.callLocIdx = 563; s.pc = 14; return s.tmp_3;
  case 14:
    r0 = s.retval;
    s.maxHeight___19728 = (r0);
  case 4:
  case 5:
    r0 = (s.unnamed71___U4 + 1);
    s.unnamed71___U4 = (r0);
    { step = 1; continue; }
  case 6:
    s.unnamed70___U3 = (undefined);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 564; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tMap___19746 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tMap___19746);
    if (!r0) { step = 7; continue; }
    s.tmp_0 = tiles_TileMap_areaWidth__P2482_mk(s);
    s.tmp_0.arg0 = s.tMap___19746;
    s.callLocIdx = 565; s.pc = 16; return s.tmp_0;
  case 16:
    r0 = s.retval;
    { step = 8; continue; }
  case 7:
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
  case 8:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaWidth___19750 = (s.tmp_1);
    r0 = pxsim_numops_toBoolDecr(s.tMap___19746);
    if (!r0) { step = 9; continue; }
    s.tmp_0 = tiles_TileMap_areaHeight__P2483_mk(s);
    s.tmp_0.arg0 = s.tMap___19746;
    s.callLocIdx = 566; s.pc = 17; return s.tmp_0;
  case 17:
    r0 = s.retval;
    { step = 10; continue; }
  case 9:
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
  case 10:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    s.areaHeight___19757 = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaWidth___19750 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxWidth___19727 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 567; s.pc = 18; return s.tmp_2;
  case 18:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellWidth"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_clamp__P127_mk(s);
    s.tmp_2.arg0 = 8;
    r0 = (s.areaHeight___19757 >> 2);
    s.tmp_2.arg1 = r0;
    r0 = (s.maxHeight___19728 * 2);
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 568; s.pc = 19; return s.tmp_2;
  case 19:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cellHeight"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaHeight___19757, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["rowCount"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = pxsim.Math_.idiv(s.areaWidth___19750, s.tmp_2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["columnCount"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_resizeBuckets__P2238.info = {"start":1696,"length":826,"line":52,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"resizeBuckets","argumentNames":["this","sprites"]}

function sprites_SpriteMap_resizeBuckets__P2238_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_resizeBuckets__P2238, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  maxWidth___19727: undefined,
  maxHeight___19728: undefined,
  sprite___19730: undefined,
  unnamed70___U3: undefined,
  unnamed71___U4: undefined,
  tMap___19746: undefined,
  areaWidth___19750: undefined,
  areaHeight___19757: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_clearObstacles__P2212(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_obstacles"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_clearObstacles__P2212.info = {"start":26719,"length":54,"line":865,"column":4,"endLine":867,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"clearObstacles","argumentNames":["this"]}

function Sprite_clearObstacles__P2212_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_clearObstacles__P2212, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function Fx_idiv__P163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = pxsim.Math_.idiv(s.arg0, s.arg1);
    return leave(s, r0)
  default: oops()
} } }
Fx_idiv__P163.info = {"start":1279,"length":111,"line":38,"column":4,"endLine":40,"endColumn":5,"fileName":"pxt_modules/base/fixed.ts","functionName":"idiv","argumentNames":["a","b"]}

function Fx_idiv__P163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Fx_idiv__P163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_draw__P2325(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    s.tmp_0 = sprites_SpriteMap_draw__P2237_mk(s);
    r0 = s.arg0.fields["map"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 606; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_draw__P2325.info = {"start":2777,"length":39,"line":108,"column":4,"endLine":110,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"draw","argumentNames":["this"]}

function ArcadePhysicsEngine_draw__P2325_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_draw__P2325, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_SpriteMap_draw__P2237(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.x___20025 = undefined;
    s.y___20031 = undefined;
    s.left___20037 = undefined;
    s.top___20042 = undefined;
    s.k___20047 = undefined;
    s.b___20052 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_SpriteMap__C2233_VT)) failedCast(r0);
    s.x___20025 = (0);
  case 1:
    r0 = s.arg0.fields["columnCount"];
    s.tmp_1 = r0;
    r0 = (s.x___20025 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.y___20031 = (0);
  case 2:
    r0 = s.arg0.fields["rowCount"];
    s.tmp_1 = r0;
    r0 = (s.y___20031 < s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2 = r0;
    r0 = (s.x___20025 * s.tmp_2);
    s.left___20037 = (r0);
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_0 = r0;
    r0 = (s.y___20031 * s.tmp_0);
    s.top___20042 = (r0);
    s.tmp_0 = sprites_SpriteMap_key__P4375_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.left___20037;
    s.tmp_0.arg2 = s.top___20042;
    s.callLocIdx = 558; s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
    s.k___20047 = (r0);
    r0 = s.arg0.fields["buckets"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__getAt(s.tmp_0, s.k___20047);
    s.b___20052 = (r0);
    s.tmp_0 = r0 = s.b___20052;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_0;
    { step = 4; continue; }
  case 3:
    r0 = pxsim_Array__length(s.b___20052);
  case 4:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 5; continue; }
    s.tmp_2 = helpers_imageDrawRect__P1758_mk(s);
    s.tmp_2.arg0 = globals.screen___1829;
    s.tmp_2.arg1 = s.left___20037;
    s.tmp_2.arg2 = s.top___20042;
    r0 = s.arg0.fields["cellWidth"];
    s.tmp_2.arg3 = r0;
    r0 = s.arg0.fields["cellHeight"];
    s.tmp_2.arg4 = r0;
    s.tmp_2.arg5 = 5;
    s.callLocIdx = 559; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
  case 5:
  case 6:
    r0 = (s.y___20031 + 1);
    s.y___20031 = (r0);
    { step = 2; continue; }
  case 7:
    r0 = (s.x___20025 + 1);
    s.x___20025 = (r0);
    { step = 1; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_SpriteMap_draw__P2237.info = {"start":1122,"length":496,"line":36,"column":8,"endLine":47,"endColumn":9,"fileName":"pxt_modules/game/spritemap.ts","functionName":"draw","argumentNames":["this"]}

function sprites_SpriteMap_draw__P2237_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_SpriteMap_draw__P2237, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  x___20025: undefined,
  y___20031: undefined,
  left___20037: undefined,
  top___20042: undefined,
  k___20047: undefined,
  b___20052: undefined,
  arg0: undefined,
} }





function ArcadePhysicsEngine_removeSprite__P2324(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array_.removeElement(s.tmp_0, s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_removeSprite__P2324.info = {"start":2691,"length":80,"line":104,"column":4,"endLine":106,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"removeSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_removeSprite__P2324_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_removeSprite__P2324, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function ArcadePhysicsEngine_addSprite__P2323(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.tm___20089 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, ArcadePhysicsEngine__C2314_VT)) failedCast(r0);
    r0 = s.arg0.fields["sprites"];
    s.tmp_0 = r0;
    r0 = pxsim_Array__push(s.tmp_0, s.arg1);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 604; s.pc = 5; return s.tmp_0;
  case 5:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___20089 = (r0);
    s.tmp_0 = r0 = s.tm___20089;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_1 = tiles_TileMap_isOnWall__P2497_mk(s);
    s.tmp_1.arg0 = s.tm___20089;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 605; s.pc = 6; return s.tmp_1;
  case 6:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    s.tmp_3 = r0 = s.arg1;
    r0 = s.tmp_3.fields["flags"];
    s.tmp_5 = r0;
    r0 = (s.tmp_5 | 256);
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["flags"] = (s.tmp_4);
  case 3:
  case 4:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
ArcadePhysicsEngine_addSprite__P2323.info = {"start":2465,"length":220,"line":96,"column":4,"endLine":102,"endColumn":5,"fileName":"pxt_modules/game/physics.ts","functionName":"addSprite","argumentNames":["this","sprite"]}

function ArcadePhysicsEngine_addSprite__P2323_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: ArcadePhysicsEngine_addSprite__P2323, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tm___20089: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMapData_constructor__P2457(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    r0 = (s.arg0).fields["data"] = (s.arg1);
    r0 = (s.arg0).fields["layers"] = (s.arg2);
    r0 = (s.arg0).fields["tileset"] = (s.arg3);
    s.tmp_0 = tiles_TileMapData_scale__P2461_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg4;
    s.callLocIdx = 927; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 0);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_width"] = (s.tmp_1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim.BufferMethods.getNumber(s.arg1, 4, 2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_height"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_constructor__P2457.info = {"start":6012,"length":358,"line":204,"column":8,"endLine":212,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","data","layers","tileset","scale"]}

function tiles_TileMapData_constructor__P2457_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_constructor__P2457, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function tiles_TileMapData_scale__P2461(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMapData__C2456_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    s.tmp_0 = r0 = s.arg0;
    r0 = pxsim_Array__mk();
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["cachedTileView"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMapData_scale__P2461.info = {"start":6604,"length":102,"line":226,"column":8,"endLine":229,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMapData_scale__P2461_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMapData_scale__P2461, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_constructor__P2476(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_layer"] = (1);
    s.tmp_0 = tiles_TileMap_scale__P2478_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 933; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkAction(1, tiles_TileMap_inline__P20150);
    s.tmp_0 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_0, 0, s.arg0);
    s.tmp_1 = r0 = s.arg0;
    s.tmp_3 = scene_createRenderable__P2543_mk(s);
    s.tmp_3.arg0 = -1;
    s.tmp_3.arg1 = s.tmp_0;
    s.tmp_3.arg2 = undefined;
    s.callLocIdx = 935; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1).fields["renderable"] = (s.tmp_2);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_constructor__P2476.info = {"start":8891,"length":268,"line":300,"column":8,"endLine":308,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["this","scale"]}

function tiles_TileMap_constructor__P2476_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_constructor__P2476, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_inline__P20150(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    s.tmp_0 = tiles_TileMap_draw__P4484_mk(s);
    s.tmp_0.arg0 = s.caps[0];
    s.tmp_0.arg1 = s.arg0;
    s.tmp_0.arg2 = s.arg1;
    s.callLocIdx = 934; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_inline__P20150.info = {"start":9109,"length":25,"line":306,"column":16,"endLine":306,"endColumn":41,"fileName":"pxt_modules/game/tilemap.ts","functionName":"inline","argumentNames":["t","c"]}

function tiles_TileMap_inline__P20150_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_inline__P20150, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_draw__P4484(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bitmask___20161 = undefined;
    s.offsetX___20167 = undefined;
    s.offsetY___20172 = undefined;
    s.x0___20177 = undefined;
    s.xn___20184 = undefined;
    s.y0___20201 = undefined;
    s.yn___20208 = undefined;
    s.x___20225 = undefined;
    s.y___20231 = undefined;
    s.index___20237 = undefined;
    s.tile___20244 = undefined;
    s.x___20280 = undefined;
    s.xLine___20286 = undefined;
    s.y___20312 = undefined;
    s.yLine___20318 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg0.fields["_map"];
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_4 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 23; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["_scale"];
    s.tmp_8 = r0;
    r0 = (1 << s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.bitmask___20161 = (r0);
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___20161);
    s.offsetX___20167 = (r0);
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & s.bitmask___20161);
    s.offsetY___20172 = (r0);
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 953; s.pc = 24; return s.tmp_0;
  case 24:
    r0 = s.retval;
    s.x0___20177 = (r0);
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["_width"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetX"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 956; s.pc = 25; return s.tmp_0;
  case 25:
    r0 = s.retval;
    s.xn___20184 = (r0);
    s.tmp_0 = Math_max__P130_mk(s);
    s.tmp_0.arg0 = 0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_1 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_2 = r0;
    r0 = (s.tmp_1 >> s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 958; s.pc = 26; return s.tmp_0;
  case 26:
    r0 = s.retval;
    s.y0___20201 = (r0);
    s.tmp_0 = Math_min__P131_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["_height"];
    s.tmp_0.arg0 = r0;
    r0 = s.arg2.fields["drawOffsetY"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_6 = r0;
    r0 = (s.tmp_3 >> s.tmp_6);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 961; s.pc = 27; return s.tmp_0;
  case 27:
    r0 = s.retval;
    s.yn___20208 = (r0);
    s.x___20225 = (s.x0___20177);
  case 3:
    r0 = (s.x___20225 <= s.xn___20184);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 8; continue; }
    s.y___20231 = (s.y0___20201);
  case 4:
    r0 = (s.y___20231 <= s.yn___20208);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 7; continue; }
    s.tmp_1 = tiles_TileMapData_getTile__P2462_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.x___20225;
    s.tmp_1.arg2 = s.y___20231;
    s.callLocIdx = 962; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.index___20237 = (r0);
    s.tmp_0 = tiles_TileMapData_getTileImage__P2465_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.index___20237;
    s.callLocIdx = 963; s.pc = 29; return s.tmp_0;
  case 29:
    r0 = s.retval;
    s.tile___20244 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.tile___20244);
    if (!r0) { step = 5; continue; }
    s.tmp_0 = r0 = s.arg1;
    s.tmp_1 = r0 = s.tile___20244;
    r0 = (s.x___20225 - s.x0___20177);
    s.tmp_4 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 << s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 - s.offsetX___20167);
    s.tmp_2 = r0;
    r0 = (s.y___20231 - s.y0___20201);
    s.tmp_8 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_9 = r0;
    r0 = (s.tmp_8 << s.tmp_9);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - s.offsetY___20172);
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_6);
  case 5:
  case 6:
    r0 = (s.y___20231 + 1);
    s.y___20231 = (r0);
    { step = 4; continue; }
  case 7:
    r0 = (s.x___20225 + 1);
    s.x___20225 = (r0);
    { step = 3; continue; }
  case 8:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2689);
    if (!r0) { step = 21; continue; }
    s.x___20280 = (s.x0___20177);
  case 9:
    r0 = (s.x___20280 <= s.xn___20184);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 14; continue; }
    r0 = (s.x___20280 - s.x0___20177);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetX___20167);
    s.xLine___20286 = (r0);
    r0 = (s.xLine___20286 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_0;
    { step = 11; continue; }
  case 10:
    s.tmp_1 = r0 = s.xLine___20286;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 11:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 12; continue; }
    s.tmp_4 = helpers_imageDrawLine__P1757_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = s.xLine___20286;
    s.tmp_4.arg2 = 0;
    s.tmp_4.arg3 = s.xLine___20286;
    r0 = pxsim_ImageMethods.height(s.arg1);
    s.tmp_4.arg4 = r0;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 967; s.pc = 30; return s.tmp_4;
  case 30:
    r0 = s.retval;
  case 12:
  case 13:
    r0 = (s.x___20280 + 1);
    s.x___20280 = (r0);
    { step = 9; continue; }
  case 14:
    s.y___20312 = (s.y0___20201);
  case 15:
    r0 = (s.y___20312 <= s.yn___20208);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 20; continue; }
    r0 = (s.y___20312 - s.y0___20201);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["_scale"];
    s.tmp_3 = r0;
    r0 = (s.tmp_2 << s.tmp_3);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.offsetY___20172);
    s.yLine___20318 = (r0);
    r0 = (s.yLine___20318 >= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 16; continue; }
    r0 = s.tmp_0;
    { step = 17; continue; }
  case 16:
    s.tmp_1 = r0 = s.yLine___20318;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_1 <= s.tmp_2);
  case 17:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 18; continue; }
    s.tmp_4 = helpers_imageDrawLine__P1757_mk(s);
    s.tmp_4.arg0 = s.arg1;
    s.tmp_4.arg1 = 0;
    s.tmp_4.arg2 = s.yLine___20318;
    r0 = pxsim_ImageMethods.width(s.arg1);
    s.tmp_4.arg3 = r0;
    s.tmp_4.arg4 = s.yLine___20318;
    s.tmp_4.arg5 = 1;
    s.callLocIdx = 969; s.pc = 31; return s.tmp_4;
  case 31:
    r0 = s.retval;
  case 18:
  case 19:
    r0 = (s.y___20312 + 1);
    s.y___20312 = (r0);
    { step = 15; continue; }
  case 20:
  case 21:
  case 22:
  case 23:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_draw__P4484.info = {"start":13962,"length":2224,"line":458,"column":8,"endLine":513,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"draw","argumentNames":["this","target","camera"]}

function tiles_TileMap_draw__P4484_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_draw__P4484, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  bitmask___20161: undefined,
  offsetX___20167: undefined,
  offsetY___20172: undefined,
  x0___20177: undefined,
  xn___20184: undefined,
  y0___20201: undefined,
  yn___20208: undefined,
  x___20225: undefined,
  y___20231: undefined,
  index___20237: undefined,
  tile___20244: undefined,
  x___20280: undefined,
  xLine___20286: undefined,
  y___20312: undefined,
  yLine___20318: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function tiles_TileMap_scale__P2478(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_scale"] = (s.arg1);
    r0 = s.arg0.fields["_map"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = tiles_TileMapData_scale__P2461_mk(s);
    r0 = s.arg0.fields["_map"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 936; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
tiles_TileMap_scale__P2478.info = {"start":9234,"length":144,"line":314,"column":8,"endLine":319,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"scale","argumentNames":["this","s"]}

function tiles_TileMap_scale__P2478_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_scale__P2478, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function tiles_TileMap_data__P2479(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_TileMap__C2474_VT)) failedCast(r0);
    r0 = s.arg0.fields["_map"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_TileMap_data__P2479.info = {"start":9388,"length":65,"line":321,"column":8,"endLine":323,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"data","argumentNames":["this"]}
tiles_TileMap_data__P2479.isGetter = true;

function tiles_TileMap_data__P2479_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_TileMap_data__P2479, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_BackgroundLayer_constructor__P2425(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_BackgroundLayer__C2418_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = Math_max__P130_mk(s);
    s.tmp_2.arg0 = 1;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 913; s.pc = 7; return s.tmp_2;
  case 7:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["distance"] = (s.tmp_1);
    r0 = (s.arg0).fields["img"] = (s.arg3);
    s.tmp_0 = r0 = s.arg2;
    r0 = pxsim_pxtcore.switch_eq(5, s.tmp_0);
    if (r0) { step = 1; continue; }
    r0 = pxsim_pxtcore.switch_eq(1, s.tmp_0);
    if (r0) { step = 2; continue; }
    r0 = pxsim_pxtcore.switch_eq(2, s.tmp_0);
    if (r0) { step = 3; continue; }
    r0 = pxsim_pxtcore.switch_eq(3, s.tmp_0);
    if (r0) { step = 4; continue; }
    r0 = pxsim_pxtcore.switch_eq(4, s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 1:
    r0 = (s.arg0).fields["repeatX"] = (true);
    r0 = (s.arg0).fields["repeatY"] = (true);
    r0 = (s.arg0).fields["alignX"] = (5);
    r0 = (s.arg0).fields["alignY"] = (5);
    { step = 6; continue; }
  case 2:
  case 3:
    r0 = (s.arg0).fields["repeatX"] = (false);
    r0 = (s.arg0).fields["repeatY"] = (true);
    r0 = (s.arg0).fields["alignX"] = (s.arg2);
    r0 = (s.arg0).fields["alignY"] = (5);
    { step = 6; continue; }
  case 4:
  case 5:
    r0 = (s.arg0).fields["repeatX"] = (true);
    r0 = (s.arg0).fields["repeatY"] = (false);
    r0 = (s.arg0).fields["alignX"] = (5);
    r0 = (s.arg0).fields["alignY"] = (s.arg2);
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_BackgroundLayer_constructor__P2425.info = {"start":1936,"length":1117,"line":72,"column":8,"endLine":97,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"inline","argumentNames":["this","distance","alignment","img"]}

function scene_BackgroundLayer_constructor__P2425_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_BackgroundLayer_constructor__P2425, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function scene_Camera_y__P2530(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    r0 = s.arg0.fields["drawOffsetY"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_y__P2530.info = {"start":1398,"length":79,"line":49,"column":8,"endLine":51,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"y","argumentNames":["this"]}
scene_Camera_y__P2530.isGetter = true;

function scene_Camera_y__P2530_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_y__P2530, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function scene_Camera_x__P2529(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    r0 = s.arg0.fields["drawOffsetX"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_x__P2529.info = {"start":1311,"length":78,"line":46,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"x","argumentNames":["this"]}
scene_Camera_x__P2529.isGetter = true;

function scene_Camera_x__P2529_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_x__P2529, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function particles_ParticleSource___draw__P2846(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.current___20621 = undefined;
    s.left___20624 = undefined;
    s.top___20634 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    r0 = s.arg0.fields["head"];
    s.current___20621 = (r0);
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1.fields["drawOffsetX"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.left___20624 = (s.tmp_4);
    r0 = s.arg0.fields["pFlags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetY"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 * 256);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 | 0);
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.top___20634 = (s.tmp_4);
  case 5:
    r0 = pxsim_numops_toBoolDecr(s.current___20621);
    if (!r0) { step = 8; continue; }
    r0 = s.current___20621.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 6; continue; }
    s.tmp_2 = particles_ParticleSource_drawParticle__P4880_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.current___20621;
    s.tmp_2.arg2 = s.left___20624;
    s.tmp_2.arg3 = s.top___20634;
    s.callLocIdx = 1355; s.pc = 9; return s.tmp_2;
  case 9:
    r0 = s.retval;
  case 6:
  case 7:
    r0 = s.current___20621.fields["next"];
    s.current___20621 = (r0);
    { step = 5; continue; }
  case 8:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource___draw__P2846.info = {"start":3216,"length":468,"line":112,"column":8,"endLine":122,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"__draw","argumentNames":["this","camera"]}

function particles_ParticleSource___draw__P2846_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource___draw__P2846, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  current___20621: undefined,
  left___20624: undefined,
  top___20634: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_ParticleSource_drawParticle__P4880(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleSource__C2840_VT)) failedCast(r0);
    s.tmp_0 = particles_ParticleFactory__C2876_v1_4_mk(s);
    r0 = s.arg0.fields["_factory"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = s.arg1;
    r0 = s.arg1.fields["_x"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.arg2);
    s.tmp_0.arg2 = r0;
    r0 = s.arg1.fields["_y"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.arg3);
    s.tmp_0.arg3 = r0;
    if (!checkSubtype(s.tmp_0.arg0, particles_ParticleFactory__C2876_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawParticle;
    s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleSource_drawParticle__P4880.info = {"start":8615,"length":174,"line":287,"column":8,"endLine":289,"endColumn":9,"fileName":"pxt_modules/game/particles.ts","functionName":"drawParticle","argumentNames":["this","p","screenLeft","screenTop"]}

function particles_ParticleSource_drawParticle__P4880_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleSource_drawParticle__P4880, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_ParticleFactory_drawParticle__P2879(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ParticleFactory__C2876_VT)) failedCast(r0);
    s.tmp_0 = r0 = globals.screen___1829;
    r0 = (s.arg2 + 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 8);
    s.tmp_1 = r0;
    r0 = (s.arg3 + 128);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 8);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ParticleFactory_drawParticle__P2879.info = {"start":2265,"length":118,"line":85,"column":8,"endLine":87,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_ParticleFactory_drawParticle__P2879_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ParticleFactory_drawParticle__P2879, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_ShapeFactory_createParticle__P2906(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___20424 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C2902_VT)) failedCast(r0);
    s.tmp_0 = particles_AreaFactory_createParticle__P2892_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1449; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.p___20424 = (r0);
    s.tmp_0 = r0 = s.p___20424;
    s.tmp_2 = Math_FastRandom_randomRange__P2752_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    s.tmp_2.arg1 = 1;
    s.tmp_2.arg2 = 14;
    s.callLocIdx = 1450; s.pc = 2; return s.tmp_2;
  case 2:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["color"] = (s.tmp_1);
    r0 = s.p___20424;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_createParticle__P2906.info = {"start":7505,"length":178,"line":239,"column":8,"endLine":243,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_ShapeFactory_createParticle__P2906_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_createParticle__P2906, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  p___20424: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_createParticle__P2892(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___20436 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C2886_VT)) failedCast(r0);
    s.tmp_0 = particles_SprayFactory_createParticle__P2882_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1431; s.pc = 3; return s.tmp_0;
  case 3:
    r0 = s.retval;
    s.p___20436 = (r0);
    s.tmp_0 = r0 = s.p___20436;
    s.tmp_2 = Math_FastRandom_randomRange__P2752_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_2.arg0 = r0;
    r0 = s.arg0.fields["minLifespan"];
    s.tmp_2.arg1 = r0;
    r0 = s.arg0.fields["maxLifespan"];
    s.tmp_2.arg2 = r0;
    s.callLocIdx = 1432; s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.tmp_1);
    s.tmp_0 = r0 = s.p___20436;
    s.tmp_4 = Math_FastRandom_randomRange__P2752_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_4.arg0 = r0;
    s.tmp_4.arg1 = 0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_4.arg2 = r0;
    s.callLocIdx = 1433; s.pc = 5; return s.tmp_4;
  case 5:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = s.arg0.fields["xRange"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 1);
    s.tmp_5 = r0;
    r0 = (s.tmp_3 - s.tmp_5);
    s.tmp_2 = r0;
    r0 = s.p___20436.fields["_x"];
    s.tmp_7 = r0;
    r0 = (s.tmp_2 << 8);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 + s.tmp_7);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["_x"] = (s.tmp_1);
    s.tmp_1 = if_height_1_mk(s);
    s.tmp_1.arg0 = s.arg1;
    if (!s.tmp_1.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_1.arg0, "height");
    } else {
      s.tmp_1.fn = s.tmp_1.arg0.vtable.iface["height"];
      if (s.tmp_1.fn == null) { s.retval = s.tmp_1.arg0.fields["height"]; }
      else if (!s.tmp_1.fn.isGetter) { s.retval = bind(s.tmp_1); }
     else { s.callLocIdx = 1436; s.pc = 6; return s.tmp_1; }
    }
  case 6:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = if_height_1_mk(s);
    s.tmp_3.arg0 = s.arg1;
    if (!s.tmp_3.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_3.arg0, "height");
    } else {
      s.tmp_3.fn = s.tmp_3.arg0.vtable.iface["height"];
      if (s.tmp_3.fn == null) { s.retval = s.tmp_3.arg0.fields["height"]; }
      else if (!s.tmp_3.fn.isGetter) { s.retval = bind(s.tmp_3); }
     else { s.callLocIdx = 1437; s.pc = 7; return s.tmp_3; }
    }
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    { step = 2; continue; }
  case 1:
    r0 = 0;
  case 2:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.tmp_5 = r0 = s.p___20436;
    s.tmp_9 = Math_FastRandom_randomRange__P2752_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_9.arg0 = r0;
    s.tmp_9.arg1 = 0;
    r0 = s.arg0.fields["yRange"];
    s.tmp_9.arg2 = r0;
    s.callLocIdx = 1435; s.pc = 8; return s.tmp_9;
  case 8:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = (s.tmp_8 - s.tmp_4);
    s.tmp_7 = r0;
    r0 = s.p___20436.fields["_y"];
    s.tmp_10 = r0;
    r0 = (s.tmp_7 << 8);
    s.tmp_11 = r0;
    r0 = (s.tmp_11 + s.tmp_10);
    s.tmp_6 = r0;
    r0 = (s.tmp_5).fields["_y"] = (s.tmp_6);
    r0 = s.p___20436;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_createParticle__P2892.info = {"start":4334,"length":426,"line":148,"column":8,"endLine":156,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_AreaFactory_createParticle__P2892_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_createParticle__P2892, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  p___20436: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_SprayFactory_createParticle__P2882(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.p___20484 = undefined;
    s.angle___20488 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2880_VT)) failedCast(r0);
    s.tmp_0 = particles_ParticleFactory_createParticle__P2878_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 1420; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.p___20484 = (r0);
    r0 = s.arg0.fields["minAngle"];
    s.tmp_1 = r0;
    s.tmp_3 = Math_FastRandom_randomRange__P2752_mk(s);
    s.tmp_3.arg0 = globals.galois___4894;
    s.tmp_3.arg1 = 0;
    r0 = s.arg0.fields["spread"];
    s.tmp_3.arg2 = r0;
    s.callLocIdx = 1421; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 % 100);
    s.angle___20488 = (r0);
    s.tmp_0 = r0 = s.p___20484;
    r0 = pxsim_Array__getAt(globals.cachedSin___4889, s.angle___20488);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_3 = r0;
    r0 = pxsim.Math_.imul(s.tmp_2, s.tmp_3);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vx"] = (s.tmp_1);
    s.tmp_0 = r0 = s.p___20484;
    r0 = pxsim_Array__getAt(globals.cachedCos___4890, s.angle___20488);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["speed"];
    s.tmp_3 = r0;
    r0 = pxsim.Math_.imul(s.tmp_2, s.tmp_3);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 8);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["vy"] = (s.tmp_1);
    r0 = s.p___20484;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_createParticle__P2882.info = {"start":2851,"length":333,"line":105,"column":8,"endLine":113,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"createParticle","argumentNames":["this","anchor"]}

function particles_SprayFactory_createParticle__P2882_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_createParticle__P2882, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  p___20484: undefined,
  angle___20488: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function effects_ScreenEffect_startScreenEffect__P2957(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C2955_VT)) failedCast(r0);
    r0 = s.arg0.fields["sourceFactory"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 13; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["source"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBool(s.tmp_3);
    if (r0) { step = 3; continue; }
    r0 = s.tmp_3;
    { step = 4; continue; }
  case 3:
    s.tmp_4 = particles_ParticleSource_enabled__P2852_mk(s);
    r0 = s.arg0.fields["source"];
    s.tmp_4.arg0 = r0;
    s.callLocIdx = 1462; s.pc = 14; return s.tmp_4;
  case 14:
    r0 = s.retval;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 7; continue; }
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 5; continue; }
    r0 = s.arg0.fields["source"];
    s.tmp_6 = r0;
    r0 = (s.tmp_6).fields["lifespan"] = (s.arg1);
  case 5:
  case 6:
    { step = 13; continue; }
  case 7:
  case 8:
    s.tmp_0 = effects_ScreenEffect_endScreenEffect__P2958_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 1463; s.pc = 15; return s.tmp_0;
  case 15:
    r0 = s.retval;
    r0 = pxsim_pxtcore_mkClassInstance(effects_SceneAnchor__C4922_VT);
    s.tmp_0 = r0;
    s.tmp_1 = effects_SceneAnchor_constructor__P4927_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1464; s.pc = 16; return s.tmp_1;
  case 16:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.arg2);
    if (!r0) { step = 9; continue; }
    r0 = s.arg2;
    { step = 10; continue; }
  case 9:
    r0 = s.arg0.fields["sceneDefaultRate"];
  case 10:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.tmp_3 = r0 = s.arg0;
    s.tmp_5 = if_sourceFactory_3_mk(s);
    s.tmp_5.arg0 = s.arg0;
    s.tmp_5.arg1 = s.tmp_0;
    s.tmp_5.arg2 = s.tmp_2;
    if (!s.tmp_5.arg0.vtable.iface) {
      setupLambda(s.tmp_5, pxsim_pxtrt.mapGetByString(s.tmp_5.arg0, "sourceFactory"), 3);
      s.callLocIdx = 1465; s.pc = 17; return s.tmp_5;
    } else {
      s.tmp_5.fn = s.tmp_5.arg0.vtable.iface["sourceFactory"];
      if (s.tmp_5.fn == null) { setupLambda(s.tmp_5, s.tmp_5.arg0.fields["sourceFactory"], 3); s.callLocIdx = 1465; s.pc = 17; return s.tmp_5; }
      else if (s.tmp_5.fn.isGetter) { s.tmp_5.stage2Call = true; s.callLocIdx = 1465; s.pc = 17; return s.tmp_5;; }
     else { s.callLocIdx = 1465; s.pc = 17; return s.tmp_5; }
    }
  case 17:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["source"] = (s.tmp_4);
    r0 = s.arg0.fields["source"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["priority"] = (10);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 11; continue; }
    r0 = s.arg0.fields["source"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0).fields["lifespan"] = (s.arg1);
  case 11:
  case 12:
  case 13:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_startScreenEffect__P2957.info = {"start":3680,"length":601,"line":97,"column":8,"endLine":112,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"startScreenEffect","argumentNames":["this","duration","particlesPerSecond"]}

function effects_ScreenEffect_startScreenEffect__P2957_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_startScreenEffect__P2957, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_SceneAnchor_constructor__P4927(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4922_VT)) failedCast(r0);
    s.tmp_0 = r0 = s.arg0;
    s.tmp_2 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1458; s.pc = 1; return s.tmp_2;
  case 1:
    r0 = s.retval;
    r0 = r0.fields["camera"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["camera"] = (s.tmp_1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_SceneAnchor_constructor__P4927.info = {"start":2296,"length":79,"line":55,"column":8,"endLine":57,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"inline","argumentNames":["this"]}

function effects_SceneAnchor_constructor__P4927_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_constructor__P4927, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }





function effects_ScreenEffect_endScreenEffect__P2958(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ScreenEffect__C2955_VT)) failedCast(r0);
    r0 = s.arg0.fields["source"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_1 = particles_ParticleSource_destroy__P2854_mk(s);
    r0 = s.arg0.fields["source"];
    s.tmp_1.arg0 = r0;
    s.callLocIdx = 1466; s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    r0 = (s.arg0).fields["source"] = (undefined);
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ScreenEffect_endScreenEffect__P2958.info = {"start":4677,"length":160,"line":122,"column":8,"endLine":127,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"endScreenEffect","argumentNames":["this"]}

function effects_ScreenEffect_endScreenEffect__P2958_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ScreenEffect_endScreenEffect__P2958, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  arg0: undefined,
} }





function effects_ImageEffect_startScreenEffect__P2982(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.wasRunning___20576 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_ImageEffect__C2978_VT)) failedCast(r0);
    s.tmp_4 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1479; s.pc = 8; return s.tmp_4;
  case 8:
    r0 = s.retval;
    r0 = r0.fields["background"];
    s.tmp_3 = r0;
    r0 = s.tmp_3.fields["_image"];
    s.tmp_8 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_8);
    s.tmp_7 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_7);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    s.tmp_5 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_5);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 7; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["times"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 != undefined);
    s.wasRunning___20576 = (r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    if (!r0) { step = 3; continue; }
    r0 = s.arg1;
    { step = 4; continue; }
  case 3:
    r0 = 15;
  case 4:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    r0 = (s.arg0).fields["times"] = (s.tmp_0);
    r0 = pxsim_numops_toBoolDecr(s.wasRunning___20576);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = pxsim_pxtcore_mkAction(2, effects_ImageEffect_startScreenEffect_inline__P20589);
    s.tmp_2 = r0;
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 0, s.arg0);
    r0 = pxsim_pxtrt_stclo(s.tmp_2, 1, s.arg2);
    r0 = pxsim.control.runInParallel(s.tmp_2);
  case 5:
  case 6:
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_startScreenEffect__P2982.info = {"start":1457,"length":637,"line":41,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/effects.ts","functionName":"startScreenEffect","argumentNames":["this","times","delay"]}

function effects_ImageEffect_startScreenEffect__P2982_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_startScreenEffect__P2982, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  wasRunning___20576: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function effects_ImageEffect_startScreenEffect_inline__P20589(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

  case 1:
    r0 = s.caps[0].fields["times"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 4; continue; }
    s.tmp_2 = effects_ImageEffect_change__P2981_mk(s);
    s.tmp_2.arg0 = s.caps[0];
    s.tmp_3 = scene_backgroundImage__P2621_mk(s);
    s.callLocIdx = 1481; s.pc = 6; return s.tmp_3;
  case 6:
    r0 = s.retval;
    s.tmp_2.arg1 = r0;
    s.callLocIdx = 1482; s.pc = 5; return s.tmp_2;
  case 5:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.caps[1]);
    if (!r0) { step = 2; continue; }
    r0 = s.caps[1];
    { step = 3; continue; }
  case 2:
    r0 = s.caps[0].fields["preferredDelay"];
  case 3:
    // jmp value (already in r0)
    s.tmp_0 = r0;
    s.tmp_1 = pause__P413_mk(s);
    s.tmp_1.arg0 = s.tmp_0;
    s.callLocIdx = 1483; s.pc = 7; return s.tmp_1;
  case 7:
    r0 = s.retval;
    s.tmp_0 = r0 = s.caps[0];
    r0 = s.tmp_0.fields["times"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0).fields["times"] = (s.tmp_1);
    { step = 1; continue; }
  case 4:
    r0 = (s.caps[0]).fields["times"] = (undefined);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
effects_ImageEffect_startScreenEffect_inline__P20589.info = {"start":1764,"length":304,"line":47,"column":38,"endLine":54,"endColumn":17,"fileName":"pxt_modules/game/effects.ts","functionName":"inline","argumentNames":[]}

function effects_ImageEffect_startScreenEffect_inline__P20589_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_ImageEffect_startScreenEffect_inline__P20589, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
} }





function scene_backgroundImage__P2621(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scene___20608 = undefined;
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 1053; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    s.scene___20608 = (r0);
    s.tmp_0 = scene_Background_image__P2414_mk(s);
    r0 = s.scene___20608.fields["background"];
    s.tmp_0.arg0 = r0;
    s.callLocIdx = 1054; s.pc = 2; return s.tmp_0;
  case 2:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
scene_backgroundImage__P2621.info = {"start":2297,"length":130,"line":90,"column":4,"endLine":93,"endColumn":5,"fileName":"pxt_modules/game/scenes.ts","functionName":"backgroundImage","argumentNames":[]}

function scene_backgroundImage__P2621_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_backgroundImage__P2621, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  scene___20608: undefined,
} }





function scene_Background_hasBackgroundImage__P2416(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Background__C2408_VT)) failedCast(r0);
    r0 = s.arg0.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
scene_Background_hasBackgroundImage__P2416.info = {"start":1081,"length":75,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/background.ts","functionName":"hasBackgroundImage","argumentNames":["this"]}

function scene_Background_hasBackgroundImage__P2416_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Background_hasBackgroundImage__P2416, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function scene_Scene_data__P2603(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Scene__C2579_VT)) failedCast(r0);
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Scene_data__P2603.info = {"start":6765,"length":53,"line":184,"column":8,"endLine":186,"endColumn":9,"fileName":"pxt_modules/game/scene.ts","functionName":"data","argumentNames":["this"]}
scene_Scene_data__P2603.isGetter = true;

function scene_Scene_data__P2603_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Scene_data__P2603, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function info_PlayerInfo_id__P2383(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, info_PlayerInfo__C2369_VT)) failedCast(r0);
    r0 = s.arg0.fields["_player"];
    return leave(s, r0)
  default: oops()
} } }
info_PlayerInfo_id__P2383.info = {"start":17450,"length":57,"line":572,"column":8,"endLine":574,"endColumn":9,"fileName":"pxt_modules/game/info.ts","functionName":"id","argumentNames":["this"]}

function info_PlayerInfo_id__P2383_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: info_PlayerInfo_id__P2383, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function music_Melody_toString__P1621(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, music_Melody__C1612_VT)) failedCast(r0);
    r0 = s.arg0.fields["_text"];
    return leave(s, r0)
  default: oops()
} } }
music_Melody_toString__P1621.info = {"start":10021,"length":53,"line":310,"column":8,"endLine":312,"endColumn":9,"fileName":"pxt_modules/mixer/melody.ts","functionName":"toString","argumentNames":["this"]}

function music_Melody_toString__P1621_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: music_Melody_toString__P1621, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function Sprite_toString__P2221(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = pxsim_String_.mkEmpty();
    s.tmp_9 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_11 = r0;
    if ((s.tmp_11) && (s.tmp_11).vtable) {
    setupResume(s, 1);
    pxsim_String__stringConv(s.tmp_11);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_11) + ""; }
  case 1:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = pxsim_String__concat(s.tmp_9, s.tmp_10);
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_8, "(");
    s.tmp_7 = r0;
    s.tmp_14 = Sprite_x__P2141_mk(s);
    s.tmp_14.arg0 = s.arg0;
    s.callLocIdx = 511; s.pc = 2; return s.tmp_14;
  case 2:
    r0 = s.retval;
    s.tmp_13 = r0;
    if ((s.tmp_13) && (s.tmp_13).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_13);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_13) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_12 = r0;
    r0 = pxsim_String__concat(s.tmp_7, s.tmp_12);
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_6, ",");
    s.tmp_5 = r0;
    s.tmp_17 = Sprite_y__P2143_mk(s);
    s.tmp_17.arg0 = s.arg0;
    s.callLocIdx = 512; s.pc = 4; return s.tmp_17;
  case 4:
    r0 = s.retval;
    s.tmp_16 = r0;
    if ((s.tmp_16) && (s.tmp_16).vtable) {
    setupResume(s, 5);
    pxsim_String__stringConv(s.tmp_16);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_16) + ""; }
  case 5:
    r0 = s.retval;
    s.tmp_15 = r0;
    r0 = pxsim_String__concat(s.tmp_5, s.tmp_15);
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_4, ")->(");
    s.tmp_3 = r0;
    s.tmp_20 = Sprite_vx__P2145_mk(s);
    s.tmp_20.arg0 = s.arg0;
    s.callLocIdx = 513; s.pc = 6; return s.tmp_20;
  case 6:
    r0 = s.retval;
    s.tmp_19 = r0;
    if ((s.tmp_19) && (s.tmp_19).vtable) {
    setupResume(s, 7);
    pxsim_String__stringConv(s.tmp_19);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_19) + ""; }
  case 7:
    r0 = s.retval;
    s.tmp_18 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_18);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_23 = Sprite_vy__P2147_mk(s);
    s.tmp_23.arg0 = s.arg0;
    s.callLocIdx = 514; s.pc = 8; return s.tmp_23;
  case 8:
    r0 = s.retval;
    s.tmp_22 = r0;
    if ((s.tmp_22) && (s.tmp_22).vtable) {
    setupResume(s, 9);
    pxsim_String__stringConv(s.tmp_22);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_22) + ""; }
  case 9:
    r0 = s.retval;
    s.tmp_21 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_21);
    s.tmp_0 = r0;
    r0 = pxsim_String__concat(s.tmp_0, ")");
    return leave(s, r0)
  default: oops()
} } }
Sprite_toString__P2221.info = {"start":35842,"length":93,"line":1116,"column":4,"endLine":1118,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"toString","argumentNames":["this"]}

function Sprite_toString__P2221_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_toString__P2221, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  tmp_18: undefined,
  tmp_19: undefined,
  tmp_20: undefined,
  tmp_21: undefined,
  tmp_22: undefined,
  tmp_23: undefined,
  arg0: undefined,
} }





function Sprite___update__P2203(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.bounce___20751 = undefined;
    s.tm___20756 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 !== undefined);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    s.tmp_2 = r0 = s.arg0;
    r0 = s.tmp_2.fields["lifespan"];
    s.tmp_4 = r0;
    r0 = (s.arg2 * 1000);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 - s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_2).fields["lifespan"] = (s.tmp_3);
    r0 = s.arg0.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 <= 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = (s.arg0).fields["lifespan"] = (undefined);
    s.tmp_0 = Sprite__destroyCore__P2216_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.callLocIdx = 424; s.pc = 33; return s.tmp_0;
  case 33:
    r0 = s.retval;
  case 1:
  case 2:
  case 3:
  case 4:
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 4);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_2 = Sprite_isOutOfScreen__P2201_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    s.callLocIdx = 425; s.pc = 34; return s.tmp_2;
  case 34:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.tmp_4 = Sprite_destroy__P2215_mk(s);
    s.tmp_4.arg0 = s.arg0;
    s.tmp_4.arg1 = undefined;
    s.tmp_4.arg2 = undefined;
    s.callLocIdx = 426; s.pc = 35; return s.tmp_4;
  case 35:
    r0 = s.retval;
  case 7:
  case 8:
    r0 = s.arg0.fields["flags"];
    s.tmp_0 = r0;
    r0 = (s.tmp_0 & 32);
    s.bounce___20751 = (r0);
    s.tmp_0 = game_currentScene__P2693_mk(s);
    s.callLocIdx = 427; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
    r0 = r0.fields["tileMap"];
    s.tm___20756 = (r0);
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 8);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_0;
    { step = 12; continue; }
  case 9:
    s.tmp_2 = r0 = s.bounce___20751;
    r0 = pxsim_numops_toBool(s.tmp_2);
    if (r0) { step = 10; continue; }
    r0 = s.tmp_2;
    { step = 11; continue; }
  case 10:
    r0 = pxsim_numops_toBoolDecr(s.tm___20756);
    s.tmp_3 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_3);
  case 11:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 12:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_5);
    if (!r0) { step = 29; continue; }
    s.tmp_8 = Sprite_left__P2186_mk(s);
    s.tmp_8.arg0 = s.arg0;
    s.callLocIdx = 428; s.pc = 37; return s.tmp_8;
  case 37:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = s.arg1.fields["_offsetX"];
    s.tmp_9 = r0;
    r0 = (s.tmp_7 < s.tmp_9);
    s.tmp_6 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_6);
    if (!r0) { step = 15; continue; }
    s.tmp_10 = Sprite_left__P2187_mk(s);
    s.tmp_10.arg0 = s.arg0;
    r0 = s.arg1.fields["_offsetX"];
    s.tmp_10.arg1 = r0;
    s.callLocIdx = 431; s.pc = 38; return s.tmp_10;
  case 38:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.bounce___20751);
    if (!r0) { step = 13; continue; }
    s.tmp_0 = Sprite_vx__P2146_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vx__P2145_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 432; s.pc = 40; return s.tmp_2;
  case 40:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 433; s.pc = 39; return s.tmp_0;
  case 39:
    r0 = s.retval;
  case 13:
  case 14:
    { step = 20; continue; }
  case 15:
    s.tmp_2 = Sprite_right__P2188_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 434; s.pc = 41; return s.tmp_2;
  case 41:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg1.fields["_offsetX"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 18; continue; }
    s.tmp_6 = Sprite_right__P2189_mk(s);
    s.tmp_6.arg0 = s.arg0;
    r0 = s.arg1.fields["_offsetX"];
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_6.arg1 = r0;
    s.callLocIdx = 437; s.pc = 42; return s.tmp_6;
  case 42:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.bounce___20751);
    if (!r0) { step = 16; continue; }
    s.tmp_0 = Sprite_vx__P2146_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vx__P2145_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 438; s.pc = 44; return s.tmp_2;
  case 44:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 439; s.pc = 43; return s.tmp_0;
  case 43:
    r0 = s.retval;
  case 16:
  case 17:
  case 18:
  case 19:
  case 20:
    s.tmp_2 = Sprite_top__P2190_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 440; s.pc = 45; return s.tmp_2;
  case 45:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg1.fields["_offsetY"];
    s.tmp_3 = r0;
    r0 = (s.tmp_1 < s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 23; continue; }
    s.tmp_4 = Sprite_top__P2191_mk(s);
    s.tmp_4.arg0 = s.arg0;
    r0 = s.arg1.fields["_offsetY"];
    s.tmp_4.arg1 = r0;
    s.callLocIdx = 443; s.pc = 46; return s.tmp_4;
  case 46:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.bounce___20751);
    if (!r0) { step = 21; continue; }
    s.tmp_0 = Sprite_vy__P2148_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vy__P2147_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 444; s.pc = 48; return s.tmp_2;
  case 48:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 445; s.pc = 47; return s.tmp_0;
  case 47:
    r0 = s.retval;
  case 21:
  case 22:
    { step = 28; continue; }
  case 23:
    s.tmp_2 = Sprite_bottom__P2192_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 446; s.pc = 49; return s.tmp_2;
  case 49:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = s.arg1.fields["_offsetY"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.tmp_3 = r0;
    r0 = (s.tmp_1 > s.tmp_3);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 26; continue; }
    s.tmp_6 = Sprite_bottom__P2193_mk(s);
    s.tmp_6.arg0 = s.arg0;
    r0 = s.arg1.fields["_offsetY"];
    s.tmp_7 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_8 = r0;
    r0 = (s.tmp_7 + s.tmp_8);
    s.tmp_6.arg1 = r0;
    s.callLocIdx = 449; s.pc = 50; return s.tmp_6;
  case 50:
    r0 = s.retval;
    r0 = pxsim_numops_toBoolDecr(s.bounce___20751);
    if (!r0) { step = 24; continue; }
    s.tmp_0 = Sprite_vy__P2148_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_2 = Sprite_vy__P2147_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 450; s.pc = 52; return s.tmp_2;
  case 52:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (0 - s.tmp_1);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 451; s.pc = 51; return s.tmp_0;
  case 51:
    r0 = s.retval;
  case 24:
  case 25:
  case 26:
  case 27:
  case 28:
  case 29:
  case 30:
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 31; continue; }
    s.tmp_1 = sprites_BaseSpriteSayRenderer__C2048_v1_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_1.arg0 = r0;
    s.tmp_1.arg1 = s.arg2;
    s.tmp_1.arg2 = s.arg1;
    s.tmp_1.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSpriteSayRenderer__C2048_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.update;
    s.pc = 53; return s.tmp_1;
  case 53:
    r0 = s.retval;
  case 31:
  case 32:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___update__P2203.info = {"start":19765,"length":1363,"line":661,"column":4,"endLine":697,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function Sprite___update__P2203_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___update__P2203, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  bounce___20751: undefined,
  tm___20756: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_isOutOfScreen__P2201(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___20851 = undefined;
    s.oy___20859 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 0;
    { step = 2; continue; }
  case 1:
    r0 = s.arg1.fields["drawOffsetX"];
  case 2:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.ox___20851 = (s.tmp_2);
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetY"];
  case 4:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___20859 = (s.tmp_2);
    s.tmp_3 = Sprite_right__P2188_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 415; s.pc = 11; return s.tmp_3;
  case 11:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 - s.ox___20851);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 < 0);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_6 = Sprite_bottom__P2192_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 416; s.pc = 12; return s.tmp_6;
  case 12:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.oy___20859);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 < 0);
  case 6:
    // jmp value (already in r0)
    s.tmp_7 = r0;
    r0 = pxsim_numops_toBool(s.tmp_7);
    if (!r0) { step = 7; continue; }
    r0 = s.tmp_7;
    { step = 8; continue; }
  case 7:
    s.tmp_10 = Sprite_left__P2186_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 417; s.pc = 13; return s.tmp_10;
  case 13:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 - s.ox___20851);
    s.tmp_8 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_11 = r0;
    r0 = (s.tmp_8 > s.tmp_11);
  case 8:
    // jmp value (already in r0)
    s.tmp_12 = r0;
    r0 = pxsim_numops_toBool(s.tmp_12);
    if (!r0) { step = 9; continue; }
    r0 = s.tmp_12;
    { step = 10; continue; }
  case 9:
    s.tmp_15 = Sprite_top__P2190_mk(s);
    s.tmp_15.arg0 = s.arg0;
    s.callLocIdx = 418; s.pc = 14; return s.tmp_15;
  case 14:
    r0 = s.retval;
    s.tmp_14 = r0;
    r0 = (s.tmp_14 - s.oy___20859);
    s.tmp_13 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_16 = r0;
    r0 = (s.tmp_13 > s.tmp_16);
  case 10:
    // jmp value (already in r0)
    s.tmp_17 = r0;
    r0 = s.tmp_17;
    return leave(s, r0)
  default: oops()
} } }
Sprite_isOutOfScreen__P2201.info = {"start":18933,"length":358,"line":640,"column":4,"endLine":644,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"isOutOfScreen","argumentNames":["this","camera"]}

function Sprite_isOutOfScreen__P2201_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_isOutOfScreen__P2201, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  tmp_13: undefined,
  tmp_14: undefined,
  tmp_15: undefined,
  tmp_16: undefined,
  tmp_17: undefined,
  ox___20851: undefined,
  oy___20859: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_bottom__P2193(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Sprite_top__P2191_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_height__P2185_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 408; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 409; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_bottom__P2193.info = {"start":13307,"length":73,"line":473,"column":4,"endLine":475,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"bottom","argumentNames":["this","value"]}

function Sprite_bottom__P2193_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_bottom__P2193, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_right__P2189(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Sprite_left__P2187_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_1 = r0 = s.arg1;
    s.tmp_3 = Sprite_width__P2184_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 400; s.pc = 2; return s.tmp_3;
  case 2:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 - s.tmp_2);
    s.tmp_0.arg1 = r0;
    s.callLocIdx = 401; s.pc = 1; return s.tmp_0;
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_right__P2189.info = {"start":12470,"length":71,"line":443,"column":4,"endLine":445,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"right","argumentNames":["this","value"]}

function Sprite_right__P2189_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_right__P2189, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSpriteSayRenderer_update__P2051(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2048_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_update__P2051.info = {"start":250,"length":68,"line":9,"column":8,"endLine":11,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"update","argumentNames":["this","dt","camera","owner"]}

function sprites_BaseSpriteSayRenderer_update__P2051_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_update__P2051, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite_data__P2164(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = (s.arg0).fields["_data"] = (s.arg1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_data__P2164.info = {"start":6536,"length":56,"line":241,"column":4,"endLine":243,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this","value"]}

function Sprite_data__P2164_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P2164, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_data__P2163(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["_data"];
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_3 = r0 = s.arg0;
    r0 = pxsim_pxtrt.mkMap();
    s.tmp_4 = r0;
    r0 = (s.tmp_3).fields["_data"] = (s.tmp_4);
  case 1:
  case 2:
    r0 = s.arg0.fields["_data"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
Sprite_data__P2163.info = {"start":6438,"length":92,"line":236,"column":4,"endLine":239,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"data","argumentNames":["this"]}
Sprite_data__P2163.isGetter = true;

function Sprite_data__P2163_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_data__P2163, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }





function sprites_BaseSprite___update__P1896(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1888_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___update__P1896.info = {"start":1027,"length":46,"line":45,"column":8,"endLine":45,"endColumn":54,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__update","argumentNames":["this","camera","dt"]}

function sprites_BaseSprite___update__P1896_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___update__P1896, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function sprites_BaseSprite___draw__P1894(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1888_VT)) failedCast(r0);
    s.tmp_1 = sprites_BaseSprite__C1888_v0_1_mk(s);
    s.tmp_1.arg0 = s.arg0;
    if (!checkSubtype(s.tmp_1.arg0, sprites_BaseSprite__C1888_VT)) failedCast(s.tmp_1.arg0);
    s.tmp_1.fn = s.tmp_1.arg0.vtable.methods.__visible;
    s.pc = 3; return s.tmp_1;
  case 3:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    s.tmp_2 = sprites_BaseSprite__C1888_v2_2_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.tmp_2.arg1 = s.arg1;
    if (!checkSubtype(s.tmp_2.arg0, sprites_BaseSprite__C1888_VT)) failedCast(s.tmp_2.arg0);
    s.tmp_2.fn = s.tmp_2.arg0.vtable.methods.__drawCore;
    s.pc = 4; return s.tmp_2;
  case 4:
    r0 = s.retval;
  case 1:
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___draw__P1894.info = {"start":840,"length":131,"line":37,"column":8,"endLine":41,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__draw","argumentNames":["this","camera"]}

function sprites_BaseSprite___draw__P1894_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___draw__P1894, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___drawCore__P1895(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1888_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___drawCore__P1895.info = {"start":981,"length":36,"line":43,"column":8,"endLine":43,"endColumn":44,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function sprites_BaseSprite___drawCore__P1895_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___drawCore__P1895, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSprite___visible__P1891(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSprite__C1888_VT)) failedCast(r0);
    r0 = true;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSprite___visible__P1891.info = {"start":524,"length":57,"line":22,"column":8,"endLine":24,"endColumn":9,"fileName":"pxt_modules/game/basesprite.ts","functionName":"__visible","argumentNames":["this"]}

function sprites_BaseSprite___visible__P1891_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSprite___visible__P1891, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function controller_AnyButton_isPressed__P4349(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ctrl___20916 = undefined;
    s.b___20920 = undefined;
    s.unnamed62___U2 = undefined;
    s.unnamed63___U3 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_AnyButton__C4341_VT)) failedCast(r0);
    s.tmp_0 = controller__player1__P1922_mk(s);
    s.callLocIdx = 226; s.pc = 6; return s.tmp_0;
  case 6:
    r0 = s.retval;
    s.ctrl___20916 = (r0);
    s.b___20920 = (undefined);
    r0 = s.ctrl___20916.fields["buttons"];
    s.unnamed62___U2 = (r0);
    s.unnamed63___U3 = (0);
  case 1:
    s.tmp_0 = r0 = s.unnamed63___U3;
    r0 = pxsim_Array__length(s.unnamed62___U2);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 < s.tmp_1);
    if (!r0) { step = 4; continue; }
    r0 = pxsim_Array__getAt(s.unnamed62___U2, s.unnamed63___U3);
    s.b___20920 = (r0);
    s.tmp_3 = controller_Button__C1979_v0_1_mk(s);
    s.tmp_3.arg0 = s.b___20920;
    if (!checkSubtype(s.tmp_3.arg0, controller_Button__C1979_VT)) failedCast(s.tmp_3.arg0);
    s.tmp_3.fn = s.tmp_3.arg0.vtable.methods.isPressed;
    s.pc = 7; return s.tmp_3;
  case 7:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = true;
    { step = 5; continue; }
  case 2:
  case 3:
    r0 = (s.unnamed63___U3 + 1);
    s.unnamed63___U3 = (r0);
    { step = 1; continue; }
  case 4:
    s.unnamed62___U2 = (undefined);
    r0 = false;
  case 5:
    return leave(s, r0)
  default: oops()
} } }
controller_AnyButton_isPressed__P4349.info = {"start":13715,"length":202,"line":416,"column":8,"endLine":423,"endColumn":9,"fileName":"pxt_modules/game/controller.ts","functionName":"isPressed","argumentNames":["this"]}

function controller_AnyButton_isPressed__P4349_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_AnyButton_isPressed__P4349, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  ctrl___20916: undefined,
  b___20920: undefined,
  unnamed62___U2: undefined,
  unnamed63___U3: undefined,
  arg0: undefined,
} }





function controller_Button_toString__P1984(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, controller_Button__C1979_VT)) failedCast(r0);
    r0 = s.arg0.fields["_pressed"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = "down";
    { step = 2; continue; }
  case 1:
    r0 = "up";
  case 2:
    // jmp value (already in r0)
    s.tmp_1 = r0;
    r0 = s.arg0.fields["id"];
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 3);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 3:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat("btn ", s.tmp_4);
    s.tmp_3 = r0;
    r0 = pxsim_String__concat(s.tmp_3, " ");
    s.tmp_2 = r0;
    if ((s.tmp_1) && (s.tmp_1).vtable) {
    setupResume(s, 4);
    pxsim_String__stringConv(s.tmp_1);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_1) + ""; }
  case 4:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = pxsim_String__concat(s.tmp_2, s.tmp_6);
    return leave(s, r0)
  default: oops()
} } }
controller_Button_toString__P1984.info = {"start":1894,"length":100,"line":73,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/controllerbutton.ts","functionName":"toString","argumentNames":["this"]}

function controller_Button_toString__P1984_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: controller_Button_toString__P1984, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
} }





function sprites_BaseSpriteSayRenderer_constructor__P2049(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2048_VT)) failedCast(r0);
    r0 = (s.arg0).fields["text"] = (s.arg1);
    r0 = (s.arg0).fields["fgColor"] = (s.arg2);
    r0 = (s.arg0).fields["bgColor"] = (s.arg3);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_constructor__P2049.info = {"start":69,"length":92,"line":2,"column":8,"endLine":3,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"inline","argumentNames":["this","text","fgColor","bgColor"]}

function sprites_BaseSpriteSayRenderer_constructor__P2049_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_constructor__P2049, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function effects_SceneAnchor_height__P4926(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4922_VT)) failedCast(r0);
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    return leaveAccessor(s, r0)
  default: oops()
} } }
effects_SceneAnchor_height__P4926.info = {"start":2634,"length":58,"line":71,"column":8,"endLine":73,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"height","argumentNames":["this"]}
effects_SceneAnchor_height__P4926.isGetter = true;

function effects_SceneAnchor_height__P4926_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_height__P4926, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function effects_SceneAnchor_width__P4925(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4922_VT)) failedCast(r0);
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    return leaveAccessor(s, r0)
  default: oops()
} } }
effects_SceneAnchor_width__P4925.info = {"start":2568,"length":56,"line":67,"column":8,"endLine":69,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"width","argumentNames":["this"]}
effects_SceneAnchor_width__P4925.isGetter = true;

function effects_SceneAnchor_width__P4925_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_width__P4925, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function effects_SceneAnchor_y__P4924(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4922_VT)) failedCast(r0);
    r0 = s.arg0.fields["camera"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["_offsetY"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(globals.screen___1829);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
effects_SceneAnchor_y__P4924.info = {"start":2476,"length":82,"line":63,"column":8,"endLine":65,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"y","argumentNames":["this"]}
effects_SceneAnchor_y__P4924.isGetter = true;

function effects_SceneAnchor_y__P4924_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_y__P4924, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function effects_SceneAnchor_x__P4923(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, effects_SceneAnchor__C4922_VT)) failedCast(r0);
    r0 = s.arg0.fields["camera"];
    s.tmp_1 = r0;
    r0 = s.tmp_1.fields["_offsetX"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(globals.screen___1829);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 >> 1);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
effects_SceneAnchor_x__P4923.info = {"start":2385,"length":81,"line":59,"column":8,"endLine":61,"endColumn":9,"fileName":"pxt_modules/game/particleeffects.ts","functionName":"x","argumentNames":["this"]}
effects_SceneAnchor_x__P4923.isGetter = true;

function effects_SceneAnchor_x__P4923_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: effects_SceneAnchor_x__P4923, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_width__P2295(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2285_VT)) failedCast(r0);
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_width__P2295.info = {"start":1088,"length":68,"line":48,"column":8,"endLine":50,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"width","argumentNames":["this"]}
sprites_StaticObstacle_width__P2295.isGetter = true;

function sprites_StaticObstacle_width__P2295_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_width__P2295, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_height__P2294(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2285_VT)) failedCast(r0);
    r0 = s.arg0.fields["image"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_0);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_height__P2294.info = {"start":1008,"length":70,"line":44,"column":8,"endLine":46,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"height","argumentNames":["this"]}
sprites_StaticObstacle_height__P2294.isGetter = true;

function sprites_StaticObstacle_height__P2294_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_height__P2294, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_y__P2293(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2285_VT)) failedCast(r0);
    r0 = s.arg0.fields["top"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_y__P2293.info = {"start":921,"length":77,"line":40,"column":8,"endLine":42,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"y","argumentNames":["this"]}
sprites_StaticObstacle_y__P2293.isGetter = true;

function sprites_StaticObstacle_y__P2293_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_y__P2293, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function sprites_StaticObstacle_x__P2292(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_StaticObstacle__C2285_VT)) failedCast(r0);
    r0 = s.arg0.fields["left"];
    s.tmp_0 = r0;
    r0 = s.arg0.fields["image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 1);
    s.tmp_1 = r0;
    r0 = (s.tmp_0 + s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
sprites_StaticObstacle_x__P2292.info = {"start":834,"length":77,"line":36,"column":8,"endLine":38,"endColumn":9,"fileName":"pxt_modules/game/obstacle.ts","functionName":"x","argumentNames":["this"]}
sprites_StaticObstacle_x__P2292.isGetter = true;

function sprites_StaticObstacle_x__P2292_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_StaticObstacle_x__P2292, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_top__P2440(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    r0 = s.arg0.fields["_row"];
    s.tmp_0 = r0;
    s.tmp_3 = tiles_Location_tileMap__P2434_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 923; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.tmp_2.fields["_scale"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 << s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_top__P2440.info = {"start":1791,"length":83,"line":68,"column":8,"endLine":70,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"top","argumentNames":["this"]}
tiles_Location_top__P2440.isGetter = true;

function tiles_Location_top__P2440_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_top__P2440, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_left__P2439(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    r0 = s.arg0.fields["_col"];
    s.tmp_0 = r0;
    s.tmp_3 = tiles_Location_tileMap__P2434_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 921; s.pc = 1; return s.tmp_3;
  case 1:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = s.tmp_2.fields["_scale"];
    s.tmp_1 = r0;
    r0 = (s.tmp_0 << s.tmp_1);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_left__P2439.info = {"start":1579,"length":84,"line":61,"column":8,"endLine":63,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"left","argumentNames":["this"]}
tiles_Location_left__P2439.isGetter = true;

function tiles_Location_left__P2439_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_left__P2439, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  arg0: undefined,
} }





function tiles_Location_y__P2438(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___21000 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    s.tmp_1 = tiles_Location_tileMap__P2434_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 919; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["_scale"];
    s.scale___21000 = (r0);
    r0 = s.arg0.fields["_row"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___21000);
    s.tmp_0 = r0;
    r0 = (s.scale___21000 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_y__P2438.info = {"start":1315,"length":135,"line":53,"column":8,"endLine":56,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"y","argumentNames":["this"]}
tiles_Location_y__P2438.isGetter = true;

function tiles_Location_y__P2438_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_y__P2438, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___21000: undefined,
  arg0: undefined,
} }





function tiles_Location_x__P2437(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.scale___21016 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, tiles_Location__C2432_VT)) failedCast(r0);
    s.tmp_1 = tiles_Location_tileMap__P2434_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 917; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = s.tmp_0.fields["_scale"];
    s.scale___21016 = (r0);
    r0 = s.arg0.fields["_col"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 << s.scale___21016);
    s.tmp_0 = r0;
    r0 = (s.scale___21016 - 1);
    s.tmp_3 = r0;
    r0 = (1 << s.tmp_3);
    s.tmp_2 = r0;
    r0 = (s.tmp_0 + s.tmp_2);
    return leaveAccessor(s, r0)
  default: oops()
} } }
tiles_Location_x__P2437.info = {"start":1054,"length":135,"line":45,"column":8,"endLine":48,"endColumn":9,"fileName":"pxt_modules/game/tilemap.ts","functionName":"x","argumentNames":["this"]}
tiles_Location_x__P2437.isGetter = true;

function tiles_Location_x__P2437_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: tiles_Location_x__P2437, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  scale___21016: undefined,
  arg0: undefined,
} }





function scene_Renderable___drawCore__P2541(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2538_VT)) failedCast(r0);
    s.tmp_0 = if_handler_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = globals.screen___1829;
    s.tmp_0.arg2 = s.arg1;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "handler"), 3);
      s.callLocIdx = 1017; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["handler"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["handler"], 3); s.callLocIdx = 1017; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1017; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 1017; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___drawCore__P2541.info = {"start":390,"length":86,"line":14,"column":8,"endLine":16,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function scene_Renderable___drawCore__P2541_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___drawCore__P2541, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function scene_Renderable___visible__P2540(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Renderable__C2538_VT)) failedCast(r0);
    s.tmp_0 = if_shouldBeVisible_1_mk(s);
    s.tmp_0.arg0 = s.arg0;
    if (!s.tmp_0.arg0.vtable.iface) {
      setupLambda(s.tmp_0, pxsim_pxtrt.mapGetByString(s.tmp_0.arg0, "shouldBeVisible"), 1);
      s.callLocIdx = 1016; s.pc = 1; return s.tmp_0;
    } else {
      s.tmp_0.fn = s.tmp_0.arg0.vtable.iface["shouldBeVisible"];
      if (s.tmp_0.fn == null) { setupLambda(s.tmp_0, s.tmp_0.arg0.fields["shouldBeVisible"], 1); s.callLocIdx = 1016; s.pc = 1; return s.tmp_0; }
      else if (s.tmp_0.fn.isGetter) { s.tmp_0.stage2Call = true; s.callLocIdx = 1016; s.pc = 1; return s.tmp_0;; }
     else { s.callLocIdx = 1016; s.pc = 1; return s.tmp_0; }
    }
  case 1:
    r0 = s.retval;
    return leave(s, r0)
  default: oops()
} } }
scene_Renderable___visible__P2540.info = {"start":305,"length":75,"line":10,"column":8,"endLine":12,"endColumn":9,"fileName":"pxt_modules/game/renderable.ts","functionName":"__visible","argumentNames":["this"]}

function scene_Renderable___visible__P2540_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Renderable___visible__P2540, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  arg0: undefined,
} }





function scene_Camera_top__P2533(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    r0 = s.arg0.fields["drawOffsetY"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_top__P2533.info = {"start":1638,"length":58,"line":58,"column":8,"endLine":60,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"top","argumentNames":["this"]}
scene_Camera_top__P2533.isGetter = true;

function scene_Camera_top__P2533_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_top__P2533, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function scene_Camera_left__P2531(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, scene_Camera__C2520_VT)) failedCast(r0);
    r0 = s.arg0.fields["drawOffsetX"];
    return leaveAccessor(s, r0)
  default: oops()
} } }
scene_Camera_left__P2531.info = {"start":1486,"length":59,"line":52,"column":8,"endLine":54,"endColumn":9,"fileName":"pxt_modules/game/camera.ts","functionName":"left","argumentNames":["this"]}
scene_Camera_left__P2531.isGetter = true;

function scene_Camera_left__P2531_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: scene_Camera_left__P2531, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function particles_ShapeFactory_drawParticle__P2905(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.pImage___21041 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_ShapeFactory__C2902_VT)) failedCast(r0);
    s.tmp_1 = Math_FastRandom_pickRandom__P2753_mk(s);
    r0 = s.arg0.fields["galois"];
    s.tmp_1.arg0 = r0;
    r0 = s.arg0.fields["sources"];
    s.tmp_1.arg1 = r0;
    s.callLocIdx = 1444; s.pc = 1; return s.tmp_1;
  case 1:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.clone(s.tmp_0);
    s.pImage___21041 = (r0);
    r0 = s.arg1.fields["color"];
    s.tmp_0 = r0;
    r0 = pxsim_ImageMethods.replace(s.pImage___21041, 15, s.tmp_0);
    s.tmp_0 = r0 = globals.screen___1829;
    s.tmp_1 = r0 = s.pImage___21041;
    r0 = s.arg0.fields["ox"];
    s.tmp_4 = r0;
    r0 = (s.arg2 - s.tmp_4);
    s.tmp_3 = r0;
    r0 = (s.tmp_3 + 128);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 8);
    s.tmp_2 = r0;
    r0 = s.arg0.fields["oy"];
    s.tmp_8 = r0;
    r0 = (s.arg3 - s.tmp_8);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 + 128);
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 8);
    s.tmp_6 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(s.tmp_0, s.tmp_1, s.tmp_2, s.tmp_6);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_ShapeFactory_drawParticle__P2905.info = {"start":7172,"length":323,"line":229,"column":8,"endLine":237,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_ShapeFactory_drawParticle__P2905_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_ShapeFactory_drawParticle__P2905, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  pImage___21041: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Math_FastRandom_pickRandom__P2753(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Math_FastRandom__C2748_VT)) failedCast(r0);
    r0 = pxsim_numops_toBoolDecr(s.arg1);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 == 0);
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    r0 = undefined;
    { step = 5; continue; }
  case 3:
  case 4:
    s.tmp_4 = r0 = s.arg1;
    s.tmp_6 = Math_FastRandom_randomRange__P2752_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.tmp_6.arg1 = 0;
    r0 = pxsim_Array__length(s.arg1);
    s.tmp_7 = r0;
    r0 = (s.tmp_7 - 1);
    s.tmp_6.arg2 = r0;
    s.callLocIdx = 1173; s.pc = 6; return s.tmp_6;
  case 6:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = pxsim_Array__getAt(s.tmp_4, s.tmp_5);
  case 5:
    return leave(s, r0)
  default: oops()
} } }
Math_FastRandom_pickRandom__P2753.info = {"start":2358,"length":192,"line":70,"column":8,"endLine":75,"endColumn":9,"fileName":"pxt_modules/game/mathUtil.ts","functionName":"pickRandom","argumentNames":["this","list"]}

function Math_FastRandom_pickRandom__P2753_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Math_FastRandom_pickRandom__P2753, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function particles_AreaFactory_drawParticle__P2893(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.col___21087 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_AreaFactory__C2886_VT)) failedCast(r0);
    r0 = s.arg1.fields["lifespan"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 > 500);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = 4;
    { step = 4; continue; }
  case 1:
    r0 = s.arg1.fields["lifespan"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 > 250);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 2; continue; }
    r0 = 5;
    { step = 3; continue; }
  case 2:
    r0 = 1;
  case 3:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    r0 = s.tmp_4;
  case 4:
    // jmp value (already in r0)
    s.tmp_5 = r0;
    s.col___21087 = (s.tmp_5);
    s.tmp_0 = r0 = globals.screen___1829;
    r0 = (s.arg2 + 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 8);
    s.tmp_1 = r0;
    r0 = (s.arg3 + 128);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 8);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, s.col___21087);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_AreaFactory_drawParticle__P2893.info = {"start":4770,"length":222,"line":158,"column":8,"endLine":163,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","p","x","y"]}

function particles_AreaFactory_drawParticle__P2893_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_AreaFactory_drawParticle__P2893, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  col___21087: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function particles_SprayFactory_drawParticle__P2883(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, particles_SprayFactory__C2880_VT)) failedCast(r0);
    s.tmp_0 = r0 = globals.screen___1829;
    r0 = (s.arg2 + 128);
    s.tmp_2 = r0;
    r0 = (s.tmp_2 >> 8);
    s.tmp_1 = r0;
    r0 = (s.arg3 + 128);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 8);
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.setPixel(s.tmp_0, s.tmp_1, s.tmp_3, 1);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
particles_SprayFactory_drawParticle__P2883.info = {"start":3194,"length":118,"line":115,"column":8,"endLine":117,"endColumn":9,"fileName":"pxt_modules/game/particlefactories.ts","functionName":"drawParticle","argumentNames":["this","particle","x","y"]}

function particles_SprayFactory_drawParticle__P2883_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: particles_SprayFactory_drawParticle__P2883, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite___drawCore__P2202(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.ox___21127 = undefined;
    s.oy___21135 = undefined;
    s.l___21143 = undefined;
    s.t___21149 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_0 = Sprite_drawSay__P4369_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.arg1;
    s.callLocIdx = 419; s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    s.tmp_1 = Sprite_isOutOfScreen__P2201_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.tmp_1.arg1 = s.arg1;
    s.callLocIdx = 420; s.pc = 9; return s.tmp_1;
  case 9:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    { step = 7; continue; }
  case 1:
  case 2:
    r0 = s.arg0.fields["flags"];
    s.tmp_3 = r0;
    r0 = (s.tmp_3 & 512);
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    if (!r0) { step = 3; continue; }
    r0 = 0;
    { step = 4; continue; }
  case 3:
    r0 = s.arg1.fields["drawOffsetX"];
  case 4:
    // jmp value (already in r0)
    s.tmp_4 = r0;
    s.ox___21127 = (s.tmp_4);
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 512);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = 0;
    { step = 6; continue; }
  case 5:
    r0 = s.arg1.fields["drawOffsetY"];
  case 6:
    // jmp value (already in r0)
    s.tmp_2 = r0;
    s.oy___21135 = (s.tmp_2);
    s.tmp_2 = Sprite_left__P2186_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 421; s.pc = 10; return s.tmp_2;
  case 10:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.ox___21127);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.l___21143 = (r0);
    s.tmp_2 = Sprite_top__P2190_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 422; s.pc = 11; return s.tmp_2;
  case 11:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.oy___21135);
    s.tmp_0 = r0;
    r0 = pxsim.Math_.floor(s.tmp_0);
    s.t___21149 = (r0);
    s.tmp_0 = Sprite__C2128_v6_3_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.l___21143;
    s.tmp_0.arg2 = s.t___21149;
    if (!checkSubtype(s.tmp_0.arg0, Sprite__C2128_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.drawSprite;
    s.pc = 12; return s.tmp_0;
  case 12:
    r0 = s.retval;
    s.tmp_0 = Sprite_drawDebug__P4370_mk(s);
    s.tmp_0.arg0 = s.arg0;
    s.tmp_0.arg1 = s.l___21143;
    s.tmp_0.arg2 = s.t___21149;
    s.tmp_0.arg3 = s.ox___21127;
    s.tmp_0.arg4 = s.oy___21135;
    s.callLocIdx = 423; s.pc = 13; return s.tmp_0;
  case 13:
    r0 = s.retval;
  case 7:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite___drawCore__P2202.info = {"start":19297,"length":462,"line":646,"column":4,"endLine":659,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__drawCore","argumentNames":["this","camera"]}

function Sprite___drawCore__P2202_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___drawCore__P2202, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  ox___21127: undefined,
  oy___21135: undefined,
  l___21143: undefined,
  t___21149: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function Sprite_drawSprite__P4371(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    s.tmp_3 = Sprite_isScaled__P4368_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 539; s.pc = 3; return s.tmp_3;
  case 3:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_2);
    s.tmp_1 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.drawTransparentImage(globals.screen___1829, s.tmp_4, s.arg1, s.arg2);
    { step = 2; continue; }
  case 1:
    s.tmp_0 = helpers_imageBlit__P1752_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_0.arg1 = s.arg1;
    s.tmp_0.arg2 = s.arg2;
    s.tmp_1 = Sprite_width__P2184_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 540; s.pc = 5; return s.tmp_1;
  case 5:
    r0 = s.retval;
    s.tmp_0.arg3 = r0;
    s.tmp_2 = Sprite_height__P2185_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 541; s.pc = 6; return s.tmp_2;
  case 6:
    r0 = s.retval;
    s.tmp_0.arg4 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_0.arg5 = r0;
    s.tmp_0.arg6 = 0;
    s.tmp_0.arg7 = 0;
    r0 = s.arg0.fields["_image"];
    s.tmp_3 = r0;
    r0 = pxsim_ImageMethods.width(s.tmp_3);
    s.tmp_0.arg8 = r0;
    r0 = s.arg0.fields["_image"];
    s.tmp_4 = r0;
    r0 = pxsim_ImageMethods.height(s.tmp_4);
    s.tmp_0.arg9 = r0;
    s.tmp_0.arg10 = true;
    s.tmp_0.arg11 = false;
    s.callLocIdx = 542; s.pc = 4; return s.tmp_0;
  case 4:
    r0 = s.retval;
  case 2:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawSprite__P4371.info = {"start":37619,"length":514,"line":1168,"column":4,"endLine":1182,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawSprite","argumentNames":["this","drawLeft","drawTop"]}

function Sprite_drawSprite__P4371_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawSprite__P4371, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }





function Sprite_drawDebug__P4370(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    s.font___21173 = undefined;
    s.tx___21177 = undefined;
    s.ty___21179 = undefined;
    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.arg4 = (s.lambdaArgs[4]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["flags"];
    s.tmp_1 = r0;
    r0 = (s.tmp_1 & 64);
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 9; continue; }
    s.font___21173 = (globals.font5___1777);
    s.tx___21177 = (s.arg1);
    s.tmp_1 = r0 = s.arg2;
    s.tmp_3 = Sprite_height__P2185_mk(s);
    s.tmp_3.arg0 = s.arg0;
    s.callLocIdx = 515; s.pc = 13; return s.tmp_3;
  case 13:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_1 + s.tmp_2);
    s.tmp_0 = r0;
    r0 = (s.tmp_0 + 2);
    s.ty___21179 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    r0 = pxsim_String_.mkEmpty();
    s.tmp_3 = r0;
    s.tmp_7 = Sprite_x__P2141_mk(s);
    s.tmp_7.arg0 = s.arg0;
    s.callLocIdx = 516; s.pc = 15; return s.tmp_7;
  case 15:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 >> 0);
    s.tmp_5 = r0;
    if ((s.tmp_5) && (s.tmp_5).vtable) {
    setupResume(s, 16);
    pxsim_String__stringConv(s.tmp_5);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_5) + ""; }
  case 16:
    r0 = s.retval;
    s.tmp_4 = r0;
    r0 = pxsim_String__concat(s.tmp_3, s.tmp_4);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_11 = Sprite_y__P2143_mk(s);
    s.tmp_11.arg0 = s.arg0;
    s.callLocIdx = 517; s.pc = 17; return s.tmp_11;
  case 17:
    r0 = s.retval;
    s.tmp_10 = r0;
    r0 = (s.tmp_10 >> 0);
    s.tmp_9 = r0;
    if ((s.tmp_9) && (s.tmp_9).vtable) {
    setupResume(s, 18);
    pxsim_String__stringConv(s.tmp_9);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_9) + ""; }
  case 18:
    r0 = s.retval;
    s.tmp_8 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_8);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___21177;
    s.tmp_0.arg3 = s.ty___21179;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___21173;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 518; s.pc = 14; return s.tmp_0;
  case 14:
    r0 = s.retval;
    s.tmp_0 = r0 = s.tx___21177;
    s.tmp_2 = if_charWidth_1_mk(s);
    s.tmp_2.arg0 = s.font___21173;
    if (!s.tmp_2.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_2.arg0, "charWidth");
    } else {
      s.tmp_2.fn = s.tmp_2.arg0.vtable.iface["charWidth"];
      if (s.tmp_2.fn == null) { s.retval = s.tmp_2.arg0.fields["charWidth"]; }
      else if (!s.tmp_2.fn.isGetter) { s.retval = bind(s.tmp_2); }
     else { s.callLocIdx = 519; s.pc = 19; return s.tmp_2; }
    }
  case 19:
    r0 = s.retval;
    s.tmp_1 = r0;
    r0 = (s.tmp_0 - s.tmp_1);
    s.tx___21177 = (r0);
    s.tmp_1 = Sprite_vx__P2145_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 520; s.pc = 20; return s.tmp_1;
  case 20:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 1; continue; }
    r0 = s.tmp_0;
    { step = 2; continue; }
  case 1:
    s.tmp_2 = Sprite_vy__P2147_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 521; s.pc = 21; return s.tmp_2;
  case 21:
    r0 = s.retval;
  case 2:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 3; continue; }
    s.tmp_4 = r0 = s.ty___21179;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___21173;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 522; s.pc = 22; return s.tmp_7; }
    }
  case 22:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___21179 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_6 = Sprite_vx__P2145_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 523; s.pc = 24; return s.tmp_6;
  case 24:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 25);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 25:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("v", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_vy__P2147_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 524; s.pc = 26; return s.tmp_10;
  case 26:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 27);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 27:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___21177;
    s.tmp_0.arg3 = s.ty___21179;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___21173;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 525; s.pc = 23; return s.tmp_0;
  case 23:
    r0 = s.retval;
  case 3:
  case 4:
    s.tmp_1 = Sprite_ax__P2149_mk(s);
    s.tmp_1.arg0 = s.arg0;
    s.callLocIdx = 526; s.pc = 28; return s.tmp_1;
  case 28:
    r0 = s.retval;
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBool(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.tmp_0;
    { step = 6; continue; }
  case 5:
    s.tmp_2 = Sprite_ay__P2151_mk(s);
    s.tmp_2.arg0 = s.arg0;
    s.callLocIdx = 527; s.pc = 29; return s.tmp_2;
  case 29:
    r0 = s.retval;
  case 6:
    // jmp value (already in r0)
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 7; continue; }
    s.tmp_4 = r0 = s.ty___21179;
    s.tmp_7 = if_charHeight_1_mk(s);
    s.tmp_7.arg0 = s.font___21173;
    if (!s.tmp_7.arg0.vtable.iface) {
      s.retval = pxsim_pxtrt.mapGetByString(s.tmp_7.arg0, "charHeight");
    } else {
      s.tmp_7.fn = s.tmp_7.arg0.vtable.iface["charHeight"];
      if (s.tmp_7.fn == null) { s.retval = s.tmp_7.arg0.fields["charHeight"]; }
      else if (!s.tmp_7.fn.isGetter) { s.retval = bind(s.tmp_7); }
     else { s.callLocIdx = 528; s.pc = 30; return s.tmp_7; }
    }
  case 30:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 2);
    s.tmp_5 = r0;
    r0 = (s.tmp_4 + s.tmp_5);
    s.ty___21179 = (r0);
    s.tmp_0 = helpers_imagePrint__P1787_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_6 = Sprite_ax__P2149_mk(s);
    s.tmp_6.arg0 = s.arg0;
    s.callLocIdx = 529; s.pc = 32; return s.tmp_6;
  case 32:
    r0 = s.retval;
    s.tmp_5 = r0;
    r0 = (s.tmp_5 >> 0);
    s.tmp_4 = r0;
    if ((s.tmp_4) && (s.tmp_4).vtable) {
    setupResume(s, 33);
    pxsim_String__stringConv(s.tmp_4);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_4) + ""; }
  case 33:
    r0 = s.retval;
    s.tmp_3 = r0;
    r0 = pxsim_String__concat("a", s.tmp_3);
    s.tmp_2 = r0;
    r0 = pxsim_String__concat(s.tmp_2, ",");
    s.tmp_1 = r0;
    s.tmp_10 = Sprite_ay__P2151_mk(s);
    s.tmp_10.arg0 = s.arg0;
    s.callLocIdx = 530; s.pc = 34; return s.tmp_10;
  case 34:
    r0 = s.retval;
    s.tmp_9 = r0;
    r0 = (s.tmp_9 >> 0);
    s.tmp_8 = r0;
    if ((s.tmp_8) && (s.tmp_8).vtable) {
    setupResume(s, 35);
    pxsim_String__stringConv(s.tmp_8);
    checkResumeConsumed();
    return;
    } else { s.retval = (s.tmp_8) + ""; }
  case 35:
    r0 = s.retval;
    s.tmp_7 = r0;
    r0 = pxsim_String__concat(s.tmp_1, s.tmp_7);
    s.tmp_0.arg1 = r0;
    s.tmp_0.arg2 = s.tx___21177;
    s.tmp_0.arg3 = s.ty___21179;
    s.tmp_0.arg4 = 1;
    s.tmp_0.arg5 = s.font___21173;
    s.tmp_0.arg6 = undefined;
    s.callLocIdx = 531; s.pc = 31; return s.tmp_0;
  case 31:
    r0 = s.retval;
  case 7:
  case 8:
  case 9:
  case 10:
    r0 = pxsim_numops_toBoolDecr(globals.debug___2689);
    if (!r0) { step = 11; continue; }
    s.tmp_0 = helpers_imageDrawRect__P1758_mk(s);
    s.tmp_0.arg0 = globals.screen___1829;
    s.tmp_3 = game_Hitbox_left__P2006_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_3.arg0 = r0;
    s.callLocIdx = 532; s.pc = 37; return s.tmp_3;
  case 37:
    r0 = s.retval;
    s.tmp_2 = r0;
    r0 = (s.tmp_2 + 128);
    s.tmp_4 = r0;
    r0 = (s.tmp_4 >> 8);
    s.tmp_1 = r0;
    r0 = (s.tmp_1 - s.arg3);
    s.tmp_0.arg1 = r0;
    s.tmp_7 = game_Hitbox_top__P2007_mk(s);
    r0 = s.arg0.fields["_hitbox"];
    s.tmp_7.arg0 = r0;
    s.callLocIdx = 534; s.pc = 38; return s.tmp_7;
  case 38:
    r0 = s.retval;
    s.tmp_6 = r0;
    r0 = (s.tmp_6 + 128);
    s.tmp_8 = r0;
    r0 = (s.tmp_8 >> 8);
    s.tmp_5 = r0;
    r0 = (s.tmp_5 - s.arg4);
    s.tmp_0.arg2 = r0;
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["width"];
    s.tmp_9 = r0;
    r0 = (s.tmp_9 + 128);
    s.tmp_10 = r0;
    r0 = (s.tmp_10 >> 8);
    s.tmp_0.arg3 = r0;
    r0 = s.arg0.fields["_hitbox"];
    r0 = r0.fields["height"];
    s.tmp_11 = r0;
    r0 = (s.tmp_11 + 128);
    s.tmp_12 = r0;
    r0 = (s.tmp_12 >> 8);
    s.tmp_0.arg4 = r0;
    s.tmp_0.arg5 = 1;
    s.callLocIdx = 538; s.pc = 36; return s.tmp_0;
  case 36:
    r0 = s.retval;
  case 11:
  case 12:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawDebug__P4370.info = {"start":36521,"length":1092,"line":1138,"column":4,"endLine":1166,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawDebug","argumentNames":["this","left","top","offsetX","offsetY"]}

function Sprite_drawDebug__P4370_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawDebug__P4370, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  tmp_7: undefined,
  tmp_8: undefined,
  tmp_9: undefined,
  tmp_10: undefined,
  tmp_11: undefined,
  tmp_12: undefined,
  font___21173: undefined,
  tx___21177: undefined,
  ty___21179: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }





function Sprite_drawSay__P4369(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_0);
    if (!r0) { step = 5; continue; }
    r0 = s.arg0.fields["sayEndTime"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 !== undefined);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    if (!r0) { step = 3; continue; }
    r0 = pxsim.control.millis();
    s.tmp_4 = r0;
    r0 = s.arg0.fields["sayEndTime"];
    s.tmp_5 = r0;
    r0 = (s.tmp_4 < s.tmp_5);
    s.tmp_3 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_3);
    if (!r0) { step = 1; continue; }
    s.tmp_6 = sprites_BaseSpriteSayRenderer__C2048_v0_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_6.arg0 = r0;
    s.tmp_6.arg1 = globals.screen___1829;
    s.tmp_6.arg2 = s.arg1;
    s.tmp_6.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_6.arg0, sprites_BaseSpriteSayRenderer__C2048_VT)) failedCast(s.tmp_6.arg0);
    s.tmp_6.fn = s.tmp_6.arg0.vtable.methods.draw;
    s.pc = 7; return s.tmp_6;
  case 7:
    r0 = s.retval;
    { step = 2; continue; }
  case 1:
    s.tmp_0 = sprites_BaseSpriteSayRenderer__C2048_v2_1_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0.arg0 = r0;
    if (!checkSubtype(s.tmp_0.arg0, sprites_BaseSpriteSayRenderer__C2048_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.destroy;
    s.pc = 8; return s.tmp_0;
  case 8:
    r0 = s.retval;
    r0 = (s.arg0).fields["sayRenderer"] = (undefined);
    r0 = (s.arg0).fields["sayEndTime"] = (undefined);
  case 2:
    { step = 4; continue; }
  case 3:
    s.tmp_0 = sprites_BaseSpriteSayRenderer__C2048_v0_4_mk(s);
    r0 = s.arg0.fields["sayRenderer"];
    s.tmp_0.arg0 = r0;
    s.tmp_0.arg1 = globals.screen___1829;
    s.tmp_0.arg2 = s.arg1;
    s.tmp_0.arg3 = s.arg0;
    if (!checkSubtype(s.tmp_0.arg0, sprites_BaseSpriteSayRenderer__C2048_VT)) failedCast(s.tmp_0.arg0);
    s.tmp_0.fn = s.tmp_0.arg0.vtable.methods.draw;
    s.pc = 9; return s.tmp_0;
  case 9:
    r0 = s.retval;
  case 4:
  case 5:
  case 6:
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
Sprite_drawSay__P4369.info = {"start":35941,"length":574,"line":1120,"column":4,"endLine":1136,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"drawSay","argumentNames":["this","camera"]}

function Sprite_drawSay__P4369_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite_drawSay__P4369, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  tmp_5: undefined,
  tmp_6: undefined,
  arg0: undefined,
  arg1: undefined,
} }





function sprites_BaseSpriteSayRenderer_destroy__P2052(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2048_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_destroy__P2052.info = {"start":328,"length":22,"line":13,"column":8,"endLine":15,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"destroy","argumentNames":["this"]}

function sprites_BaseSpriteSayRenderer_destroy__P2052_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_destroy__P2052, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
} }





function sprites_BaseSpriteSayRenderer_draw__P2050(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.arg1 = (s.lambdaArgs[1]);
      s.arg2 = (s.lambdaArgs[2]);
      s.arg3 = (s.lambdaArgs[3]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, sprites_BaseSpriteSayRenderer__C2048_VT)) failedCast(r0);
    r0 = undefined;
    return leave(s, r0)
  default: oops()
} } }
sprites_BaseSpriteSayRenderer_draw__P2050.info = {"start":171,"length":69,"line":5,"column":8,"endLine":7,"endColumn":9,"fileName":"pxt_modules/game/spritesay.ts","functionName":"draw","argumentNames":["this","screen","camera","owner"]}

function sprites_BaseSpriteSayRenderer_draw__P2050_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: sprites_BaseSpriteSayRenderer_draw__P2050, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }





function Sprite___visible__P2183(s) {
let r0 = s.r0, step = s.pc;
s.pc = -1;


while (true) {
if (yieldSteps-- < 0 && maybeYield(s, step, r0) || runtime !== pxsim.runtime) return null;
switch (step) {
  case 0:

    if (s.lambdaArgs) {
      s.arg0 = (s.lambdaArgs[0]);
      s.lambdaArgs = null;
    }
    r0 = s.arg0;
    if (!checkSubtype(r0, Sprite__C2128_VT)) failedCast(r0);
    r0 = s.arg0.fields["flags"];
    s.tmp_2 = r0;
    r0 = (s.tmp_2 & 128);
    s.tmp_1 = r0;
    r0 = pxsim_numops_toBoolDecr(s.tmp_1);
    s.tmp_0 = r0;
    r0 = pxsim_Boolean__bang(s.tmp_0);
    return leave(s, r0)
  default: oops()
} } }
Sprite___visible__P2183.info = {"start":11007,"length":72,"line":392,"column":4,"endLine":394,"endColumn":5,"fileName":"pxt_modules/game/sprite.ts","functionName":"__visible","argumentNames":["this"]}

function Sprite___visible__P2183_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: Sprite___visible__P2183, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  arg0: undefined,
} }




function if_charWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_charHeight_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_data_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_multiplier_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function lambda_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function Sprite__C2128_v5_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function Sprite__C2128_v4_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_xOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_yOffset_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function PhysicsEngine__C2298_v2_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function lambda_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_startScreenEffect_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function game_GameOverDialog__C2677_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_flags_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C2876_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function particles_ParticleSource__C2840_v4_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_x_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_y_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_handler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_condition_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function PhysicsEngine__C2298_v4_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if___update_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function PhysicsEngine__C2298_v3_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if___draw_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_z_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_id_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function controller_Button__C1979_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_s_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vx_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_vy_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function game_GameOverDialog__C2677_v2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_countdownEndHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_lifeZeroHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_onPlayFinished_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function lambda_5_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
  arg4: undefined,
} }


function if_func_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function game_SplashDialog__C2666_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function game_BaseDialog__C2638_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function game_BaseDialog__C2638_v2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function PhysicsEngine__C2298_v0_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_handler_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_callback_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_effect_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_sourceFactory_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function PhysicsEngine__C2298_v1_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_destroyHandler_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_generator_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_padding_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsPerRow_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardWidth_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardSpacing_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_cardsTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_headerFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoTop_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_infoFont_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_getText_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_basicCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_selectedCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_activeCard_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_z_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_handler_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function if_tileIndex_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_left_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_top_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function particles_ParticleFactory__C2876_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function if_height_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2048_v1_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSprite__C1888_v0_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function sprites_BaseSprite__C1888_v2_2_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
} }


function if_shouldBeVisible_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function Sprite__C2128_v6_3_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2048_v0_4_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
  arg1: undefined,
  arg2: undefined,
  arg3: undefined,
} }


function sprites_BaseSpriteSayRenderer__C2048_v2_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_scene_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_state_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_column_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_keyIndex_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }


function if_width_1_mk(s) {
    checkStack(s.depth);
    return {
        parent: s, fn: null, depth: s.depth + 1,
        pc: 0, retval: undefined, r0: undefined, overwrittenPC: false, lambdaArgs: null,
  tmp_0: undefined,
  tmp_1: undefined,
  tmp_2: undefined,
  tmp_3: undefined,
  tmp_4: undefined,
  arg0: undefined,
} }

const controller_Button__C1979_VT = mkVTable({
  name: "Button",
  numFields: 7,
  classNo: 16,
  lastSubtypeNo: 17,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_Button_isPressed__P1990,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "handlerState": controller_Button_handlerState__P4343,
    "toString": controller_Button_toString__P1984,
    "raiseButtonUp": controller_Button_raiseButtonUp__P4344,
    "raiseButtonDown": controller_Button_raiseButtonDown__P4345,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P4346,
    "onEvent": controller_Button_onEvent__P1986,
    "isPressed": controller_Button_isPressed__P1990,
    "pressureLevel": controller_Button_pressureLevel__P1991,
    "setPressed": controller_Button_setPressed__P1992,
    "__update": controller_Button___update__P1993,
    "runButtonEvents": controller_Button_runButtonEvents__P4347,
    "getOrCreateHandlerForEvent": controller_Button_getOrCreateHandlerForEvent__P4348,
  },
  toStringMethod: controller_Button_toString__P1984,
});
const controller_AnyButton__C4341_VT = mkVTable({
  name: "AnyButton",
  numFields: 7,
  classNo: 17,
  lastSubtypeNo: 17,
  maxBgInstances: null,
  methods: {
    "isPressed": controller_AnyButton_isPressed__P4349,
  },
  iface: {
    "_owner": null,
    "set/_owner": null,
    "id": null,
    "set/id": null,
    "repeatDelay": null,
    "set/repeatDelay": null,
    "repeatInterval": null,
    "set/repeatInterval": null,
    "_pressed": null,
    "set/_pressed": null,
    "_pressedElasped": null,
    "set/_pressedElasped": null,
    "_repeatCount": null,
    "set/_repeatCount": null,
    "isPressed": controller_AnyButton_isPressed__P4349,
    "handlerState": controller_Button_handlerState__P4343,
    "toString": controller_Button_toString__P1984,
    "raiseButtonUp": controller_Button_raiseButtonUp__P4344,
    "raiseButtonDown": controller_Button_raiseButtonDown__P4345,
    "raiseButtonRepeat": controller_Button_raiseButtonRepeat__P4346,
    "onEvent": controller_Button_onEvent__P1986,
    "pressureLevel": controller_Button_pressureLevel__P1991,
    "setPressed": controller_Button_setPressed__P1992,
    "__update": controller_Button___update__P1993,
    "runButtonEvents": controller_Button_runButtonEvents__P4347,
    "getOrCreateHandlerForEvent": controller_Button_getOrCreateHandlerForEvent__P4348,
  },
});
const Math_FastRandom__C2748_VT = mkVTable({
  name: "FastRandom",
  numFields: 2,
  classNo: 18,
  lastSubtypeNo: 18,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "lfsr": null,
    "set/lfsr": null,
    "seed": null,
    "set/seed": null,
    "next": Math_FastRandom_next__P2751,
    "randomRange": Math_FastRandom_randomRange__P2752,
    "pickRandom": Math_FastRandom_pickRandom__P2753,
  },
});
const GuessesUI__C4050_VT = mkVTable({
  name: "GuessesUI",
  numFields: 11,
  classNo: 19,
  lastSubtypeNo: 19,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "word": null,
    "set/word": null,
    "greenLetters": null,
    "set/greenLetters": null,
    "yellowLetters": null,
    "set/yellowLetters": null,
    "grayLetters": null,
    "set/grayLetters": null,
    "title": null,
    "set/title": null,
    "guessChars": null,
    "set/guessChars": null,
    "guesses": null,
    "set/guesses": null,
    "spacing": null,
    "set/spacing": null,
    "rowLimit": null,
    "set/rowLimit": null,
    "yOffset": null,
    "set/yOffset": null,
    "selected": null,
    "set/selected": null,
    "putLetter": GuessesUI_putLetter__P4063,
    "del": GuessesUI_del__P4064,
    "select": GuessesUI_select__P4065,
    "checkWord": GuessesUI_checkWord__P4066,
    "assignLetterColors": GuessesUI_assignLetterColors__P4067,
  },
});
const Keyboard__C4068_VT = mkVTable({
  name: "Keyboard",
  numFields: 9,
  classNo: 20,
  lastSubtypeNo: 20,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "disabled": null,
    "set/disabled": null,
    "ui": null,
    "set/ui": null,
    "_asking": null,
    "set/_asking": null,
    "spacing": null,
    "set/spacing": null,
    "rowLimit": null,
    "set/rowLimit": null,
    "yOffset": null,
    "set/yOffset": null,
    "keys": null,
    "set/keys": null,
    "confirmText": null,
    "set/confirmText": null,
    "selected": null,
    "set/selected": null,
    "asking": Keyboard_asking__P4079,
    "up": Keyboard_up__P4080,
    "down": Keyboard_down__P4081,
    "left": Keyboard_left__P4082,
    "right": Keyboard_right__P4083,
    "putLetter": Keyboard_putLetter__P4084,
    "del": Keyboard_del__P4085,
    "ask": Keyboard_ask__P4086,
    "stopAsking": Keyboard_stopAsking__P4087,
    "select": Keyboard_select__P4088,
    "updateKeyColors": Keyboard_updateKeyColors__P4089,
  },
});
const sprites_BaseSprite__C1888_VT = mkVTable({
  name: "BaseSprite",
  numFields: 2,
  classNo: 21,
  lastSubtypeNo: 25,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P1891,
    "__draw": sprites_BaseSprite___draw__P1894,
    "__drawCore": sprites_BaseSprite___drawCore__P1895,
    "__update": sprites_BaseSprite___update__P1896,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "__visible": sprites_BaseSprite___visible__P1891,
    "z": sprites_BaseSprite_z__P1892,
    "set/z": sprites_BaseSprite_z__P1893,
    "__draw": sprites_BaseSprite___draw__P1894,
    "__drawCore": sprites_BaseSprite___drawCore__P1895,
    "__update": sprites_BaseSprite___update__P1896,
  },
});
const Sprite__C2128_VT = mkVTable({
  name: "Sprite",
  numFields: 30,
  classNo: 22,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
    "__visible": Sprite___visible__P2183,
    "__draw": sprites_BaseSprite___draw__P1894,
    "__drawCore": Sprite___drawCore__P2202,
    "__update": Sprite___update__P2203,
    "setHitbox": Sprite_setHitbox__P2181,
    "recalcSize": Sprite_recalcSize__P4367,
    "drawSprite": Sprite_drawSprite__P4371,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "_vx": null,
    "set/_vx": null,
    "_vy": null,
    "set/_vy": null,
    "_ax": null,
    "set/_ax": null,
    "_ay": null,
    "set/_ay": null,
    "_fx": null,
    "set/_fx": null,
    "_fy": null,
    "set/_fy": null,
    "_sx": null,
    "set/_sx": null,
    "_sy": null,
    "set/_sy": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "_data": null,
    "set/_data": null,
    "_kind": null,
    "set/_kind": null,
    "layer": null,
    "set/layer": null,
    "_lastX": null,
    "set/_lastX": null,
    "_lastY": null,
    "set/_lastY": null,
    "_action": null,
    "set/_action": null,
    "lifespan": null,
    "set/lifespan": null,
    "_image": null,
    "set/_image": null,
    "_obstacles": null,
    "set/_obstacles": null,
    "sayEndTime": null,
    "set/sayEndTime": null,
    "sayRenderer": null,
    "set/sayRenderer": null,
    "_hitbox": null,
    "set/_hitbox": null,
    "_overlappers": null,
    "set/_overlappers": null,
    "_kindsOverlappedWith": null,
    "set/_kindsOverlappedWith": null,
    "flags": null,
    "set/flags": null,
    "destroyHandler": null,
    "set/destroyHandler": null,
    "x": Sprite_x__P2141,
    "set/x": Sprite_x__P2142,
    "y": Sprite_y__P2143,
    "set/y": Sprite_y__P2144,
    "vx": Sprite_vx__P2145,
    "set/vx": Sprite_vx__P2146,
    "vy": Sprite_vy__P2147,
    "set/vy": Sprite_vy__P2148,
    "ax": Sprite_ax__P2149,
    "set/ax": Sprite_ax__P2150,
    "ay": Sprite_ay__P2151,
    "set/ay": Sprite_ay__P2152,
    "fx": Sprite_fx__P2153,
    "set/fx": Sprite_fx__P2154,
    "fy": Sprite_fy__P2155,
    "set/fy": Sprite_fy__P2156,
    "sx": Sprite_sx__P2157,
    "set/sx": Sprite_sx__P2158,
    "sy": Sprite_sy__P2159,
    "set/sy": Sprite_sy__P2160,
    "scale": Sprite_scale__P2161,
    "set/scale": Sprite_scale__P2162,
    "data": Sprite_data__P2163,
    "set/data": Sprite_data__P2164,
    "image": Sprite_image__P2177,
    "setImage": Sprite_setImage__P2178,
    "calcDimensionalHash": Sprite_calcDimensionalHash__P2179,
    "resetHitbox": Sprite_resetHitbox__P2180,
    "setHitbox": Sprite_setHitbox__P2181,
    "isStatic": Sprite_isStatic__P2182,
    "__visible": Sprite___visible__P2183,
    "recalcSize": Sprite_recalcSize__P4367,
    "isScaled": Sprite_isScaled__P4368,
    "width": Sprite_width__P2184,
    "height": Sprite_height__P2185,
    "left": Sprite_left__P2186,
    "set/left": Sprite_left__P2187,
    "right": Sprite_right__P2188,
    "set/right": Sprite_right__P2189,
    "top": Sprite_top__P2190,
    "set/top": Sprite_top__P2191,
    "bottom": Sprite_bottom__P2192,
    "set/bottom": Sprite_bottom__P2193,
    "kind": Sprite_kind__P2194,
    "setKind": Sprite_setKind__P2195,
    "isOutOfScreen": Sprite_isOutOfScreen__P2201,
    "__drawCore": Sprite___drawCore__P2202,
    "__update": Sprite___update__P2203,
    "setFlag": Sprite_setFlag__P2206,
    "overlapsWith": Sprite_overlapsWith__P2207,
    "clearObstacles": Sprite_clearObstacles__P2212,
    "registerObstacle": Sprite_registerObstacle__P2213,
    "destroy": Sprite_destroy__P2215,
    "_destroyCore": Sprite__destroyCore__P2216,
    "toString": Sprite_toString__P2221,
    "drawSay": Sprite_drawSay__P4369,
    "drawDebug": Sprite_drawDebug__P4370,
    "drawSprite": Sprite_drawSprite__P4371,
    "z": sprites_BaseSprite_z__P1892,
    "set/z": sprites_BaseSprite_z__P1893,
    "__draw": sprites_BaseSprite___draw__P1894,
  },
  toStringMethod: Sprite_toString__P2221,
});
const TextSprite__C4037_VT = mkVTable({
  name: "TextSprite",
  numFields: 40,
  classNo: 23,
  lastSubtypeNo: 23,
  maxBgInstances: null,
  methods: {
    "__visible": Sprite___visible__P2183,
    "__draw": sprites_BaseSprite___draw__P1894,
    "__drawCore": Sprite___drawCore__P2202,
    "__update": Sprite___update__P2203,
    "setHitbox": Sprite_setHitbox__P2181,
    "recalcSize": Sprite_recalcSize__P4367,
    "drawSprite": Sprite_drawSprite__P4371,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "_vx": null,
    "set/_vx": null,
    "_vy": null,
    "set/_vy": null,
    "_ax": null,
    "set/_ax": null,
    "_ay": null,
    "set/_ay": null,
    "_fx": null,
    "set/_fx": null,
    "_fy": null,
    "set/_fy": null,
    "_sx": null,
    "set/_sx": null,
    "_sy": null,
    "set/_sy": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "_data": null,
    "set/_data": null,
    "_kind": null,
    "set/_kind": null,
    "layer": null,
    "set/layer": null,
    "_lastX": null,
    "set/_lastX": null,
    "_lastY": null,
    "set/_lastY": null,
    "_action": null,
    "set/_action": null,
    "lifespan": null,
    "set/lifespan": null,
    "_image": null,
    "set/_image": null,
    "_obstacles": null,
    "set/_obstacles": null,
    "sayEndTime": null,
    "set/sayEndTime": null,
    "sayRenderer": null,
    "set/sayRenderer": null,
    "_hitbox": null,
    "set/_hitbox": null,
    "_overlappers": null,
    "set/_overlappers": null,
    "_kindsOverlappedWith": null,
    "set/_kindsOverlappedWith": null,
    "flags": null,
    "set/flags": null,
    "destroyHandler": null,
    "set/destroyHandler": null,
    "text": null,
    "set/text": null,
    "bg": null,
    "set/bg": null,
    "fg": null,
    "set/fg": null,
    "maxFontHeight": null,
    "set/maxFontHeight": null,
    "borderWidth": null,
    "set/borderWidth": null,
    "borderColor": null,
    "set/borderColor": null,
    "padding": null,
    "set/padding": null,
    "outlineWidth": null,
    "set/outlineWidth": null,
    "outlineColor": null,
    "set/outlineColor": null,
    "icon": null,
    "set/icon": null,
    "update": TextSprite_update__P4039,
    "setText": TextSprite_setText__P4042,
    "x": Sprite_x__P2141,
    "set/x": Sprite_x__P2142,
    "y": Sprite_y__P2143,
    "set/y": Sprite_y__P2144,
    "vx": Sprite_vx__P2145,
    "set/vx": Sprite_vx__P2146,
    "vy": Sprite_vy__P2147,
    "set/vy": Sprite_vy__P2148,
    "ax": Sprite_ax__P2149,
    "set/ax": Sprite_ax__P2150,
    "ay": Sprite_ay__P2151,
    "set/ay": Sprite_ay__P2152,
    "fx": Sprite_fx__P2153,
    "set/fx": Sprite_fx__P2154,
    "fy": Sprite_fy__P2155,
    "set/fy": Sprite_fy__P2156,
    "sx": Sprite_sx__P2157,
    "set/sx": Sprite_sx__P2158,
    "sy": Sprite_sy__P2159,
    "set/sy": Sprite_sy__P2160,
    "scale": Sprite_scale__P2161,
    "set/scale": Sprite_scale__P2162,
    "data": Sprite_data__P2163,
    "set/data": Sprite_data__P2164,
    "image": Sprite_image__P2177,
    "setImage": Sprite_setImage__P2178,
    "calcDimensionalHash": Sprite_calcDimensionalHash__P2179,
    "resetHitbox": Sprite_resetHitbox__P2180,
    "setHitbox": Sprite_setHitbox__P2181,
    "isStatic": Sprite_isStatic__P2182,
    "__visible": Sprite___visible__P2183,
    "recalcSize": Sprite_recalcSize__P4367,
    "isScaled": Sprite_isScaled__P4368,
    "width": Sprite_width__P2184,
    "height": Sprite_height__P2185,
    "left": Sprite_left__P2186,
    "set/left": Sprite_left__P2187,
    "right": Sprite_right__P2188,
    "set/right": Sprite_right__P2189,
    "top": Sprite_top__P2190,
    "set/top": Sprite_top__P2191,
    "bottom": Sprite_bottom__P2192,
    "set/bottom": Sprite_bottom__P2193,
    "kind": Sprite_kind__P2194,
    "setKind": Sprite_setKind__P2195,
    "isOutOfScreen": Sprite_isOutOfScreen__P2201,
    "__drawCore": Sprite___drawCore__P2202,
    "__update": Sprite___update__P2203,
    "setFlag": Sprite_setFlag__P2206,
    "overlapsWith": Sprite_overlapsWith__P2207,
    "clearObstacles": Sprite_clearObstacles__P2212,
    "registerObstacle": Sprite_registerObstacle__P2213,
    "destroy": Sprite_destroy__P2215,
    "_destroyCore": Sprite__destroyCore__P2216,
    "toString": Sprite_toString__P2221,
    "drawSay": Sprite_drawSay__P4369,
    "drawDebug": Sprite_drawDebug__P4370,
    "drawSprite": Sprite_drawSprite__P4371,
    "z": sprites_BaseSprite_z__P1892,
    "set/z": sprites_BaseSprite_z__P1893,
    "__draw": sprites_BaseSprite___draw__P1894,
  },
});
const game_Hitbox__C1998_VT = mkVTable({
  name: "Hitbox",
  numFields: 6,
  classNo: 26,
  lastSubtypeNo: 26,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "hash": null,
    "set/hash": null,
    "parent": null,
    "set/parent": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "width": null,
    "set/width": null,
    "height": null,
    "set/height": null,
    "left": game_Hitbox_left__P2006,
    "top": game_Hitbox_top__P2007,
    "right": game_Hitbox_right__P2008,
    "bottom": game_Hitbox_bottom__P2009,
    "isValid": game_Hitbox_isValid__P2010,
    "contains": game_Hitbox_contains__P2011,
    "overlapsWith": game_Hitbox_overlapsWith__P2012,
  },
});
const PhysicsEngine__C2298_VT = mkVTable({
  name: "PhysicsEngine",
  numFields: 0,
  classNo: 27,
  lastSubtypeNo: 28,
  maxBgInstances: null,
  methods: {
    "addSprite": PhysicsEngine_addSprite__P2300,
    "removeSprite": PhysicsEngine_removeSprite__P2301,
    "moveSprite": PhysicsEngine_moveSprite__P2302,
    "draw": PhysicsEngine_draw__P2303,
    "move": PhysicsEngine_move__P2304,
  },
  iface: {
    "addSprite": PhysicsEngine_addSprite__P2300,
    "removeSprite": PhysicsEngine_removeSprite__P2301,
    "moveSprite": PhysicsEngine_moveSprite__P2302,
    "draw": PhysicsEngine_draw__P2303,
    "move": PhysicsEngine_move__P2304,
  },
});
const music_Melody__C1612_VT = mkVTable({
  name: "Melody",
  numFields: 2,
  classNo: 29,
  lastSubtypeNo: 29,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_text": null,
    "set/_text": null,
    "_player": null,
    "set/_player": null,
    "stop": music_Melody_stop__P1617,
    "registerMelody": music_Melody_registerMelody__P4221,
    "unregisterMelody": music_Melody_unregisterMelody__P4222,
    "playCore": music_Melody_playCore__P4223,
    "play": music_Melody_play__P1619,
    "toString": music_Melody_toString__P1621,
  },
  toStringMethod: music_Melody_toString__P1621,
});
const info_PlayerInfo__C2369_VT = mkVTable({
  name: "PlayerInfo",
  numFields: 12,
  classNo: 30,
  lastSubtypeNo: 30,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_player": null,
    "set/_player": null,
    "bg": null,
    "set/bg": null,
    "border": null,
    "set/border": null,
    "fc": null,
    "set/fc": null,
    "showScore": null,
    "set/showScore": null,
    "showLife": null,
    "set/showLife": null,
    "visibility": null,
    "set/visibility": null,
    "showPlayer": null,
    "set/showPlayer": null,
    "x": null,
    "set/x": null,
    "y": null,
    "set/y": null,
    "left": null,
    "set/left": null,
    "up": null,
    "set/up": null,
    "init": info_PlayerInfo_init__P4473,
    "getState": info_PlayerInfo_getState__P2382,
    "id": info_PlayerInfo_id__P2383,
    "score": info_PlayerInfo_score__P2384,
    "hasScore": info_PlayerInfo_hasScore__P2387,
    "hasLife": info_PlayerInfo_hasLife__P2391,
    "raiseLifeZero": info_PlayerInfo_raiseLifeZero__P2393,
    "drawPlayer": info_PlayerInfo_drawPlayer__P2394,
    "drawScore": info_PlayerInfo_drawScore__P2395,
    "drawLives": info_PlayerInfo_drawLives__P2396,
  },
});
const scene_Scene__C2579_VT = mkVTable({
  name: "Scene",
  numFields: 24,
  classNo: 31,
  lastSubtypeNo: 31,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eventContext": null,
    "set/eventContext": null,
    "background": null,
    "set/background": null,
    "tileMap": null,
    "set/tileMap": null,
    "allSprites": null,
    "set/allSprites": null,
    "spriteNextId": null,
    "set/spriteNextId": null,
    "spritesByKind": null,
    "set/spritesByKind": null,
    "physicsEngine": null,
    "set/physicsEngine": null,
    "camera": null,
    "set/camera": null,
    "flags": null,
    "set/flags": null,
    "destroyedHandlers": null,
    "set/destroyedHandlers": null,
    "createdHandlers": null,
    "set/createdHandlers": null,
    "overlapHandlers": null,
    "set/overlapHandlers": null,
    "overlapMap": null,
    "set/overlapMap": null,
    "tileOverlapHandlers": null,
    "set/tileOverlapHandlers": null,
    "collisionHandlers": null,
    "set/collisionHandlers": null,
    "wallCollisionHandlers": null,
    "set/wallCollisionHandlers": null,
    "gameForeverHandlers": null,
    "set/gameForeverHandlers": null,
    "particleSources": null,
    "set/particleSources": null,
    "controlledSprites": null,
    "set/controlledSprites": null,
    "followingSprites": null,
    "set/followingSprites": null,
    "buttonEventHandlers": null,
    "set/buttonEventHandlers": null,
    "_millis": null,
    "set/_millis": null,
    "_data": null,
    "set/_data": null,
    "previousScene": null,
    "set/previousScene": null,
    "init": scene_Scene_init__P2602,
    "data": scene_Scene_data__P2603,
    "millis": scene_Scene_millis__P2604,
    "addSprite": scene_Scene_addSprite__P2605,
    "destroy": scene_Scene_destroy__P2606,
    "render": scene_Scene_render__P2607,
  },
});
const game_BaseDialog__C2638_VT = mkVTable({
  name: "BaseDialog",
  numFields: 11,
  classNo: 32,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
    "update": game_BaseDialog_update__P2651,
    "setText": game_BaseDialog_setText__P2652,
    "drawTextCore": game_BaseDialog_drawTextCore__P2653,
  },
  iface: {
    "image": null,
    "set/image": null,
    "frame": null,
    "set/frame": null,
    "cursor": null,
    "set/cursor": null,
    "columns": null,
    "set/columns": null,
    "rows": null,
    "set/rows": null,
    "unit": null,
    "set/unit": null,
    "innerLeft": null,
    "set/innerLeft": null,
    "innerTop": null,
    "set/innerTop": null,
    "cursorCount": null,
    "set/cursorCount": null,
    "font": null,
    "set/font": null,
    "textColor": null,
    "set/textColor": null,
    "update": game_BaseDialog_update__P2651,
    "setText": game_BaseDialog_setText__P2652,
    "drawTextCore": game_BaseDialog_drawTextCore__P2653,
    "drawCursorRow": game_BaseDialog_drawCursorRow__P2654,
    "drawBorder": game_BaseDialog_drawBorder__P4512,
    "fastFill": game_BaseDialog_fastFill__P4513,
    "clearInterior": game_BaseDialog_clearInterior__P4514,
    "drawPartial": game_BaseDialog_drawPartial__P4515,
    "cursorRowHeight": game_BaseDialog_cursorRowHeight__P4516,
    "textAreaWidth": game_BaseDialog_textAreaWidth__P4518,
    "textAreaHeight": game_BaseDialog_textAreaHeight__P4519,
    "setFont": game_BaseDialog_setFont__P4520,
  },
});
const game_GameOverDialog__C2677_VT = mkVTable({
  name: "GameOverDialog",
  numFields: 16,
  classNo: 33,
  lastSubtypeNo: 33,
  maxBgInstances: null,
  methods: {
    "update": game_GameOverDialog_update__P2680,
    "setText": game_BaseDialog_setText__P2652,
    "drawTextCore": game_GameOverDialog_drawTextCore__P2681,
  },
  iface: {
    "image": null,
    "set/image": null,
    "frame": null,
    "set/frame": null,
    "cursor": null,
    "set/cursor": null,
    "columns": null,
    "set/columns": null,
    "rows": null,
    "set/rows": null,
    "unit": null,
    "set/unit": null,
    "innerLeft": null,
    "set/innerLeft": null,
    "innerTop": null,
    "set/innerTop": null,
    "cursorCount": null,
    "set/cursorCount": null,
    "font": null,
    "set/font": null,
    "textColor": null,
    "set/textColor": null,
    "cursorOn": null,
    "set/cursorOn": null,
    "isNewHighScore": null,
    "set/isNewHighScore": null,
    "win": null,
    "set/win": null,
    "score": null,
    "set/score": null,
    "highScore": null,
    "set/highScore": null,
    "displayCursor": game_GameOverDialog_displayCursor__P2679,
    "update": game_GameOverDialog_update__P2680,
    "drawTextCore": game_GameOverDialog_drawTextCore__P2681,
    "setText": game_BaseDialog_setText__P2652,
    "drawCursorRow": game_BaseDialog_drawCursorRow__P2654,
    "drawBorder": game_BaseDialog_drawBorder__P4512,
    "fastFill": game_BaseDialog_fastFill__P4513,
    "clearInterior": game_BaseDialog_clearInterior__P4514,
    "drawPartial": game_BaseDialog_drawPartial__P4515,
    "cursorRowHeight": game_BaseDialog_cursorRowHeight__P4516,
    "textAreaWidth": game_BaseDialog_textAreaWidth__P4518,
    "textAreaHeight": game_BaseDialog_textAreaHeight__P4519,
    "setFont": game_BaseDialog_setFont__P4520,
  },
});
const effects_ImageEffect__C2978_VT = mkVTable({
  name: "ImageEffect",
  numFields: 4,
  classNo: 35,
  lastSubtypeNo: 35,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "preferredDelay": null,
    "set/preferredDelay": null,
    "effect": null,
    "set/effect": null,
    "fastRandom": null,
    "set/fastRandom": null,
    "times": null,
    "set/times": null,
    "applyTo": effects_ImageEffect_applyTo__P2980,
    "change": effects_ImageEffect_change__P2981,
    "startScreenEffect": effects_ImageEffect_startScreenEffect__P2982,
  },
});
const effects_ParticleEffect__C2951_VT = mkVTable({
  name: "ParticleEffect",
  numFields: 3,
  classNo: 36,
  lastSubtypeNo: 37,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "start": effects_ParticleEffect_start__P2953,
    "destroy": effects_ParticleEffect_destroy__P2954,
  },
});
const effects_ScreenEffect__C2955_VT = mkVTable({
  name: "ScreenEffect",
  numFields: 5,
  classNo: 37,
  lastSubtypeNo: 37,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sourceFactory": null,
    "set/sourceFactory": null,
    "defaultRate": null,
    "set/defaultRate": null,
    "defaultLifespan": null,
    "set/defaultLifespan": null,
    "source": null,
    "set/source": null,
    "sceneDefaultRate": null,
    "set/sceneDefaultRate": null,
    "startScreenEffect": effects_ScreenEffect_startScreenEffect__P2957,
    "endScreenEffect": effects_ScreenEffect_endScreenEffect__P2958,
    "start": effects_ParticleEffect_start__P2953,
    "destroy": effects_ParticleEffect_destroy__P2954,
  },
});
const particles_ParticleFactory__C2876_VT = mkVTable({
  name: "ParticleFactory",
  numFields: 0,
  classNo: 38,
  lastSubtypeNo: 42,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ParticleFactory_createParticle__P2878,
    "drawParticle": particles_ParticleFactory_drawParticle__P2879,
  },
  iface: {
    "createParticle": particles_ParticleFactory_createParticle__P2878,
    "drawParticle": particles_ParticleFactory_drawParticle__P2879,
  },
});
const particles_SprayFactory__C2880_VT = mkVTable({
  name: "SprayFactory",
  numFields: 3,
  classNo: 39,
  lastSubtypeNo: 42,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_SprayFactory_createParticle__P2882,
    "drawParticle": particles_SprayFactory_drawParticle__P2883,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "createParticle": particles_SprayFactory_createParticle__P2882,
    "drawParticle": particles_SprayFactory_drawParticle__P2883,
    "setSpeed": particles_SprayFactory_setSpeed__P2884,
    "setDirection": particles_SprayFactory_setDirection__P2885,
  },
});
const particles_AreaFactory__C2886_VT = mkVTable({
  name: "AreaFactory",
  numFields: 8,
  classNo: 40,
  lastSubtypeNo: 42,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_AreaFactory_createParticle__P2892,
    "drawParticle": particles_AreaFactory_drawParticle__P2893,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "createParticle": particles_AreaFactory_createParticle__P2892,
    "drawParticle": particles_AreaFactory_drawParticle__P2893,
    "setSpeed": particles_SprayFactory_setSpeed__P2884,
    "setDirection": particles_SprayFactory_setDirection__P2885,
  },
});
const particles_ShapeFactory__C2902_VT = mkVTable({
  name: "ShapeFactory",
  numFields: 11,
  classNo: 41,
  lastSubtypeNo: 42,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P2906,
    "drawParticle": particles_ShapeFactory_drawParticle__P2905,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P2904,
    "drawParticle": particles_ShapeFactory_drawParticle__P2905,
    "createParticle": particles_ShapeFactory_createParticle__P2906,
    "setSpeed": particles_SprayFactory_setSpeed__P2884,
    "setDirection": particles_SprayFactory_setDirection__P2885,
  },
});
const particles_ConfettiFactory__C2907_VT = mkVTable({
  name: "ConfettiFactory",
  numFields: 11,
  classNo: 42,
  lastSubtypeNo: 42,
  maxBgInstances: null,
  methods: {
    "createParticle": particles_ShapeFactory_createParticle__P2906,
    "drawParticle": particles_ShapeFactory_drawParticle__P2905,
  },
  iface: {
    "speed": null,
    "set/speed": null,
    "minAngle": null,
    "set/minAngle": null,
    "spread": null,
    "set/spread": null,
    "xRange": null,
    "set/xRange": null,
    "yRange": null,
    "set/yRange": null,
    "minLifespan": null,
    "set/minLifespan": null,
    "maxLifespan": null,
    "set/maxLifespan": null,
    "galois": null,
    "set/galois": null,
    "sources": null,
    "set/sources": null,
    "ox": null,
    "set/ox": null,
    "oy": null,
    "set/oy": null,
    "addShape": particles_ShapeFactory_addShape__P2904,
    "drawParticle": particles_ShapeFactory_drawParticle__P2905,
    "createParticle": particles_ShapeFactory_createParticle__P2906,
    "setSpeed": particles_SprayFactory_setSpeed__P2884,
    "setDirection": particles_SprayFactory_setDirection__P2885,
  },
});
const particles_ParticleSource__C2840_VT = mkVTable({
  name: "ParticleSource",
  numFields: 13,
  classNo: 24,
  lastSubtypeNo: 24,
  maxBgInstances: null,
  methods: {
    "__visible": sprites_BaseSprite___visible__P1891,
    "__draw": particles_ParticleSource___draw__P2846,
    "__drawCore": sprites_BaseSprite___drawCore__P1895,
    "__update": sprites_BaseSprite___update__P1896,
    "updateParticle": particles_ParticleSource_updateParticle__P4879,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "priority": null,
    "set/priority": null,
    "_dt": null,
    "set/_dt": null,
    "anchor": null,
    "set/anchor": null,
    "lifespan": null,
    "set/lifespan": null,
    "pFlags": null,
    "set/pFlags": null,
    "head": null,
    "set/head": null,
    "timer": null,
    "set/timer": null,
    "period": null,
    "set/period": null,
    "_factory": null,
    "set/_factory": null,
    "ax": null,
    "set/ax": null,
    "ay": null,
    "set/ay": null,
    "__draw": particles_ParticleSource___draw__P2846,
    "_update": particles_ParticleSource__update__P2847,
    "_prune": particles_ParticleSource__prune__P2848,
    "setAcceleration": particles_ParticleSource_setAcceleration__P2849,
    "setRelativeToCamera": particles_ParticleSource_setRelativeToCamera__P2851,
    "enabled": particles_ParticleSource_enabled__P2852,
    "set/enabled": particles_ParticleSource_enabled__P2853,
    "destroy": particles_ParticleSource_destroy__P2854,
    "clear": particles_ParticleSource_clear__P2855,
    "setAnchor": particles_ParticleSource_setAnchor__P2856,
    "setRate": particles_ParticleSource_setRate__P2857,
    "setFactory": particles_ParticleSource_setFactory__P2859,
    "updateParticle": particles_ParticleSource_updateParticle__P4879,
    "drawParticle": particles_ParticleSource_drawParticle__P4880,
    "__visible": sprites_BaseSprite___visible__P1891,
    "z": sprites_BaseSprite_z__P1892,
    "set/z": sprites_BaseSprite_z__P1893,
    "__drawCore": sprites_BaseSprite___drawCore__P1895,
    "__update": sprites_BaseSprite___update__P1896,
  },
});
const particles_Particle__C2821_VT = mkVTable({
  name: "Particle",
  numFields: 8,
  classNo: 43,
  lastSubtypeNo: 43,
  maxBgInstances: 200,
  methods: {
  },
  iface: {
    "_x": null,
    "set/_x": null,
    "_y": null,
    "set/_y": null,
    "vx": null,
    "set/vx": null,
    "vy": null,
    "set/vy": null,
    "lifespan": null,
    "set/lifespan": null,
    "next": null,
    "set/next": null,
    "data": null,
    "set/data": null,
    "color": null,
    "set/color": null,
  },
});
const control_EventContext__C395_VT = mkVTable({
  name: "EventContext",
  numFields: 9,
  classNo: 44,
  lastSubtypeNo: 44,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "handlers": null,
    "set/handlers": null,
    "frameCallbacks": null,
    "set/frameCallbacks": null,
    "frameWorker": null,
    "set/frameWorker": null,
    "framesInSample": null,
    "set/framesInSample": null,
    "timeInSample": null,
    "set/timeInSample": null,
    "deltaTimeMillis": null,
    "set/deltaTimeMillis": null,
    "prevTimeMillis": null,
    "set/prevTimeMillis": null,
    "idleCallbacks": null,
    "set/idleCallbacks": null,
    "runningCallbacks": null,
    "set/runningCallbacks": null,
    "deltaTime": control_EventContext_deltaTime__P400,
    "runCallbacks": control_EventContext_runCallbacks__P4179,
    "registerFrameCallbacks": control_EventContext_registerFrameCallbacks__P4180,
    "register": control_EventContext_register__P401,
    "unregister": control_EventContext_unregister__P402,
    "registerFrameHandler": control_EventContext_registerFrameHandler__P403,
    "registerHandler": control_EventContext_registerHandler__P405,
  },
});
const control_FrameCallback__C392_VT = mkVTable({
  name: "FrameCallback",
  numFields: 2,
  classNo: 45,
  lastSubtypeNo: 45,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "order": null,
    "set/order": null,
    "handler": null,
    "set/handler": null,
  },
});
const control_PollEvent__C4153_VT = mkVTable({
  name: "PollEvent",
  numFields: 6,
  classNo: 46,
  lastSubtypeNo: 46,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "eid": null,
    "set/eid": null,
    "vid": null,
    "set/vid": null,
    "start": null,
    "set/start": null,
    "timeOut": null,
    "set/timeOut": null,
    "condition": null,
    "set/condition": null,
    "once": null,
    "set/once": null,
  },
});
const control_EventHandler__C4174_VT = mkVTable({
  name: "EventHandler",
  numFields: 4,
  classNo: 47,
  lastSubtypeNo: 47,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "src": null,
    "set/src": null,
    "value": null,
    "set/value": null,
    "handler": null,
    "set/handler": null,
    "flags": null,
    "set/flags": null,
    "register": control_EventHandler_register__P4175,
    "unregister": control_EventHandler_unregister__P4176,
  },
});
const scene_Camera__C2520_VT = mkVTable({
  name: "Camera",
  numFields: 8,
  classNo: 48,
  lastSubtypeNo: 48,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_offsetX": null,
    "set/_offsetX": null,
    "_offsetY": null,
    "set/_offsetY": null,
    "drawOffsetX": null,
    "set/drawOffsetX": null,
    "drawOffsetY": null,
    "set/drawOffsetY": null,
    "sprite": null,
    "set/sprite": null,
    "shakeStartTime": null,
    "set/shakeStartTime": null,
    "shakeDuration": null,
    "set/shakeDuration": null,
    "shakeAmplitude": null,
    "set/shakeAmplitude": null,
    "offsetX": scene_Camera_offsetX__P2525,
    "set/offsetX": scene_Camera_offsetX__P2526,
    "offsetY": scene_Camera_offsetY__P2527,
    "set/offsetY": scene_Camera_offsetY__P2528,
    "x": scene_Camera_x__P2529,
    "y": scene_Camera_y__P2530,
    "left": scene_Camera_left__P2531,
    "top": scene_Camera_top__P2533,
    "update": scene_Camera_update__P2536,
  },
});
const scene_Background__C2408_VT = mkVTable({
  name: "Background",
  numFields: 4,
  classNo: 49,
  lastSubtypeNo: 49,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "color": null,
    "set/color": null,
    "_image": null,
    "set/_image": null,
    "camera": null,
    "set/camera": null,
    "_layers": null,
    "set/_layers": null,
    "image": scene_Background_image__P2414,
    "set/image": scene_Background_image__P2415,
    "hasBackgroundImage": scene_Background_hasBackgroundImage__P2416,
    "draw": scene_Background_draw__P2417,
  },
});
const scene_BackgroundLayer__C2418_VT = mkVTable({
  name: "BackgroundLayer",
  numFields: 6,
  classNo: 50,
  lastSubtypeNo: 50,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "distance": null,
    "set/distance": null,
    "img": null,
    "set/img": null,
    "repeatX": null,
    "set/repeatX": null,
    "repeatY": null,
    "set/repeatY": null,
    "alignX": null,
    "set/alignX": null,
    "alignY": null,
    "set/alignY": null,
    "draw": scene_BackgroundLayer_draw__P2426,
  },
});
const tiles_TileMap__C2474_VT = mkVTable({
  name: "TileMap",
  numFields: 5,
  classNo: 51,
  lastSubtypeNo: 51,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_scale": null,
    "set/_scale": null,
    "_layer": null,
    "set/_layer": null,
    "_map": null,
    "set/_map": null,
    "renderable": null,
    "set/renderable": null,
    "handlerState": null,
    "set/handlerState": null,
    "scale": tiles_TileMap_scale__P2477,
    "set/scale": tiles_TileMap_scale__P2478,
    "data": tiles_TileMap_data__P2479,
    "offsetX": tiles_TileMap_offsetX__P2480,
    "offsetY": tiles_TileMap_offsetY__P2481,
    "areaWidth": tiles_TileMap_areaWidth__P2482,
    "areaHeight": tiles_TileMap_areaHeight__P2483,
    "layer": tiles_TileMap_layer__P2484,
    "enabled": tiles_TileMap_enabled__P2486,
    "getTile": tiles_TileMap_getTile__P2488,
    "getTileIndex": tiles_TileMap_getTileIndex__P2489,
    "draw": tiles_TileMap_draw__P4484,
    "isObstacle": tiles_TileMap_isObstacle__P2495,
    "getObstacle": tiles_TileMap_getObstacle__P2496,
    "isOnWall": tiles_TileMap_isOnWall__P2497,
    "getTileImage": tiles_TileMap_getTileImage__P2498,
  },
});
const tiles_TileMapData__C2456_VT = mkVTable({
  name: "TileMapData",
  numFields: 7,
  classNo: 52,
  lastSubtypeNo: 52,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "data": null,
    "set/data": null,
    "layers": null,
    "set/layers": null,
    "tileset": null,
    "set/tileset": null,
    "cachedTileView": null,
    "set/cachedTileView": null,
    "_scale": null,
    "set/_scale": null,
    "_width": null,
    "set/_width": null,
    "_height": null,
    "set/_height": null,
    "width": tiles_TileMapData_width__P2458,
    "height": tiles_TileMapData_height__P2459,
    "scale": tiles_TileMapData_scale__P2460,
    "set/scale": tiles_TileMapData_scale__P2461,
    "getTile": tiles_TileMapData_getTile__P2462,
    "getTileImage": tiles_TileMapData_getTileImage__P2465,
    "isWall": tiles_TileMapData_isWall__P2467,
    "isOutsideMap": tiles_TileMapData_isOutsideMap__P2468,
  },
});
const controller_Controller__C1928_VT = mkVTable({
  name: "Controller",
  numFields: 5,
  classNo: 53,
  lastSubtypeNo: 53,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "playerIndex": null,
    "set/playerIndex": null,
    "buttons": null,
    "set/buttons": null,
    "analog": null,
    "set/analog": null,
    "_id": null,
    "set/_id": null,
    "_connected": null,
    "set/_connected": null,
    "_controlledSprites": controller_Controller__controlledSprites__P1933,
    "set/_controlledSprites": controller_Controller__controlledSprites__P1934,
    "id": controller_Controller_id__P1935,
    "left": controller_Controller_left__P1937,
    "right": controller_Controller_right__P1938,
    "up": controller_Controller_up__P1939,
    "down": controller_Controller_down__P1940,
    "button": controller_Controller_button__P4340,
    "connected": controller_Controller_connected__P1947,
    "set/connected": controller_Controller_connected__P1948,
    "__preUpdate": controller_Controller___preUpdate__P1952,
    "__update": controller_Controller___update__P1953,
  },
});
const ArcadePhysicsEngine__C2314_VT = mkVTable({
  name: "ArcadePhysicsEngine",
  numFields: 6,
  classNo: 28,
  lastSubtypeNo: 28,
  maxBgInstances: null,
  methods: {
    "addSprite": ArcadePhysicsEngine_addSprite__P2323,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P2324,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P2328,
    "draw": ArcadePhysicsEngine_draw__P2325,
    "move": ArcadePhysicsEngine_move__P2326,
  },
  iface: {
    "sprites": null,
    "set/sprites": null,
    "map": null,
    "set/map": null,
    "maxVelocity": null,
    "set/maxVelocity": null,
    "maxNegativeVelocity": null,
    "set/maxNegativeVelocity": null,
    "minSingleStep": null,
    "set/minSingleStep": null,
    "maxSingleStep": null,
    "set/maxSingleStep": null,
    "maxSpeed": ArcadePhysicsEngine_maxSpeed__P2316,
    "set/maxSpeed": ArcadePhysicsEngine_maxSpeed__P2317,
    "minStep": ArcadePhysicsEngine_minStep__P2318,
    "set/minStep": ArcadePhysicsEngine_minStep__P2319,
    "maxStep": ArcadePhysicsEngine_maxStep__P2320,
    "set/maxStep": ArcadePhysicsEngine_maxStep__P2321,
    "addSprite": ArcadePhysicsEngine_addSprite__P2323,
    "removeSprite": ArcadePhysicsEngine_removeSprite__P2324,
    "draw": ArcadePhysicsEngine_draw__P2325,
    "move": ArcadePhysicsEngine_move__P2326,
    "createMovingSprite": ArcadePhysicsEngine_createMovingSprite__P4412,
    "spriteCollisions": ArcadePhysicsEngine_spriteCollisions__P4413,
    "tilemapCollisions": ArcadePhysicsEngine_tilemapCollisions__P4414,
    "tilemapOverlaps": ArcadePhysicsEngine_tilemapOverlaps__P4415,
    "moveSprite": ArcadePhysicsEngine_moveSprite__P2328,
    "canResolveClipping": ArcadePhysicsEngine_canResolveClipping__P4416,
    "constrain": ArcadePhysicsEngine_constrain__P4417,
  },
});
const sprites_SpriteMap__C2233_VT = mkVTable({
  name: "SpriteMap",
  numFields: 5,
  classNo: 54,
  lastSubtypeNo: 54,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "cellWidth": null,
    "set/cellWidth": null,
    "cellHeight": null,
    "set/cellHeight": null,
    "rowCount": null,
    "set/rowCount": null,
    "columnCount": null,
    "set/columnCount": null,
    "buckets": null,
    "set/buckets": null,
    "neighbors": sprites_SpriteMap_neighbors__P2235,
    "overlaps": sprites_SpriteMap_overlaps__P2236,
    "draw": sprites_SpriteMap_draw__P2237,
    "resizeBuckets": sprites_SpriteMap_resizeBuckets__P2238,
    "clear": sprites_SpriteMap_clear__P2239,
    "key": sprites_SpriteMap_key__P4375,
    "insertAtKey": sprites_SpriteMap_insertAtKey__P4376,
    "insertAABB": sprites_SpriteMap_insertAABB__P2240,
    "mergeAtKey": sprites_SpriteMap_mergeAtKey__P4377,
    "toString": sprites_SpriteMap_toString__P2241,
  },
  toStringMethod: sprites_SpriteMap_toString__P2241,
});
const scene_Renderable__C2538_VT = mkVTable({
  name: "Renderable",
  numFields: 4,
  classNo: 25,
  lastSubtypeNo: 25,
  maxBgInstances: null,
  methods: {
    "__visible": scene_Renderable___visible__P2540,
    "__draw": sprites_BaseSprite___draw__P1894,
    "__drawCore": scene_Renderable___drawCore__P2541,
    "__update": sprites_BaseSprite___update__P1896,
  },
  iface: {
    "_z": null,
    "set/_z": null,
    "id": null,
    "set/id": null,
    "handler": null,
    "set/handler": null,
    "shouldBeVisible": null,
    "set/shouldBeVisible": null,
    "__visible": scene_Renderable___visible__P2540,
    "__drawCore": scene_Renderable___drawCore__P2541,
    "z": sprites_BaseSprite_z__P1892,
    "set/z": sprites_BaseSprite_z__P1893,
    "__draw": sprites_BaseSprite___draw__P1894,
    "__update": sprites_BaseSprite___update__P1896,
  },
});
const info_PlayerState__C2340_VT = mkVTable({
  name: "PlayerState",
  numFields: 3,
  classNo: 55,
  lastSubtypeNo: 55,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "score": null,
    "set/score": null,
    "life": null,
    "set/life": null,
    "lifeZeroHandler": null,
    "set/lifeZeroHandler": null,
  },
});
const info_InfoState__C4418_VT = mkVTable({
  name: "InfoState",
  numFields: 10,
  classNo: 56,
  lastSubtypeNo: 56,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "playerStates": null,
    "set/playerStates": null,
    "visibilityFlag": null,
    "set/visibilityFlag": null,
    "gameEnd": null,
    "set/gameEnd": null,
    "heartImage": null,
    "set/heartImage": null,
    "multiplierImage": null,
    "set/multiplierImage": null,
    "bgColor": null,
    "set/bgColor": null,
    "borderColor": null,
    "set/borderColor": null,
    "fontColor": null,
    "set/fontColor": null,
    "countdownExpired": null,
    "set/countdownExpired": null,
    "countdownEndHandler": null,
    "set/countdownEndHandler": null,
  },
});
const music_MelodyPlayer__C1622_VT = mkVTable({
  name: "MelodyPlayer",
  numFields: 2,
  classNo: 57,
  lastSubtypeNo: 57,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "melody": null,
    "set/melody": null,
    "onPlayFinished": null,
    "set/onPlayFinished": null,
    "stop": music_MelodyPlayer_stop__P1626,
    "queuePlayInstructions": music_MelodyPlayer_queuePlayInstructions__P4226,
    "play": music_MelodyPlayer_play__P1627,
  },
});
const control_Interval__C4148_VT = mkVTable({
  name: "Interval",
  numFields: 4,
  classNo: 58,
  lastSubtypeNo: 58,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "func": null,
    "set/func": null,
    "delay": null,
    "set/delay": null,
    "mode": null,
    "set/mode": null,
    "work": control_Interval_work__P4149,
  },
});
const game_SplashDialog__C2666_VT = mkVTable({
  name: "SplashDialog",
  numFields: 17,
  classNo: 34,
  lastSubtypeNo: 34,
  maxBgInstances: null,
  methods: {
    "update": game_BaseDialog_update__P2651,
    "setText": game_SplashDialog_setText__P2674,
    "drawTextCore": game_SplashDialog_drawTextCore__P2676,
  },
  iface: {
    "image": null,
    "set/image": null,
    "frame": null,
    "set/frame": null,
    "cursor": null,
    "set/cursor": null,
    "columns": null,
    "set/columns": null,
    "rows": null,
    "set/rows": null,
    "unit": null,
    "set/unit": null,
    "innerLeft": null,
    "set/innerLeft": null,
    "innerTop": null,
    "set/innerTop": null,
    "cursorCount": null,
    "set/cursorCount": null,
    "font": null,
    "set/font": null,
    "textColor": null,
    "set/textColor": null,
    "text": null,
    "set/text": null,
    "subtext": null,
    "set/subtext": null,
    "timer": null,
    "set/timer": null,
    "offset": null,
    "set/offset": null,
    "maxOffset": null,
    "set/maxOffset": null,
    "maxSubOffset": null,
    "set/maxSubOffset": null,
    "updateFont": game_SplashDialog_updateFont__P4523,
    "setText": game_SplashDialog_setText__P2674,
    "setSubtext": game_SplashDialog_setSubtext__P2675,
    "drawTextCore": game_SplashDialog_drawTextCore__P2676,
    "update": game_BaseDialog_update__P2651,
    "drawCursorRow": game_BaseDialog_drawCursorRow__P2654,
    "drawBorder": game_BaseDialog_drawBorder__P4512,
    "fastFill": game_BaseDialog_fastFill__P4513,
    "clearInterior": game_BaseDialog_clearInterior__P4514,
    "drawPartial": game_BaseDialog_drawPartial__P4515,
    "cursorRowHeight": game_BaseDialog_cursorRowHeight__P4516,
    "textAreaWidth": game_BaseDialog_textAreaWidth__P4518,
    "textAreaHeight": game_BaseDialog_textAreaHeight__P4519,
    "setFont": game_BaseDialog_setFont__P4520,
  },
});
const sprites_SpriteSet__C2250_VT = mkVTable({
  name: "SpriteSet",
  numFields: 1,
  classNo: 59,
  lastSubtypeNo: 59,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_sprites": null,
    "set/_sprites": null,
    "length": sprites_SpriteSet_length__P2253,
    "add": sprites_SpriteSet_add__P2255,
    "remove": sprites_SpriteSet_remove__P2257,
    "contains": sprites_SpriteSet_contains__P2258,
    "toString": sprites_SpriteSet_toString__P2261,
  },
  toStringMethod: sprites_SpriteSet_toString__P2261,
});
const controller_ButtonHandler__C1973_VT = mkVTable({
  name: "ButtonHandler",
  numFields: 2,
  classNo: 60,
  lastSubtypeNo: 60,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "event": null,
    "set/event": null,
    "callback": null,
    "set/callback": null,
  },
});
const controller_ButtonEventHandlerState__C1975_VT = mkVTable({
  name: "ButtonEventHandlerState",
  numFields: 3,
  classNo: 61,
  lastSubtypeNo: 61,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "id": null,
    "set/id": null,
    "user": null,
    "set/user": null,
    "system": null,
    "set/system": null,
  },
});
const scene_systemMenu_PauseMenu__C2784_VT = mkVTable({
  name: "PauseMenu",
  numFields: 7,
  classNo: 62,
  lastSubtypeNo: 62,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "options": null,
    "set/options": null,
    "theme": null,
    "set/theme": null,
    "selection": null,
    "set/selection": null,
    "scrollRow": null,
    "set/scrollRow": null,
    "scrollTarget": null,
    "set/scrollTarget": null,
    "scrollOffset": null,
    "set/scrollOffset": null,
    "generator": null,
    "set/generator": null,
    "show": scene_systemMenu_PauseMenu_show__P2786,
    "onUpdate": scene_systemMenu_PauseMenu_onUpdate__P2787,
    "setSelection": scene_systemMenu_PauseMenu_setSelection__P2788,
    "drawText": scene_systemMenu_PauseMenu_drawText__P2789,
    "dispose": scene_systemMenu_PauseMenu_dispose__P2790,
    "updateScrollTarget": scene_systemMenu_PauseMenu_updateScrollTarget__P4794,
  },
});
const scene_systemMenu_MenuOption__C2776_VT = mkVTable({
  name: "MenuOption",
  numFields: 8,
  classNo: 63,
  lastSubtypeNo: 63,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "card": null,
    "set/card": null,
    "icon": null,
    "set/icon": null,
    "top": null,
    "set/top": null,
    "state": null,
    "set/state": null,
    "theme": null,
    "set/theme": null,
    "iconImage": null,
    "set/iconImage": null,
    "getText": null,
    "set/getText": null,
    "action": null,
    "set/action": null,
    "show": scene_systemMenu_MenuOption_show__P2778,
    "position": scene_systemMenu_MenuOption_position__P2779,
    "setOffset": scene_systemMenu_MenuOption_setOffset__P2780,
    "setTheme": scene_systemMenu_MenuOption_setTheme__P2781,
    "setState": scene_systemMenu_MenuOption_setState__P2782,
    "dispose": scene_systemMenu_MenuOption_dispose__P2783,
    "updateCard": scene_systemMenu_MenuOption_updateCard__P4793,
  },
});
const MovingSprite__C2312_VT = mkVTable({
  name: "MovingSprite",
  numFields: 7,
  classNo: 64,
  lastSubtypeNo: 64,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "sprite": null,
    "set/sprite": null,
    "cachedVx": null,
    "set/cachedVx": null,
    "cachedVy": null,
    "set/cachedVy": null,
    "dx": null,
    "set/dx": null,
    "dy": null,
    "set/dy": null,
    "xStep": null,
    "set/xStep": null,
    "yStep": null,
    "set/yStep": null,
  },
});
const tiles_Location__C2432_VT = mkVTable({
  name: "Location",
  numFields: 2,
  classNo: 65,
  lastSubtypeNo: 65,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "_row": null,
    "set/_row": null,
    "_col": null,
    "set/_col": null,
    "tileMap": tiles_Location_tileMap__P2434,
    "column": tiles_Location_column__P2435,
    "row": tiles_Location_row__P2436,
    "x": tiles_Location_x__P2437,
    "y": tiles_Location_y__P2438,
    "left": tiles_Location_left__P2439,
    "top": tiles_Location_top__P2440,
    "tileSet": tiles_Location_tileSet__P2443,
  },
});
const sprites_StaticObstacle__C2285_VT = mkVTable({
  name: "StaticObstacle",
  numFields: 5,
  classNo: 66,
  lastSubtypeNo: 66,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "layer": null,
    "set/layer": null,
    "image": null,
    "set/image": null,
    "tileIndex": null,
    "set/tileIndex": null,
    "top": null,
    "set/top": null,
    "left": null,
    "set/left": null,
    "x": sprites_StaticObstacle_x__P2292,
    "y": sprites_StaticObstacle_y__P2293,
    "height": sprites_StaticObstacle_height__P2294,
    "width": sprites_StaticObstacle_width__P2295,
  },
});
const effects_SceneAnchor__C4922_VT = mkVTable({
  name: "SceneAnchor",
  numFields: 1,
  classNo: 67,
  lastSubtypeNo: 67,
  maxBgInstances: null,
  methods: {
  },
  iface: {
    "camera": null,
    "set/camera": null,
    "x": effects_SceneAnchor_x__P4923,
    "y": effects_SceneAnchor_y__P4924,
    "width": effects_SceneAnchor_width__P4925,
    "height": effects_SceneAnchor_height__P4926,
  },
});
const sprites_BaseSpriteSayRenderer__C2048_VT = mkVTable({
  name: "BaseSpriteSayRenderer",
  numFields: 3,
  classNo: 68,
  lastSubtypeNo: 68,
  maxBgInstances: null,
  methods: {
    "draw": sprites_BaseSpriteSayRenderer_draw__P2050,
    "update": sprites_BaseSpriteSayRenderer_update__P2051,
    "destroy": sprites_BaseSpriteSayRenderer_destroy__P2052,
  },
  iface: {
    "text": null,
    "set/text": null,
    "fgColor": null,
    "set/fgColor": null,
    "bgColor": null,
    "set/bgColor": null,
    "draw": sprites_BaseSpriteSayRenderer_draw__P2050,
    "update": sprites_BaseSpriteSayRenderer_update__P2051,
    "destroy": sprites_BaseSpriteSayRenderer_destroy__P2052,
  },
});

const breakpoints = setupDebugger(1, ["ui___4090","keyboard___4091","words___4094"])

return _main___P21938
})
